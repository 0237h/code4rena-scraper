contest_id,handle,address,risk,title,issueId,issueUrl,contest_sponsor,date,tags
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Outdated Compiler,15,https://github.com/code-423n4/2021-04-basedloans-findings/issues/15,basedloans,2021/04,bug;disagree with severity;0 (Non-critical);sponsor acknowledged
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,No account existence check for low-level call in CEther.sol,16,https://github.com/code-423n4/2021-04-basedloans-findings/issues/16,basedloans,2021/04,bug;1 (Low Risk);sponsor confirmed
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,sweepToken() function removed in CErc20.sol from original Compound code,17,https://github.com/code-423n4/2021-04-basedloans-findings/issues/17,basedloans,2021/04,bug;1 (Low Risk);sponsor confirmed
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,All except one Comptroller verify functions do not verify anything in Comptroller.sol/CToken.sol ,18,https://github.com/code-423n4/2021-04-basedloans-findings/issues/18,basedloans,2021/04,bug;1 (Low Risk);sponsor confirmed
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Floating pragma used in Uniswap*.sol ,19,https://github.com/code-423n4/2021-04-basedloans-findings/issues/19,basedloans,2021/04,bug;1 (Low Risk);sponsor confirmed
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing input validation may set COMP token to zero-address in Comptroller.sol,20,https://github.com/code-423n4/2021-04-basedloans-findings/issues/20,basedloans,2021/04,bug;duplicate;disagree with severity;0 (Non-critical);1 (Low Risk);sponsor acknowledged
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing zero/threshold check for maxAssets,21,https://github.com/code-423n4/2021-04-basedloans-findings/issues/21,basedloans,2021/04,bug;disagree with severity;1 (Low Risk);sponsor acknowledged
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,0,Missed NatSpec @param for newly introduced parameter distributeAll,22,https://github.com/code-423n4/2021-04-basedloans-findings/issues/22,basedloans,2021/04,bug;0 (Non-critical);sponsor confirmed
6,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Unused comptroller verify functions,30,https://github.com/code-423n4/2021-04-basedloans-findings/issues/30,basedloans,2021/04,bug;1 (Low Risk);sponsor acknowledged
6,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Usage of `address.transfer`,31,https://github.com/code-423n4/2021-04-basedloans-findings/issues/31,basedloans,2021/04,bug;1 (Low Risk);sponsor confirmed
6,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2, Unbounded iteration on `refreshCompSpeedsInternal`,32,https://github.com/code-423n4/2021-04-basedloans-findings/issues/32,basedloans,2021/04,bug;disagree with severity;1 (Low Risk);sponsor acknowledged
6,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Reward rates can be changed through flash borrows,33,https://github.com/code-423n4/2021-04-basedloans-findings/issues/33,basedloans,2021/04,bug;2 (Med Risk);sponsor acknowledged
6,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`refreshCompSpeedsInternal` should only update `isComped`,34,https://github.com/code-423n4/2021-04-basedloans-findings/issues/34,basedloans,2021/04,bug;1 (Low Risk);sponsor disputed;invalid
6,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Privileged roles,35,https://github.com/code-423n4/2021-04-basedloans-findings/issues/35,basedloans,2021/04,bug;disagree with severity;0 (Non-critical);sponsor acknowledged
6,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`UniswapConfig._addTokensInternal` allows duplicates,36,https://github.com/code-423n4/2021-04-basedloans-findings/issues/36,basedloans,2021/04,bug;1 (Low Risk);sponsor disputed;invalid
6,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,UniswapConfig getters return wrong token config if token config does not exist,37,https://github.com/code-423n4/2021-04-basedloans-findings/issues/37,basedloans,2021/04,bug;duplicate;3 (High Risk);sponsor confirmed
6,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`UniswapAnchoredView`'s `PriceUpdated` event is never fired,38,https://github.com/code-423n4/2021-04-basedloans-findings/issues/38,basedloans,2021/04,bug;duplicate;disagree with severity;0 (Non-critical);sponsor confirmed
6,gpersoon,gpersoon.eth,0,Multiple error enums with overlapping values,1,https://github.com/code-423n4/2021-04-basedloans-findings/issues/1,basedloans,2021/04,bug;0 (Non-critical);sponsor acknowledged
6,gpersoon,gpersoon.eth,0,now is still used,10,https://github.com/code-423n4/2021-04-basedloans-findings/issues/10,basedloans,2021/04,bug;0 (Non-critical);sponsor acknowledged
6,gpersoon,gpersoon.eth,0,CErc20.sol missing sweepToken?,11,https://github.com/code-423n4/2021-04-basedloans-findings/issues/11,basedloans,2021/04,bug;0 (Non-critical);sponsor confirmed
6,gpersoon,gpersoon.eth,1,uint[] memory parameter is tricky,12,https://github.com/code-423n4/2021-04-basedloans-findings/issues/12,basedloans,2021/04,bug;1 (Low Risk);sponsor acknowledged
6,gpersoon,gpersoon.eth,0,Reliance on the fact that NO_ERROR = 0,2,https://github.com/code-423n4/2021-04-basedloans-findings/issues/2,basedloans,2021/04,bug;0 (Non-critical);sponsor acknowledged
6,gpersoon,gpersoon.eth,0,Alphabetical order not complied with (contrary to the comments),3,https://github.com/code-423n4/2021-04-basedloans-findings/issues/3,basedloans,2021/04,bug;0 (Non-critical);sponsor acknowledged
6,gpersoon,gpersoon.eth,G,requireNoError can be optimized,4,https://github.com/code-423n4/2021-04-basedloans-findings/issues/4,basedloans,2021/04,bug;sponsor acknowledged;G (Gas Optimization)
6,gpersoon,gpersoon.eth,0,requireNoError not used in a consistent way,5,https://github.com/code-423n4/2021-04-basedloans-findings/issues/5,basedloans,2021/04,bug;0 (Non-critical);sponsor acknowledged
6,gpersoon,gpersoon.eth,1,CarefulMath / safe math not allways used,6,https://github.com/code-423n4/2021-04-basedloans-findings/issues/6,basedloans,2021/04,bug;disagree with severity;1 (Low Risk);sponsor acknowledged
6,gpersoon,gpersoon.eth,0,uint(-1),7,https://github.com/code-423n4/2021-04-basedloans-findings/issues/7,basedloans,2021/04,bug;0 (Non-critical);sponsor acknowledged
6,gpersoon,gpersoon.eth,0,More readable constants,8,https://github.com/code-423n4/2021-04-basedloans-findings/issues/8,basedloans,2021/04,bug;0 (Non-critical);sponsor confirmed
6,gpersoon,gpersoon.eth,0,"seizeInternal isn't nonReentrant, unlike the rest of the Internal functions",9,https://github.com/code-423n4/2021-04-basedloans-findings/issues/9,basedloans,2021/04,bug;0 (Non-critical);sponsor disputed;invalid
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,event PriceUpdated is never emitted,23,https://github.com/code-423n4/2021-04-basedloans-findings/issues/23,basedloans,2021/04,bug;0 (Non-critical);sponsor confirmed
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,uint(-1) index for not found,24,https://github.com/code-423n4/2021-04-basedloans-findings/issues/24,basedloans,2021/04,bug;3 (High Risk);sponsor confirmed
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Use 'receive' when expecting eth and empty call data,25,https://github.com/code-423n4/2021-04-basedloans-findings/issues/25,basedloans,2021/04,bug;1 (Low Risk);sponsor confirmed
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,"function getUnderlyingPrice compares against ""cETH""",26,https://github.com/code-423n4/2021-04-basedloans-findings/issues/26,basedloans,2021/04,bug;0 (Non-critical);sponsor confirmed
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Use 'interface' keyword for interfaces,27,https://github.com/code-423n4/2021-04-basedloans-findings/issues/27,basedloans,2021/04,bug;0 (Non-critical);sponsor acknowledged
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Allow borrowCap to be filled fully,28,https://github.com/code-423n4/2021-04-basedloans-findings/issues/28,basedloans,2021/04,bug;1 (Low Risk);sponsor acknowledged
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,[Info] functions 'getUnderlyingPriceView' and 'price' are too similar,29,https://github.com/code-423n4/2021-04-basedloans-findings/issues/29,basedloans,2021/04,bug;0 (Non-critical);sponsor acknowledged
6,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Requires a non-zero address check when deploying `CErc20` tokens and `CEther`.,39,https://github.com/code-423n4/2021-04-basedloans-findings/issues/39,basedloans,2021/04,bug;disagree with severity;0 (Non-critical);sponsor acknowledged
6,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Lack of a non-zero address check in the function `doTransferOut` can cause loss of funds.,40,https://github.com/code-423n4/2021-04-basedloans-findings/issues/40,basedloans,2021/04,bug;duplicate;1 (Low Risk);sponsor confirmed
6,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Potential reentrancy caused by the `doTransferOut` function of the `CEther` contract.,41,https://github.com/code-423n4/2021-04-basedloans-findings/issues/41,basedloans,2021/04,bug;1 (Low Risk);sponsor disputed;invalid
6,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Potential reentrancy caused by the `doTransferIn` function of the `CErc20` contract.,42,https://github.com/code-423n4/2021-04-basedloans-findings/issues/42,basedloans,2021/04,bug;1 (Low Risk);sponsor disputed;invalid
6,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Incorrect constant comparison in `UniswapConfig.sol`.,43,https://github.com/code-423n4/2021-04-basedloans-findings/issues/43,basedloans,2021/04,bug;duplicate;disagree with severity;3 (High Risk);sponsor confirmed
6,toastedsteaksandwich,0xD8f6877aec57C3d70F458C54a1382dDc90522E7D,0,Missing event visbility in _setCompAddress() function,13,https://github.com/code-423n4/2021-04-basedloans-findings/issues/13,basedloans,2021/04,bug;0 (Non-critical);sponsor confirmed
6,toastedsteaksandwich,0xD8f6877aec57C3d70F458C54a1382dDc90522E7D,0,Missing validation for _setCompAddress,14,https://github.com/code-423n4/2021-04-basedloans-findings/issues/14,basedloans,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing event for critical operation of new Collateral locker creation in CollateralLockerFactory.sol,28,https://github.com/code-423n4/maple-results/issues/28,maple,2021/04,bug;duplicate;1 (Low Risk)
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing event for critical operation of new Debt locker creation in DebtLockerFactory.sol,29,https://github.com/code-423n4/maple-results/issues/29,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing event for critical operation of new Funding locker creation in FundingLockerFactory.sol,30,https://github.com/code-423n4/maple-results/issues/30,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing event for critical operation of new Liquidity locker creation in LiquidityLockerFactory.sol,31,https://github.com/code-423n4/maple-results/issues/31,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Vulnerable to potential reentrancy attacks in Loan.sol,32,https://github.com/code-423n4/maple-results/issues/32,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing event for critical operation of setAdmin change in Loan.sol,33,https://github.com/code-423n4/maple-results/issues/33,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Inconsistent NatSpec comment in DebtLocker.sol,34,https://github.com/code-423n4/maple-results/issues/34,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Missing input validation on critical globals for zero addresses in MapleGlobals.sol,35,https://github.com/code-423n4/maple-results/issues/35,maple,2021/04,bug;0 (Non-critical);sponsor disputed
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,"Mirrored admin variables in global context, Pool, PoolFactory, Loan and LoanFactory may make it confusing for deployment and maintenance",36,https://github.com/code-423n4/maple-results/issues/36,maple,2021/04,bug;1 (Low Risk);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Incorrect input validation on the most critical admin role in the protocol in MapleGlobals.sol,37,https://github.com/code-423n4/maple-results/issues/37,maple,2021/04,bug;sponsor disputed;invalid
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing event for critical operation of setAdmin change for Protocol admin in MapleGlobals.sol,38,https://github.com/code-423n4/maple-results/issues/38,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing event for critical operation of Pool Delegate validity change in MapleGlobals.sol,39,https://github.com/code-423n4/maple-results/issues/39,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Confirm/Delete a TODO comment on stake lockup period in StakeLocker.sol,40,https://github.com/code-423n4/maple-results/issues/40,maple,2021/04,bug;sponsor acknowledged;disagree with severity;invalid
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Dangerous operator in require of setLockupPeriod in StakeLocker.sol,41,https://github.com/code-423n4/maple-results/issues/41,maple,2021/04,bug;sponsor disputed;invalid
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Inconsistent NatSpec comment in StakeLocker.sol,42,https://github.com/code-423n4/maple-results/issues/42,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing input validation on function parameter for zero address in StakeLocker.sol,43,https://github.com/code-423n4/maple-results/issues/43,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing input validation on function parameter for zero address in CollateralLocker.sol,44,https://github.com/code-423n4/maple-results/issues/44,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing input validation on function parameter for zero address in FundingLocker.sol,45,https://github.com/code-423n4/maple-results/issues/45,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Inconsistent NatSpec comment in StakeLocker.sol,46,https://github.com/code-423n4/maple-results/issues/46,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Inconsistent NatSpec comment in StakeLocker.sol,47,https://github.com/code-423n4/maple-results/issues/47,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Missing input validation on critical globals variable for zero address in MapleTreasury.sol,48,https://github.com/code-423n4/maple-results/issues/48,maple,2021/04,bug;duplicate;0 (Non-critical);sponsor disputed
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Missing input validation on critical globals variable for zero address in PoolFactory.sol,49,https://github.com/code-423n4/maple-results/issues/49,maple,2021/04,bug;duplicate;0 (Non-critical);sponsor disputed
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Missing input validation on critical globals variable for zero address in LoanFactory.sol,50,https://github.com/code-423n4/maple-results/issues/50,maple,2021/04,bug;duplicate;0 (Non-critical)
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Missing input validation on critical globals variable for zero address in MplRewardsFactory.sol,51,https://github.com/code-423n4/maple-results/issues/51,maple,2021/04,bug;duplicate;0 (Non-critical);sponsor disputed
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Specification/Implementation mismatch on Security Multisig capability,52,https://github.com/code-423n4/maple-results/issues/52,maple,2021/04,bug;0 (Non-critical);sponsor disputed
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Specification/Implementation mismatch on Security Multisig capability,53,https://github.com/code-423n4/maple-results/issues/53,maple,2021/04,bug;duplicate;0 (Non-critical);sponsor disputed
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Inconsistent NatSpec comment in PoolFactory.sol,54,https://github.com/code-423n4/maple-results/issues/54,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Inconsistent NatSpec comment in PoolFactory.sol,55,https://github.com/code-423n4/maple-results/issues/55,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Inconsistent NatSpec comment in PoolFactory.sol,56,https://github.com/code-423n4/maple-results/issues/56,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Inconsistent NatSpec comment in PoolFactory.sol,57,https://github.com/code-423n4/maple-results/issues/57,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Inconsistent NatSpec comment in PoolFactory.sol,58,https://github.com/code-423n4/maple-results/issues/58,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Inconsistent NatSpec comment in LoanFactory.sol,59,https://github.com/code-423n4/maple-results/issues/59,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Inconsistent NatSpec comment in LoanFactory.sol,60,https://github.com/code-423n4/maple-results/issues/60,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Inconsistent NatSpec comment in LoanFactory.sol,61,https://github.com/code-423n4/maple-results/issues/61,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Incorrect require error message string in LoanFactory.sol,62,https://github.com/code-423n4/maple-results/issues/62,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Incorrect require error message string in LoanFactory.sol,63,https://github.com/code-423n4/maple-results/issues/63,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Inconsistent NatSpec comment in LoanFactory.sol,64,https://github.com/code-423n4/maple-results/issues/64,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Incorrect require error message string in LoanFactory.sol,65,https://github.com/code-423n4/maple-results/issues/65,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing check for stakingFee+delegateFee in Pool.sol constructor,66,https://github.com/code-423n4/maple-results/issues/66,maple,2021/04,1 (Low Risk);invalid
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Specification mismatch for Pool Delegate capabilities in Pool.sol,67,https://github.com/code-423n4/maple-results/issues/67,maple,2021/04,bug;sponsor disputed;disagree with severity;invalid
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Missing check for Pool state on several functions in Pool.sol,68,https://github.com/code-423n4/maple-results/issues/68,maple,2021/04,bug;1 (Low Risk);sponsor acknowledged
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing event for critical operation of setAdmin change in Pool.sol,69,https://github.com/code-423n4/maple-results/issues/69,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Inconsistent NatSpec comment in Pool.sol,70,https://github.com/code-423n4/maple-results/issues/70,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Inconsistent NatSpec comment in Pool.sol,71,https://github.com/code-423n4/maple-results/issues/71,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Event emission inconsistent with NatSpec comment in ERC2222.sol,72,https://github.com/code-423n4/maple-results/issues/72,maple,2021/04,bug;duplicate;0 (Non-critical);sponsor acknowledged
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Outdated Compiler,77,https://github.com/code-423n4/maple-results/issues/77,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Griefing attack on loan creation in LoanFactory.sol,93,https://github.com/code-423n4/maple-results/issues/93,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Griefing attack on pool creation in PoolFactory.sol,94,https://github.com/code-423n4/maple-results/issues/94,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,0xsomeone,0xa462fae8b85FFf172660c5D9e3C98C84691CA4d2,1,Cross-Chain Replay Attack,2,https://github.com/code-423n4/maple-results/issues/2,maple,2021/04,bug;1 (Low Risk);sponsor acknowledged
4,0xsomeone,0xa462fae8b85FFf172660c5D9e3C98C84691CA4d2,3,Incorrect Stability Assumption,3,https://github.com/code-423n4/maple-results/issues/3,maple,2021/04,bug;3 (High Risk);0 (Non-critical);sponsor acknowledged;disagree with severity;invalid
4,0xsomeone,0xa462fae8b85FFf172660c5D9e3C98C84691CA4d2,3,Potentially Mislead Loan,4,https://github.com/code-423n4/maple-results/issues/4,maple,2021/04,bug;2 (Med Risk);sponsor acknowledged;resolved
4,0xsomeone,0xa462fae8b85FFf172660c5D9e3C98C84691CA4d2,1,Loans Cannot Be Re-Funded,5,https://github.com/code-423n4/maple-results/issues/5,maple,2021/04,bug;sponsor acknowledged;invalid
4,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Chainlink Price data could be stale,82,https://github.com/code-423n4/maple-results/issues/82,maple,2021/04,bug;1 (Low Risk);sponsor confirmed;resolved
4,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Chainlink Price oracle always assumes 8 decimals,83,https://github.com/code-423n4/maple-results/issues/83,maple,2021/04,bug;1 (Low Risk);sponsor acknowledged
4,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Wrong docs on UsdOracle,84,https://github.com/code-423n4/maple-results/issues/84,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Missing check on `setManualPrice(int256 _price)`,85,https://github.com/code-423n4/maple-results/issues/85,maple,2021/04,bug;1 (Low Risk);sponsor confirmed;resolved
4,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing index on events,86,https://github.com/code-423n4/maple-results/issues/86,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing non-zero check,87,https://github.com/code-423n4/maple-results/issues/87,maple,2021/04,bug;1 (Low Risk);sponsor disputed
4,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Possible sandwich-attack when treasury converts tokens,88,https://github.com/code-423n4/maple-results/issues/88,maple,2021/04,bug;duplicate;0 (Non-critical);sponsor disputed
4,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Allowance Double-Spend Exploit,89,https://github.com/code-423n4/maple-results/issues/89,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,MPL reward claims of balancer pools can be exploited,90,https://github.com/code-423n4/maple-results/issues/90,maple,2021/04,bug;1 (Low Risk);sponsor disputed
4,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,MPL USDC distributions can be withdrawn by anyone,91,https://github.com/code-423n4/maple-results/issues/91,maple,2021/04,bug;1 (Low Risk);sponsor disputed
4,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Potential huge arbitrage opportunities / MPL price decrease,92,https://github.com/code-423n4/maple-results/issues/92,maple,2021/04,bug;2 (Med Risk);sponsor acknowledged
4,adamavenir,123123,1,Testing form after deploy,95,https://github.com/code-423n4/2021-04-maple-findings/issues/95,maple,2021/04,bug;1 (Low Risk)
4,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Optimising Factory contracts by using structs  ,73,https://github.com/code-423n4/maple-results/issues/73,maple,2021/04,bug;sponsor acknowledged;G (Gas Optimization)
4,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Unnecessary initialization variable,74,https://github.com/code-423n4/maple-results/issues/74,maple,2021/04,bug;sponsor acknowledged;disagree with severity;invalid
4,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Using precalculated value in the Pool & Loan contracts,75,https://github.com/code-423n4/maple-results/issues/75,maple,2021/04,bug;sponsor confirmed;resolved;G (Gas Optimization)
4,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Optimize storage in PoolFactory & LoanFactory contracts,76,https://github.com/code-423n4/maple-results/issues/76,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Unused variable ,78,https://github.com/code-423n4/maple-results/issues/78,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Unnecessary check,79,https://github.com/code-423n4/maple-results/issues/79,maple,2021/04,bug;0 (Non-critical);sponsor disputed;resolved
4,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,2,Fields stuck after initialization,80,https://github.com/code-423n4/maple-results/issues/80,maple,2021/04,bug;2 (Med Risk);sponsor disputed;invalid
4,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Missing check in deposit Pool,81,https://github.com/code-423n4/maple-results/issues/81,maple,2021/04,bug;sponsor disputed;invalid
4,gpersoon,gpersoon.eth,1,Several TODO action points left in the code,12,https://github.com/code-423n4/maple-results/issues/12,maple,2021/04,bug;sponsor acknowledged;disagree with severity;invalid
4,gpersoon,gpersoon.eth,1,Safemath frequently not used,13,https://github.com/code-423n4/maple-results/issues/13,maple,2021/04,bug;sponsor acknowledged;disagree with severity;invalid
4,gpersoon,gpersoon.eth,1,tricky evaluation > and +,14,https://github.com/code-423n4/maple-results/issues/14,maple,2021/04,bug;sponsor disputed;resolved;invalid
4,gpersoon,gpersoon.eth,1,Use of now,15,https://github.com/code-423n4/maple-results/issues/15,maple,2021/04,bug;sponsor disputed;invalid
4,gpersoon,gpersoon.eth,1,State variables not explicitly initialized,16,https://github.com/code-423n4/maple-results/issues/16,maple,2021/04,bug;sponsor disputed;invalid
4,gpersoon,gpersoon.eth,1,Unused definition of enum,17,https://github.com/code-423n4/maple-results/issues/17,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,gpersoon,gpersoon.eth,1,claim doesn't check state,18,https://github.com/code-423n4/maple-results/issues/18,maple,2021/04,bug;duplicate;1 (Low Risk)
4,gpersoon,gpersoon.eth,1,Multiple pause mechanisms,19,https://github.com/code-423n4/maple-results/issues/19,maple,2021/04,bug;sponsor acknowledged;disagree with severity;invalid
4,gpersoon,gpersoon.eth,1,External and public not used consistently,20,https://github.com/code-423n4/maple-results/issues/20,maple,2021/04,bug;duplicate;1 (Low Risk);0 (Non-critical);sponsor confirmed;disagree with severity
4,gpersoon,gpersoon.eth,1,Multiple pause mechanisms (#3),21,https://github.com/code-423n4/maple-results/issues/21,maple,2021/04,bug;sponsor acknowledged;invalid
4,gpersoon,gpersoon.eth,1,nonReentrant is missing compared to original,22,https://github.com/code-423n4/maple-results/issues/22,maple,2021/04,bug;sponsor acknowledged;disagree with severity;invalid
4,gpersoon,gpersoon.eth,1,Same constants defined in different files,23,https://github.com/code-423n4/maple-results/issues/23,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,gpersoon,gpersoon.eth,1, Anyone can use the locker factories,24,https://github.com/code-423n4/maple-results/issues/24,maple,2021/04,bug;sponsor disputed;invalid
4,gpersoon,gpersoon.eth,1,Typo NULL_TRASNFER_DST,25,https://github.com/code-423n4/maple-results/issues/25,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,gpersoon,gpersoon.eth,1,Year is not exactly 356 days,26,https://github.com/code-423n4/maple-results/issues/26,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,janbro,0xA2bA02db5c34B11C1Be0A25417851C9DfC5d4467,1,Uniswap DOS,105,https://github.com/code-423n4/2021-04-maple-findings/issues/105,maple,2021/04,bug;1 (Low Risk);sponsor acknowledged
4,janbro,0xA2bA02db5c34B11C1Be0A25417851C9DfC5d4467,2,Default slippage value too high,106,https://github.com/code-423n4/2021-04-maple-findings/issues/106,maple,2021/04,bug;2 (Med Risk);0 (Non-critical);sponsor acknowledged;disagree with severity
4,janbro,0xA2bA02db5c34B11C1Be0A25417851C9DfC5d4467,1,FundsWithdrawn event emitted when amount withdrawn is 0,107,https://github.com/code-423n4/2021-04-maple-findings/issues/107,maple,2021/04,bug;duplicate;0 (Non-critical);sponsor confirmed
4,janbro,0xA2bA02db5c34B11C1Be0A25417851C9DfC5d4467,1,Not ERC20 Compliant,108,https://github.com/code-423n4/2021-04-maple-findings/issues/108,maple,2021/04,bug;1 (Low Risk);0 (Non-critical);sponsor acknowledged;disagree with severity
4,janbro,0xA2bA02db5c34B11C1Be0A25417851C9DfC5d4467,1,Slippage should not be allowed to be set to very high values,109,https://github.com/code-423n4/2021-04-maple-findings/issues/109,maple,2021/04,bug;sponsor disputed;invalid
4,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Missing zero address validation,10,https://github.com/code-423n4/maple-results/issues/10,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Gas Optimazation ,11,https://github.com/code-423n4/maple-results/issues/11,maple,2021/04,bug;sponsor confirmed;resolved;G (Gas Optimization)
4,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,No renounce function for the admin role,7,https://github.com/code-423n4/maple-results/issues/7,maple,2021/04,bug;sponsor disputed;invalid
4,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,No event is emitted,8,https://github.com/code-423n4/maple-results/issues/8,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,No contract address Validation,9,https://github.com/code-423n4/maple-results/issues/9,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,3,Attackers Can Steal Any MPL That Is Burned/Sent To 0x000...000,6,https://github.com/code-423n4/maple-results/issues/6,maple,2021/04,bug;duplicate;sponsor acknowledged;invalid
4,paulius.eth,0x523B5b2Cc58A818667C22c862930B141f85d49DD,3,LoanLib.unwind uses globals.fundingPeriod(),100,https://github.com/code-423n4/2021-04-maple-findings/issues/100,maple,2021/04,bug;1 (Low Risk);sponsor confirmed;resolved
4,paulius.eth,0x523B5b2Cc58A818667C22c862930B141f85d49DD,1,zero cooldown should be explicitly allowed as per comment,101,https://github.com/code-423n4/2021-04-maple-findings/issues/101,maple,2021/04,bug;sponsor disputed;invalid
4,paulius.eth,0x523B5b2Cc58A818667C22c862930B141f85d49DD,1,contract MapleTreasury should not allow to reclaim fundsToken,102,https://github.com/code-423n4/2021-04-maple-findings/issues/102,maple,2021/04,bug;sponsor disputed;invalid
4,paulius.eth,0x523B5b2Cc58A818667C22c862930B141f85d49DD,1,getRewardForDuration will start returning misleading results if rewardsDuration is updated,103,https://github.com/code-423n4/2021-04-maple-findings/issues/103,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,paulius.eth,0x523B5b2Cc58A818667C22c862930B141f85d49DD,1,Contract MplRewards should have an emergency withdraw function,104,https://github.com/code-423n4/2021-04-maple-findings/issues/104,maple,2021/04,bug;sponsor acknowledged;sponsor disputed;invalid
4,paulius.eth,0x523B5b2Cc58A818667C22c862930B141f85d49DD,1,Comment indicates that FundsWithdrawn event should be emitted only when _withdrawableDividend > 0,96,https://github.com/code-423n4/2021-04-maple-findings/issues/96,maple,2021/04,bug;duplicate;0 (Non-critical);sponsor confirmed;resolved
4,paulius.eth,0x523B5b2Cc58A818667C22c862930B141f85d49DD,1,Unused code,97,https://github.com/code-423n4/2021-04-maple-findings/issues/97,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,paulius.eth,0x523B5b2Cc58A818667C22c862930B141f85d49DD,1,Interface and implementation function declaration differs,98,https://github.com/code-423n4/2021-04-maple-findings/issues/98,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,paulius.eth,0x523B5b2Cc58A818667C22c862930B141f85d49DD,1,Function triggerDefault should call _emitBalanceUpdateEventForCollateralLocker,99,https://github.com/code-423n4/2021-04-maple-findings/issues/99,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,s1m0,0x9b3e9e3e4a174d59279fc7cd268e035992412384,1,Oracle not checked if set for an asset,110,https://github.com/code-423n4/2021-04-maple-findings/issues/110,maple,2021/04,bug;0 (Non-critical);sponsor acknowledged
4,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Any valid liquidator can arbitrage from the loan contract to earn collateral assets by exploiting the maximum slippage when defaulting a loan.,111,https://github.com/code-423n4/2021-04-maple-findings/issues/111,maple,2021/04,bug;sponsor disputed;invalid
4,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Full payment does not consider late fees of the payment,112,https://github.com/code-423n4/2021-04-maple-findings/issues/112,maple,2021/04,bug;1 (Low Risk);sponsor disputed;resolved
4,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Functions calculating the value of `BPT` is vulnerable to flash-loan attacks.,113,https://github.com/code-423n4/2021-04-maple-findings/issues/113,maple,2021/04,bug;0 (Non-critical);sponsor confirmed;resolved
4,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Bypass or reduction on the lockup period.,114,https://github.com/code-423n4/2021-04-maple-findings/issues/114,maple,2021/04,bug;duplicate;2 (Med Risk);Will Revisit
4,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Potential reentrancy when the borrower drawdowns the loan.,115,https://github.com/code-423n4/2021-04-maple-findings/issues/115,maple,2021/04,bug;duplicate;1 (Low Risk);sponsor disputed
4,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Unnecessary `transferOwnership` funciton call in `MplRewards.sol` and `oracle/ChainlinkOracle.sol`.,116,https://github.com/code-423n4/2021-04-maple-findings/issues/116,maple,2021/04,bug;1 (Low Risk);sponsor disputed;invalid
4,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Bypass or reduction on the lockup period of Pool FDTs.,117,https://github.com/code-423n4/2021-04-maple-findings/issues/117,maple,2021/04,bug;2 (Med Risk);sponsor confirmed;resolved
3,adamavenir,123123,2,Testing simpler form,63,https://github.com/code-423n4/marginswap-results/issues/63,marginswap,2021/04,bug;2 (Med Risk)
3,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,3,The First User To Borrow a Particular Token Can Drain Funds In MarginSwap by Making An Undercollateralized Borrow Using Flash Loans,66,https://github.com/code-423n4/marginswap-results/issues/66,marginswap,2021/04,bug;2 (Med Risk)
3,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,3,Users Can Drain Funds From MarginSwap By Making Undercollateralized Borrows If The Price Of A Token Has Moved More Than 10% Since The Last MarginSwap Borrow/Liquidation Involving Accounts Holding That Token.,67,https://github.com/code-423n4/marginswap-results/issues/67,marginswap,2021/04,bug;3 (High Risk)
3,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,1,Inconsistent Use of RoleCache in RoleAware.sol,68,https://github.com/code-423n4/marginswap-results/issues/68,marginswap,2021/04,bug;duplicate;1 (Low Risk)
3,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,1,Duplicated Code In Admin.viewCurrentMaintenanceStaker(),69,https://github.com/code-423n4/marginswap-results/issues/69,marginswap,2021/04,bug;1 (Low Risk)
3,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,1,Magic Numbers used in Admin._stake() When Constant Defined Above Can Be Used Instead,71,https://github.com/code-423n4/marginswap-results/issues/71,marginswap,2021/04,bug;1 (Low Risk)
3,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,3,Impossible to call withdrawReward fails due to run out of gas,65,https://github.com/code-423n4/marginswap-results/issues/65,marginswap,2021/04,bug;3 (High Risk)
3,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,2,Add a timelock to functions that set key variables,70,https://github.com/code-423n4/marginswap-results/issues/70,marginswap,2021/04,bug;2 (Med Risk)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Clone-and-own approach used for OZ SafeMath library and other code susceptible to errors and missing upstream bug fixes,22,https://github.com/code-423n4/2021-04-redacted-findings/issues/22,meebits,2021/04,bug;0 (Non-critical)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Atypical contract structure affects maintainability and readability,23,https://github.com/code-423n4/2021-04-redacted-findings/issues/23,meebits,2021/04,0 (Non-critical);style
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Incorrect initialization uses test parameterization for token limit,24,https://github.com/code-423n4/2021-04-redacted-findings/issues/24,meebits,2021/04,invalid;0 (Non-critical)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Incorrect initialization uses test parameterization for sale limit,25,https://github.com/code-423n4/2021-04-redacted-findings/issues/25,meebits,2021/04,invalid;0 (Non-critical)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Explicit initialization with zero not required for numTokens,26,https://github.com/code-423n4/2021-04-redacted-findings/issues/26,meebits,2021/04,bug;G (Gas Optimization)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Explicit initialization with zero not required for numSales,27,https://github.com/code-423n4/2021-04-redacted-findings/issues/27,meebits,2021/04,duplicate
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Explicit initialization with false not required for publicSale,28,https://github.com/code-423n4/2021-04-redacted-findings/issues/28,meebits,2021/04,duplicate
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Explicit initialization with zero not required for nonce,29,https://github.com/code-423n4/2021-04-redacted-findings/issues/29,meebits,2021/04,duplicate
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing modifier onlyDeployer with internal function,31,https://github.com/code-423n4/2021-04-redacted-findings/issues/31,meebits,2021/04,0 (Non-critical);style
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Privileged deployer role and capabilities,32,https://github.com/code-423n4/2021-04-redacted-findings/issues/32,meebits,2021/04,invalid;0 (Non-critical)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing zero-address check for the beneficiary address,33,https://github.com/code-423n4/2021-04-redacted-findings/issues/33,meebits,2021/04,bug;3 (High Risk)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing zero/threshold check for NFT sale price,34,https://github.com/code-423n4/2021-04-redacted-findings/issues/34,meebits,2021/04,bug;3 (High Risk)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing zero/threshold check for NFT sale duration,35,https://github.com/code-423n4/2021-04-redacted-findings/issues/35,meebits,2021/04,bug;3 (High Risk)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,No guarded launch circuit breaker for public sale,36,https://github.com/code-423n4/2021-04-redacted-findings/issues/36,meebits,2021/04,bug;1 (Low Risk)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing parameters in SalesBegin event of critical startSale() function,37,https://github.com/code-423n4/2021-04-redacted-findings/issues/37,meebits,2021/04,enhancement;1 (Low Risk);style
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing event in critical pauseMarket() function,38,https://github.com/code-423n4/2021-04-redacted-findings/issues/38,meebits,2021/04,duplicate;enhancement;1 (Low Risk)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing event in critical sealContract() function,39,https://github.com/code-423n4/2021-04-redacted-findings/issues/39,meebits,2021/04,duplicate;enhancement;1 (Low Risk)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing error messages in require statements of various function,40,https://github.com/code-423n4/2021-04-redacted-findings/issues/40,meebits,2021/04,1 (Low Risk);style
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,ERC-721 Spec mismatch for ownerOf() function,41,https://github.com/code-423n4/2021-04-redacted-findings/issues/41,meebits,2021/04,0 (Non-critical);style
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing event in critical devMint() function,42,https://github.com/code-423n4/2021-04-redacted-findings/issues/42,meebits,2021/04,1 (Low Risk);style
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Deployer minting to arbitrary addresses could trick/confuse users,43,https://github.com/code-423n4/2021-04-redacted-findings/issues/43,meebits,2021/04,invalid;0 (Non-critical)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Incorrect createVia argument used in mintWithAlphaOrBeta function,44,https://github.com/code-423n4/2021-04-redacted-findings/issues/44,meebits,2021/04,0 (Non-critical);style
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Use of transfer() may lead to failures,45,https://github.com/code-423n4/2021-04-redacted-findings/issues/45,meebits,2021/04,bug;2 (Med Risk)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Potential reentrancy in safeTransferFrom functions,46,https://github.com/code-423n4/2021-04-redacted-findings/issues/46,meebits,2021/04,bug;duplicate;2 (Med Risk)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,ERC-721 Enumerable Spec mismatch for index of tokenByIndex() function,47,https://github.com/code-423n4/2021-04-redacted-findings/issues/47,meebits,2021/04,bug;3 (High Risk)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,ERC-721 Enumerable Spec mismatch for return value of tokenByIndex() function,48,https://github.com/code-423n4/2021-04-redacted-findings/issues/48,meebits,2021/04,bug;duplicate;3 (High Risk)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,ERC721Metadata Spec mismatch from lack of input validation in tokenURI(),49,https://github.com/code-423n4/2021-04-redacted-findings/issues/49,meebits,2021/04,invalid;0 (Non-critical)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Incorrect use of test parameterization for baseURI value in tokenURI(),51,https://github.com/code-423n4/2021-04-redacted-findings/issues/51,meebits,2021/04,invalid;0 (Non-critical)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Signature malleability of EVM's ecrecover in verify(),54,https://github.com/code-423n4/2021-04-redacted-findings/issues/54,meebits,2021/04,bug;1 (Low Risk)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Design susceptible to taker griefing on acceptTrade(),55,https://github.com/code-423n4/2021-04-redacted-findings/issues/55,meebits,2021/04,enhancement;1 (Low Risk)
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Market pause does not pause tradeValid(),57,https://github.com/code-423n4/2021-04-redacted-findings/issues/57,meebits,2021/04,1 (Low Risk);style
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Market pause does not pause cancelOffer(),59,https://github.com/code-423n4/2021-04-redacted-findings/issues/59,meebits,2021/04,0 (Non-critical);style
6,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,cancelOffer() is susceptible to front-running,60,https://github.com/code-423n4/2021-04-redacted-findings/issues/60,meebits,2021/04,invalid;0 (Non-critical)
6,0xsomeone,0xa462fae8b85FFf172660c5D9e3C98C84691CA4d2,1,Legacy Function Usage,14,https://github.com/code-423n4/2021-04-redacted-findings/issues/14,meebits,2021/04,bug;1 (Low Risk)
6,0xsomeone,0xa462fae8b85FFf172660c5D9e3C98C84691CA4d2,G,Numerous Gas Optimizations,15,https://github.com/code-423n4/2021-04-redacted-findings/issues/15,meebits,2021/04,bug;G (Gas Optimization)
6,0xsomeone,0xa462fae8b85FFf172660c5D9e3C98C84691CA4d2,0,Incorrect Implementation,16,https://github.com/code-423n4/2021-04-redacted-findings/issues/16,meebits,2021/04,bug;0 (Non-critical)
6,0xsomeone,0xa462fae8b85FFf172660c5D9e3C98C84691CA4d2,3,Arbitrary Transfer of Unowned NFTs,4,https://github.com/code-423n4/2021-04-redacted-findings/issues/4,meebits,2021/04,bug;3 (High Risk)
6,@GalloDaSballo,0xe46887c50a3Cf2C19A705EB42596A04fD139b2C6,G,randomIndex is not truly random - possibility of predictably minting a specific token Id,30,https://github.com/code-423n4/2021-04-redacted-findings/issues/30,meebits,2021/04,bug;2 (Med Risk)
6,adamavenir,123123,0,Testing form submissions for mystery NFT contest,1,https://github.com/code-423n4/2021-04-redacted-findings/issues/1,meebits,2021/04,bug;0 (Non-critical)
6,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,2,Nonce not modified,80,https://github.com/code-423n4/2021-04-redacted-findings/issues/80,meebits,2021/04,bug;duplicate;1 (Low Risk)
6,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,2,Randomnesss can be manipulated,81,https://github.com/code-423n4/2021-04-redacted-findings/issues/81,meebits,2021/04,bug;2 (Med Risk)
6,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Constructor lack of zero address validation,82,https://github.com/code-423n4/2021-04-redacted-findings/issues/82,meebits,2021/04,bug;1 (Low Risk)
6,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Optimizations storage,83,https://github.com/code-423n4/2021-04-redacted-findings/issues/83,meebits,2021/04,bug;G (Gas Optimization);style
6,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,External over public ,84,https://github.com/code-423n4/2021-04-redacted-findings/issues/84,meebits,2021/04,bug;G (Gas Optimization)
6,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,SafeMath library asserts instead of reverts,17,https://github.com/code-423n4/2021-04-redacted-findings/issues/17,meebits,2021/04,bug;1 (Low Risk)
6,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,18,https://github.com/code-423n4/2021-04-redacted-findings/issues/18,meebits,2021/04,invalid;0 (Non-critical)
6,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Usage of `address.transfer`,19,https://github.com/code-423n4/2021-04-redacted-findings/issues/19,meebits,2021/04,bug;1 (Low Risk)
6,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Mint can be front-run,20,https://github.com/code-423n4/2021-04-redacted-findings/issues/20,meebits,2021/04,bug;1 (Low Risk)
6,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,0,Unclear `randomIndex` function,21,https://github.com/code-423n4/2021-04-redacted-findings/issues/21,meebits,2021/04,bug;0 (Non-critical)
6,gpersoon,gpersoon.eth,1,Not really random,10,https://github.com/code-423n4/2021-04-redacted-findings/issues/10,meebits,2021/04,bug;1 (Low Risk)
6,gpersoon,gpersoon.eth,1,nonce isn't increased,11,https://github.com/code-423n4/2021-04-redacted-findings/issues/11,meebits,2021/04,bug;1 (Low Risk)
6,gpersoon,gpersoon.eth,G,transfer of 0 ETH,12,https://github.com/code-423n4/2021-04-redacted-findings/issues/12,meebits,2021/04,invalid;0 (Non-critical);style
6,gpersoon,gpersoon.eth,1,transfer used,13,https://github.com/code-423n4/2021-04-redacted-findings/issues/13,meebits,2021/04,bug;1 (Low Risk)
6,gpersoon,gpersoon.eth,1,Check for marketPaused in sealContract,8,https://github.com/code-423n4/2021-04-redacted-findings/issues/8,meebits,2021/04,bug;0 (Non-critical);style
6,gpersoon,gpersoon.eth,1,Safemath missing in several places,9,https://github.com/code-423n4/2021-04-redacted-findings/issues/9,meebits,2021/04,invalid;0 (Non-critical)
6,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,"instead of call() , transfer() is used to withdraw the ether",2,https://github.com/code-423n4/2021-04-redacted-findings/issues/2,meebits,2021/04,bug;2 (Med Risk)
6,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,state variables that could be declared constant,3,https://github.com/code-423n4/2021-04-redacted-findings/issues/3,meebits,2021/04,bug;G (Gas Optimization)
6,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,public function that could be declared external,5,https://github.com/code-423n4/2021-04-redacted-findings/issues/5,meebits,2021/04,bug;G (Gas Optimization)
6,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,No zero address checking in contractor,6,https://github.com/code-423n4/2021-04-redacted-findings/issues/6,meebits,2021/04,invalid;0 (Non-critical);style
6,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,lack of input validation in ownerOf(uint ),7,https://github.com/code-423n4/2021-04-redacted-findings/issues/7,meebits,2021/04,invalid;0 (Non-critical)
6,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,3,Beebots.TradeValid() Will Erroneously Return True When Maker Is Set To Address(0) and makerIds Are Set To The TokenIds of Unminted Beebot NFTs,77,https://github.com/code-423n4/2021-04-redacted-findings/issues/77,meebits,2021/04,bug;3 (High Risk)
6,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,1,"Beebots.tokenURI() References A Non-Existent Domain at ""TODO""",78,https://github.com/code-423n4/2021-04-redacted-findings/issues/78,meebits,2021/04,bug;duplicate;1 (Low Risk)
6,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,1,"Beebots.contentHash() Is Currently Set As ""todo""",79,https://github.com/code-423n4/2021-04-redacted-findings/issues/79,meebits,2021/04,duplicate;invalid;0 (Non-critical)
6,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,3,Beebots.randomIndex() Can Be Manipulated To Not Be Random Without Costing Alice Anything,85,https://github.com/code-423n4/2021-04-redacted-findings/issues/85,meebits,2021/04,bug;3 (High Risk)
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,.transfer is not safe to use with custom smart contracts,50,https://github.com/code-423n4/2021-04-redacted-findings/issues/50,meebits,2021/04,bug;duplicate;2 (Med Risk)
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,nonce always remains 0,52,https://github.com/code-423n4/2021-04-redacted-findings/issues/52,meebits,2021/04,bug;duplicate;2 (Med Risk)
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,mint for 0 cost when the sale is over,53,https://github.com/code-423n4/2021-04-redacted-findings/issues/53,meebits,2021/04,bug;duplicate;3 (High Risk)
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,event Mint parameter minter,56,https://github.com/code-423n4/2021-04-redacted-findings/issues/56,meebits,2021/04,bug;0 (Non-critical);style
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,event Deposit when value is 0,58,https://github.com/code-423n4/2021-04-redacted-findings/issues/58,meebits,2021/04,bug;0 (Non-critical);style
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,creatorNftMints is assigned only 0 or 1,68,https://github.com/code-423n4/2021-04-redacted-findings/issues/68,meebits,2021/04,0 (Non-critical);G (Gas Optimization);style
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,contentHash is not used,70,https://github.com/code-423n4/2021-04-redacted-findings/issues/70,meebits,2021/04,bug;0 (Non-critical)
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,function ownerOf does not check if it is a valid _tokenId,72,https://github.com/code-423n4/2021-04-redacted-findings/issues/72,meebits,2021/04,invalid;0 (Non-critical)
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,function tokenByIndex treats last index as invalid,73,https://github.com/code-423n4/2021-04-redacted-findings/issues/73,meebits,2021/04,bug;3 (High Risk)
6,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Can cancel the same offer several times,76,https://github.com/code-423n4/2021-04-redacted-findings/issues/76,meebits,2021/04,bug;0 (Non-critical)
6,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,G,Require() not needed,67,https://github.com/code-423n4/2021-04-redacted-findings/issues/67,meebits,2021/04,bug;G (Gas Optimization)
6,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,G,PauseMarket() can be optimized,69,https://github.com/code-423n4/2021-04-redacted-findings/issues/69,meebits,2021/04,bug;G (Gas Optimization)
6,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,0,Use always uint256,71,https://github.com/code-423n4/2021-04-redacted-findings/issues/71,meebits,2021/04,bug;0 (Non-critical)
6,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,3,The randomIndex() can be determined,74,https://github.com/code-423n4/2021-04-redacted-findings/issues/74,meebits,2021/04,bug;3 (High Risk)
6,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,2,NFT can be minted for free after sale ended,75,https://github.com/code-423n4/2021-04-redacted-findings/issues/75,meebits,2021/04,bug;2 (Med Risk)
6,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Several functions in the ERC721 interface are not declared `payable`.,61,https://github.com/code-423n4/2021-04-redacted-findings/issues/61,meebits,2021/04,invalid
6,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,The `ownerOf` function requires checking if the owner is non-zero.,62,https://github.com/code-423n4/2021-04-redacted-findings/issues/62,meebits,2021/04,bug;1 (Low Risk)
6,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,No zero check on constructor inputs.,63,https://github.com/code-423n4/2021-04-redacted-findings/issues/63,meebits,2021/04,bug;1 (Low Risk)
6,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Nonce does not increase during the entire sale.,64,https://github.com/code-423n4/2021-04-redacted-findings/issues/64,meebits,2021/04,bug;1 (Low Risk)
6,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Should use `SafeMath.add` in the `acceptTrade` function.,65,https://github.com/code-423n4/2021-04-redacted-findings/issues/65,meebits,2021/04,bug;1 (Low Risk);style
6,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Lack of chain information in the signed data leads to potential replay attacks.,66,https://github.com/code-423n4/2021-04-redacted-findings/issues/66,meebits,2021/04,bug;2 (Med Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by removing unnecessary conditional in isCurated() function of Router.sol,100,https://github.com/code-423n4/2021-04-vader-findings/issues/100,vader,2021/04,bug;G (Gas Optimization)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by removing unused state variable VADER in Factory.sol,101,https://github.com/code-423n4/2021-04-vader-findings/issues/101,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by removing unused state variable USDV in Factory.sol,102,https://github.com/code-423n4/2021-04-vader-findings/issues/102,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by converting storage variable POOLS to immutable by moving initialization from init() function to constructor in Factory.sol,103,https://github.com/code-423n4/2021-04-vader-findings/issues/103,vader,2021/04,bug;duplicate;G (Gas Optimization)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing modifier onlyPOOLS with internal function in Factory.sol,104,https://github.com/code-423n4/2021-04-vader-findings/issues/104,vader,2021/04,bug;G (Gas Optimization);judged invalid
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Initialization can be front-run in Factory.sol,105,https://github.com/code-423n4/2021-04-vader-findings/issues/105,vader,2021/04,bug;duplicate;disagree with severity;2 (Med Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for init() function of Factory.sol,106,https://github.com/code-423n4/2021-04-vader-findings/issues/106,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Lack of input validation in init() function of Factory.sol,107,https://github.com/code-423n4/2021-04-vader-findings/issues/107,vader,2021/04,bug;duplicate;1 (Low Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing event for critical init() function in Factory.sol,108,https://github.com/code-423n4/2021-04-vader-findings/issues/108,vader,2021/04,bug;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Uninformative error message on L35 of Factory.sol,109,https://github.com/code-423n4/2021-04-vader-findings/issues/109,vader,2021/04,bug;duplicate;0 (Non-critical)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Public functions getSynth() and isSynth() are commented out in Factory.sol,110,https://github.com/code-423n4/2021-04-vader-findings/issues/110,vader,2021/04,bug;0 (Non-critical)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by moving inited bool state variable next to an address state variable declaration in Pools.sol,111,https://github.com/code-423n4/2021-04-vader-findings/issues/111,vader,2021/04,bug;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by converting storage variables to immutable by moving initialization from init() function to constructor in Pools.sol,112,https://github.com/code-423n4/2021-04-vader-findings/issues/112,vader,2021/04,bug;duplicate;G (Gas Optimization)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3, Initialization can be front-run in Pools.sol,113,https://github.com/code-423n4/2021-04-vader-findings/issues/113,vader,2021/04,bug;duplicate;disagree with severity;2 (Med Risk);sponsor disputed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Pool functions can be called before initialization in init() of Pools.sol,114,https://github.com/code-423n4/2021-04-vader-findings/issues/114,vader,2021/04,bug;disagree with severity;2 (Med Risk);sponsor disputed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for init() function of Pools.sol,115,https://github.com/code-423n4/2021-04-vader-findings/issues/115,vader,2021/04,bug;duplicate;G (Gas Optimization)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Lack of input validation in init() function of Pools.sol,116,https://github.com/code-423n4/2021-04-vader-findings/issues/116,vader,2021/04,bug;duplicate;1 (Low Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing event for critical init() function in Pools.sol,117,https://github.com/code-423n4/2021-04-vader-findings/issues/117,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by removing unused state variable _isMember and related getter function isMember() in Pools.sol,118,https://github.com/code-423n4/2021-04-vader-findings/issues/118,vader,2021/04,bug;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Funds can be drained from the pools because of missing/permissive access control for adding liquidity in Pools.sol,119,https://github.com/code-423n4/2021-04-vader-findings/issues/119,vader,2021/04,bug;duplicate;disagree with severity;3 (High Risk);sponsor disputed;judged invalid
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,User may not get IL protection if certain functions are called directly in Pools.sol,120,https://github.com/code-423n4/2021-04-vader-findings/issues/120,vader,2021/04,bug;disagree with severity;2 (Med Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Hardcoded value will lead to incorrect anchor prices in Router.sol,121,https://github.com/code-423n4/2021-04-vader-findings/issues/121,vader,2021/04,bug;duplicate;disagree with severity;1 (Low Risk);sponsor confirmed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Missing input validation may transfer tokens to zero-address in Pools.sol,122,https://github.com/code-423n4/2021-04-vader-findings/issues/122,vader,2021/04,bug;duplicate;disagree with severity;1 (Low Risk);sponsor confirmed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Token balances can be updated in pools without first sending tokens because of missing/permissive access control in Pools.sol,123,https://github.com/code-423n4/2021-04-vader-findings/issues/123,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor disputed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Incorrect operator used in deploySynth() of Pools.sol,124,https://github.com/code-423n4/2021-04-vader-findings/issues/124,vader,2021/04,bug;disagree with severity;2 (Med Risk);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Synths can be minted in pools because of missing/permissive access control in Pools.sol,125,https://github.com/code-423n4/2021-04-vader-findings/issues/125,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor disputed;judged invalid
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Synths can be burned from pools because of missing/permissive access control in Pools.sol,126,https://github.com/code-423n4/2021-04-vader-findings/issues/126,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor disputed;judged invalid
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Synths can be removed from pools because of missing/permissive access control in Pools.sol,127,https://github.com/code-423n4/2021-04-vader-findings/issues/127,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor disputed;judged invalid
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Unhandled return value of transfer in transferOut() of Pools.sol,128,https://github.com/code-423n4/2021-04-vader-findings/issues/128,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor disputed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by declaring state variables constant in USDV.sol,129,https://github.com/code-423n4/2021-04-vader-findings/issues/129,vader,2021/04,bug;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Non-conformity to ERC20 standard for decimals in USDV.sol,130,https://github.com/code-423n4/2021-04-vader-findings/issues/130,vader,2021/04,bug;duplicate;0 (Non-critical);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by moving inited bool state variable next to an address state variable declaration in USDV.sol,131,https://github.com/code-423n4/2021-04-vader-findings/issues/131,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3, Initialization can be front-run in USDV.sol,132,https://github.com/code-423n4/2021-04-vader-findings/issues/132,vader,2021/04,bug;duplicate;disagree with severity;2 (Med Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,USDV functions can be called before initialization in init() of USDV.sol,133,https://github.com/code-423n4/2021-04-vader-findings/issues/133,vader,2021/04,bug;duplicate;disagree with severity;2 (Med Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Lack of input validation in init() function of USDV.sol,134,https://github.com/code-423n4/2021-04-vader-findings/issues/134,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by converting storage variables to immutable by moving initialization from init() function to constructor in USDV.sol,135,https://github.com/code-423n4/2021-04-vader-findings/issues/135,vader,2021/04,bug;duplicate;G (Gas Optimization)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing event for critical init() function in USDV.sol,136,https://github.com/code-423n4/2021-04-vader-findings/issues/136,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Transaction-Order-Dependence race condition for USDV token approve(),137,https://github.com/code-423n4/2021-04-vader-findings/issues/137,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Flash attack mitigation does not work as intended in USDV.sol,138,https://github.com/code-423n4/2021-04-vader-findings/issues/138,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor confirmed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Uninformative error messages in various function of USDV.sol,139,https://github.com/code-423n4/2021-04-vader-findings/issues/139,vader,2021/04,bug;duplicate;0 (Non-critical)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing DAO functionality to call setParams() function in USDV.sol,140,https://github.com/code-423n4/2021-04-vader-findings/issues/140,vader,2021/04,bug;disagree with severity;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Flash attack mitigation does not work as intended in Vader.sol,141,https://github.com/code-423n4/2021-04-vader-findings/issues/141,vader,2021/04,bug;duplicate;3 (High Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by declaring state variables constant in Vader.sol,142,https://github.com/code-423n4/2021-04-vader-findings/issues/142,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Non-conformity to ERC20 standard for decimals in Vader.sol,143,https://github.com/code-423n4/2021-04-vader-findings/issues/143,vader,2021/04,bug;duplicate;0 (Non-critical);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by moving inited/emitting/minting bool state variables next to an address state variable declaration in Vader.sol,144,https://github.com/code-423n4/2021-04-vader-findings/issues/144,vader,2021/04,bug;duplicate;G (Gas Optimization)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Initialization can be front-run in Vader.sol,145,https://github.com/code-423n4/2021-04-vader-findings/issues/145,vader,2021/04,bug;duplicate;disagree with severity;3 (High Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Vader functions can be called before initialization in init() of Vader.sol,146,https://github.com/code-423n4/2021-04-vader-findings/issues/146,vader,2021/04,bug;duplicate;disagree with severity;2 (Med Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Lack of input validation in init() function of Vader.sol,147,https://github.com/code-423n4/2021-04-vader-findings/issues/147,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by converting storage variables to immutable by moving initialization from init() function to constructor in Vader.sol,148,https://github.com/code-423n4/2021-04-vader-findings/issues/148,vader,2021/04,bug;duplicate;G (Gas Optimization)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by converting storage variable to immutable in Vader.sol,149,https://github.com/code-423n4/2021-04-vader-findings/issues/149,vader,2021/04,bug;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing event for critical init() function in Vader.sol,150,https://github.com/code-423n4/2021-04-vader-findings/issues/150,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Transaction-Order-Dependence race condition for Vader token approve(),151,https://github.com/code-423n4/2021-04-vader-findings/issues/151,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by declaring state variable _1m as constant in Vader.sol,152,https://github.com/code-423n4/2021-04-vader-findings/issues/152,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by removing state variable baseline in Vader.sol,153,https://github.com/code-423n4/2021-04-vader-findings/issues/153,vader,2021/04,bug;G (Gas Optimization)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing modifier with internal function in Vader.sol,154,https://github.com/code-423n4/2021-04-vader-findings/issues/154,vader,2021/04,bug;G (Gas Optimization);judged invalid
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Incorrect initialization causes VADER emission rate of 1 second instead of 1 day in Vader.sol,155,https://github.com/code-423n4/2021-04-vader-findings/issues/155,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Uninformative error messages in various function of Vader.sol,156,https://github.com/code-423n4/2021-04-vader-findings/issues/156,vader,2021/04,bug;duplicate;0 (Non-critical)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing DAO functionality to call flipEmissions() function in Vader.sol,157,https://github.com/code-423n4/2021-04-vader-findings/issues/157,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing DAO functionality to call flipMinting() function in Vader.sol,158,https://github.com/code-423n4/2021-04-vader-findings/issues/158,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing DAO functionality to call setParams() function in Vader.sol,159,https://github.com/code-423n4/2021-04-vader-findings/issues/159,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Missing input validation may set rewardAddress to zero-address in Vader.sol,160,https://github.com/code-423n4/2021-04-vader-findings/issues/160,vader,2021/04,bug;disagree with severity;1 (Low Risk);sponsor confirmed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing DAO functionality to call changeDAO() function in Vader.sol,161,https://github.com/code-423n4/2021-04-vader-findings/issues/161,vader,2021/04,bug;duplicate;3 (High Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,changeDAO should be a two-step process in Vader.sol,162,https://github.com/code-423n4/2021-04-vader-findings/issues/162,vader,2021/04,bug;disagree with severity;2 (Med Risk);sponsor confirmed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing event for critical changeDAO() function in Vader.sol,163,https://github.com/code-423n4/2021-04-vader-findings/issues/163,vader,2021/04,bug;duplicate;disagree with severity;1 (Low Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing DAO functionality to call purgeDAO() function in Vader.sol,164,https://github.com/code-423n4/2021-04-vader-findings/issues/164,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing event for critical purgeDAO() function in Vader.sol,165,https://github.com/code-423n4/2021-04-vader-findings/issues/165,vader,2021/04,bug;duplicate;disagree with severity;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Funds can be drained from the contract because of missing/permissive access control for redeeming in Vader.sol,166,https://github.com/code-423n4/2021-04-vader-findings/issues/166,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor disputed;judged invalid
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by moving inited bool state variable next to an address state variable declaration in DAO.sol,167,https://github.com/code-423n4/2021-04-vader-findings/issues/167,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Initialization can be front-run in DAO.sol,168,https://github.com/code-423n4/2021-04-vader-findings/issues/168,vader,2021/04,bug;duplicate;2 (Med Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,DAO functions can be called before initialization in init() of DAO.sol,169,https://github.com/code-423n4/2021-04-vader-findings/issues/169,vader,2021/04,bug;duplicate;disagree with severity;2 (Med Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Lack of input validation in init() function of DAO.sol,170,https://github.com/code-423n4/2021-04-vader-findings/issues/170,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by converting storage variables to immutable by moving initialization from init() function to constructor in DAO.sol,171,https://github.com/code-423n4/2021-04-vader-findings/issues/171,vader,2021/04,bug;duplicate;G (Gas Optimization)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing event for critical init() function in DAO.sol,172,https://github.com/code-423n4/2021-04-vader-findings/issues/172,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for newGrantProposal() function of DAO.sol,173,https://github.com/code-423n4/2021-04-vader-findings/issues/173,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for newAddressProposal() function of DAO.sol,174,https://github.com/code-423n4/2021-04-vader-findings/issues/174,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for voteProposal() function of DAO.sol,175,https://github.com/code-423n4/2021-04-vader-findings/issues/175,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for cancelProposal() function of DAO.sol,176,https://github.com/code-423n4/2021-04-vader-findings/issues/176,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for finaliseProposal() function of DAO.sol,177,https://github.com/code-423n4/2021-04-vader-findings/issues/177,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for hasMajority() function of DAO.sol,178,https://github.com/code-423n4/2021-04-vader-findings/issues/178,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for hasQuorum() function of DAO.sol,179,https://github.com/code-423n4/2021-04-vader-findings/issues/179,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for hasMinority() function of DAO.sol,180,https://github.com/code-423n4/2021-04-vader-findings/issues/180,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with internal/private for isEqual() function of DAO.sol,181,https://github.com/code-423n4/2021-04-vader-findings/issues/181,vader,2021/04,bug;G (Gas Optimization);filed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Perform early input validation of zero-address for efficiency in DAO.sol,182,https://github.com/code-423n4/2021-04-vader-findings/issues/182,vader,2021/04,bug;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Undefined behavior for DAO and GRANT vote proposals in DAO.sol,183,https://github.com/code-423n4/2021-04-vader-findings/issues/183,vader,2021/04,bug;disagree with severity;2 (Med Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Lack of input validation lets anyone cancel any finalising proposal in DAO.sol,184,https://github.com/code-423n4/2021-04-vader-findings/issues/184,vader,2021/04,bug;duplicate;3 (High Risk);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,A minority of the DAO can cause DoS by canceling all proposals in DAO.sol,185,https://github.com/code-423n4/2021-04-vader-findings/issues/185,vader,2021/04,bug;duplicate;3 (High Risk);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Unnecessary logic that will never get triggered in DAO.sol,186,https://github.com/code-423n4/2021-04-vader-findings/issues/186,vader,2021/04,bug;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Flash loans can affect governance voting in DAO.sol,187,https://github.com/code-423n4/2021-04-vader-findings/issues/187,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor disputed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Incorrect burn address in Vader.sol,202,https://github.com/code-423n4/2021-04-vader-findings/issues/202,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor confirmed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Uninitialized variable leads to zero-fees for first transfer in Vader.sol,203,https://github.com/code-423n4/2021-04-vader-findings/issues/203,vader,2021/04,bug;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing event for critical flipMinting() function in Vader.sol,237,https://github.com/code-423n4/2021-04-vader-findings/issues/237,vader,2021/04,bug;duplicate;disagree with severity;1 (Low Risk);sponsor confirmed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Tokens can get locked and funds lost when minting is disabled in Vader.sol and USDV.sol,238,https://github.com/code-423n4/2021-04-vader-findings/issues/238,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor confirmed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Missing zero-address check for recipient address in critical _transfer() function of USDV.sol,239,https://github.com/code-423n4/2021-04-vader-findings/issues/239,vader,2021/04,bug;duplicate;1 (Low Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Missing zero-address check for recipient address in critical _transfer() function of VADER.sol,240,https://github.com/code-423n4/2021-04-vader-findings/issues/240,vader,2021/04,bug;duplicate;1 (Low Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing event for critical changeUTILS() function in Vader.sol,241,https://github.com/code-423n4/2021-04-vader-findings/issues/241,vader,2021/04,bug;duplicate;disagree with severity;1 (Low Risk);sponsor confirmed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Missing zero-address check for recipient address in critical _transfer() function of Synth.sol,242,https://github.com/code-423n4/2021-04-vader-findings/issues/242,vader,2021/04,bug;duplicate;disagree with severity;1 (Low Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Incorrect AsymmetricShare calculation in Utils.sol,243,https://github.com/code-423n4/2021-04-vader-findings/issues/243,vader,2021/04,bug;duplicate;3 (High Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Incorrect liquidity unit calculation in Utils.sol,244,https://github.com/code-423n4/2021-04-vader-findings/issues/244,vader,2021/04,bug;duplicate;3 (High Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing modifier with internal function in Vault.sol,38,https://github.com/code-423n4/2021-04-vader-findings/issues/38,vader,2021/04,bug;G (Gas Optimization);judged invalid
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Initialization can be front-run in Vault.sol,39,https://github.com/code-423n4/2021-04-vader-findings/issues/39,vader,2021/04,bug;duplicate;disagree with severity;2 (Med Risk);sponsor confirmed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Vault functions can be called before initialization in init() of Vault.sol,40,https://github.com/code-423n4/2021-04-vader-findings/issues/40,vader,2021/04,bug;duplicate;disagree with severity;2 (Med Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for init() function of Vault.sol,41,https://github.com/code-423n4/2021-04-vader-findings/issues/41,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Lack of input validation in init() function of Vault.sol,42,https://github.com/code-423n4/2021-04-vader-findings/issues/42,vader,2021/04,bug;duplicate;disagree with severity;1 (Low Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by avoiding re-initialization of POOLS variable in init() function of Vault.sol,43,https://github.com/code-423n4/2021-04-vader-findings/issues/43,vader,2021/04,bug;G (Gas Optimization)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by converting storage variables to immutable by moving initialization from init() function to constructor in Vault.sol,44,https://github.com/code-423n4/2021-04-vader-findings/issues/44,vader,2021/04,bug;duplicate;G (Gas Optimization)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing event for critical init() function in Vault.sol,45,https://github.com/code-423n4/2021-04-vader-findings/issues/45,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing DAO functionality to call setParams() function in Vault.sol,46,https://github.com/code-423n4/2021-04-vader-findings/issues/46,vader,2021/04,bug;duplicate;disagree with severity;1 (Low Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Uninformative error message in grant() function of Vault.sol,47,https://github.com/code-423n4/2021-04-vader-findings/issues/47,vader,2021/04,bug;duplicate;0 (Non-critical)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Misleading comment for deposit() function of Vault.sol,48,https://github.com/code-423n4/2021-04-vader-findings/issues/48,vader,2021/04,bug;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Uninformative error message on L82 of Vault.sol,49,https://github.com/code-423n4/2021-04-vader-findings/issues/49,vader,2021/04,bug;1 (Low Risk);judged invalid
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Named return variable in harvest() and other functions of Vault.sol and contracts,50,https://github.com/code-423n4/2021-04-vader-findings/issues/50,vader,2021/04,bug;0 (Non-critical)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Copy-paste bug leading to incorrect harvest rewards in Vault.sol,51,https://github.com/code-423n4/2021-04-vader-findings/issues/51,vader,2021/04,bug;disagree with severity;2 (Med Risk);sponsor confirmed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Uninformative error message on L157 of Vault.sol,52,https://github.com/code-423n4/2021-04-vader-findings/issues/52,vader,2021/04,bug;duplicate;0 (Non-critical)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by declaring state variable one as constant in Utils.sol,53,https://github.com/code-423n4/2021-04-vader-findings/issues/53,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by declaring state variable _10k as constant in Utils.sol,54,https://github.com/code-423n4/2021-04-vader-findings/issues/54,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by declaring state variable _year as constant in Utils.sol,55,https://github.com/code-423n4/2021-04-vader-findings/issues/55,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Initialization can be front-run in Utils.sol,56,https://github.com/code-423n4/2021-04-vader-findings/issues/56,vader,2021/04,bug;duplicate;disagree with severity;2 (Med Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Utils functions can be called before initialization in init() of Utils.sol,57,https://github.com/code-423n4/2021-04-vader-findings/issues/57,vader,2021/04,bug;duplicate;disagree with severity;2 (Med Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for init() function of Utils.sol,58,https://github.com/code-423n4/2021-04-vader-findings/issues/58,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Lack of input validation in init() function of Utils.sol,59,https://github.com/code-423n4/2021-04-vader-findings/issues/59,vader,2021/04,bug;duplicate;disagree with severity;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by converting storage variables to immutable by moving initialization from init() function to constructor in Utils.sol,60,https://github.com/code-423n4/2021-04-vader-findings/issues/60,vader,2021/04,bug;duplicate;G (Gas Optimization)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing event for critical init() function in Utils.sol,61,https://github.com/code-423n4/2021-04-vader-findings/issues/61,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Uninformative error message in init() function of Utils.sol,62,https://github.com/code-423n4/2021-04-vader-findings/issues/62,vader,2021/04,bug;duplicate;0 (Non-critical)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Uninformative error message in assetChecks() function of Utils.sol,63,https://github.com/code-423n4/2021-04-vader-findings/issues/63,vader,2021/04,bug;duplicate;0 (Non-critical)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Uninformative error message in requirePriceBounds() function of Utils.sol,64,https://github.com/code-423n4/2021-04-vader-findings/issues/64,vader,2021/04,bug;duplicate;0 (Non-critical)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by making FACTORY state variable immutable in Synth.sol,65,https://github.com/code-423n4/2021-04-vader-findings/issues/65,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by making TOKEN state variable immutable in Synth.sol,66,https://github.com/code-423n4/2021-04-vader-findings/issues/66,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by making name state variable immutable in Synth.sol,67,https://github.com/code-423n4/2021-04-vader-findings/issues/67,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by making symbol state variable immutable in Synth.sol,68,https://github.com/code-423n4/2021-04-vader-findings/issues/68,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by making decimals state variable constant in Synth.sol,69,https://github.com/code-423n4/2021-04-vader-findings/issues/69,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Uninformative error messages in various functions of Synth.sol,70,https://github.com/code-423n4/2021-04-vader-findings/issues/70,vader,2021/04,bug;duplicate;0 (Non-critical)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Title: Transaction-Order-Dependence race condition for Synth token approve(),71,https://github.com/code-423n4/2021-04-vader-findings/issues/71,vader,2021/04,bug;duplicate;1 (Low Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by moving inited bool state variable next to an address state variable declaration in Router.sol,72,https://github.com/code-423n4/2021-04-vader-findings/issues/72,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by declaring state variable one as constant in Router.sol,73,https://github.com/code-423n4/2021-04-vader-findings/issues/73,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Initialization can be front-run in Router.sol,74,https://github.com/code-423n4/2021-04-vader-findings/issues/74,vader,2021/04,bug;duplicate;disagree with severity;2 (Med Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Router functions can be called before initialization in init() of Router.sol,75,https://github.com/code-423n4/2021-04-vader-findings/issues/75,vader,2021/04,bug;duplicate;disagree with severity;2 (Med Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for init() function of Router.sol,76,https://github.com/code-423n4/2021-04-vader-findings/issues/76,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Lack of input validation in init() function of Router.sol,77,https://github.com/code-423n4/2021-04-vader-findings/issues/77,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by removing unused state variable repayDelay in Router.sol,78,https://github.com/code-423n4/2021-04-vader-findings/issues/78,vader,2021/04,bug;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by converting storage variables to immutable by moving initialization from init() function to constructor in Vault.sol,79,https://github.com/code-423n4/2021-04-vader-findings/issues/79,vader,2021/04,bug;duplicate;G (Gas Optimization)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Missing event for critical init() function in Router.sol,80,https://github.com/code-423n4/2021-04-vader-findings/issues/80,vader,2021/04,bug;duplicate;1 (Low Risk)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing DAO functionality to call setParams() function in Router.sol,81,https://github.com/code-423n4/2021-04-vader-findings/issues/81,vader,2021/04,bug;duplicate;disagree with severity;1 (Low Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Missing DAO functionality to call setAnchorParams() function in Router.sol,82,https://github.com/code-423n4/2021-04-vader-findings/issues/82,vader,2021/04,bug;duplicate;disagree with severity;1 (Low Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing modifier with internal function in Router.sol,83,https://github.com/code-423n4/2021-04-vader-findings/issues/83,vader,2021/04,bug;G (Gas Optimization);judged invalid
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Incorrect initialization gives IL protection of only 1 second instead of 100 days in Router.sol,84,https://github.com/code-423n4/2021-04-vader-findings/issues/84,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor disputed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by changing getILProtection() function’s public visibility to internal/private in Router.sol,85,https://github.com/code-423n4/2021-04-vader-findings/issues/85,vader,2021/04,bug;G (Gas Optimization)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Default value of curatedPoolLimit allows only one curated pool in Router.sol,86,https://github.com/code-423n4/2021-04-vader-findings/issues/86,vader,2021/04,bug;disagree with severity;1 (Low Risk);sponsor acknowledged
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,2,Lack of input validation in replacePool() allows curated pool limit bypass in Router.sol,87,https://github.com/code-423n4/2021-04-vader-findings/issues/87,vader,2021/04,bug;2 (Med Risk);sponsor confirmed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Lack of input validation in listAnchor() allows multiple duplicate listings in Router.sol,88,https://github.com/code-423n4/2021-04-vader-findings/issues/88,vader,2021/04,bug;duplicate;disagree with severity;3 (High Risk);sponsor disputed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,1,Uninformative error message in replaceAnchor() function of Router.sol,89,https://github.com/code-423n4/2021-04-vader-findings/issues/89,vader,2021/04,bug;duplicate;0 (Non-critical)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by saving state variable in a memory for loop access in replaceAnchor() of Router.sol,90,https://github.com/code-423n4/2021-04-vader-findings/issues/90,vader,2021/04,bug;G (Gas Optimization)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by breaking from loop after match+replace in replaceAnchor() of Router.sol,91,https://github.com/code-423n4/2021-04-vader-findings/issues/91,vader,2021/04,bug;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by saving state variable in a memory for loop access in updateAnchorPrice() of Router.sol,92,https://github.com/code-423n4/2021-04-vader-findings/issues/92,vader,2021/04,bug;duplicate;G (Gas Optimization)
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by breaking from loop after match+replace in updateAnchorPrices() of Router.sol,93,https://github.com/code-423n4/2021-04-vader-findings/issues/93,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for getVADERAmount() function of Router.sol,94,https://github.com/code-423n4/2021-04-vader-findings/issues/94,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for getUSDVAmount() function of Router.sol,95,https://github.com/code-423n4/2021-04-vader-findings/issues/95,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for borrow() function of Router.sol,96,https://github.com/code-423n4/2021-04-vader-findings/issues/96,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,G,Gas savings by replacing public visibility with external for repay() function of Router.sol,97,https://github.com/code-423n4/2021-04-vader-findings/issues/97,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Public function checkLiquidate() has only commented code in Router.sol,98,https://github.com/code-423n4/2021-04-vader-findings/issues/98,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor disputed;judged invalid
5,0xRajeev,0x7e026a0C061382B0F5935a90BC7324ab0a5A3aCc,3,Unhandled return value of transferFrom in moveTokenToPools() of Router.sol,99,https://github.com/code-423n4/2021-04-vader-findings/issues/99,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor disputed;judged invalid
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Wrong liquidity units calculation,204,https://github.com/code-423n4/2021-04-vader-findings/issues/204,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor confirmed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Swap token can be traded as fake base token,205,https://github.com/code-423n4/2021-04-vader-findings/issues/205,vader,2021/04,bug;3 (High Risk);sponsor confirmed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`getAddedAmount` can return wrong results,206,https://github.com/code-423n4/2021-04-vader-findings/issues/206,vader,2021/04,bug;3 (High Risk);sponsor confirmed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,4 Synths can be minted with fake base token,207,https://github.com/code-423n4/2021-04-vader-findings/issues/207,vader,2021/04,bug;3 (High Risk);sponsor confirmed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Missing access restriction on `lockUnits/unlockUnits`,208,https://github.com/code-423n4/2021-04-vader-findings/issues/208,vader,2021/04,bug;3 (High Risk);sponsor confirmed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Wrong slippage protection on Token -> Token trades,209,https://github.com/code-423n4/2021-04-vader-findings/issues/209,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor confirmed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Anyone can curate pools and steal rewards,210,https://github.com/code-423n4/2021-04-vader-findings/issues/210,vader,2021/04,bug;3 (High Risk);sponsor disputed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Anyone can list anchors / curate tokens,211,https://github.com/code-423n4/2021-04-vader-findings/issues/211,vader,2021/04,bug;3 (High Risk);sponsor disputed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Replacing an anchor does not reset `Pool.isAnchor`,212,https://github.com/code-423n4/2021-04-vader-findings/issues/212,vader,2021/04,bug;disagree with severity;sponsor acknowledged;0 (Non-critical);filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,getAnchorPrice potentially returns the wrong median,213,https://github.com/code-423n4/2021-04-vader-findings/issues/213,vader,2021/04,bug;disagree with severity;1 (Low Risk);sponsor confirmed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Wrong `calcAsymmetricShare` calculation,214,https://github.com/code-423n4/2021-04-vader-findings/issues/214,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor confirmed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Swap value can be manipulated allowing under-collateralized loans,215,https://github.com/code-423n4/2021-04-vader-findings/issues/215,vader,2021/04,bug;3 (High Risk);sponsor disputed;judged invalid
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Repaying debt can be sandwich-attacked,216,https://github.com/code-423n4/2021-04-vader-findings/issues/216,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor disputed;judged invalid
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Tokens can be stolen through `transferTo`,217,https://github.com/code-423n4/2021-04-vader-findings/issues/217,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor acknowledged;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`flashProof` is not flash-proof,218,https://github.com/code-423n4/2021-04-vader-findings/issues/218,vader,2021/04,bug;2 (Med Risk);sponsor confirmed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Interest debt is capped after a year,219,https://github.com/code-423n4/2021-04-vader-findings/issues/219,vader,2021/04,bug;disagree with severity;2 (Med Risk);sponsor confirmed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Transfer fee is burned on wrong accounts,220,https://github.com/code-423n4/2021-04-vader-findings/issues/220,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor confirmed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Fee can be at most 1% and dead code,221,https://github.com/code-423n4/2021-04-vader-findings/issues/221,vader,2021/04,bug;1 (Low Risk)
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3, Vault rewards can be gamed,222,https://github.com/code-423n4/2021-04-vader-findings/issues/222,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor confirmed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Vault rewards last claim time not always initialized,223,https://github.com/code-423n4/2021-04-vader-findings/issues/223,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor confirmed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Vault Weight accounting is wrong for withdrawals,224,https://github.com/code-423n4/2021-04-vader-findings/issues/224,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor confirmed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Missing Approval event in Vether,225,https://github.com/code-423n4/2021-04-vader-findings/issues/225,vader,2021/04,bug;duplicate;1 (Low Risk);sponsor disputed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`init` functions can be frontrun,226,https://github.com/code-423n4/2021-04-vader-findings/issues/226,vader,2021/04,bug;duplicate;2 (Med Risk)
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Proposals can be cancelled,227,https://github.com/code-423n4/2021-04-vader-findings/issues/227,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor confirmed;filed;addressed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Canceled proposals can still be executed,228,https://github.com/code-423n4/2021-04-vader-findings/issues/228,vader,2021/04,bug;2 (Med Risk);sponsor confirmed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Completed proposals can be voted on and executed again,229,https://github.com/code-423n4/2021-04-vader-findings/issues/229,vader,2021/04,bug;2 (Med Risk);sponsor disputed;filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1, `Protection` event not used,230,https://github.com/code-423n4/2021-04-vader-findings/issues/230,vader,2021/04,bug;0 (Non-critical);filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,ERC20 return values not checked,231,https://github.com/code-423n4/2021-04-vader-findings/issues/231,vader,2021/04,bug;2 (Med Risk);filed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,cache `proposalCount` instead of accessing it three times in `newGrantProposal`/`newAddressProposal`,232,https://github.com/code-423n4/2021-04-vader-findings/issues/232,vader,2021/04,bug;G (Gas Optimization)
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,"`DAO.mapPID_finalised` is never read in the contract, only written",233,https://github.com/code-423n4/2021-04-vader-findings/issues/233,vader,2021/04,bug;G (Gas Optimization);addressed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,`DAO.finaliseProposal` if branch seems unnecessary,234,https://github.com/code-423n4/2021-04-vader-findings/issues/234,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,State variables should be constant,235,https://github.com/code-423n4/2021-04-vader-findings/issues/235,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Add anchor map,236,https://github.com/code-423n4/2021-04-vader-findings/issues/236,vader,2021/04,bug;G (Gas Optimization);addressed
5,adamavenir,123123,1,Testing form configuration,1,https://github.com/code-423n4/vader-findings/issues/1,vader,2021/04,bug;1 (Low Risk)
5,Alonso,0xa995e5c32e43C60944dD067e904B14f0Aef9cf7a,G,All ok ,2,https://github.com/code-423n4/2021-04-vader-findings/issues/2,vader,2021/04,bug;G (Gas Optimization);addressed
5,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Missing zero address validation in the init methods,245,https://github.com/code-423n4/2021-04-vader-findings/issues/245,vader,2021/04,bug;duplicate;1 (Low Risk)
5,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Public function that could be declared external,246,https://github.com/code-423n4/2021-04-vader-findings/issues/246,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Unused state variables,247,https://github.com/code-423n4/2021-04-vader-findings/issues/247,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,3,Allowance not checked when calling transferFrom,249,https://github.com/code-423n4/2021-04-vader-findings/issues/249,vader,2021/04,bug;duplicate;sponsor disputed;0 (Non-critical)
5,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Store using Struct over multiple mappings,252,https://github.com/code-423n4/2021-04-vader-findings/issues/252,vader,2021/04,bug;G (Gas Optimization)
5,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,2,Divide before multiply,255,https://github.com/code-423n4/2021-04-vader-findings/issues/255,vader,2021/04,bug;question;2 (Med Risk)
5,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Missing events for important changes in protocol,257,https://github.com/code-423n4/2021-04-vader-findings/issues/257,vader,2021/04,bug;duplicate;1 (Low Risk)
5,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Use Keccak256 over Sha256 for string comparation,258,https://github.com/code-423n4/2021-04-vader-findings/issues/258,vader,2021/04,bug;G (Gas Optimization)
5,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,3,Anyone can modify important state variables,264,https://github.com/code-423n4/2021-04-vader-findings/issues/264,vader,2021/04,bug;duplicate;3 (High Risk);filed
5,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Swap fee not applied,272,https://github.com/code-423n4/2021-04-vader-findings/issues/272,vader,2021/04,bug;1 (Low Risk)
5,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,3,Weird calculation of Vader/USD price,281,https://github.com/code-423n4/2021-04-vader-findings/issues/281,vader,2021/04,bug;duplicate;1 (Low Risk);sponsor disputed
5,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Some storage optimizations,292,https://github.com/code-423n4/2021-04-vader-findings/issues/292,vader,2021/04,bug;G (Gas Optimization);addressed
5,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Unused and Unnecessary code,312,https://github.com/code-423n4/2021-04-vader-findings/issues/312,vader,2021/04,bug;G (Gas Optimization)
5,gpersoon,gpersoon.eth,G,use of constants and immutable,16,https://github.com/code-423n4/2021-04-vader-findings/issues/16,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,gpersoon,gpersoon.eth,G,Some  unused code,17,https://github.com/code-423n4/2021-04-vader-findings/issues/17,vader,2021/04,bug;G (Gas Optimization);addressed
5,gpersoon,gpersoon.eth,G,Init function can be called by everyone,18,https://github.com/code-423n4/2021-04-vader-findings/issues/18,vader,2021/04,bug;2 (Med Risk);sponsor confirmed
5,gpersoon,gpersoon.eth,G,sortArray optimizable,19,https://github.com/code-423n4/2021-04-vader-findings/issues/19,vader,2021/04,bug;G (Gas Optimization)
5,gpersoon,gpersoon.eth,0,Not always reason at require,20,https://github.com/code-423n4/2021-04-vader-findings/issues/20,vader,2021/04,bug;sponsor acknowledged;0 (Non-critical)
5,gpersoon,gpersoon.eth,2,deploySynth of VADER and USDV is possible,21,https://github.com/code-423n4/2021-04-vader-findings/issues/21,vader,2021/04,bug;duplicate;2 (Med Risk);sponsor confirmed;filed;addressed
5,gpersoon,gpersoon.eth,G,Result of ERC20 transfer not checked,22,https://github.com/code-423n4/2021-04-vader-findings/issues/22,vader,2021/04,bug;G (Gas Optimization);sponsor acknowledged;addressed
5,gpersoon,gpersoon.eth,1,Circumvent several checks,23,https://github.com/code-423n4/2021-04-vader-findings/issues/23,vader,2021/04,bug;1 (Low Risk);sponsor disputed;judged invalid
5,gpersoon,gpersoon.eth,0,Functions with implicit return values,24,https://github.com/code-423n4/2021-04-vader-findings/issues/24,vader,2021/04,bug;sponsor acknowledged;0 (Non-critical)
5,gpersoon,gpersoon.eth,0,Different pragma solidity,25,https://github.com/code-423n4/2021-04-vader-findings/issues/25,vader,2021/04,bug;sponsor confirmed;0 (Non-critical)
5,gpersoon,gpersoon.eth,G,Optimization possible at _transfer,26,https://github.com/code-423n4/2021-04-vader-findings/issues/26,vader,2021/04,bug;G (Gas Optimization);sponsor disputed
5,gpersoon,gpersoon.eth,G,totalFees of Vether.sol can be calculated,27,https://github.com/code-423n4/2021-04-vader-findings/issues/27,vader,2021/04,bug;G (Gas Optimization);sponsor disputed;judged invalid
5,gpersoon,gpersoon.eth,G,Pay double fees in addExcluded of Vether.sol,28,https://github.com/code-423n4/2021-04-vader-findings/issues/28,vader,2021/04,bug;G (Gas Optimization);sponsor disputed
5,gpersoon,gpersoon.eth,1,Result of moveTokenToPools not used in swapWithSynthsWithLimit,29,https://github.com/code-423n4/2021-04-vader-findings/issues/29,vader,2021/04,bug;1 (Low Risk);sponsor disputed;judged invalid
5,gpersoon,gpersoon.eth,0,Use of deprecated now,30,https://github.com/code-423n4/2021-04-vader-findings/issues/30,vader,2021/04,bug;sponsor disputed;0 (Non-critical);judged invalid
5,gpersoon,gpersoon.eth,G,excludedCount of Vether.sol can be calculated,31,https://github.com/code-423n4/2021-04-vader-findings/issues/31,vader,2021/04,bug;duplicate;G (Gas Optimization);sponsor disputed
5,gpersoon,gpersoon.eth,2,totalBurnt might be wrong,32,https://github.com/code-423n4/2021-04-vader-findings/issues/32,vader,2021/04,bug;disagree with severity;1 (Low Risk);sponsor disputed
5,individual,0x934cf2cCE2128554FC07e20212b72fFeB63a3166,G,I really love The Tokens its hard to find a vulnerability,34,https://github.com/code-423n4/2021-04-vader-findings/issues/34,vader,2021/04,bug;G (Gas Optimization);addressed
5,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Unchecked return value from low-level call,10,https://github.com/code-423n4/2021-04-vader-findings/issues/10,vader,2021/04,bug;disagree with severity;2 (Med Risk);sponsor acknowledged;sponsor disputed;judged invalid
5,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,"wrong logic check in  in _getFee(address, address, uint){}",11,https://github.com/code-423n4/2021-04-vader-findings/issues/11,vader,2021/04,bug;disagree with severity;2 (Med Risk);sponsor disputed;judged invalid
5,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Lack of zero address validation in init() function,12,https://github.com/code-423n4/2021-04-vader-findings/issues/12,vader,2021/04,bug;1 (Low Risk);sponsor acknowledged
5,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Lack of zero address validation in init() function,13,https://github.com/code-423n4/2021-04-vader-findings/issues/13,vader,2021/04,bug;duplicate;1 (Low Risk);sponsor acknowledged
5,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,Public function that could be declared external,14,https://github.com/code-423n4/2021-04-vader-findings/issues/14,vader,2021/04,bug;G (Gas Optimization);sponsor confirmed;addressed
5,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,3,Anyone can propose new grants and new address proposal in Dao.sol,15,https://github.com/code-423n4/2021-04-vader-findings/issues/15,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor disputed;judged invalid
5,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Lack of emission of event after sensitive action,188,https://github.com/code-423n4/2021-04-vader-findings/issues/188,vader,2021/04,bug;duplicate;1 (Low Risk)
5,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,3,User can escape from paying fees,3,https://github.com/code-423n4/2021-04-vader-findings/issues/3,vader,2021/04,bug;duplicate;disagree with severity;3 (High Risk);sponsor disputed
5,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Zero amount of synth token can be minted,37,https://github.com/code-423n4/2021-04-vader-findings/issues/37,vader,2021/04,bug;disagree with severity;2 (Med Risk);sponsor confirmed;judged invalid
5,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Wrong logic check in _getFee(){},4,https://github.com/code-423n4/2021-04-vader-findings/issues/4,vader,2021/04,bug;disagree with severity;2 (Med Risk);sponsor disputed;judged invalid
5,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,"function isMember(address){}  will always return false value, irrespective of what address is",5,https://github.com/code-423n4/2021-04-vader-findings/issues/5,vader,2021/04,bug;duplicate;G (Gas Optimization);sponsor confirmed;addressed
5,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,3,events can be emitted  even after failed transaction,6,https://github.com/code-423n4/2021-04-vader-findings/issues/6,vader,2021/04,bug;disagree with severity;1 (Low Risk);sponsor disputed
5,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,State variable that can be declared as constant to save gas,7,https://github.com/code-423n4/2021-04-vader-findings/issues/7,vader,2021/04,bug;duplicate;G (Gas Optimization);sponsor confirmed;addressed
5,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,Decimal value of token should be of uint8 type not uint,8,https://github.com/code-423n4/2021-04-vader-findings/issues/8,vader,2021/04,bug;G (Gas Optimization);sponsor disputed;addressed;judged invalid
5,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,isMember(address member)  function never been called in another function to check wether given address is member or not,9,https://github.com/code-423n4/2021-04-vader-findings/issues/9,vader,2021/04,bug;duplicate;G (Gas Optimization);sponsor confirmed;addressed
5,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,3,Anyone Can Avoid All Vether Transfer Fees By Adding Their Address to the Vether ExcludedAddresses List.,189,https://github.com/code-423n4/2021-04-vader-findings/issues/189,vader,2021/04,bug;disagree with severity;3 (High Risk)
5,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,G,Gas Optimization: Remove Overflow Check in Vether.sol Since Solidity 0.8.x Disallows Implicit Overflows,190,https://github.com/code-423n4/2021-04-vader-findings/issues/190,vader,2021/04,bug;G (Gas Optimization)
5,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,G,Gas Optimization: Avoid Unnecessary Expensive SSTORE Calls In Vether.sol By Checking If _fee Is Non-Zero,191,https://github.com/code-423n4/2021-04-vader-findings/issues/191,vader,2021/04,bug;G (Gas Optimization);addressed
5,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,1,Vader.sol secondsPerEra Is Currently Initiaalized To One Second Instead Of One Day,192,https://github.com/code-423n4/2021-04-vader-findings/issues/192,vader,2021/04,bug;duplicate;3 (High Risk)
5,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,1,"The Calculation For nextEraTime Drifts, Causing Eras To Occur Further And Further Into The Future",193,https://github.com/code-423n4/2021-04-vader-findings/issues/193,vader,2021/04,bug;1 (Low Risk)
5,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,G,"Gas Optimization: in Vader.sol, Turn Variables _1m, maxSupply, and decimals, into Constants/Immutable variables",194,https://github.com/code-423n4/2021-04-vader-findings/issues/194,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,3,transferTo() When Used By A Smart Contract Wallet Tranfers The Relayer's Funds Rather Than The Wallet's Funds.,195,https://github.com/code-423n4/2021-04-vader-findings/issues/195,vader,2021/04,bug;duplicate;disagree with severity;3 (High Risk);sponsor acknowledged
5,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,1,Users Can Trivially Bypass Transfer Fees By Wrapping Vader/Vether Tokens,196,https://github.com/code-423n4/2021-04-vader-findings/issues/196,vader,2021/04,bug;1 (Low Risk);sponsor disputed;judged invalid
5,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,G,Gas Optimization: Vader.sol Unnecessary Conditional,197,https://github.com/code-423n4/2021-04-vader-findings/issues/197,vader,2021/04,bug;G (Gas Optimization);addressed
5,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,G,Gas Optimization: Vader.sol Unnecessary Conditional #2,198,https://github.com/code-423n4/2021-04-vader-findings/issues/198,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,G,Gas Optimization: Utils.sol Make An Unnecessary Multiplication And Division By An Identical Value,199,https://github.com/code-423n4/2021-04-vader-findings/issues/199,vader,2021/04,bug;G (Gas Optimization);addressed
5,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,G,Gas Optimization: DAO.sol Unnecessary Multiple Return Statements,200,https://github.com/code-423n4/2021-04-vader-findings/issues/200,vader,2021/04,bug;G (Gas Optimization);addressed
5,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,1,"Anyone Can Call Init() and Lock It Forever For Attack.sol, DAO.sol, Factory.sol, Pools.sol, Router.sol, Vault.sol, and Vader.sol",201,https://github.com/code-423n4/2021-04-vader-findings/issues/201,vader,2021/04,bug;duplicate;2 (Med Risk)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,deploySynth does not prevent token to be VADER or USDV,266,https://github.com/code-423n4/2021-04-vader-findings/issues/266,vader,2021/04,bug;duplicate;2 (Med Risk);addressed
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,mapping _isMember is never set,267,https://github.com/code-423n4/2021-04-vader-findings/issues/267,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,_recordBurn does not handle 0 _eth appropriately,269,https://github.com/code-423n4/2021-04-vader-findings/issues/269,vader,2021/04,bug;1 (Low Risk)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Hardcoded middle price index is not always accurate,270,https://github.com/code-423n4/2021-04-vader-findings/issues/270,vader,2021/04,bug;duplicate;1 (Low Risk)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,listAnchor sets _isCurated to true but forgets other parts of curation,271,https://github.com/code-423n4/2021-04-vader-findings/issues/271,vader,2021/04,bug;1 (Low Risk)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,curatePool emits Curated event no matter what,274,https://github.com/code-423n4/2021-04-vader-findings/issues/274,vader,2021/04,bug;1 (Low Risk)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Handle transfers of different ERC20 tokens,275,https://github.com/code-423n4/2021-04-vader-findings/issues/275,vader,2021/04,bug;duplicate;2 (Med Risk)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,calculations of upgradedAmount is not overflow protected,277,https://github.com/code-423n4/2021-04-vader-findings/issues/277,vader,2021/04,bug;1 (Low Risk)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,Anyone can set mapTokenMember_Units,278,https://github.com/code-423n4/2021-04-vader-findings/issues/278,vader,2021/04,bug;duplicate;3 (High Risk);filed
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,_recordBurn calls _updateEmission afterwards,279,https://github.com/code-423n4/2021-04-vader-findings/issues/279,vader,2021/04,bug;2 (Med Risk);sponsor disputed;judged invalid
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,_finalise inside finaliseProposal can never be triggered,280,https://github.com/code-423n4/2021-04-vader-findings/issues/280,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,"It is possible to vote, finalise and execute the same proposal several times",282,https://github.com/code-423n4/2021-04-vader-findings/issues/282,vader,2021/04,bug;duplicate;disagree with severity;2 (Med Risk);sponsor confirmed
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,ERC20 specification declares decimals as uint8 type,283,https://github.com/code-423n4/2021-04-vader-findings/issues/283,vader,2021/04,bug;0 (Non-critical);addressed
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,convert collects funds even when minting is disabled,284,https://github.com/code-423n4/2021-04-vader-findings/issues/284,vader,2021/04,bug;duplicate;3 (High Risk)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,[INFO] Code style suggestions,285,https://github.com/code-423n4/2021-04-vader-findings/issues/285,vader,2021/04,bug;0 (Non-critical)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Use immutable for constant variables,286,https://github.com/code-423n4/2021-04-vader-findings/issues/286,vader,2021/04,bug;G (Gas Optimization);addressed
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Extra useless steps to calculate pooledVADER and pooledUSDV ,287,https://github.com/code-423n4/2021-04-vader-findings/issues/287,vader,2021/04,bug;G (Gas Optimization);addressed
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,variable == false -> !variable,288,https://github.com/code-423n4/2021-04-vader-findings/issues/288,vader,2021/04,bug;G (Gas Optimization);addressed
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Extract mappings to a common struct,289,https://github.com/code-423n4/2021-04-vader-findings/issues/289,vader,2021/04,bug;G (Gas Optimization)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused variables,290,https://github.com/code-423n4/2021-04-vader-findings/issues/290,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache duplicate calls or storage access,291,https://github.com/code-423n4/2021-04-vader-findings/issues/291,vader,2021/04,bug;G (Gas Optimization)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Fee on transfer conditions,293,https://github.com/code-423n4/2021-04-vader-findings/issues/293,vader,2021/04,bug;G (Gas Optimization)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Identical if-else branches,294,https://github.com/code-423n4/2021-04-vader-findings/issues/294,vader,2021/04,bug;duplicate;2 (Med Risk)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,GRANT type never changes,295,https://github.com/code-423n4/2021-04-vader-findings/issues/295,vader,2021/04,bug;duplicate;G (Gas Optimization)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Flip functions can be refactored,296,https://github.com/code-423n4/2021-04-vader-findings/issues/296,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,uint can never be negative,297,https://github.com/code-423n4/2021-04-vader-findings/issues/297,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,totalSupply + amount > maxSupply,299,https://github.com/code-423n4/2021-04-vader-findings/issues/299,vader,2021/04,bug;G (Gas Optimization);addressed
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,excludedCount,300,https://github.com/code-423n4/2021-04-vader-findings/issues/300,vader,2021/04,bug;G (Gas Optimization)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,You don't need to recalculate exclusion fee every time,302,https://github.com/code-423n4/2021-04-vader-findings/issues/302,vader,2021/04,bug;G (Gas Optimization)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,token == arrayAnchors[i],303,https://github.com/code-423n4/2021-04-vader-findings/issues/303,vader,2021/04,bug;G (Gas Optimization);addressed
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused ID field in structs,304,https://github.com/code-423n4/2021-04-vader-findings/issues/304,vader,2021/04,bug;G (Gas Optimization);addressed
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,flashProof is not effective at the start,307,https://github.com/code-423n4/2021-04-vader-findings/issues/307,vader,2021/04,bug;1 (Low Risk)
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,repayDelay is not used anywhere,308,https://github.com/code-423n4/2021-04-vader-findings/issues/308,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,_addDebtToMember and _removeDebtFromMember separately tracks debt and collateral,309,https://github.com/code-423n4/2021-04-vader-findings/issues/309,vader,2021/04,bug;G (Gas Optimization);judged invalid
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,G,Variables can be declared constant,248,https://github.com/code-423n4/2021-04-vader-findings/issues/248,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,2,Events not emitted,250,https://github.com/code-423n4/2021-04-vader-findings/issues/250,vader,2021/04,bug;disagree with severity;1 (Low Risk);sponsor acknowledged;sponsor confirmed
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,0,Difference from whitepaper,251,https://github.com/code-423n4/2021-04-vader-findings/issues/251,vader,2021/04,bug;0 (Non-critical)
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,G,Gas improvement,253,https://github.com/code-423n4/2021-04-vader-findings/issues/253,vader,2021/04,bug;G (Gas Optimization)
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,G,Function can be simplified ,254,https://github.com/code-423n4/2021-04-vader-findings/issues/254,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,G,Not needed check for uint > 0,256,https://github.com/code-423n4/2021-04-vader-findings/issues/256,vader,2021/04,bug;G (Gas Optimization);addressed
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,1,The flashProof check can be bypassed at the start,259,https://github.com/code-423n4/2021-04-vader-findings/issues/259,vader,2021/04,bug;duplicate;1 (Low Risk)
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,0,Code different from comment,260,https://github.com/code-423n4/2021-04-vader-findings/issues/260,vader,2021/04,bug;duplicate;3 (High Risk)
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,1,Code is different from comment,261,https://github.com/code-423n4/2021-04-vader-findings/issues/261,vader,2021/04,bug;duplicate;3 (High Risk)
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,1,Token can be burn through transfer,262,https://github.com/code-423n4/2021-04-vader-findings/issues/262,vader,2021/04,bug;1 (Low Risk)
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,G,Function can be simplified,263,https://github.com/code-423n4/2021-04-vader-findings/issues/263,vader,2021/04,bug;G (Gas Optimization)
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,1,The decimals shoul be uint8,265,https://github.com/code-423n4/2021-04-vader-findings/issues/265,vader,2021/04,bug;duplicate;0 (Non-critical);addressed
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,2,You can vote for proposal already completed,268,https://github.com/code-423n4/2021-04-vader-findings/issues/268,vader,2021/04,bug;duplicate;disagree with severity;2 (Med Risk);sponsor confirmed
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,1,You can vote for proposal still not existent,273,https://github.com/code-423n4/2021-04-vader-findings/issues/273,vader,2021/04,bug;1 (Low Risk)
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,G,Function can be simplified,276,https://github.com/code-423n4/2021-04-vader-findings/issues/276,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,3,A proposal can be cancelled by anyone,298,https://github.com/code-423n4/2021-04-vader-findings/issues/298,vader,2021/04,bug;duplicate;3 (High Risk);addressed
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,G,Function can be simplified,301,https://github.com/code-423n4/2021-04-vader-findings/issues/301,vader,2021/04,bug;G (Gas Optimization)
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,G,Storage variables are never used,305,https://github.com/code-423n4/2021-04-vader-findings/issues/305,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,G,Variables can be declared constant,306,https://github.com/code-423n4/2021-04-vader-findings/issues/306,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,G,Functions can be declared external,310,https://github.com/code-423n4/2021-04-vader-findings/issues/310,vader,2021/04,bug;duplicate;G (Gas Optimization);addressed
5,s1m0,0x9b3E9e3E4a174d59279FC7cd268e035992412384,2,Tokens are vulnerable to double-spend allowance,311,https://github.com/code-423n4/2021-04-vader-findings/issues/311,vader,2021/04,bug;duplicate;1 (Low Risk);sponsor acknowledged
5,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Out-of-bound index access in function `getAnchorPrice`,313,https://github.com/code-423n4/2021-04-vader-findings/issues/313,vader,2021/04,bug;1 (Low Risk)
5,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Allowing duplicated anchors could cause bias on anchor price.,314,https://github.com/code-423n4/2021-04-vader-findings/issues/314,vader,2021/04,bug;disagree with severity;2 (Med Risk);sponsor acknowledged
5,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Unrestricted access to `lockUnits` allows an attacker to steal funds from any user.,315,https://github.com/code-423n4/2021-04-vader-findings/issues/315,vader,2021/04,bug;duplicate;3 (High Risk);filed
5,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Users may unintendedly remove liquidity under a phishing attack.,316,https://github.com/code-423n4/2021-04-vader-findings/issues/316,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor acknowledged
5,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Unrestricted `addLiquidity` could cause unintended results on front-end apps that listen to events.,317,https://github.com/code-423n4/2021-04-vader-findings/issues/317,vader,2021/04,bug;disagree with severity;3 (High Risk);sponsor acknowledged;filed
5,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Could early return in function `borrowForMember` if `_collateral` is 0.,318,https://github.com/code-423n4/2021-04-vader-findings/issues/318,vader,2021/04,bug;G (Gas Optimization);judged invalid
5,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Unnecessary `else if` statement in `swapWithSynthsWithLimit`,319,https://github.com/code-423n4/2021-04-vader-findings/issues/319,vader,2021/04,bug;G (Gas Optimization);addressed
5,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Unnecessary function calls in `addLiquidity`,320,https://github.com/code-423n4/2021-04-vader-findings/issues/320,vader,2021/04,bug;G (Gas Optimization)
5,toastedsteaksandwich,0xD8f6877aec57C3d70F458C54a1382dDc90522E7D,2,Transfer fee avoidance ,33,https://github.com/code-423n4/2021-04-vader-findings/issues/33,vader,2021/04,bug;duplicate;2 (Med Risk);sponsor disputed
5,toastedsteaksandwich,0xD8f6877aec57C3d70F458C54a1382dDc90522E7D,1,ERC20 race condition for allowances,35,https://github.com/code-423n4/2021-04-vader-findings/issues/35,vader,2021/04,bug;1 (Low Risk);sponsor acknowledged
5,toastedsteaksandwich,0xD8f6877aec57C3d70F458C54a1382dDc90522E7D,3,Vader.redeemToMember() vulnerable to front running,36,https://github.com/code-423n4/2021-04-vader-findings/issues/36,vader,2021/04,bug;disagree with severity;2 (Med Risk);sponsor disputed
8,adamavenir,123123,0,Test issue,1,https://github.com/code-423n4/2021-05-88mph-findings/issues/1,88mph,2021/05,bug;0 (Non-critical)
8,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Gas optimizations by using external over public ,18,https://github.com/code-423n4/2021-05-88mph-findings/issues/18,88mph,2021/05,bug;G (Gas Optimization);sponsor disputed;resolved
8,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Gas optimizations - storage over memory,19,https://github.com/code-423n4/2021-05-88mph-findings/issues/19,88mph,2021/05,bug;G (Gas Optimization);sponsor disputed;resolved
8,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Use openzeppelin ECDA for erecover,20,https://github.com/code-423n4/2021-05-88mph-findings/issues/20,88mph,2021/05,bug;1 (Low Risk);sponsor confirmed;resolved
8,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Gas optimizations - cache chainId,21,https://github.com/code-423n4/2021-05-88mph-findings/issues/21,88mph,2021/05,bug;invalid;G (Gas Optimization);sponsor disputed
8,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Gas optimizations - Structs over multiple mappings,22,https://github.com/code-423n4/2021-05-88mph-findings/issues/22,88mph,2021/05,bug;invalid;G (Gas Optimization);sponsor disputed
8,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Longer maturity leads to lower returns,14,https://github.com/code-423n4/2021-05-88mph-findings/issues/14,88mph,2021/05,bug;invalid;2 (Med Risk);sponsor disputed
8,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Anyone can withdraw vested amount on behalf of someone,15,https://github.com/code-423n4/2021-05-88mph-findings/issues/15,88mph,2021/05,bug;1 (Low Risk);sponsor acknowledged
8,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Incompatability with deflationary / fee-on-transfer tokens,16,https://github.com/code-423n4/2021-05-88mph-findings/issues/16,88mph,2021/05,bug;2 (Med Risk);sponsor acknowledged
8,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Potential manipulation of `moneyMarket.incomeIndex`,17,https://github.com/code-423n4/2021-05-88mph-findings/issues/17,88mph,2021/05,bug;invalid;2 (Med Risk);sponsor disputed
8,gpersoon,gpersoon.eth,1,Extra precautions in updateAndQuery,10,https://github.com/code-423n4/2021-05-88mph-findings/issues/10,88mph,2021/05,bug;1 (Low Risk);sponsor confirmed;resolved
8,gpersoon,gpersoon.eth,1,Add extra error message in_depositRecordData,7,https://github.com/code-423n4/2021-05-88mph-findings/issues/7,88mph,2021/05,bug;1 (Low Risk);sponsor acknowledged
8,gpersoon,gpersoon.eth,0,Multiple definitions of PRECISION,8,https://github.com/code-423n4/2021-05-88mph-findings/issues/8,88mph,2021/05,bug;0 (Non-critical);sponsor acknowledged
8,gpersoon,gpersoon.eth,G,Use immutable keyword,9,https://github.com/code-423n4/2021-05-88mph-findings/issues/9,88mph,2021/05,bug;G (Gas Optimization);sponsor disputed
8,Jmukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,"lack of input validation of timestamp in function  _depositRecordData() , Dinternest.sol",11,https://github.com/code-423n4/2021-05-88mph-findings/issues/11,88mph,2021/05,bug;invalid;1 (Low Risk);sponsor disputed
8,Jmukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,zero amount  of token value can be entered for creating vest object in  vesting.sol,12,https://github.com/code-423n4/2021-05-88mph-findings/issues/12,88mph,2021/05,bug;0 (Non-critical);sponsor acknowledged
8,Jmukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,lack of zero address validation in constructor,13,https://github.com/code-423n4/2021-05-88mph-findings/issues/13,88mph,2021/05,bug;0 (Non-critical);sponsor acknowledged
8,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,contract AaveMarket function setRewards has a misleading revert message,4,https://github.com/code-423n4/2021-05-88mph-findings/issues/4,88mph,2021/05,bug;0 (Non-critical);sponsor confirmed;resolved
8,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Missmatch between the comment and the actual code,5,https://github.com/code-423n4/2021-05-88mph-findings/issues/5,88mph,2021/05,bug;0 (Non-critical);sponsor confirmed;resolved
8,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,function payInterestToFunders does not have a re-entrancy modifier,6,https://github.com/code-423n4/2021-05-88mph-findings/issues/6,88mph,2021/05,bug;1 (Low Risk);sponsor confirmed;resolved
8,Sherlock,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,3,Not reverting on failing ERC20 transfer,2,https://github.com/code-423n4/2021-05-88mph-findings/issues/2,88mph,2021/05,invalid
8,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Unchecking the ownership of `mph` in function `distributeFundingRewards` could cause several critical functions to revert,23,https://github.com/code-423n4/2021-05-88mph-findings/issues/23,88mph,2021/05,bug;2 (Med Risk);sponsor confirmed;resolved
8,sockdrawermoney,123123,0,Double-checking 88mph form,3,https://github.com/code-423n4/2021-05-88mph-findings/issues/3,88mph,2021/05,invalid;0 (Non-critical)
11,0xRajeev,0x000000,G,TESTING SUBMISSION,1,https://github.com/code-423n4/2021-05-fairside-findings/issues/1,fairside,2021/05,bug;G (Gas Optimization)
11,0xRajeev,rajeev.eth,1,Use of ecrecover is susceptible to signature malleability,17,https://github.com/code-423n4/2021-05-fairside-findings/issues/17,fairside,2021/05,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
11,0xRajeev,rajeev.eth,1,Lack of zero-address checks for immutable addresses will force contract redeployment if zero-address used accidentally,18,https://github.com/code-423n4/2021-05-fairside-findings/issues/18,fairside,2021/05,bug;duplicate;1 (Low Risk)
11,0xRajeev,rajeev.eth,1,Missing use of DSMath functions may lead to underflows/overflows,19,https://github.com/code-423n4/2021-05-fairside-findings/issues/19,fairside,2021/05,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
11,0xRajeev,rajeev.eth,2,Incorrect use of _addTribute instead of _addGovernanceTribute,20,https://github.com/code-423n4/2021-05-fairside-findings/issues/20,fairside,2021/05,bug;2 (Med Risk);sponsor confirmed;resolved
11,0xRajeev,rajeev.eth,2,Call to swapExactTokensForETH in liquidateDai() will always fail ,21,https://github.com/code-423n4/2021-05-fairside-findings/issues/21,fairside,2021/05,bug;2 (Med Risk);sponsor confirmed;resolved
11,0xRajeev,rajeev.eth,1,Lack of input validation to enforce some minimum threshold on governanceThreshold,22,https://github.com/code-423n4/2021-05-fairside-findings/issues/22,fairside,2021/05,bug;1 (Low Risk);sponsor disputed
11,0xRajeev,rajeev.eth,2,setConvictionless can be front-run to prevent conviction reset,23,https://github.com/code-423n4/2021-05-fairside-findings/issues/23,fairside,2021/05,bug;2 (Med Risk);sponsor disputed
11,0xRajeev,rajeev.eth,1,Whitelist signatures can be replayed on contract redeployments on same/different chains,24,https://github.com/code-423n4/2021-05-fairside-findings/issues/24,fairside,2021/05,bug;1 (Low Risk);sponsor disputed
11,0xRajeev,rajeev.eth,1,Dangerous Solidity compiler pragma range that spans breaking versions,25,https://github.com/code-423n4/2021-05-fairside-findings/issues/25,fairside,2021/05,bug;duplicate;1 (Low Risk)
11,0xRajeev,rajeev.eth,3,Conviction scoring fails to initialize and bootstrap,26,https://github.com/code-423n4/2021-05-fairside-findings/issues/26,fairside,2021/05,bug;3 (High Risk);sponsor confirmed;resolved
11,0xRajeev,rajeev.eth,2,Conviction score is not updated during tokenization if funds are locked,27,https://github.com/code-423n4/2021-05-fairside-findings/issues/27,fairside,2021/05,bug;2 (Med Risk);sponsor disputed
11,0xRajeev,rajeev.eth,2,Conviction totals not updated during tokenization,28,https://github.com/code-423n4/2021-05-fairside-findings/issues/28,fairside,2021/05,bug;2 (Med Risk);sponsor confirmed;resolved
11,0xRajeev,rajeev.eth,3,Locked funds are debited twice from user during tokenization leading to fund loss,29,https://github.com/code-423n4/2021-05-fairside-findings/issues/29,fairside,2021/05,bug;3 (High Risk)
11,0xRajeev,rajeev.eth,3,Locked funds from tokenization are credited twice to user leading to protocol fund loss,30,https://github.com/code-423n4/2021-05-fairside-findings/issues/30,fairside,2021/05,bug;question;3 (High Risk);sponsor confirmed;resolved
11,0xRajeev,rajeev.eth,3,NFTs can never be redeemed back to their conviction scores leading to lock/loss of funds ,31,https://github.com/code-423n4/2021-05-fairside-findings/issues/31,fairside,2021/05,bug;3 (High Risk);sponsor confirmed;disagree with severity;resolved
11,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,2,Bug inside ABDKMathQuad library,32,https://github.com/code-423n4/2021-05-fairside-findings/issues/32,fairside,2021/05,bug;2 (Med Risk);sponsor acknowledged
11,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,2,pendingWithdrawals just increments,38,https://github.com/code-423n4/2021-05-fairside-findings/issues/38,fairside,2021/05,bug;duplicate;2 (Med Risk)
11,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Gas optimizations - Use storage instead of memory ,53,https://github.com/code-423n4/2021-05-fairside-findings/issues/53,fairside,2021/05,bug;G (Gas Optimization);sponsor disputed
11,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Gas optimizations - checkpoints from ERC20ConvictionScore,54,https://github.com/code-423n4/2021-05-fairside-findings/issues/54,fairside,2021/05,bug;question;G (Gas Optimization)
11,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Gas optimizations - Reduce reads in purchaseMembership method,55,https://github.com/code-423n4/2021-05-fairside-findings/issues/55,fairside,2021/05,bug;G (Gas Optimization);sponsor confirmed;resolved
11,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Missing verification of zero address,56,https://github.com/code-423n4/2021-05-fairside-findings/issues/56,fairside,2021/05,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
11,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Gas optimizations - Use external instead of public,57,https://github.com/code-423n4/2021-05-fairside-findings/issues/57,fairside,2021/05,bug;G (Gas Optimization);sponsor acknowledged
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,33,https://github.com/code-423n4/2021-05-fairside-findings/issues/33,fairside,2021/05,bug;duplicate;1 (Low Risk)
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`FairSideDAO.SECS_PER_BLOCK` is inaccurate,34,https://github.com/code-423n4/2021-05-fairside-findings/issues/34,fairside,2021/05,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Proposals might never reach quorum because of the voting threshold,35,https://github.com/code-423n4/2021-05-fairside-findings/issues/35,fairside,2021/05,bug;1 (Low Risk);sponsor disputed
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Wrong error message in `__castOffchainVotes`,36,https://github.com/code-423n4/2021-05-fairside-findings/issues/36,fairside,2021/05,bug;0 (Non-critical);sponsor confirmed;disagree with severity;resolved
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`validateVoteHash` does not confirm the vote result,37,https://github.com/code-423n4/2021-05-fairside-findings/issues/37,fairside,2021/05,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Changing `ERC20ConvictionScore.governanceThreshold` leads to temporarily broken state,39,https://github.com/code-423n4/2021-05-fairside-findings/issues/39,fairside,2021/05,bug;2 (Med Risk);sponsor disputed
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`ERC20ConvictionScore`'s `governanceDelta` should be subtracted when user is not a governor anymore,40,https://github.com/code-423n4/2021-05-fairside-findings/issues/40,fairside,2021/05,bug;3 (High Risk);sponsor confirmed;resolved
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`ERC20ConvictionScore._updateConvictionScore` uses stale credit score for `governanceDelta`,41,https://github.com/code-423n4/2021-05-fairside-findings/issues/41,fairside,2021/05,bug;question;3 (High Risk);sponsor confirmed;disagree with severity;resolved
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`ERC20ConvictionScore` allows transfers to special TOTAL_GOVERNANCE_SCORE address,42,https://github.com/code-423n4/2021-05-fairside-findings/issues/42,fairside,2021/05,bug;2 (Med Risk);sponsor confirmed;disagree with severity;resolved
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`ERC20ConvictionScore.tokenizeConviction` does not update total conviction & governance score,43,https://github.com/code-423n4/2021-05-fairside-findings/issues/43,fairside,2021/05,bug;duplicate;3 (High Risk)
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`ERC20ConvictionScore.tokenizeConviction` transfers locked balance from user twice,44,https://github.com/code-423n4/2021-05-fairside-findings/issues/44,fairside,2021/05,bug;duplicate;3 (High Risk)
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`ERC20ConvictionScore.acquireConviction` implements wrong governance checks,45,https://github.com/code-423n4/2021-05-fairside-findings/issues/45,fairside,2021/05,bug;2 (Med Risk);sponsor confirmed;resolved
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`TributeAccrual` missing out-of-bounds checks,46,https://github.com/code-423n4/2021-05-fairside-findings/issues/46,fairside,2021/05,bug;2 (Med Risk);sponsor disputed
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Usage of transfer,47,https://github.com/code-423n4/2021-05-fairside-findings/issues/47,fairside,2021/05,bug;duplicate;1 (Low Risk)
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`Withdrawable.withdraw` does not decrease `pendingWithdrawals`,48,https://github.com/code-423n4/2021-05-fairside-findings/issues/48,fairside,2021/05,bug;duplicate;3 (High Risk)
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,ChainLink price data could be stale,49,https://github.com/code-423n4/2021-05-fairside-findings/issues/49,fairside,2021/05,bug;duplicate;2 (Med Risk);disagree with severity
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`_calculateDeltaOfFSD` fails when called with negative `_reserveDelta`,50,https://github.com/code-423n4/2021-05-fairside-findings/issues/50,fairside,2021/05,bug;duplicate;3 (High Risk)
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Underflow in `FSD.burn` breaks withdrawals and could allow stealing reserve,51,https://github.com/code-423n4/2021-05-fairside-findings/issues/51,fairside,2021/05,bug;3 (High Risk);sponsor disputed
11,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing SafeMath,52,https://github.com/code-423n4/2021-05-fairside-findings/issues/52,fairside,2021/05,bug;1 (Low Risk);sponsor disputed
11,gpersoon,gpersoon.eth,0,non existing function returns,10,https://github.com/code-423n4/2021-05-fairside-findings/issues/10,fairside,2021/05,bug;0 (Non-critical);sponsor confirmed;resolved
11,gpersoon,gpersoon.eth,G,Improvements arctan,2,https://github.com/code-423n4/2021-05-fairside-findings/issues/2,fairside,2021/05,bug;G (Gas Optimization);sponsor acknowledged
11,gpersoon,gpersoon.eth,0,totalCostShareBenefit  vs totalCostShareBenefits ,3,https://github.com/code-423n4/2021-05-fairside-findings/issues/3,fairside,2021/05,bug;0 (Non-critical);sponsor acknowledged
11,gpersoon,gpersoon.eth,1,Constant values used inline,4,https://github.com/code-423n4/2021-05-fairside-findings/issues/4,fairside,2021/05,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
11,gpersoon,gpersoon.eth,1,SafeMath not used consistently in FSDNetwork.sol,5,https://github.com/code-423n4/2021-05-fairside-findings/issues/5,fairside,2021/05,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
11,gpersoon,gpersoon.eth,1,gracePeriod not increased after membership extension,6,https://github.com/code-423n4/2021-05-fairside-findings/issues/6,fairside,2021/05,bug;2 (Med Risk);sponsor confirmed;disagree with severity;resolved
11,gpersoon,gpersoon.eth,1, ERC20ConvictionScore transfer to self,7,https://github.com/code-423n4/2021-05-fairside-findings/issues/7,fairside,2021/05,bug;1 (Low Risk);sponsor disputed
11,gpersoon,gpersoon.eth,2,addRegistrationTributeGovernance shoud call_addGovernanceTribute ?,8,https://github.com/code-423n4/2021-05-fairside-findings/issues/8,fairside,2021/05,bug;duplicate;2 (Med Risk)
11,gpersoon,gpersoon.eth,1,Constant defined multiple times,9,https://github.com/code-423n4/2021-05-fairside-findings/issues/9,fairside,2021/05,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
11,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Eth may get stuck in contract ,58,https://github.com/code-423n4/2021-05-fairside-findings/issues/58,fairside,2021/05,bug;duplicate;2 (Med Risk)
11,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,lack of input validation of id in getConvictionScore(){},60,https://github.com/code-423n4/2021-05-fairside-findings/issues/60,fairside,2021/05,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
11,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Misleading error messages,11,https://github.com/code-423n4/2021-05-fairside-findings/issues/11,fairside,2021/05,bug;duplicate;0 (Non-critical)
11,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,ChainLink price data could be stale,12,https://github.com/code-423n4/2021-05-fairside-findings/issues/12,fairside,2021/05,bug;duplicate;1 (Low Risk)
11,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,withdraw() uses 'transfer',13,https://github.com/code-423n4/2021-05-fairside-findings/issues/13,fairside,2021/05,bug;duplicate;1 (Low Risk)
11,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,withdraw() does not decrease pendingWithdrawals,14,https://github.com/code-423n4/2021-05-fairside-findings/issues/14,fairside,2021/05,bug;duplicate;3 (High Risk)
11,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Repetitive storage access,15,https://github.com/code-423n4/2021-05-fairside-findings/issues/15,fairside,2021/05,bug;G (Gas Optimization);sponsor confirmed;resolved
11,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,function addRegistrationTributeGovernance should call _addGovernanceTribute not _addTribute.,16,https://github.com/code-423n4/2021-05-fairside-findings/issues/16,fairside,2021/05,bug;duplicate;2 (Med Risk)
11,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Check if variables are initialized,59,https://github.com/code-423n4/2021-05-fairside-findings/issues/59,fairside,2021/05,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
11,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,convictionless mapping is not used,61,https://github.com/code-423n4/2021-05-fairside-findings/issues/61,fairside,2021/05,bug;question;1 (Low Risk);sponsor confirmed;resolved
11,s1m0,0x7d379c4d48FB5bff0FDcb3efE14F7864aD46Dc10,1,Chainlink Price data could be stale,62,https://github.com/code-423n4/2021-05-fairside-findings/issues/62,fairside,2021/05,bug;duplicate;1 (Low Risk)
11,s1m0,0x7d379c4d48FB5bff0FDcb3efE14F7864aD46Dc10,3,The function liquidateDai() fails,63,https://github.com/code-423n4/2021-05-fairside-findings/issues/63,fairside,2021/05,bug;duplicate;3 (High Risk);disagree with severity
11,s1m0,0x7d379c4d48FB5bff0FDcb3efE14F7864aD46Dc10,0,Revert messages are wrong,64,https://github.com/code-423n4/2021-05-fairside-findings/issues/64,fairside,2021/05,bug;0 (Non-critical);sponsor confirmed;resolved
11,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Magic number is used multiple times in the contracts `FSDNetwork` and `ABC`,65,https://github.com/code-423n4/2021-05-fairside-findings/issues/65,fairside,2021/05,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
11,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Unlock pragma used in multiple contracts,66,https://github.com/code-423n4/2021-05-fairside-findings/issues/66,fairside,2021/05,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
11,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Solidity keyword `transfer` is used in the contract `Withdrawable`,67,https://github.com/code-423n4/2021-05-fairside-findings/issues/67,fairside,2021/05,bug;1 (Low Risk);sponsor confirmed;resolved
11,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Wrong function called in `addRegistrationTributeGovernance`,68,https://github.com/code-423n4/2021-05-fairside-findings/issues/68,fairside,2021/05,bug;duplicate;2 (Med Risk)
11,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Events in `FairSideDAO` are not indexed,69,https://github.com/code-423n4/2021-05-fairside-findings/issues/69,fairside,2021/05,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
11,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Should check return data from Chainlink aggregators,70,https://github.com/code-423n4/2021-05-fairside-findings/issues/70,fairside,2021/05,bug;2 (Med Risk);sponsor confirmed;resolved
11,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Gas optimization for the `rootPows` function in `FairSideFormula`,71,https://github.com/code-423n4/2021-05-fairside-findings/issues/71,fairside,2021/05,bug;question;G (Gas Optimization);sponsor confirmed;resolved
11,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,`pendingWithdrawals` not decreased after a `withdraw`,72,https://github.com/code-423n4/2021-05-fairside-findings/issues/72,fairside,2021/05,bug;3 (High Risk);sponsor confirmed;resolved
11,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Incorrect implementation of arctan in the contract `FairSideFormula`,73,https://github.com/code-423n4/2021-05-fairside-findings/issues/73,fairside,2021/05,bug;3 (High Risk);sponsor confirmed;resolved
11,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Users are charged twice the FDT tokens when tokenizing their convictions,74,https://github.com/code-423n4/2021-05-fairside-findings/issues/74,fairside,2021/05,bug;3 (High Risk);sponsor confirmed;disagree with severity;resolved
11,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,The variable `fShareRatio` is vulnerable to manipulation by flash minting and burning,75,https://github.com/code-423n4/2021-05-fairside-findings/issues/75,fairside,2021/05,bug;1 (Low Risk);sponsor confirmed;disagree with severity;resolved
11,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Flash minting and burning can reduce the paid fees when purchasing a membership or opening a cost share request,76,https://github.com/code-423n4/2021-05-fairside-findings/issues/76,fairside,2021/05,bug;question;2 (Med Risk);disagree with severity
11,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Incorrect type conversion in the contract `ABC` makes users unable to burn FSD tokens,77,https://github.com/code-423n4/2021-05-fairside-findings/issues/77,fairside,2021/05,bug;3 (High Risk);sponsor confirmed;resolved
11,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Incorrect type conversion in the contract `ABC` makes users unable to burn FSD tokens,78,https://github.com/code-423n4/2021-05-fairside-findings/issues/78,fairside,2021/05,bug;3 (High Risk);sponsor confirmed
7,0xRajeev,rajeev.eth,G,Unused storage variables,62,https://github.com/code-423n4/2021-05-nftx-findings/issues/62,nftx,2021/05,bug;G (Gas Optimization);Acknowledged;Confirmed
7,0xRajeev,rajeev.eth,G,Unused events,63,https://github.com/code-423n4/2021-05-nftx-findings/issues/63,nftx,2021/05,bug;duplicate;G (Gas Optimization);Confirmed
7,0xRajeev,rajeev.eth,G,Change function visibility from public to external,64,https://github.com/code-423n4/2021-05-nftx-findings/issues/64,nftx,2021/05,bug;G (Gas Optimization);Confirmed
7,0xRajeev,rajeev.eth,G,Move zero address check to place of assignment rather than use,65,https://github.com/code-423n4/2021-05-nftx-findings/issues/65,nftx,2021/05,bug;G (Gas Optimization)
7,0xRajeev,rajeev.eth,G,Combine calculation to reduce two SSTOREs/SLOADs to one,67,https://github.com/code-423n4/2021-05-nftx-findings/issues/67,nftx,2021/05,bug;G (Gas Optimization);Acknowledged
7,0xRajeev,rajeev.eth,G,Storage variable reads can be hoisted out of loops,70,https://github.com/code-423n4/2021-05-nftx-findings/issues/70,nftx,2021/05,bug;G (Gas Optimization);Confirmed
7,0xRajeev,rajeev.eth,1,Front-running setFees() could avoid fees,72,https://github.com/code-423n4/2021-05-nftx-findings/issues/72,nftx,2021/05,bug;1 (Low Risk);Confirmed
7,0xRajeev,rajeev.eth,1,Make setManager a two-step change to avoid vault administration freeze,73,https://github.com/code-423n4/2021-05-nftx-findings/issues/73,nftx,2021/05,bug;1 (Low Risk);Disputed
7,0xRajeev,rajeev.eth,2,NFTs initially of similar price may change significantly in value leading to unfair ownership changes,74,https://github.com/code-423n4/2021-05-nftx-findings/issues/74,nftx,2021/05,bug;2 (Med Risk);Disputed
7,0xRajeev,rajeev.eth,1,Missing call to afterRedeemHook in swapTo(),76,https://github.com/code-423n4/2021-05-nftx-findings/issues/76,nftx,2021/05,bug;duplicate;1 (Low Risk);Confirmed
7,0xRajeev,rajeev.eth,1,Front-running risk of direct redeem/swap operations,77,https://github.com/code-423n4/2021-05-nftx-findings/issues/77,nftx,2021/05,bug;1 (Low Risk);Acknowledged
7,0xRajeev,rajeev.eth,2,Randomization of NFTs returned in redeem/swap operations can be brute-forced,78,https://github.com/code-423n4/2021-05-nftx-findings/issues/78,nftx,2021/05,bug;2 (Med Risk);Acknowledged
7,0xRajeev,rajeev.eth,2,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,79,https://github.com/code-423n4/2021-05-nftx-findings/issues/79,nftx,2021/05,bug;2 (Med Risk);Confirmed
7,0xRajeev,rajeev.eth,1,Missing pool existence check in balanceOf,80,https://github.com/code-423n4/2021-05-nftx-findings/issues/80,nftx,2021/05,bug;1 (Low Risk);Confirmed
7,0xsomeone,0xa462fae8b85FFf172660c5D9e3C98C84691CA4d2,2,Fee Distribution Re-Entrancy,11,https://github.com/code-423n4/2021-05-nftx-findings/issues/11,nftx,2021/05,bug;2 (Med Risk);Confirmed
7,0xsomeone,0xa462fae8b85FFf172660c5D9e3C98C84691CA4d2,2,EIP-721 / EIP-1155 Re-Entrancy Vulnerability,8,https://github.com/code-423n4/2021-05-nftx-findings/issues/8,nftx,2021/05,bug;3 (High Risk);Confirmed
7,0xsomeone,0xa462fae8b85FFf172660c5D9e3C98C84691CA4d2,2,EIP-721 / EIP-1155 Re-Entrancy Vulnerability (Resubmission),9,https://github.com/code-423n4/2021-05-nftx-findings/issues/9,nftx,2021/05,bug;2 (Med Risk)
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Missing overflow check in `flashLoan`,43,https://github.com/code-423n4/2021-05-nftx-findings/issues/43,nftx,2021/05,bug;duplicate;3 (High Risk);Confirmed
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,44,https://github.com/code-423n4/2021-05-nftx-findings/issues/44,nftx,2021/05,bug;1 (Low Risk);Confirmed
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing usage of SafeMath,45,https://github.com/code-423n4/2021-05-nftx-findings/issues/45,nftx,2021/05,bug;1 (Low Risk);Confirmed
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`distribute` DoS on missing `receiveRewards` implementation,46,https://github.com/code-423n4/2021-05-nftx-findings/issues/46,nftx,2021/05,bug;3 (High Risk);Confirmed
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Unbounded iteration in `NFTXEligiblityManager.distribute` over `_feeReceivers`,47,https://github.com/code-423n4/2021-05-nftx-findings/issues/47,nftx,2021/05,bug;2 (Med Risk);Acknowledged
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unchecked external calls in `NFTXLPStaking`,48,https://github.com/code-423n4/2021-05-nftx-findings/issues/48,nftx,2021/05,bug;1 (Low Risk);Confirmed
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas optimization for `StakingTokenProvider.nameForStakingToken`,49,https://github.com/code-423n4/2021-05-nftx-findings/issues/49,nftx,2021/05,bug;G (Gas Optimization);Confirmed
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Missing access restriction on `NFTXVaultUpgradeable.finalizeFund`,50,https://github.com/code-423n4/2021-05-nftx-findings/issues/50,nftx,2021/05,bug;3 (High Risk);Disputed
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Manager can grief with fees,51,https://github.com/code-423n4/2021-05-nftx-findings/issues/51,nftx,2021/05,bug;2 (Med Risk)
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,LockIds not according to spec,52,https://github.com/code-423n4/2021-05-nftx-findings/issues/52,nftx,2021/05,documentation;0 (Non-critical);Confirmed
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Vault's `swapTo` can return the input tokens,53,https://github.com/code-423n4/2021-05-nftx-findings/issues/53,nftx,2021/05,bug;1 (Low Risk);Acknowledged
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Vault's flash loan not implemented according to EIP-3156,54,https://github.com/code-423n4/2021-05-nftx-findings/issues/54,nftx,2021/05,bug;1 (Low Risk);Confirmed
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`getPseudoRand` can be predicted,55,https://github.com/code-423n4/2021-05-nftx-findings/issues/55,nftx,2021/05,bug;duplicate;2 (Med Risk);Acknowledged
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`getRandomTokenIdFromFund` yields wrong probabilities for ERC1155,56,https://github.com/code-423n4/2021-05-nftx-findings/issues/56,nftx,2021/05,bug;duplicate;3 (High Risk);Acknowledged
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Potential bug with `reverseEligOnRedeem` / misleading name,57,https://github.com/code-423n4/2021-05-nftx-findings/issues/57,nftx,2021/05,bug;1 (Low Risk);Confirmed
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Events not fired,58,https://github.com/code-423n4/2021-05-nftx-findings/issues/58,nftx,2021/05,bug;0 (Non-critical);Confirmed
7,@cmichelio,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Tokens can get stuck in `NFTXMintRequestEligibility`,59,https://github.com/code-423n4/2021-05-nftx-findings/issues/59,nftx,2021/05,bug;2 (Med Risk);Confirmed
7,@maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,G,State variables that could be declared constant,18,https://github.com/code-423n4/2021-05-nftx-findings/issues/18,nftx,2021/05,bug;G (Gas Optimization);Disputed
7,@maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,G,Public function that could be declared external,22,https://github.com/code-423n4/2021-05-nftx-findings/issues/22,nftx,2021/05,bug;G (Gas Optimization);Confirmed
7,adamavenir,123123,0,Testing NFTX finding submission form,1,https://github.com/code-423n4/2021-05-nftx-findings/issues/1,nftx,2021/05,bug;0 (Non-critical)
7,adamavenir,123123,2,This is a test submission and can be deleted,10,https://github.com/code-423n4/2021-05-nftx-findings/issues/10,nftx,2021/05,bug;2 (Med Risk)
7,adamavenir,2323423,1,Testing submissions,23,https://github.com/code-423n4/2021-05-nftx-findings/issues/23,nftx,2021/05,bug;1 (Low Risk)
7,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,0,Using calldata when not appropiate,100,https://github.com/code-423n4/2021-05-nftx-findings/issues/100,nftx,2021/05,bug;0 (Non-critical);Disputed
7,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,__Ownable_init will be called twice in multiple Eligibility contracts,84,https://github.com/code-423n4/2021-05-nftx-findings/issues/84,nftx,2021/05,bug;1 (Low Risk);Confirmed
7,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Upgradeable contracts not Upgradeable,87,https://github.com/code-423n4/2021-05-nftx-findings/issues/87,nftx,2021/05,bug;1 (Low Risk);Disputed
7,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,3,Overflow could lead to stealing funds,90,https://github.com/code-423n4/2021-05-nftx-findings/issues/90,nftx,2021/05,bug;duplicate;3 (High Risk);Confirmed
7,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,3,Missing nonReentrant in swapTo,93,https://github.com/code-423n4/2021-05-nftx-findings/issues/93,nftx,2021/05,bug;duplicate;3 (High Risk);Confirmed
7,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,2,Missing SafeMath,95,https://github.com/code-423n4/2021-05-nftx-findings/issues/95,nftx,2021/05,bug;duplicate;2 (Med Risk);Confirmed
7,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Revert inside a loop,97,https://github.com/code-423n4/2021-05-nftx-findings/issues/97,nftx,2021/05,bug;G (Gas Optimization);Acknowledged
7,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Gas optimizations,98,https://github.com/code-423n4/2021-05-nftx-findings/issues/98,nftx,2021/05,bug;G (Gas Optimization);Confirmed
7,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,0,Emit order,99,https://github.com/code-423n4/2021-05-nftx-findings/issues/99,nftx,2021/05,bug;0 (Non-critical);Confirmed
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,114,https://github.com/code-423n4/2021-05-nftx-findings/issues/114,nftx,2021/05,bug;1 (Low Risk)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Vault factory owner can frontrun vault creators,115,https://github.com/code-423n4/2021-05-nftx-findings/issues/115,nftx,2021/05,bug;1 (Low Risk)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing events,116,https://github.com/code-423n4/2021-05-nftx-findings/issues/116,nftx,2021/05,bug;1 (Low Risk)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Wrong TimeLockERC20 event emitted,117,https://github.com/code-423n4/2021-05-nftx-findings/issues/117,nftx,2021/05,bug;3 (High Risk)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unbounded iteration,118,https://github.com/code-423n4/2021-05-nftx-findings/issues/118,nftx,2021/05,bug;1 (Low Risk)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Delegated transfer of owner fails,119,https://github.com/code-423n4/2021-05-nftx-findings/issues/119,nftx,2021/05,bug;2 (Med Risk)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Approval for NFT transfers is not removed after transfer,120,https://github.com/code-423n4/2021-05-nftx-findings/issues/120,nftx,2021/05,bug;3 (High Risk)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Can lock more tokens than in contract,121,https://github.com/code-423n4/2021-05-nftx-findings/issues/121,nftx,2021/05,bug;3 (High Risk)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Hypervisor.stake does not transfer tokens,122,https://github.com/code-423n4/2021-05-nftx-findings/issues/122,nftx,2021/05,bug;3 (High Risk)
7,gpersoon,gpersoon.eth,0,simpler way to suppress compiler warning,12,https://github.com/code-423n4/2021-05-nftx-findings/issues/12,nftx,2021/05,bug;0 (Non-critical);Acknowledged
7,gpersoon,gpersoon.eth,0,Not checked if within array bounds,13,https://github.com/code-423n4/2021-05-nftx-findings/issues/13,nftx,2021/05,bug;0 (Non-critical);Confirmed
7,gpersoon,gpersoon.eth,0,Missing documentation for flashloan paused number,14,https://github.com/code-423n4/2021-05-nftx-findings/issues/14,nftx,2021/05,documentation;0 (Non-critical);Confirmed
7,gpersoon,gpersoon.eth,0,immutable not used,15,https://github.com/code-423n4/2021-05-nftx-findings/issues/15,nftx,2021/05,bug;0 (Non-critical);Disputed
7,gpersoon,gpersoon.eth,1,getRandomTokenIdFromFund unfair for ERC1155 tokens,16,https://github.com/code-423n4/2021-05-nftx-findings/issues/16,nftx,2021/05,bug;1 (Low Risk)
7,gpersoon,gpersoon.eth,0,no check _rangeStart<=_rangeEnd,17,https://github.com/code-423n4/2021-05-nftx-findings/issues/17,nftx,2021/05,bug;0 (Non-critical);Confirmed
7,gpersoon,gpersoon.eth,G,withdrawNFTsTo & afterRedeemHook inefficient for ERC1155,19,https://github.com/code-423n4/2021-05-nftx-findings/issues/19,nftx,2021/05,bug;G (Gas Optimization);Acknowledged
7,gpersoon,gpersoon.eth,3,Missing allValidNFTs and afterRedeemHook with swapTo?,20,https://github.com/code-423n4/2021-05-nftx-findings/issues/20,nftx,2021/05,bug;3 (High Risk);Confirmed
7,gpersoon,gpersoon.eth,3,getRandomTokenIdFromFund not really random,21,https://github.com/code-423n4/2021-05-nftx-findings/issues/21,nftx,2021/05,bug;duplicate;3 (High Risk)
7,janbro,0xA2bA02db5c34B11C1Be0A25417851C9DfC5d4467,3,_sendForReceiver is vulnerable to reentrancy. This enables a receiver to drain the remaining fees to distribute. ,68,https://github.com/code-423n4/2021-05-nftx-findings/issues/68,nftx,2021/05,bug;3 (High Risk);Confirmed
7,janbro,0xA2bA02db5c34B11C1Be0A25417851C9DfC5d4467,2,A malicious receiver can cause another receiver to lose out on distributed fees by returning `false` for `tokensReceived` when receiveRewards is called on their receiver contract.,69,https://github.com/code-423n4/2021-05-nftx-findings/issues/69,nftx,2021/05,bug;2 (Med Risk);Confirmed
7,janbro,0xA2bA02db5c34B11C1Be0A25417851C9DfC5d4467,2,The direct redeem fee can be circumvented,71,https://github.com/code-423n4/2021-05-nftx-findings/issues/71,nftx,2021/05,bug;2 (Med Risk);Acknowledged
7,janbro,0xA2bA02db5c34B11C1Be0A25417851C9DfC5d4467,3,An attacker can cause an overflow in the flashLoan function,75,https://github.com/code-423n4/2021-05-nftx-findings/issues/75,nftx,2021/05,bug;duplicate;3 (High Risk);Confirmed
7,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Insecure randomness  in getPseudoRand(uint256 modulus){}  function,60,https://github.com/code-423n4/2021-05-nftx-findings/issues/60,nftx,2021/05,bug;2 (Med Risk);Acknowledged
7,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,Semantic Overloading in NFTXUpgradable.sol,61,https://github.com/code-423n4/2021-05-nftx-findings/issues/61,nftx,2021/05,bug;duplicate;0 (Non-critical);Confirmed
7,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,lack of checking of array length of parameters  in requesrMint()  and ClaimUnminted(),66,https://github.com/code-423n4/2021-05-nftx-findings/issues/66,nftx,2021/05,bug;G (Gas Optimization);Confirmed
7,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,unimplemented-functions in BeaconProxy.sol,81,https://github.com/code-423n4/2021-05-nftx-findings/issues/81,nftx,2021/05,bug;1 (Low Risk);Disputed
7,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,lack of zero address validation,82,https://github.com/code-423n4/2021-05-nftx-findings/issues/82,nftx,2021/05,bug;1 (Low Risk);Confirmed
7,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,Inconsistence use require() message,83,https://github.com/code-423n4/2021-05-nftx-findings/issues/83,nftx,2021/05,bug;0 (Non-critical);Acknowledged
7,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,3,NFTXLPStaking Is Subject To A Flash Loan Attack That Can Steal Nearly All Rewards/Fees That Have Accrued For A Particular Vault,88,https://github.com/code-423n4/2021-05-nftx-findings/issues/88,nftx,2021/05,bug;3 (High Risk);Disputed
7,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,0,Incorrect Type Specified For Argument _address In NFTXFeeDistributor.rescueTokens(),89,https://github.com/code-423n4/2021-05-nftx-findings/issues/89,nftx,2021/05,bug;0 (Non-critical);Confirmed
7,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,0,"Two Duplicate ""rescueTokens"" Functions In NFTXFeeDistributor ",91,https://github.com/code-423n4/2021-05-nftx-findings/issues/91,nftx,2021/05,bug;duplicate;0 (Non-critical);Confirmed
7,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,0,Magic Numbers Used In onlyOwnerIfPaused Could Lead To Developer Error,92,https://github.com/code-423n4/2021-05-nftx-findings/issues/92,nftx,2021/05,bug;0 (Non-critical);Acknowledged
7,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,1,"Any User Can Deploy Duplicate Vaults With Identical Assets and Symbols, Fragmenting Liquidity And Confusing Users",94,https://github.com/code-423n4/2021-05-nftx-findings/issues/94,nftx,2021/05,bug;1 (Low Risk);Acknowledged
7,jvaqa,0xEcb66CC9e366aF7351DbAA52Fa0b290200eC7532,0,uint256[25] ___gap argument in NFTXVaultUpgradeable Increases Deployment Costs For createVault(),96,https://github.com/code-423n4/2021-05-nftx-findings/issues/96,nftx,2021/05,bug;0 (Non-critical);Disputed
7,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,Weak PRNG ,2,https://github.com/code-423n4/2021-05-nftx-findings/issues/2,nftx,2021/05,bug;duplicate;2 (Med Risk);Acknowledged
7,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,Inconsistent solidity pragma,3,https://github.com/code-423n4/2021-05-nftx-findings/issues/3,nftx,2021/05,bug;1 (Low Risk)
7,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,RewardDistributionTokenUpgradeable should implement IRewardDistributionToken,4,https://github.com/code-423n4/2021-05-nftx-findings/issues/4,nftx,2021/05,bug;0 (Non-critical);Confirmed
7,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,Too similar naming,5,https://github.com/code-423n4/2021-05-nftx-findings/issues/5,nftx,2021/05,bug;0 (Non-critical);Disputed
7,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,SPDX License identifier missing,6,https://github.com/code-423n4/2021-05-nftx-findings/issues/6,nftx,2021/05,bug;0 (Non-critical);Acknowledged
7,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,Solidity version 0.6.8 requires explicit use of ABIEncoderV2,7,https://github.com/code-423n4/2021-05-nftx-findings/issues/7,nftx,2021/05,bug;1 (Low Risk)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Unused events,24,https://github.com/code-423n4/2021-05-nftx-findings/issues/24,nftx,2021/05,bug;0 (Non-critical);Confirmed
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,eligibilityManager is always 0x0,25,https://github.com/code-423n4/2021-05-nftx-findings/issues/25,nftx,2021/05,bug;1 (Low Risk);Confirmed
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,[INFO] function publicMint is for testing only,26,https://github.com/code-423n4/2021-05-nftx-findings/issues/26,nftx,2021/05,bug;0 (Non-critical)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,function receiveNFTs does not check if amount > 0,27,https://github.com/code-423n4/2021-05-nftx-findings/issues/27,nftx,2021/05,bug;2 (Med Risk);Confirmed
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,getPseudoRand is easily manipulatable,28,https://github.com/code-423n4/2021-05-nftx-findings/issues/28,nftx,2021/05,bug;duplicate;1 (Low Risk);Acknowledged
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,erc1155 are redeemed one by one,29,https://github.com/code-423n4/2021-05-nftx-findings/issues/29,nftx,2021/05,bug;duplicate;3 (High Risk)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,function swapTo doesn't have a re-entrancy modifier,30,https://github.com/code-423n4/2021-05-nftx-findings/issues/30,nftx,2021/05,bug;duplicate;3 (High Risk);Confirmed
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,flashLoan does not have a return statement,31,https://github.com/code-423n4/2021-05-nftx-findings/issues/31,nftx,2021/05,bug;1 (Low Risk);Confirmed
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Explicitly check _rangeEnd >= _rangeStart,32,https://github.com/code-423n4/2021-05-nftx-findings/issues/32,nftx,2021/05,bug;duplicate;0 (Non-critical)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,function flashLoan is vulnerable to overflow/underflow and maxFlashLoan is not used,33,https://github.com/code-423n4/2021-05-nftx-findings/issues/33,nftx,2021/05,bug;3 (High Risk);Confirmed
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,struct Config,34,https://github.com/code-423n4/2021-05-nftx-findings/issues/34,nftx,2021/05,bug;G (Gas Optimization);Acknowledged
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,struct with 1 field,35,https://github.com/code-423n4/2021-05-nftx-findings/issues/35,nftx,2021/05,bug;G (Gas Optimization);Acknowledged
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,accessing storage in a loop,36,https://github.com/code-423n4/2021-05-nftx-findings/issues/36,nftx,2021/05,bug;G (Gas Optimization);Disputed
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,immutable variables,37,https://github.com/code-423n4/2021-05-nftx-findings/issues/37,nftx,2021/05,bug;duplicate;G (Gas Optimization);Disputed
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Don't evaluate the same calculations over and over again,38,https://github.com/code-423n4/2021-05-nftx-findings/issues/38,nftx,2021/05,bug;G (Gas Optimization);Confirmed
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused variables,39,https://github.com/code-423n4/2021-05-nftx-findings/issues/39,nftx,2021/05,bug;G (Gas Optimization)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Join functions,40,https://github.com/code-423n4/2021-05-nftx-findings/issues/40,nftx,2021/05,bug;G (Gas Optimization);Confirmed
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused imports,41,https://github.com/code-423n4/2021-05-nftx-findings/issues/41,nftx,2021/05,bug;G (Gas Optimization);Confirmed
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Useless calculations when the flash fee is 0,42,https://github.com/code-423n4/2021-05-nftx-findings/issues/42,nftx,2021/05,bug;G (Gas Optimization);Disputed
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,mintRequests can remain 0 when the token is erc721,85,https://github.com/code-423n4/2021-05-nftx-findings/issues/85,nftx,2021/05,bug;duplicate;2 (Med Risk)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Reduce calls to vault.mintTo,86,https://github.com/code-423n4/2021-05-nftx-findings/issues/86,nftx,2021/05,bug;G (Gas Optimization);Acknowledged
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Contract `NFTXDeferEligibility` should not include a `constructor`,101,https://github.com/code-423n4/2021-05-nftx-findings/issues/101,nftx,2021/05,bug;duplicate;1 (Low Risk);Confirmed
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Contracts `NFTXDeferEligibility` and `NFTXUniqueEligibility` lack non-zero address checks during initialization.,102,https://github.com/code-423n4/2021-05-nftx-findings/issues/102,nftx,2021/05,bug;1 (Low Risk);Confirmed
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Out-of-bound index access in `NFTXMintRequestEligibility`,103,https://github.com/code-423n4/2021-05-nftx-findings/issues/103,nftx,2021/05,bug;1 (Low Risk);Confirmed
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,The `supportsInterface` function is not implemented in the `ERC1155HolderUpgradeable`,104,https://github.com/code-423n4/2021-05-nftx-findings/issues/104,nftx,2021/05,bug;1 (Low Risk);Confirmed
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Inconsistency between the usage of `transfer` and `transferFrom` in `NFTXLPStaking`,105,https://github.com/code-423n4/2021-05-nftx-findings/issues/105,nftx,2021/05,bug;1 (Low Risk);Confirmed
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Contract `StakingTokenProvider` lacks a non-zero address check during initialization,106,https://github.com/code-423n4/2021-05-nftx-findings/issues/106,nftx,2021/05,bug;1 (Low Risk);Confirmed
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Cannot set the variable `eligibilityManager` in `NFTXVaultFactoryUpgradeable`,107,https://github.com/code-423n4/2021-05-nftx-findings/issues/107,nftx,2021/05,bug;duplicate;1 (Low Risk);Confirmed
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,User can avoid paying `directRedeemFee` by passively controlling the output of `getPseudoRand`,108,https://github.com/code-423n4/2021-05-nftx-findings/issues/108,nftx,2021/05,bug;1 (Low Risk);Acknowledged
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Unused variables and events in `NFTXMintRequestEligibility`,109,https://github.com/code-423n4/2021-05-nftx-findings/issues/109,nftx,2021/05,bug;G (Gas Optimization);Confirmed
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Can declare `__NFTXEligibility_init_bytes` external to save gas,110,https://github.com/code-423n4/2021-05-nftx-findings/issues/110,nftx,2021/05,bug;duplicate;G (Gas Optimization);Confirmed
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Should use `SafeMath` in `NFTXFeeDistributor`,111,https://github.com/code-423n4/2021-05-nftx-findings/issues/111,nftx,2021/05,bug;duplicate;1 (Low Risk);Confirmed
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Unchecked return value of `transfer` in `NFTXFeeDistributor`,112,https://github.com/code-423n4/2021-05-nftx-findings/issues/112,nftx,2021/05,bug;duplicate;2 (Med Risk);Confirmed
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Potential reentrancy in the `swapTo` function of `NFTXVaultUpgradeable`,113,https://github.com/code-423n4/2021-05-nftx-findings/issues/113,nftx,2021/05,bug;duplicate;3 (High Risk);Confirmed
7,0xRajeev,rajeev.eth,1,Misnamed getNftById() function may lead to interface issues,26,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/26,visorfinance,2021/05,bug;invalid;1 (Low Risk)
7,0xRajeev,rajeev.eth,G,Change function visibility from public to external,27,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/27,visorfinance,2021/05,bug;G (Gas Optimization)
7,0xRajeev,rajeev.eth,G,Unused state variable and associated setter function,28,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/28,visorfinance,2021/05,bug;G (Gas Optimization)
7,0xRajeev,rajeev.eth,1,Lack of zero-address check on token/ETH destination,29,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/29,visorfinance,2021/05,bug;invalid;1 (Low Risk)
7,0xRajeev,rajeev.eth,G,Use a temporary variable to cache repetitive complex calculation,30,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/30,visorfinance,2021/05,bug;G (Gas Optimization)
7,0xRajeev,rajeev.eth,G,Use a temporary variable to cache repetitive storage reads,31,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/31,visorfinance,2021/05,bug;G (Gas Optimization)
7,0xRajeev,rajeev.eth,G,Breaking out of loop can save gas,32,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/32,visorfinance,2021/05,bug;G (Gas Optimization)
7,0xRajeev,rajeev.eth,2,Transaction-Order-Dependence race condition for approveTransferERC20(),33,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/33,visorfinance,2021/05,bug;2 (Med Risk)
7,0xRajeev,rajeev.eth,3,NFT transfer approvals are not removed and cannot be revoked thus leading to loss of NFT tokens,34,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/34,visorfinance,2021/05,bug;3 (High Risk)
7,0xRajeev,rajeev.eth,3,A previously timelocked NFT token becomes permanently stuck in vault if it’s ever moved back into the vault,35,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/35,visorfinance,2021/05,bug;3 (High Risk)
7,0xRajeev,rajeev.eth,2,Incorrect event emitted,36,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/36,visorfinance,2021/05,bug;1 (Low Risk)
7,0xRajeev,rajeev.eth,1,Timelock keys are never removed after unlocks,37,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/37,visorfinance,2021/05,bug;1 (Low Risk)
7,0xRajeev,rajeev.eth,3,Lack of address input validation will lock tokens in contract,38,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/38,visorfinance,2021/05,bug;invalid;3 (High Risk)
7,0xRajeev,rajeev.eth,3,Unhandled return value of transferFrom in timeLockERC20() could lead to fund loss for recipients,39,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/39,visorfinance,2021/05,bug;2 (Med Risk)
7,0xRajeev,rajeev.eth,1,Incorrect and unnecessary logic in delegatedTransferERC20(),40,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/40,visorfinance,2021/05,bug;1 (Low Risk)
7,0xRajeev,rajeev.eth,1, lock/unlock signatures may be replayed on a different contract/chain,41,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/41,visorfinance,2021/05,bug;invalid;1 (Low Risk)
7,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Gas optimizations by using external over public ,51,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/51,visorfinance,2021/05,bug;G (Gas Optimization)
7,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Gas optimization storage NFTs,52,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/52,visorfinance,2021/05,bug;G (Gas Optimization)
7,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Gas optimizations - storage over memory,53,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/53,visorfinance,2021/05,bug;G (Gas Optimization)
7,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Possible wrong calculation of locked balance,54,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/54,visorfinance,2021/05,bug;invalid;1 (Low Risk)
7,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Gas optimizations - calculation getBalanceLocked,55,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/55,visorfinance,2021/05,bug;G (Gas Optimization)
7,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Possible wrong calculations ,56,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/56,visorfinance,2021/05,bug;invalid;1 (Low Risk)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,42,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/42,visorfinance,2021/05,bug;invalid;1 (Low Risk)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Vault factory owner can frontrun vault creators,43,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/43,visorfinance,2021/05,bug;invalid;1 (Low Risk)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing events,44,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/44,visorfinance,2021/05,bug;0 (Non-critical)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Wrong TimeLockERC20 event emitted,45,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/45,visorfinance,2021/05,bug;1 (Low Risk)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unbounded iteration,46,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/46,visorfinance,2021/05,bug;duplicate;3 (High Risk)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Delegated transfer of owner fails,47,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/47,visorfinance,2021/05,bug;duplicate;1 (Low Risk)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Approval for NFT transfers is not removed after transfer,48,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/48,visorfinance,2021/05,bug;3 (High Risk)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Can lock more tokens than in contract,49,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/49,visorfinance,2021/05,bug;invalid;3 (High Risk)
7,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Hypervisor.stake does not transfer tokens,50,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/50,visorfinance,2021/05,bug;invalid;3 (High Risk)
7,gpersoon,gpersoon.eth,3,Denial of service for NFT's,16,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/16,visorfinance,2021/05,bug;3 (High Risk)
7,gpersoon,gpersoon.eth,1,rageQuit doesn't support all functionality,17,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/17,visorfinance,2021/05,bug;invalid;1 (Low Risk)
7,gpersoon,gpersoon.eth,G,setURI / uri not used,18,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/18,visorfinance,2021/05,bug;G (Gas Optimization)
7,gpersoon,gpersoon.eth,2,transferERC721 doesn't clean timelockERC721s,19,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/19,visorfinance,2021/05,bug;2 (Med Risk)
7,gpersoon,gpersoon.eth,1,nftApprovals not reset in transferERC721,20,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/20,visorfinance,2021/05,bug;duplicate;3 (High Risk)
7,gpersoon,gpersoon.eth,1,delegatedTransferERC20 can revert when called by owner,21,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/21,visorfinance,2021/05,bug;1 (Low Risk)
7,gpersoon,gpersoon.eth,G,Same keccak256 evaluated 3x,22,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/22,visorfinance,2021/05,bug;duplicate;G (Gas Optimization)
7,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,unused return value from transferfrom() function,23,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/23,visorfinance,2021/05,bug;2 (Med Risk)
7,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,"missing condition in addTemplate(bytes32 name, address template), visorFactory.sol",24,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/24,visorfinance,2021/05,bug;1 (Low Risk)
7,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,"lack of zero address validation in constructor of RewardToken.sol,  stakingToken.sol",25,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/25,visorfinance,2021/05,bug;invalid;0 (Non-critical)
7,ninek,asdfasdf,1,bug title,1,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/1,visorfinance,2021/05,bug;1 (Low Risk)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,sandwich approveTransferERC20,10,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/10,visorfinance,2021/05,bug;1 (Low Risk)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,function transferERC721 does not reset nftApprovals if the msg.sender is a delegate,11,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/11,visorfinance,2021/05,bug;duplicate;3 (High Risk)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,function delegatedTransferERC20 reduces the erc20Approvals by amount even when the sender is an owner,12,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/12,visorfinance,2021/05,bug;1 (Low Risk)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,function transferERC721 does not delete timelockERC721s if the token was among locked tokens,13,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/13,visorfinance,2021/05,bug;3 (High Risk)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,introduce a max lock time limit,14,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/14,visorfinance,2021/05,bug;0 (Non-critical)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,timelockERC721Keys are not deleted after unlocking the token,15,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/15,visorfinance,2021/05,bug;duplicate;3 (High Risk)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,function timeLockERC20 does not check the return value of transferFrom,5,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/5,visorfinance,2021/05,bug;2 (Med Risk)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,function timeLockERC721 emits event TimeLockERC20,6,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/6,visorfinance,2021/05,bug;0 (Non-critical)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,anyone can call onERC721Received,7,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/7,visorfinance,2021/05,bug;3 (High Risk)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,getNftById is querying against the index not id,8,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/8,visorfinance,2021/05,bug;0 (Non-critical)
7,paulius.eth,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,Unbounded loops,9,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/9,visorfinance,2021/05,bug;3 (High Risk)
7,Sherlock,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,3,Not reverting on failing ERC20 transfer,3,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/3,visorfinance,2021/05,bug;duplicate;2 (Med Risk)
7,Sherlock,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,2,"getBalanceLocked on line 202 of Visor.sol doesn't return the total balance, just the highest balance",57,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/57,visorfinance,2021/05,bug;invalid;2 (Med Risk)
7,Sherlock,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,2,"timeUnlockERC20() on line 619 of Visor.sol, able to unlock locked erc20 tokens",58,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/58,visorfinance,2021/05,bug;invalid;2 (Med Risk)
7,Sherlock,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,2,"delegatedTransferERC20() on line 442 of Visor.sol, able to get locked erc20 tokens",59,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/59,visorfinance,2021/05,bug;invalid;2 (Med Risk)
7,Sherlock,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,2,Locking the same funds twice in lock() on line 269 of Visor.sol,60,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/60,visorfinance,2021/05,bug;1 (Low Risk)
7,Sherlock,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,2,Locking the same funds twice in lock() on line 269 of Visor.sol,61,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/61,visorfinance,2021/05,bug;1 (Low Risk)
7,Sherlock,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,G,Removing NFT could exceed block size limit,62,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/62,visorfinance,2021/05,bug;duplicate;3 (High Risk)
7,Sherlock,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,G,Internal GetBalanceLocked call can exceed block size limit,63,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/63,visorfinance,2021/05,bug;G (Gas Optimization)
7,Sherlock,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,G,Getting NFT could exceed block size limit,64,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/64,visorfinance,2021/05,bug;3 (High Risk)
7,Sherlock,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,G,timelockERC721Keys could exceed the block size limit,65,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/65,visorfinance,2021/05,bug;2 (Med Risk)
7,Sherlock,0x94BcE1057E95D61A9754A238cddBdA0989787154,3,"Anyone can call onERC721Received() function and spam the array ""nfts""",66,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/66,visorfinance,2021/05,bug;3 (High Risk)
7,Sherlock,0x94BcE1057E95D61A9754A238cddBdA0989787154,1,"The function onERC721Received () allows writing duplicates in the array ""nfts"". Another functions dealing with this array do not expect duplicates met.",67,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/67,visorfinance,2021/05,bug;1 (Low Risk)
7,Sherlock,0x94BcE1057E95D61A9754A238cddBdA0989787154,2,"It is expected that some functions may require either Owner or Delegate as callers. Now only three access options are available: onlyOwner, onlyDelegate, anyone. ",68,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/68,visorfinance,2021/05,bug;invalid;2 (Med Risk)
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Unchecked return value of `transferFrom` in function `timeLockERC20`,69,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/69,visorfinance,2021/05,bug;2 (Med Risk)
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Events are not indexed,70,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/70,visorfinance,2021/05,bug;0 (Non-critical)
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Unused imported interface `IVisorService`,71,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/71,visorfinance,2021/05,bug;0 (Non-critical)
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Unbounded loop in function `transferERC721`,72,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/72,visorfinance,2021/05,bug;duplicate;2 (Med Risk)
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Functions `getTimeLockCount` and `getTimeLockERC721Count` should not count on unlocked tokens,73,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/73,visorfinance,2021/05,bug;1 (Low Risk)
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,A user could transfer the approved NFT several times,74,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/74,visorfinance,2021/05,bug;duplicate;3 (High Risk)
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Lack of non-zero check in function `timeLockERC20` and `timeLockERC721` could cause funds being locked,75,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/75,visorfinance,2021/05,bug;duplicate;invalid;1 (Low Risk)
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Owner or approved users could not transfer time-locked NFTs using `transferERC721`,76,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/76,visorfinance,2021/05,bug;invalid;1 (Low Risk)
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Should reset `timelockERC721s` after calling `transferERC721`,77,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/77,visorfinance,2021/05,bug;duplicate;2 (Med Risk)
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Deflationary tokens are not considered in time-locked ERC20 functions,78,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/78,visorfinance,2021/05,bug;1 (Low Risk)
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Double-spend allowance is possible in the function `approveTransferERC20`,79,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/79,visorfinance,2021/05,bug;duplicate;1 (Low Risk)
7,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Unbounded loop in `_removeNft` could lead to a griefing/DOS attack,80,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/80,visorfinance,2021/05,bug;3 (High Risk)
7,sockdrawermoney,123123,1,Double-checking Visor Finance form,2,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/2,visorfinance,2021/05,invalid
7,toastedsteaksandwich,0xD8f6877aec57C3d70F458C54a1382dDc90522E7D,3,Unbounded for-loop bricks transferERC721() ,4,https://github.com/code-423n4/2021-05-visorfinance-findings/issues/4,visorfinance,2021/05,bug;3 (High Risk)
12,0xRajeev,asdfadf,0,TEST ISSUE,1,https://github.com/code-423n4/2021-05-yield-findings/issues/1,yield,2021/05,bug;0 (Non-critical)
12,0xRajeev,rajeev.eth,1,Missing checks on debt max/min limits could cause pour to revert,41,https://github.com/code-423n4/2021-05-yield-findings/issues/41,yield,2021/05,bug;1 (Low Risk);sponsor confirmed
12,0xRajeev,rajeev.eth,1,Missing zero-address validations ,42,https://github.com/code-423n4/2021-05-yield-findings/issues/42,yield,2021/05,bug;1 (Low Risk);sponsor disputed
12,0xRajeev,rajeev.eth,2,Potential griefing with DoS by front-running vault creation with same vaultID,43,https://github.com/code-423n4/2021-05-yield-findings/issues/43,yield,2021/05,bug;2 (Med Risk);sponsor confirmed
12,0xRajeev,rajeev.eth,2,Uninitialized or Incorrectly set auctionInterval may lead to liquidation engine livelock,44,https://github.com/code-423n4/2021-05-yield-findings/issues/44,yield,2021/05,bug;2 (Med Risk);sponsor confirmed;disagree with severity
12,0xRajeev,rajeev.eth,2,Violation of implicit constraints in batched operations may break protocol assumptions,45,https://github.com/code-423n4/2021-05-yield-findings/issues/45,yield,2021/05,bug;2 (Med Risk);sponsor disputed
12,0xRajeev,rajeev.eth,1,Return values of batch operations are ignored,46,https://github.com/code-423n4/2021-05-yield-findings/issues/46,yield,2021/05,bug;1 (Low Risk);sponsor confirmed
12,0xRajeev,rajeev.eth,1,borrowingFee is not initialized,47,https://github.com/code-423n4/2021-05-yield-findings/issues/47,yield,2021/05,bug;1 (Low Risk);sponsor disputed
12,0xRajeev,rajeev.eth,1,Missing sender address check in receive() may lead to locked Ether,48,https://github.com/code-423n4/2021-05-yield-findings/issues/48,yield,2021/05,bug;1 (Low Risk);sponsor confirmed
12,0xRajeev,rajeev.eth,1,Missing reentrancy guard and contract existence check for modules ,49,https://github.com/code-423n4/2021-05-yield-findings/issues/49,yield,2021/05,bug;1 (Low Risk);sponsor acknowledged
12,0xRajeev,rajeev.eth,1,Prevent the use of LOCK in setRoleAdmin to instead force the use of lockRole,50,https://github.com/code-423n4/2021-05-yield-findings/issues/50,yield,2021/05,bug;1 (Low Risk);sponsor confirmed
12,0xRajeev,rajeev.eth,1,The account parameter in renounceRole() is unnecessary and may cause delays in emergencies ,51,https://github.com/code-423n4/2021-05-yield-findings/issues/51,yield,2021/05,bug;1 (Low Risk);sponsor disputed
12,0xRajeev,rajeev.eth,1,Incompatibility With Rebasing/Deflationary/Inflationary tokens,52,https://github.com/code-423n4/2021-05-yield-findings/issues/52,yield,2021/05,bug;1 (Low Risk);sponsor acknowledged
12,0xRajeev,rajeev.eth,1,flashFeeFactor is uninitialized at declaration leading to zero-fee flash loans enabled by default ,53,https://github.com/code-423n4/2021-05-yield-findings/issues/53,yield,2021/05,bug;1 (Low Risk);sponsor confirmed;disagree with severity
12,0xRajeev,rajeev.eth,1,Multiple compiler versions allowing a wide range from 0.5.0 to >=0.8.0,54,https://github.com/code-423n4/2021-05-yield-findings/issues/54,yield,2021/05,bug;1 (Low Risk);sponsor confirmed
12,0xRajeev,rajeev.eth,1,Anyone can create a fake pool to trick unauthorized front-ends,55,https://github.com/code-423n4/2021-05-yield-findings/issues/55,yield,2021/05,bug;1 (Low Risk);sponsor disputed
12,0xsomeone,0xa462fae8b85FFf172660c5D9e3C98C84691CA4d2,3,Duplication of Balance,16,https://github.com/code-423n4/2021-05-yield-findings/issues/16,yield,2021/05,bug;3 (High Risk);sponsor confirmed
12,0xsomeone,0xa462fae8b85FFf172660c5D9e3C98C84691CA4d2,3,Contract Factory Replace,17,https://github.com/code-423n4/2021-05-yield-findings/issues/17,yield,2021/05,bug;3 (High Risk);sponsor disputed
12,0xsomeone,0xa462fae8b85FFf172660c5D9e3C98C84691CA4d2,3,Join Factory Contract Replacement,18,https://github.com/code-423n4/2021-05-yield-findings/issues/18,yield,2021/05,bug;3 (High Risk);sponsor disputed
12,axic,axic.gitcoin.eth,0,Reliance on undocumented quirk in RevertMsgExtractor,63,https://github.com/code-423n4/2021-05-yield-findings/issues/63,yield,2021/05,bug;0 (Non-critical);sponsor acknowledged
12,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,G,Gas optimizations - using external over public ,60,https://github.com/code-423n4/2021-05-yield-findings/issues/60,yield,2021/05,bug;G (Gas Optimization);sponsor confirmed
12,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,In method _update on Pool.sol - Divide before multiply,61,https://github.com/code-423n4/2021-05-yield-findings/issues/61,yield,2021/05,bug;1 (Low Risk);sponsor confirmed
12,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,1,Missing zero address validation in transfer method,62,https://github.com/code-423n4/2021-05-yield-findings/issues/62,yield,2021/05,bug;duplicate;1 (Low Risk);sponsor disputed
12,a_delamo,0x69e833869584D7e468751ED5e7d23ADAdCAA3D00,2,Witch lock vault waiting for better price,64,https://github.com/code-423n4/2021-05-yield-findings/issues/64,yield,2021/05,bug;2 (Med Risk);sponsor disputed
12,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Implicit unsafe math,24,https://github.com/code-423n4/2021-05-yield-findings/issues/24,yield,2021/05,bug;1 (Low Risk);sponsor confirmed;disagree with severity
12,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Inefficient Witch buy,25,https://github.com/code-423n4/2021-05-yield-findings/issues/25,yield,2021/05,bug;G (Gas Optimization);sponsor acknowledged
12,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Uniswap Oracle uses wrong prices,26,https://github.com/code-423n4/2021-05-yield-findings/issues/26,yield,2021/05,bug;2 (Med Risk);sponsor acknowledged
12,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Flashloan griefing attack,27,https://github.com/code-423n4/2021-05-yield-findings/issues/27,yield,2021/05,bug;2 (Med Risk);sponsor disputed
12,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,FYTokens can be minted for free,28,https://github.com/code-423n4/2021-05-yield-findings/issues/28,yield,2021/05,bug;3 (High Risk);sponsor disputed
12,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`Cauldron.addSeries` does not check if fyToken is already in use,29,https://github.com/code-423n4/2021-05-yield-findings/issues/29,yield,2021/05,bug;1 (Low Risk);sponsor disputed
12,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Undercollateralized vaults' owner can be overwritten,30,https://github.com/code-423n4/2021-05-yield-findings/issues/30,yield,2021/05,bug;duplicate;2 (Med Risk);sponsor confirmed
12,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Vaults are in liquidation forever instead of just for auction length,31,https://github.com/code-423n4/2021-05-yield-findings/issues/31,yield,2021/05,bug;3 (High Risk);sponsor disputed
12,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unsafe call to `.decimals`,32,https://github.com/code-423n4/2021-05-yield-findings/issues/32,yield,2021/05,bug;1 (Low Risk);sponsor confirmed
12,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unlocked Pragma,33,https://github.com/code-423n4/2021-05-yield-findings/issues/33,yield,2021/05,bug;duplicate;1 (Low Risk);sponsor confirmed
12,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`FlashBorrower` uses non-safe ERC20 functions,34,https://github.com/code-423n4/2021-05-yield-findings/issues/34,yield,2021/05,bug;1 (Low Risk);sponsor disputed
12,gpersoon,gpersoon.eth,1,Different solidity pramas,10,https://github.com/code-423n4/2021-05-yield-findings/issues/10,yield,2021/05,bug;duplicate;1 (Low Risk);sponsor confirmed
12,gpersoon,gpersoon.eth,G,gas improvements toAsciiString,11,https://github.com/code-423n4/2021-05-yield-findings/issues/11,yield,2021/05,bug;G (Gas Optimization);sponsor confirmed
12,gpersoon,gpersoon.eth,0,"Use "".selector"" instead of hex number",12,https://github.com/code-423n4/2021-05-yield-findings/issues/12,yield,2021/05,bug;0 (Non-critical);sponsor confirmed
12,gpersoon,gpersoon.eth,1,"Constants ""chi"" and ""rate""",13,https://github.com/code-423n4/2021-05-yield-findings/issues/13,yield,2021/05,bug;0 (Non-critical);sponsor confirmed;disagree with severity
12,gpersoon,gpersoon.eth,0,PoolFactory and JoinFactory very similar,14,https://github.com/code-423n4/2021-05-yield-findings/issues/14,yield,2021/05,bug;0 (Non-critical);sponsor confirmed
12,gpersoon,gpersoon.eth,0,Avoid assembly in getRevertMsg ,15,https://github.com/code-423n4/2021-05-yield-findings/issues/15,yield,2021/05,bug;0 (Non-critical);sponsor confirmed
12,gpersoon,gpersoon.eth,2,YieldMath.sol / Log2: >= or > ?,2,https://github.com/code-423n4/2021-05-yield-findings/issues/2,yield,2021/05,bug;3 (High Risk);sponsor confirmed;disagree with severity
12,gpersoon,gpersoon.eth,0,Use constants for numbers,3,https://github.com/code-423n4/2021-05-yield-findings/issues/3,yield,2021/05,bug;0 (Non-critical);sponsor confirmed
12,gpersoon,gpersoon.eth,2,auth only works well with external functions,4,https://github.com/code-423n4/2021-05-yield-findings/issues/4,yield,2021/05,bug;2 (Med Risk);sponsor confirmed;disagree with severity
12,gpersoon,gpersoon.eth,3,auth collision possible,5,https://github.com/code-423n4/2021-05-yield-findings/issues/5,yield,2021/05,bug;3 (High Risk);sponsor acknowledged;disagree with severity
12,gpersoon,gpersoon.eth,G,unnecessary store,56,https://github.com/code-423n4/2021-05-yield-findings/issues/56,yield,2021/05,bug;G (Gas Optimization);sponsor confirmed
12,gpersoon,gpersoon.eth,2,Unauthorized functions in Ladle.sol and PoolRouter.sol,6,https://github.com/code-423n4/2021-05-yield-findings/issues/6,yield,2021/05,bug;2 (Med Risk);sponsor disputed
12,gpersoon,gpersoon.eth,3,stir to self,7,https://github.com/code-423n4/2021-05-yield-findings/issues/7,yield,2021/05,bug;duplicate;3 (High Risk);sponsor confirmed
12,gpersoon,gpersoon.eth,2,Witch can't give back vault after 2x grab,8,https://github.com/code-423n4/2021-05-yield-findings/issues/8,yield,2021/05,bug;2 (Med Risk);sponsor confirmed
12,gpersoon,gpersoon.eth,0,Several todos left in the code,9,https://github.com/code-423n4/2021-05-yield-findings/issues/9,yield,2021/05,bug;0 (Non-critical);sponsor confirmed
12,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,'peek' and 'get' are identical (non-transactional),19,https://github.com/code-423n4/2021-05-yield-findings/issues/19,yield,2021/05,bug;G (Gas Optimization);sponsor confirmed;disagree with severity
12,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Useless 'auth' modifier in setSources,20,https://github.com/code-423n4/2021-05-yield-findings/issues/20,yield,2021/05,bug;0 (Non-critical);sponsor confirmed
12,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,enum TokenType is never used,21,https://github.com/code-423n4/2021-05-yield-findings/issues/21,yield,2021/05,bug;0 (Non-critical);sponsor confirmed
12,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,setDebtLimits should check that max >= min,22,https://github.com/code-423n4/2021-05-yield-findings/issues/22,yield,2021/05,bug;duplicate;1 (Low Risk);sponsor confirmed
12,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,_burnInternal always returns 0 for fy tokens returned,35,https://github.com/code-423n4/2021-05-yield-findings/issues/35,yield,2021/05,bug;1 (Low Risk);sponsor confirmed
12,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,no need for transferToPool to be payable,36,https://github.com/code-423n4/2021-05-yield-findings/issues/36,yield,2021/05,bug;0 (Non-critical);sponsor confirmed
12,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,UniswapV3Oracle function _peek is public,37,https://github.com/code-423n4/2021-05-yield-findings/issues/37,yield,2021/05,bug;0 (Non-critical);sponsor confirmed
12,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,ERC20 approve is vulnerable to the front-running,38,https://github.com/code-423n4/2021-05-yield-findings/issues/38,yield,2021/05,bug;1 (Low Risk);sponsor disputed
12,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,buyFYToken and buyBase do not reimburse leftovers,39,https://github.com/code-423n4/2021-05-yield-findings/issues/39,yield,2021/05,bug;2 (Med Risk);sponsor disputed
12,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,external function transferToPool is pretty useless,57,https://github.com/code-423n4/2021-05-yield-findings/issues/57,yield,2021/05,bug;1 (Low Risk);sponsor confirmed
12,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,function redeem should return 'redeemed' amount,58,https://github.com/code-423n4/2021-05-yield-findings/issues/58,yield,2021/05,bug;1 (Low Risk);sponsor confirmed
12,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,function build could explicitly check that seriesId is not 0,59,https://github.com/code-423n4/2021-05-yield-findings/issues/59,yield,2021/05,bug;0 (Non-critical);sponsor confirmed
12,s1m0,0xc18bc1A4e7C978053a42feb1B792F3a725C73A28,0,Mining ,40,https://github.com/code-423n4/2021-05-yield-findings/issues/40,yield,2021/05,bug;0 (Non-critical)
12,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Unlock pragma used in multiple contracts,65,https://github.com/code-423n4/2021-05-yield-findings/issues/65,yield,2021/05,bug;duplicate;1 (Low Risk);sponsor confirmed
12,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Add non-zero address check of recipients when transferring funds,66,https://github.com/code-423n4/2021-05-yield-findings/issues/66,yield,2021/05,bug;duplicate;1 (Low Risk);sponsor disputed
12,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,0,Unnecessary `unchecked` keyword is used in `FYToken`,67,https://github.com/code-423n4/2021-05-yield-findings/issues/67,yield,2021/05,bug;0 (Non-critical);sponsor confirmed
12,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Using stale cToken exchange rate,68,https://github.com/code-423n4/2021-05-yield-findings/issues/68,yield,2021/05,bug;1 (Low Risk);sponsor acknowledged
12,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,User can redeem more tokens by artificially increasing the chi accrual,69,https://github.com/code-423n4/2021-05-yield-findings/issues/69,yield,2021/05,bug;2 (Med Risk);sponsor acknowledged
12,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Possible DoS attack when creating `Joins` in `Wand`,70,https://github.com/code-423n4/2021-05-yield-findings/issues/70,yield,2021/05,bug;2 (Med Risk);sponsor confirmed
12,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Users can avoid paying borrowing interest after the fyToken matures,71,https://github.com/code-423n4/2021-05-yield-findings/issues/71,yield,2021/05,bug;2 (Med Risk);sponsor confirmed
17,0xRajeev,rajeev.eth,G,Upgrading the solc compiler to >=0.8 may save gas,28,https://github.com/code-423n4/2021-06-gro-findings/issues/28,gro,2021/06,bug;G (Gas Optimization);sponsor acknowledged
17,0xRajeev,rajeev.eth,G,Avoid use of state variables in event emissions to save gas,29,https://github.com/code-423n4/2021-06-gro-findings/issues/29,gro,2021/06,bug;G (Gas Optimization);sponsor acknowledged
17,0xRajeev,rajeev.eth,G,Using access lists can save gas due to EIP-2930 post-Berlin hard fork,30,https://github.com/code-423n4/2021-06-gro-findings/issues/30,gro,2021/06,bug;G (Gas Optimization);sponsor acknowledged
17,0xRajeev,rajeev.eth,G,Caching repeatedly read state variables in local variables can save gas,31,https://github.com/code-423n4/2021-06-gro-findings/issues/31,gro,2021/06,bug;G (Gas Optimization);sponsor confirmed
17,0xRajeev,rajeev.eth,G,"Simplifying logic will save at least 4200-11,500 gas in deposit flow",32,https://github.com/code-423n4/2021-06-gro-findings/issues/32,gro,2021/06,bug;G (Gas Optimization);sponsor confirmed
17,0xRajeev,rajeev.eth,G,Rearranging order of state variable declarations to pack them will save storage slots and gas,33,https://github.com/code-423n4/2021-06-gro-findings/issues/33,gro,2021/06,bug;G (Gas Optimization);sponsor confirmed
17,0xRajeev,rajeev.eth,G,Removing unnecessary initializations can save gas,34,https://github.com/code-423n4/2021-06-gro-findings/issues/34,gro,2021/06,bug;G (Gas Optimization);sponsor acknowledged
17,0xRajeev,rajeev.eth,G,Unnecessary zero-address check,35,https://github.com/code-423n4/2021-06-gro-findings/issues/35,gro,2021/06,bug;G (Gas Optimization);sponsor confirmed
17,0xRajeev,rajeev.eth,G,Moving logic to where required will save >=6800 gas on deposit/withdraw flows,36,https://github.com/code-423n4/2021-06-gro-findings/issues/36,gro,2021/06,bug;G (Gas Optimization);sponsor confirmed
17,0xRajeev,rajeev.eth,G,Changing function visibility from public to external/internal/private can save gas,37,https://github.com/code-423n4/2021-06-gro-findings/issues/37,gro,2021/06,bug;G (Gas Optimization);sponsor confirmed
17,0xRajeev,rajeev.eth,G,Removing unnecessary check can save gas in withdraw flow,38,https://github.com/code-423n4/2021-06-gro-findings/issues/38,gro,2021/06,bug;G (Gas Optimization);sponsor confirmed
17,0xRajeev,rajeev.eth,G,Removing unnecessary length check for static array can save gas,39,https://github.com/code-423n4/2021-06-gro-findings/issues/39,gro,2021/06,bug;duplicate;G (Gas Optimization)
17,0xRajeev,rajeev.eth,G,Unnecessary copying of memory variables can save gas,40,https://github.com/code-423n4/2021-06-gro-findings/issues/40,gro,2021/06,bug;duplicate;G (Gas Optimization)
17,0xRajeev,rajeev.eth,G,Removing unused return values can save gas,41,https://github.com/code-423n4/2021-06-gro-findings/issues/41,gro,2021/06,bug;G (Gas Optimization);sponsor confirmed
17,0xRajeev,rajeev.eth,G,Removing redundant code can save gas,42,https://github.com/code-423n4/2021-06-gro-findings/issues/42,gro,2021/06,bug;G (Gas Optimization);sponsor confirmed
17,0xRajeev,rajeev.eth,G,Removing unnecessary lpToken.balanceOf can save 4700+ gas,43,https://github.com/code-423n4/2021-06-gro-findings/issues/43,gro,2021/06,bug;G (Gas Optimization);sponsor confirmed
17,0xRajeev,rajeev.eth,G,Simpler logic can save gas,44,https://github.com/code-423n4/2021-06-gro-findings/issues/44,gro,2021/06,bug;G (Gas Optimization);sponsor confirmed
17,0xRajeev,rajeev.eth,1,Missing input validation on _feeToken in DepositHandler constructor and setFeeToken(),45,https://github.com/code-423n4/2021-06-gro-findings/issues/45,gro,2021/06,bug;0 (Non-critical);sponsor confirmed;disagree with severity
17,0xRajeev,rajeev.eth,2,Single-step process for critical ownership transfer is risky,46,https://github.com/code-423n4/2021-06-gro-findings/issues/46,gro,2021/06,bug;0 (Non-critical);sponsor confirmed;disagree with severity
17,0xRajeev,rajeev.eth,1,Missing emits for declared events,47,https://github.com/code-423n4/2021-06-gro-findings/issues/47,gro,2021/06,bug;1 (Low Risk);sponsor confirmed
17,0xRajeev,rajeev.eth,1,Having only owner unpause/restart is risky,48,https://github.com/code-423n4/2021-06-gro-findings/issues/48,gro,2021/06,bug;1 (Low Risk);sponsor acknowledged
17,0xRajeev,rajeev.eth,2,Missing zero-address check and event parameter for _emergencyHandler,49,https://github.com/code-423n4/2021-06-gro-findings/issues/49,gro,2021/06,bug;0 (Non-critical);sponsor confirmed;disagree with severity
17,0xRajeev,rajeev.eth,1,Uninitialized vaults/addresses will lead to reverts,50,https://github.com/code-423n4/2021-06-gro-findings/issues/50,gro,2021/06,bug;1 (Low Risk);sponsor acknowledged
17,0xRajeev,rajeev.eth,2,Safe addresses can only be added but not removed,51,https://github.com/code-423n4/2021-06-gro-findings/issues/51,gro,2021/06,bug;2 (Med Risk);sponsor confirmed;disagree with severity
17,0xRajeev,rajeev.eth,2,Flash loan risk mitigation is optional and not robust enough,52,https://github.com/code-423n4/2021-06-gro-findings/issues/52,gro,2021/06,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
17,0xRajeev,rajeev.eth,1,The use of tx.origin for smart contract safe list is risky and not generic,53,https://github.com/code-423n4/2021-06-gro-findings/issues/53,gro,2021/06,bug;1 (Low Risk);sponsor acknowledged
17,0xRajeev,rajeev.eth,2,Enabling preventSmartContracts may lead to lock/loss of funds,54,https://github.com/code-423n4/2021-06-gro-findings/issues/54,gro,2021/06,bug;1 (Low Risk);sponsor disputed
17,0xRajeev,rajeev.eth,2,Critical protocol parameter changes should have time-delayed enforcement,55,https://github.com/code-423n4/2021-06-gro-findings/issues/55,gro,2021/06,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
17,0xRajeev,rajeev.eth,2,Critical protocol parameter configuration/changes should have sanity/threshold checks,56,https://github.com/code-423n4/2021-06-gro-findings/issues/56,gro,2021/06,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
17,0xRajeev,rajeev.eth,1,Emergency disabling can only be done one stablecoin at a time,57,https://github.com/code-423n4/2021-06-gro-findings/issues/57,gro,2021/06,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
17,0xRajeev,rajeev.eth,1,Incorrect error strings used may cause confusion,58,https://github.com/code-423n4/2021-06-gro-findings/issues/58,gro,2021/06,bug;0 (Non-critical);sponsor confirmed;disagree with severity
17,0xRajeev,rajeev.eth,3,Vault assets can be migrated to an arbitrary address at anytime by owner,59,https://github.com/code-423n4/2021-06-gro-findings/issues/59,gro,2021/06,bug;1 (Low Risk);sponsor confirmed;disagree with severity
17,0xRajeev,rajeev.eth,1,Whitelist addition/removal is done unconditionally,60,https://github.com/code-423n4/2021-06-gro-findings/issues/60,gro,2021/06,bug;0 (Non-critical);disagree with severity
17,0xRajeev,rajeev.eth,1,Missing zero-address checks in constructors,61,https://github.com/code-423n4/2021-06-gro-findings/issues/61,gro,2021/06,bug;duplicate;1 (Low Risk)
17,0xRajeev,rajeev.eth,1,Big fish check ignores fee for classification during withdrawals,62,https://github.com/code-423n4/2021-06-gro-findings/issues/62,gro,2021/06,bug;invalid;1 (Low Risk);sponsor disputed
17,0xRajeev,rajeev.eth,1,Unused declaration may be an indication of missing logic,63,https://github.com/code-423n4/2021-06-gro-findings/issues/63,gro,2021/06,bug;duplicate;0 (Non-critical)
17,0xRajeev,rajeev.eth,1,Use of deprecated Chainlink API,64,https://github.com/code-423n4/2021-06-gro-findings/issues/64,gro,2021/06,bug;duplicate;2 (Med Risk)
17,0xRajeev,rajeev.eth,1,Use of uninitialized value and unclear/unused logic,65,https://github.com/code-423n4/2021-06-gro-findings/issues/65,gro,2021/06,bug;1 (Low Risk);sponsor confirmed
17,0xRajeev,rajeev.eth,2,Unauthorized rebalanceTrigger calls may allow one to exploit arbitrage opportunity and put system at risk,66,https://github.com/code-423n4/2021-06-gro-findings/issues/66,gro,2021/06,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
17,0xRajeev,rajeev.eth,1,Stricter than needed inequalities may affect borderline scenarios,67,https://github.com/code-423n4/2021-06-gro-findings/issues/67,gro,2021/06,bug;1 (Low Risk);sponsor acknowledged
17,0xRajeev,rajeev.eth,1,Return value of Curve APIs are ignored,68,https://github.com/code-423n4/2021-06-gro-findings/issues/68,gro,2021/06,bug;invalid;1 (Low Risk);sponsor disputed
17,0xRajeev,rajeev.eth,3,Incorrect use of operator leads to arbitrary minting of GVT tokens,69,https://github.com/code-423n4/2021-06-gro-findings/issues/69,gro,2021/06,bug;3 (High Risk);sponsor confirmed
17,0xsomeone,0x24c392904C97B880cfDfAB03a6E678dcfe8405Ca,1,pDefi,70,https://github.com/code-423n4/2021-06-gro-findings/issues/70,gro,2021/06,bug;invalid;1 (Low Risk)
17,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,G,Unnecessary check array.length == N_COINS,26,https://github.com/code-423n4/2021-06-gro-findings/issues/26,gro,2021/06,bug;duplicate;G (Gas Optimization)
17,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,G,Unnecessary duplication of array,27,https://github.com/code-423n4/2021-06-gro-findings/issues/27,gro,2021/06,bug;G (Gas Optimization);sponsor confirmed
17,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,1,"For chainlink oracle, use latestRoundData instead of latestAnswer to run more validations",81,https://github.com/code-423n4/2021-06-gro-findings/issues/81,gro,2021/06,bug;duplicate;2 (Med Risk)
17,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,G,Two SafeApprove calls when it could be just one,84,https://github.com/code-423n4/2021-06-gro-findings/issues/84,gro,2021/06,bug;G (Gas Optimization);sponsor acknowledged
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Underlying token percents should add up to 100% / `exposure.sortVaultsByDelta` tracking does not work,100,https://github.com/code-423n4/2021-06-gro-findings/issues/100,gro,2021/06,bug;1 (Low Risk);sponsor disputed
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`Exposure.sortVaultsByDelta` does not work for N_COINS != 3,101,https://github.com/code-423n4/2021-06-gro-findings/issues/101,gro,2021/06,bug;0 (Non-critical);disagree with severity;sponsor disputed
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,`Allocaiton.calcProtocolExposureDelta` gas optimization,102,https://github.com/code-423n4/2021-06-gro-findings/issues/102,gro,2021/06,bug;G (Gas Optimization);sponsor confirmed
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`Buoy3Pool.safetyCheck` can underflow,103,https://github.com/code-423n4/2021-06-gro-findings/issues/103,gro,2021/06,bug;duplicate;3 (High Risk);disagree with severity
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`Buoy3Pool.safetyCheck` is not precise and has some assumptions,104,https://github.com/code-423n4/2021-06-gro-findings/issues/104,gro,2021/06,bug;3 (High Risk);sponsor confirmed;disagree with severity
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`Buoy3Pool._updateRatios` unsafe math,105,https://github.com/code-423n4/2021-06-gro-findings/issues/105,gro,2021/06,bug;duplicate;1 (Low Risk)
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Usage of deprecated ChainLink API in `Buoy3Pool`,106,https://github.com/code-423n4/2021-06-gro-findings/issues/106,gro,2021/06,bug;2 (Med Risk);sponsor confirmed
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Early user can break minting,107,https://github.com/code-423n4/2021-06-gro-findings/issues/107,gro,2021/06,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Rational actors will just set themselves as referral,108,https://github.com/code-423n4/2021-06-gro-findings/issues/108,gro,2021/06,bug;1 (Low Risk);disagree with severity;sponsor disputed
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`calcProtocolWithdraw` withdraws more than necessary?,109,https://github.com/code-423n4/2021-06-gro-findings/issues/109,gro,2021/06,bug;invalid;1 (Low Risk);sponsor disputed
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`LifeGuard3Pool.investSingle` can be sandwich attacked,111,https://github.com/code-423n4/2021-06-gro-findings/issues/111,gro,2021/06,bug;invalid;2 (Med Risk);disagree with severity;sponsor disputed
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`BaseVaultAdaptor.strategiesLength` must be updated manually,112,https://github.com/code-423n4/2021-06-gro-findings/issues/112,gro,2021/06,bug;duplicate;0 (Non-critical)
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,BaseVaultAdaptor withdraws too much,113,https://github.com/code-423n4/2021-06-gro-findings/issues/113,gro,2021/06,bug;invalid;1 (Low Risk);sponsor disputed
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,BaseVaultAdaptor assumes `sharePrice` is always in underlying decimals,114,https://github.com/code-423n4/2021-06-gro-findings/issues/114,gro,2021/06,bug;2 (Med Risk);sponsor confirmed
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,All vaults must be private?,115,https://github.com/code-423n4/2021-06-gro-findings/issues/115,gro,2021/06,bug;invalid;1 (Low Risk);sponsor disputed
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,90,https://github.com/code-423n4/2021-06-gro-findings/issues/90,gro,2021/06,bug;1 (Low Risk);sponsor acknowledged
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,RebasingGToken emits same events on transfer,91,https://github.com/code-423n4/2021-06-gro-findings/issues/91,gro,2021/06,bug;G (Gas Optimization);sponsor acknowledged
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unused Vault events,92,https://github.com/code-423n4/2021-06-gro-findings/issues/92,gro,2021/06,bug;duplicate;1 (Low Risk)
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unused LifeGuard3Pool events,93,https://github.com/code-423n4/2021-06-gro-findings/issues/93,gro,2021/06,bug;duplicate;1 (Low Risk)
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unused Controller events,94,https://github.com/code-423n4/2021-06-gro-findings/issues/94,gro,2021/06,bug;duplicate;1 (Low Risk)
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Loss of precision,95,https://github.com/code-423n4/2021-06-gro-findings/issues/95,gro,2021/06,bug;0 (Non-critical);sponsor disputed
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Hardcoded 99 as deadcoin,96,https://github.com/code-423n4/2021-06-gro-findings/issues/96,gro,2021/06,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Wrong min amount check in `withdrawByStablecoin`,97,https://github.com/code-423n4/2021-06-gro-findings/issues/97,gro,2021/06,bug;0 (Non-critical);sponsor confirmed;disagree with severity
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`Insurance.getVaultDeltaForDeposit` returns wrong `investDelta`,98,https://github.com/code-423n4/2021-06-gro-findings/issues/98,gro,2021/06,bug;duplicate;1 (Low Risk)
17,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`Exposure.sortVaultsByDelta` can underflow,99,https://github.com/code-423n4/2021-06-gro-findings/issues/99,gro,2021/06,bug;invalid;3 (High Risk);disagree with severity
17,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,G,Return False early in isValidBigFish,82,https://github.com/code-423n4/2021-06-gro-findings/issues/82,gro,2021/06,bug;G (Gas Optimization);sponsor acknowledged
17,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,0,Inconsistent usage of exponentiation for constants,83,https://github.com/code-423n4/2021-06-gro-findings/issues/83,gro,2021/06,bug;0 (Non-critical);sponsor confirmed
17,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,0,Inconsistent Usage of CONSTANT naming in Buoy3Pool,85,https://github.com/code-423n4/2021-06-gro-findings/issues/85,gro,2021/06,bug;duplicate;0 (Non-critical);sponsor confirmed
17,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,G,Uneccessary loop in Buoy3Pool._stableToLp,89,https://github.com/code-423n4/2021-06-gro-findings/issues/89,gro,2021/06,bug;duplicate;G (Gas Optimization)
17,gpersoon,gpersoon.eth,3,distributeStrategyGainLoss can be abused,1,https://github.com/code-423n4/2021-06-gro-findings/issues/1,gro,2021/06,bug;duplicate;3 (High Risk);sponsor confirmed
17,gpersoon,gpersoon.eth,0,setFeeToken doesn't check index,10,https://github.com/code-423n4/2021-06-gro-findings/issues/10,gro,2021/06,bug;0 (Non-critical);sponsor acknowledged
17,gpersoon,gpersoon.eth,1,setUnderlyingTokenPercent should check percentages,11,https://github.com/code-423n4/2021-06-gro-findings/issues/11,gro,2021/06,bug;duplicate;1 (Low Risk)
17,gpersoon,gpersoon.eth,0,redundant check of array length,12,https://github.com/code-423n4/2021-06-gro-findings/issues/12,gro,2021/06,bug;0 (Non-critical);sponsor confirmed
17,gpersoon,gpersoon.eth,0,Outdated comment at calculateWithdrawalAmountsOnPartVaults ,13,https://github.com/code-423n4/2021-06-gro-findings/issues/13,gro,2021/06,bug;0 (Non-critical);sponsor acknowledged
17,gpersoon,gpersoon.eth,0,require comments don't all follow convention,14,https://github.com/code-423n4/2021-06-gro-findings/issues/14,gro,2021/06,bug;0 (Non-critical);sponsor acknowledged
17,gpersoon,gpersoon.eth,0,name of return variable not logical,15,https://github.com/code-423n4/2021-06-gro-findings/issues/15,gro,2021/06,bug;invalid;0 (Non-critical);sponsor acknowledged
17,gpersoon,gpersoon.eth,1,initialize maxPercentForWithdraw and maxPercentForDeposit?,16,https://github.com/code-423n4/2021-06-gro-findings/issues/16,gro,2021/06,bug;1 (Low Risk);sponsor acknowledged
17,gpersoon,gpersoon.eth,0,Easier way to determine strategiesLength ,17,https://github.com/code-423n4/2021-06-gro-findings/issues/17,gro,2021/06,bug;0 (Non-critical);sponsor acknowledged
17,gpersoon,gpersoon.eth,G,Unnecessary update of amount ,18,https://github.com/code-423n4/2021-06-gro-findings/issues/18,gro,2021/06,bug;G (Gas Optimization);sponsor confirmed
17,gpersoon,gpersoon.eth,2,rug pull possible via migrate,19,https://github.com/code-423n4/2021-06-gro-findings/issues/19,gro,2021/06,bug;duplicate;1 (Low Risk)
17,gpersoon,gpersoon.eth,3,sortVaultsByDelta doesn't work as expected,2,https://github.com/code-423n4/2021-06-gro-findings/issues/2,gro,2021/06,bug;3 (High Risk);sponsor confirmed;disagree with severity
17,gpersoon,gpersoon.eth,G,calcProtocolExposureDelta could use a break,20,https://github.com/code-423n4/2021-06-gro-findings/issues/20,gro,2021/06,bug;G (Gas Optimization);sponsor confirmed
17,gpersoon,gpersoon.eth,2,distributePriceChange might revert,21,https://github.com/code-423n4/2021-06-gro-findings/issues/21,gro,2021/06,bug;invalid;2 (Med Risk);sponsor disputed
17,gpersoon,gpersoon.eth,1,use safemath,22,https://github.com/code-423n4/2021-06-gro-findings/issues/22,gro,2021/06,bug;1 (Low Risk);sponsor acknowledged
17,gpersoon,gpersoon.eth,0,BASIS_POINTS naming convention,23,https://github.com/code-423n4/2021-06-gro-findings/issues/23,gro,2021/06,bug;0 (Non-critical);sponsor confirmed
17,gpersoon,gpersoon.eth,G,optimization uses extra gas,24,https://github.com/code-423n4/2021-06-gro-findings/issues/24,gro,2021/06,bug;G (Gas Optimization);sponsor acknowledged
17,gpersoon,gpersoon.eth,G,initialize strategyRatioBuffer,25,https://github.com/code-423n4/2021-06-gro-findings/issues/25,gro,2021/06,bug;invalid;G (Gas Optimization);sponsor disputed
17,gpersoon,gpersoon.eth,0,pragma experimental ABIEncoderV2;,3,https://github.com/code-423n4/2021-06-gro-findings/issues/3,gro,2021/06,bug;invalid;0 (Non-critical);sponsor disputed
17,gpersoon,gpersoon.eth,G,remove a multiple inheritance from Controller ,4,https://github.com/code-423n4/2021-06-gro-findings/issues/4,gro,2021/06,bug;invalid;G (Gas Optimization);sponsor disputed
17,gpersoon,gpersoon.eth,1,emergencyHandler not checked & not emitted,5,https://github.com/code-423n4/2021-06-gro-findings/issues/5,gro,2021/06,bug;1 (Low Risk);sponsor confirmed
17,gpersoon,gpersoon.eth,1,implicit underflows,6,https://github.com/code-423n4/2021-06-gro-findings/issues/6,gro,2021/06,bug;3 (High Risk);sponsor confirmed
17,gpersoon,gpersoon.eth,1,lastRatio of Buoy3Pool not initialized,7,https://github.com/code-423n4/2021-06-gro-findings/issues/7,gro,2021/06,bug;1 (Low Risk);sponsor acknowledged
17,gpersoon,gpersoon.eth,0,hardcoded values,8,https://github.com/code-423n4/2021-06-gro-findings/issues/8,gro,2021/06,bug;0 (Non-critical);sponsor confirmed
17,gpersoon,gpersoon.eth,0,implicit assumptions about underlying coins,9,https://github.com/code-423n4/2021-06-gro-findings/issues/9,gro,2021/06,bug;0 (Non-critical);sponsor acknowledged
17,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,strategiesLength should not be allowed to exceed MAX_STRATS,110,https://github.com/code-423n4/2021-06-gro-findings/issues/110,gro,2021/06,bug;0 (Non-critical);disagree with severity;sponsor disputed
17,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,function withdrawToAdapter should be inluded in the interface and return withdrawal amount,116,https://github.com/code-423n4/2021-06-gro-findings/issues/116,gro,2021/06,bug;G (Gas Optimization);sponsor disputed
17,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Unused code,71,https://github.com/code-423n4/2021-06-gro-findings/issues/71,gro,2021/06,bug;0 (Non-critical);sponsor confirmed
17,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,cached version of ctrl in WithdrawHandler,72,https://github.com/code-423n4/2021-06-gro-findings/issues/72,gro,2021/06,bug;invalid;1 (Low Risk);sponsor confirmed;disagree with severity
17,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,typo in revert message,73,https://github.com/code-423n4/2021-06-gro-findings/issues/73,gro,2021/06,bug;duplicate;0 (Non-critical)
17,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,updateStrategiesDebtRatio function and LogNewDebtRatios event,74,https://github.com/code-423n4/2021-06-gro-findings/issues/74,gro,2021/06,bug;0 (Non-critical);sponsor acknowledged
17,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,hardcoded numbers,75,https://github.com/code-423n4/2021-06-gro-findings/issues/75,gro,2021/06,bug;0 (Non-critical);sponsor confirmed
17,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,"index check should use AND condition, not OR",76,https://github.com/code-423n4/2021-06-gro-findings/issues/76,gro,2021/06,bug;duplicate;3 (High Risk)
17,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,decimals of FixedStablecoins,77,https://github.com/code-423n4/2021-06-gro-findings/issues/77,gro,2021/06,bug;1 (Low Risk);sponsor acknowledged
17,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,withdrawal fee may be set above 100% or frontrunned,78,https://github.com/code-423n4/2021-06-gro-findings/issues/78,gro,2021/06,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
17,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,No way of removing an address from safeAddresses,79,https://github.com/code-423n4/2021-06-gro-findings/issues/79,gro,2021/06,bug;duplicate;2 (Med Risk)
17,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,setBigFishThreshold above 100%,80,https://github.com/code-423n4/2021-06-gro-findings/issues/80,gro,2021/06,bug;0 (Non-critical);sponsor confirmed
17,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,totalAssets > withdrawUsd should be inclusive,86,https://github.com/code-423n4/2021-06-gro-findings/issues/86,gro,2021/06,bug;1 (Low Risk);sponsor acknowledged
17,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,burnAll should check that factor > 0 and amount > 0,87,https://github.com/code-423n4/2021-06-gro-findings/issues/87,gro,2021/06,bug;0 (Non-critical);sponsor disputed
17,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,event LogTransfer is only emitted in function transfer,88,https://github.com/code-423n4/2021-06-gro-findings/issues/88,gro,2021/06,bug;0 (Non-critical);sponsor acknowledged
17,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Unlocked pragma used in multiple contracts,117,https://github.com/code-423n4/2021-06-gro-findings/issues/117,gro,2021/06,bug;0 (Non-critical);sponsor disputed
17,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Lack of non-zero address check in `setWithdrawHandler`,118,https://github.com/code-423n4/2021-06-gro-findings/issues/118,gro,2021/06,bug;duplicate;1 (Low Risk)
17,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Possible division-by-zero error in `burnAll` of `RebasingGToken`,119,https://github.com/code-423n4/2021-06-gro-findings/issues/119,gro,2021/06,bug;0 (Non-critical);sponsor disputed
17,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Add a proper revert message in `_withdrawSingle`,120,https://github.com/code-423n4/2021-06-gro-findings/issues/120,gro,2021/06,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
17,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,More accurate calculation of return USD of `withdrawSingleByLiquidity`,121,https://github.com/code-423n4/2021-06-gro-findings/issues/121,gro,2021/06,bug;1 (Low Risk);sponsor confirmed
17,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Use of `tx.origin` for authentication,122,https://github.com/code-423n4/2021-06-gro-findings/issues/122,gro,2021/06,bug;1 (Low Risk)
17,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Variables `maxIndex` and `minIndex` in `sortVaultsByDelta` are uninitialized,123,https://github.com/code-423n4/2021-06-gro-findings/issues/123,gro,2021/06,bug;duplicate;3 (High Risk)
17,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Gas optimization by avoiding array copying,124,https://github.com/code-423n4/2021-06-gro-findings/issues/124,gro,2021/06,bug;duplicate;G (Gas Optimization)
17,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,`safetyCheck` does not ensure all ratios of prices are healthy,125,https://github.com/code-423n4/2021-06-gro-findings/issues/125,gro,2021/06,bug;duplicate;3 (High Risk)
17,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Use of deprecated Chainlink function `latestAnswer`,126,https://github.com/code-423n4/2021-06-gro-findings/issues/126,gro,2021/06,bug;2 (Med Risk);disagree with severity
14,0xRajeev,rajeev.eth,G,Upgrading the solc compiler to >=0.8 may save gas,25,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/25,pooltogether,2021/06,bug;G (Gas Optimization);sponsor disputed
14,0xRajeev,rajeev.eth,G,Avoid use of state variables in event emissions to save gas,26,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/26,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed
14,0xRajeev,rajeev.eth,G,Simplifying extensible but expensive modifier may save gas,27,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/27,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed
14,0xRajeev,rajeev.eth,G,Evaluate security benefit vs gas usage trade-off for using nonreentrant modifier on different functions,28,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/28,pooltogether,2021/06,bug;G (Gas Optimization);sponsor disputed
14,0xRajeev,rajeev.eth,G,Gas savings of 300 by caching _currentAwardBalance in captureAwardBalance(),29,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/29,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed
14,0xRajeev,rajeev.eth,G,Setting a default prizeStrategy will save gas from avoiding zero-address checks,30,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/30,pooltogether,2021/06,bug;G (Gas Optimization);sponsor disputed
14,0xRajeev,rajeev.eth,G,Using access lists can save gas due to EIP-2930 post-Berlin hard fork,31,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/31,pooltogether,2021/06,bug;G (Gas Optimization);sponsor acknowledged
14,0xRajeev,rajeev.eth,G,Gas savings of 100 per user by caching _timelockBalances[user] in _sweepTimelockBalances(),32,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/32,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed
14,0xRajeev,rajeev.eth,G,Gas savings of 100 by caching maxTimelockDuration in _calculateTimelockDuration(),33,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/33,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed
14,0xRajeev,rajeev.eth,G,Unnecessary indirection to access block.timestamp value,34,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/34,pooltogether,2021/06,bug;G (Gas Optimization);sponsor acknowledged
14,0xRajeev,rajeev.eth,G,Preventing zero-address controlled tokens from being added can avoid checks later,35,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/35,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed;PrizePool
14,0xRajeev,rajeev.eth,G,Gas savings of (100*loop-iteration-count) by caching _tokens.end() in _tokenTotalSupply(),36,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/36,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed
14,0xRajeev,rajeev.eth,G,Remove unnecessary/unused return value,37,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/37,pooltogether,2021/06,bug;duplicate;G (Gas Optimization)
14,0xRajeev,rajeev.eth,G,Caching badger and badgerSett can save 400 gas in supplyTokenTo(),38,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/38,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed
14,0xRajeev,rajeev.eth,G,Caching badger and badgerSett can save 400 gas in redeemToken(),39,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/39,pooltogether,2021/06,bug;duplicate;G (Gas Optimization)
14,0xRajeev,rajeev.eth,G,Using decreaseAllowance() function may save gas,40,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/40,pooltogether,2021/06,bug;G (Gas Optimization);sponsor disputed
14,0xRajeev,rajeev.eth,G,Unnecessary initialization given that default value is already 0,41,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/41,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed;YearnV2YieldSource
14,0xRajeev,rajeev.eth,G,Zero-address check unnecessary due to the initializer modifier,42,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/42,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed;YearnV2YieldSource
14,0xRajeev,rajeev.eth,G,Using function parameter in initialize() instead of state variable saves 100 gas,43,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/43,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed;YearnV2YieldSource
14,0xRajeev,rajeev.eth,G,token can be cached in a local variable to save 200 gas in _depositInVault(),44,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/44,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed
14,0xRajeev,rajeev.eth,G,token can be cached in a local variable to save 100 gas in _withdrawFromVault(),45,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/45,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed
14,0xRajeev,rajeev.eth,G,maxLosses can be cached in a local variable to save 100 gas in _withdrawFromVault(),46,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/46,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed;YearnV2YieldSource
14,0xRajeev,rajeev.eth,G,Caching sushiAddr and sushiBar in local variables to save 200 gas in supplyTokenTo(),47,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/47,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed;SushiYieldSource
14,0xRajeev,rajeev.eth,1,Liquidity Cap is set to MAX at initialization,48,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/48,pooltogether,2021/06,bug;1 (Low Risk);sponsor disputed
14,0xRajeev,rajeev.eth,2,Missing initialization checks and setters for critical parameters of maxExitFee and maxTimelockDuration,49,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/49,pooltogether,2021/06,bug;2 (Med Risk);sponsor disputed
14,0xRajeev,rajeev.eth,1,Switch modifier order to consistently place the nonreentrant modifier as the first one,50,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/50,pooltogether,2021/06,bug;1 (Low Risk);sponsor confirmed
14,0xRajeev,rajeev.eth,2,The assumption that operator == to (user) may not hold leading to failed timelock deposits,51,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/51,pooltogether,2021/06,bug;2 (Med Risk);sponsor disputed
14,0xRajeev,rajeev.eth,1,captureAwardBalance() may be called by anyone,52,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/52,pooltogether,2021/06,bug;1 (Low Risk);sponsor disputed
14,0xRajeev,rajeev.eth,1,Named return values are never used in favor of explicit returns,53,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/53,pooltogether,2021/06,bug;0 (Non-critical);sponsor confirmed;disagree with severity
14,0xRajeev,rajeev.eth,1,Missing modifier onlyControlledToken may result in undefined/exceptional behavior,54,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/54,pooltogether,2021/06,bug;1 (Low Risk);sponsor confirmed;PrizePool
14,0xRajeev,rajeev.eth,2,Lack of input validation on onlyOwner critical parameters,55,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/55,pooltogether,2021/06,bug;2 (Med Risk);sponsor disputed
14,0xRajeev,rajeev.eth,2,Liquidity Cap changes for active pools affect winning odds unexpectedly,56,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/56,pooltogether,2021/06,bug;2 (Med Risk);sponsor disputed
14,0xRajeev,rajeev.eth,2,Malicious pool creator/owner can arbitrarily/maliciously change prize strategy of an active pool,57,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/57,pooltogether,2021/06,bug;duplicate;0 (Non-critical);sponsor disputed
14,0xRajeev,rajeev.eth,1,Unclear role of compLikeDelegate() function in Prize Pool,58,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/58,pooltogether,2021/06,bug;1 (Low Risk);sponsor disputed
14,0xRajeev,rajeev.eth,2,Actual yield source check on address will succeed for non-existent contract,59,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/59,pooltogether,2021/06,bug;2 (Med Risk);sponsor confirmed;YieldSourcePrizePool;MitigationStarted
14,0xRajeev,rajeev.eth,1,Missing calls to init functions of inherited contracts,60,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/60,pooltogether,2021/06,bug;1 (Low Risk);sponsor confirmed;ATokenYieldSource;IdleYieldSource;YearnV2YieldSource
14,0xRajeev,rajeev.eth,1,Missing nonreentrant modifier on various yield source functions making external calls,61,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/61,pooltogether,2021/06,bug;duplicate;1 (Low Risk)
14,0xRajeev,rajeev.eth,1,Input validation on decimals is not sufficient,62,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/62,pooltogether,2021/06,bug;1 (Low Risk);sponsor disputed
14,0xRajeev,rajeev.eth,1,_getAddressesProviderId() returns 0 for Aave genesis market LendingPoolAddressesProvider’s ID,63,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/63,pooltogether,2021/06,bug;1 (Low Risk);sponsor disputed
14,0xRajeev,rajeev.eth,1,Different floating/fixed solc pragmas even across breaking versions used in project,64,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/64,pooltogether,2021/06,bug;duplicate;1 (Low Risk);sponsor disputed
14,0xRajeev,rajeev.eth,1,Missing zero-address checks,65,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/65,pooltogether,2021/06,bug;duplicate;1 (Low Risk);ATokenYieldSource;IdleYieldSource;YearnV2YieldSource;SushiYieldSource;BadgerYieldSource;PrizePool;ControlledToken;YieldSourcePrizePool;StakePrizePool
14,0xRajeev,rajeev.eth,3,Test configuration carryover to production deployment limits pool users to 5,66,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/66,pooltogether,2021/06,bug;3 (High Risk);sponsor disputed
14,0xRajeev,rajeev.eth,3,Initialization functions can be front-run with malicious values,67,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/67,pooltogether,2021/06,bug;3 (High Risk);sponsor disputed
14,0xRajeev,rajeev.eth,2,Lack of event emission after critical initialize() functions,68,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/68,pooltogether,2021/06,bug;1 (Low Risk);sponsor confirmed;disagree with severity
14,0xRajeev,rajeev.eth,1,Overly permissive threshold check allows high yield loss,69,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/69,pooltogether,2021/06,bug;1 (Low Risk);sponsor acknowledged
14,0xRajeev,rajeev.eth,1,Ignored return values may lead to undefined behavior,70,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/70,pooltogether,2021/06,bug;1 (Low Risk);sponsor disputed
14,0xRajeev,rajeev.eth,2,safeApprove() for Yearn Vault may revert preventing deposits causing DoS,71,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/71,pooltogether,2021/06,bug;2 (Med Risk);sponsor confirmed
14,0xRajeev,rajeev.eth,3,Yearn vault withdrawals in redeems will always fail leading to lock/loss of user deposits,72,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/72,pooltogether,2021/06,bug;duplicate;3 (High Risk)
14,axic,0x068484F7BD2b7D7C5a698d89e75ddcaf3a92B879,0,Use ERC-165 instead of homebrew staticcall-based check,104,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/104,pooltogether,2021/06,bug;G (Gas Optimization);sponsor acknowledged
14,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,2,Use SafeTransfer/TransferHelper for BadgerYieldSource,100,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/100,pooltogether,2021/06,bug;duplicate;2 (Med Risk)
14,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,G,Unnecessary safeApprove,73,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/73,pooltogether,2021/06,bug;duplicate;G (Gas Optimization)
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,81,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/81,pooltogether,2021/06,bug;1 (Low Risk);sponsor confirmed;ATokenYieldSource;SushiYieldSource;BadgerYieldSource;PrizePool;ControlledToken;StakePrizePool
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`initialize` functions cam be frontrun,82,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/82,pooltogether,2021/06,bug;1 (Low Risk);sponsor disputed
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`YieldSourcePrizePool` should use EIP-165 to detect valid yield sources,83,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/83,pooltogether,2021/06,bug;duplicate;G (Gas Optimization);disagree with severity;sponsor acknowledged
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,BadgerYieldSource balanceOfToken share calculation seems wrong,84,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/84,pooltogether,2021/06,bug;3 (High Risk);sponsor confirmed;BadgerYieldSource
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Awarding takes reserve fee several times,85,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/85,pooltogether,2021/06,bug;3 (High Risk);sponsor disputed
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,ATokenYieldSource mixes aTokens and underlying when redeeming,86,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/86,pooltogether,2021/06,bug;1 (Low Risk);sponsor confirmed;ATokenYieldSource
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`BadgerYieldSource` ERC20 return values not checked,87,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/87,pooltogether,2021/06,bug;duplicate;2 (Med Risk);disagree with severity
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`SushiYieldSource` ERC20 return values not checked,88,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/88,pooltogether,2021/06,bug;duplicate;2 (Med Risk);disagree with severity
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`BadgerYieldSource` SafeMath not used,89,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/89,pooltogether,2021/06,bug;duplicate;2 (Med Risk)
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`YearnV2YieldSource` wrong subtraction in withdraw,90,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/90,pooltogether,2021/06,bug;3 (High Risk);sponsor confirmed
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,withdraw timelock can be circumvented,91,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/91,pooltogether,2021/06,bug;3 (High Risk);sponsor confirmed
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`YieldSourcePrizePool_canAwardExternal` does not work,92,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/92,pooltogether,2021/06,bug;2 (Med Risk);sponsor acknowledged
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,ATokenYieldSource save gas with pre-approval,93,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/93,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed;ATokenYieldSource;IdleYieldSource
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,SushiYieldSource save gas with pre-approval,94,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/94,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed;SushiYieldSource
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,YearnV2YieldSource save gas with pre-approval,95,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/95,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed;YearnV2YieldSource
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Credit accrual is done twice in `award`,96,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/96,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,CreditBurned event emitted even on zero tokens burned,97,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/97,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed
14,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas cache `badgerSett`,98,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/98,pooltogether,2021/06,bug;duplicate;G (Gas Optimization)
14,GalloDaSballo,0xB943cdb5622E7Bb26D3E462dB68Ee71D8868C940,1,staticCall to yieldSource.depositToken doesn't provide any security guarantees,14,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/14,pooltogether,2021/06,bug;1 (Low Risk);sponsor acknowledged
14,GalloDaSballo,0xB943cdb5622E7Bb26D3E462dB68Ee71D8868C940,2,setPrizeStrategy check for Interface Supported in PrizePool.sol doesn't guarantee that the new prize strategy is valid,15,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/15,pooltogether,2021/06,bug;0 (Non-critical);sponsor disputed
14,gpersoon,gpersoon.eth,1,What is default duration when creditRateMantissa is not set,10,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/10,pooltogether,2021/06,bug;1 (Low Risk)
14,gpersoon,gpersoon.eth,G,currentTime() outside of loop,11,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/11,pooltogether,2021/06,bug;G (Gas Optimization)
14,gpersoon,gpersoon.eth,1,_accrueCredit before _mint,12,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/12,pooltogether,2021/06,bug;1 (Low Risk);sponsor disputed
14,gpersoon,gpersoon.eth,1,compLikeDelegate,13,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/13,pooltogether,2021/06,bug;1 (Low Risk);sponsor disputed
14,gpersoon,gpersoon.eth,0,uint256(-1),3,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/3,pooltogether,2021/06,bug;0 (Non-critical);sponsor confirmed
14,gpersoon,gpersoon.eth,1,no check for _stakeToken!=0,4,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/4,pooltogether,2021/06,bug;1 (Low Risk)
14,gpersoon,gpersoon.eth,1,nonReentrant not used everywhere,5,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/5,pooltogether,2021/06,bug;duplicate;1 (Low Risk)
14,gpersoon,gpersoon.eth,0,function sponsor not allways present,6,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/6,pooltogether,2021/06,bug;0 (Non-critical)
14,gpersoon,gpersoon.eth,0,Use immutable keyword,7,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/7,pooltogether,2021/06,bug;0 (Non-critical);sponsor confirmed
14,gpersoon,gpersoon.eth,1,safe transfer,8,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/8,pooltogether,2021/06,bug;duplicate;2 (Med Risk)
14,gpersoon,gpersoon.eth,G,cache variables,9,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/9,pooltogether,2021/06,bug;duplicate;G (Gas Optimization)
14,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Various gas optimizations,77,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/77,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed
14,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Floating Pragma,74,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/74,pooltogether,2021/06,bug;duplicate;1 (Low Risk)
14,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Using memory[] parameter without checking its length,75,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/75,pooltogether,2021/06,bug;1 (Low Risk);sponsor confirmed
14,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Unused return value from Transfer()/ TransferFrom() ,76,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/76,pooltogether,2021/06,bug;duplicate;2 (Med Risk);disagree with severity
14,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Uneven use of events,78,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/78,pooltogether,2021/06,bug;1 (Low Risk);sponsor confirmed
14,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,lack of input validation,79,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/79,pooltogether,2021/06,bug;1 (Low Risk);sponsor disputed
14,jvaqa,0x3C2b8156D8AbE9814BFc800b170b60C66eC33cc2,1,PrizePool.onlyReserve() incorrectly uses msg.sender instead of _msgSender(),22,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/22,pooltogether,2021/06,bug;duplicate;0 (Non-critical)
14,jvaqa,0x3C2b8156D8AbE9814BFc800b170b60C66eC33cc2,1,PrizePool.beforeTokenTransfer() incorrectly uses msg.sender in seven places instead of _msgSender(),23,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/23,pooltogether,2021/06,bug;0 (Non-critical);sponsor confirmed;disagree with severity
14,jvaqa,0x3C2b8156D8AbE9814BFc800b170b60C66eC33cc2,G,"Gas Optimization: PrizePool._calculateCreditBalance.creditBalance is incorrectly passed by reference rather than passed by value, causing unnecessary SLOADs instead of MLOADs",24,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/24,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed
14,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,usage of safeApprove,1,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/1,pooltogether,2021/06,bug;duplicate;2 (Med Risk)
14,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Missing nonReentrant modifiers,16,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/16,pooltogether,2021/06,bug;duplicate;1 (Low Risk)
14,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Approve max amount of yield source underlying asset on init,17,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/17,pooltogether,2021/06,bug;duplicate;G (Gas Optimization)
14,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,_accrueCredit -> _updateCreditBalance,18,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/18,pooltogether,2021/06,bug;G (Gas Optimization);sponsor acknowledged
14,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,modifier canAddLiquidity and function _canAddLiquidity,19,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/19,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed
14,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,cache and reuse _vault.apiVersion() result,2,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/2,pooltogether,2021/06,bug;G (Gas Optimization);YearnV2YieldSource
14,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,function _getRefferalCode() can be refactored to a constant variable,20,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/20,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed;ATokenYieldSource
14,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,CreditBurned is emitted when the balance does not change,21,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/21,pooltogether,2021/06,bug;duplicate;G (Gas Optimization)
14,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,_depositToAave always returns 0,80,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/80,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed;ATokenYieldSource
14,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,'immutable' greatly reduces gas costs,99,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/99,pooltogether,2021/06,bug;duplicate;0 (Non-critical)
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Declare functions as `external` to save gas,107,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/107,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed;SushiYieldSource;BadgerYieldSource
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Gas optimization on `BadgerYieldSource`,108,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/108,pooltogether,2021/06,bug;duplicate;G (Gas Optimization)
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Unlocked pragma used in multiple contracts,109,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/109,pooltogether,2021/06,bug;1 (Low Risk);sponsor confirmed
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Inconsistent usage of ` _msgSender()` and `msg.sender`,110,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/110,pooltogether,2021/06,bug;1 (Low Risk);sponsor disputed
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,ERC20-related variables not initialized,111,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/111,pooltogether,2021/06,bug;duplicate;1 (Low Risk)
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Return values of ERC20 `transfer` and `transferFrom` are unchecked,112,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/112,pooltogether,2021/06,bug;2 (Med Risk);sponsor confirmed;SushiYieldSource;BadgerYieldSource
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,`BadgerYieldSource` and `SushiYieldSource` are not upgradeable,113,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/113,pooltogether,2021/06,bug;1 (Low Risk);sponsor disputed
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,SafeMath not completely used in yield source contracts,114,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/114,pooltogether,2021/06,bug;2 (Med Risk);sponsor confirmed;disagree with severity
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Using `transferFrom` on ERC721 tokens,115,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/115,pooltogether,2021/06,bug;2 (Med Risk);sponsor confirmed;disagree with severity
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Using `transferFrom` on ERC721 tokens,116,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/116,pooltogether,2021/06,bug;duplicate;2 (Med Risk)
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,No event emitted in `compLikeDelegate` function,117,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/117,pooltogether,2021/06,bug;1 (Low Risk);sponsor disputed
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,`onERC721Received` not implemented in `PrizePool`,118,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/118,pooltogether,2021/06,bug;1 (Low Risk);sponsor confirmed
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Lack of `nonReentrant` modifier in yield source contracts,119,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/119,pooltogether,2021/06,bug;1 (Low Risk);sponsor confirmed;ATokenYieldSource;IdleYieldSource;SushiYieldSource;BadgerYieldSource
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,User could lose underlying tokens when redeeming from the `IdleYieldSource`,120,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/120,pooltogether,2021/06,bug;3 (High Risk);sponsor confirmed;IdleYieldSource
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,0,User could lose underlying tokens when redeeming from the `IdleYieldSource`,121,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/121,pooltogether,2021/06,bug;duplicate;3 (High Risk)
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Gas optimization on `_depositToAave`,122,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/122,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed;ATokenYieldSource
14,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Gas optimization on `redeemToken` of `ATokenYieldSource`,123,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/123,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed;ATokenYieldSource
14,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Gas savings on uninitialized variables.,101,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/101,pooltogether,2021/06,bug;G (Gas Optimization);sponsor confirmed;ATokenYieldSource
14,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Functions in SushiYieldSource can be external,102,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/102,pooltogether,2021/06,bug;duplicate;G (Gas Optimization)
14,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,IdleYieldSource doesn't use mantissa calculations,103,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/103,pooltogether,2021/06,bug;3 (High Risk);sponsor confirmed
14,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Manual deposits can manipulate share price,105,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/105,pooltogether,2021/06,bug;3 (High Risk);sponsor disputed
14,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Mantissa calculations assumes 18 decimals,106,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/106,pooltogether,2021/06,bug;1 (Low Risk);sponsor disputed
13,0xRajeev,rajeev.eth,2,Malicious user can trigger another user’s removal,100,https://github.com/code-423n4/2021-06-realitycards-findings/issues/100,realitycards,2021/06,bug;2 (Med Risk);sponsor disputed
13,0xRajeev,rajeev.eth,1,Test function left behind can expose order book,101,https://github.com/code-423n4/2021-06-realitycards-findings/issues/101,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,0xRajeev,rajeev.eth,1,Missing bidExists check in reduceTimeHeldLimit,102,https://github.com/code-423n4/2021-06-realitycards-findings/issues/102,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,0xRajeev,rajeev.eth,2,Missing threshold check on critical protection mechanism minRentalDayDivisor,103,https://github.com/code-423n4/2021-06-realitycards-findings/issues/103,realitycards,2021/06,bug;2 (Med Risk);sponsor disputed;disagree with severity
13,0xRajeev,rajeev.eth,2,addToWhitelist actually implements toggleWhitelist,104,https://github.com/code-423n4/2021-06-realitycards-findings/issues/104,realitycards,2021/06,bug;duplicate;1 (Low Risk);disagree with severity
13,0xRajeev,rajeev.eth,3,Critical uberOwner address changes should be a two-step process,105,https://github.com/code-423n4/2021-06-realitycards-findings/issues/105,realitycards,2021/06,bug;2 (Med Risk)
13,0xRajeev,rajeev.eth,1,Critical governance changes have no events,106,https://github.com/code-423n4/2021-06-realitycards-findings/issues/106,realitycards,2021/06,bug;duplicate;0 (Non-critical)
13,0xRajeev,rajeev.eth,2,Deposit whitelist enforced on msg.sender instead of user,107,https://github.com/code-423n4/2021-06-realitycards-findings/issues/107,realitycards,2021/06,bug;2 (Med Risk);sponsor disputed;disagree with severity
13,0xRajeev,rajeev.eth,2,Deposit double-counting miscalculation could incorrectly prevent user foreclosure,108,https://github.com/code-423n4/2021-06-realitycards-findings/issues/108,realitycards,2021/06,bug;1 (Low Risk);disagree with severity
13,0xRajeev,rajeev.eth,2,Missing call to removeOldBids may affect foreclosure,109,https://github.com/code-423n4/2021-06-realitycards-findings/issues/109,realitycards,2021/06,bug;2 (Med Risk);sponsor confirmed;disagree with severity;resolved
13,0xRajeev,rajeev.eth,1,Missing access control and validation in topupMarketBalance can bypass maxContractBalance,110,https://github.com/code-423n4/2021-06-realitycards-findings/issues/110,realitycards,2021/06,bug;duplicate;0 (Non-critical)
13,0xRajeev,rajeev.eth,2,Missing balancedBooks modifier could result in failed system insolvency detection,112,https://github.com/code-423n4/2021-06-realitycards-findings/issues/112,realitycards,2021/06,bug;2 (Med Risk);disagree with severity
13,0xRajeev,rajeev.eth,2,Missing call to removeUserFromOrderbook after user is foreclosed,113,https://github.com/code-423n4/2021-06-realitycards-findings/issues/113,realitycards,2021/06,bug;2 (Med Risk);sponsor disputed
13,0xRajeev,rajeev.eth,1,Missing emit for WithdrawnBatch event,114,https://github.com/code-423n4/2021-06-realitycards-findings/issues/114,realitycards,2021/06,bug;duplicate;0 (Non-critical);disagree with severity
13,0xRajeev,rajeev.eth,1,Missing zero-address check for childChainManager,115,https://github.com/code-423n4/2021-06-realitycards-findings/issues/115,realitycards,2021/06,bug;duplicate;1 (Low Risk)
13,0xRajeev,rajeev.eth,1,withdraw function is never called from Market,116,https://github.com/code-423n4/2021-06-realitycards-findings/issues/116,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,0xRajeev,rajeev.eth,2,NFT Hub implementation deviates from ERC721 for transfer functions,118,https://github.com/code-423n4/2021-06-realitycards-findings/issues/118,realitycards,2021/06,bug;2 (Med Risk);sponsor confirmed;resolved
13,0xRajeev,rajeev.eth,2,Missing checkOnERC721Received deviates from ERC721 and could lock/lose NFTs,120,https://github.com/code-423n4/2021-06-realitycards-findings/issues/120,realitycards,2021/06,bug;duplicate;2 (Med Risk)
13,0xRajeev,asdf,0,test,3,https://github.com/code-423n4/2021-06-realitycards-findings/issues/3,realitycards,2021/06,bug;0 (Non-critical)
13,0xRajeev,rajeev.eth,1,Use of ecrecover is susceptible to signature malleability,66,https://github.com/code-423n4/2021-06-realitycards-findings/issues/66,realitycards,2021/06,bug;1 (Low Risk);sponsor acknowledged
13,0xRajeev,rajeev.eth,1,Meta-transaction signatures can be replayed on contract redeployments on same/different chains,67,https://github.com/code-423n4/2021-06-realitycards-findings/issues/67,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,0xRajeev,rajeev.eth,1,Creator cut is initialized to zero,68,https://github.com/code-423n4/2021-06-realitycards-findings/issues/68,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,0xRajeev,rajeev.eth,1,NFT minting limit dependence on block gas limit,70,https://github.com/code-423n4/2021-06-realitycards-findings/issues/70,realitycards,2021/06,bug;1 (Low Risk);sponsor acknowledged
13,0xRajeev,rajeev.eth,1,Dependence of rent iterations on number of NFTs and gas usage/repricing,71,https://github.com/code-423n4/2021-06-realitycards-findings/issues/71,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,0xRajeev,rajeev.eth,1,Basis points usage deviates from general definition,72,https://github.com/code-423n4/2021-06-realitycards-findings/issues/72,realitycards,2021/06,bug;1 (Low Risk);sponsor confirmed;resolved
13,0xRajeev,rajeev.eth,1,Missing input validation on minimumPriceIncreasePercent,73,https://github.com/code-423n4/2021-06-realitycards-findings/issues/73,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,0xRajeev,rajeev.eth,1,Missing input validation on timeout,74,https://github.com/code-423n4/2021-06-realitycards-findings/issues/74,realitycards,2021/06,bug;1 (Low Risk);sponsor acknowledged
13,0xRajeev,rajeev.eth,1,isGovernor excludes Factory owner,75,https://github.com/code-423n4/2021-06-realitycards-findings/issues/75,realitycards,2021/06,bug;1 (Low Risk);sponsor acknowledged
13,0xRajeev,rajeev.eth,1,Making isMarketApproved False on an operational market will lock NFTs to L2,76,https://github.com/code-423n4/2021-06-realitycards-findings/issues/76,realitycards,2021/06,bug;1 (Low Risk);sponsor confirmed;resolved
13,0xRajeev,rajeev.eth,1,Missing event for critical change of referenceContractAddress,77,https://github.com/code-423n4/2021-06-realitycards-findings/issues/77,realitycards,2021/06,bug;duplicate;0 (Non-critical);sponsor disputed
13,0xRajeev,rajeev.eth,2,RCFactory uberOwner cannot be burned,78,https://github.com/code-423n4/2021-06-realitycards-findings/issues/78,realitycards,2021/06,bug;2 (Med Risk);sponsor disputed
13,0xRajeev,rajeev.eth,1,Susceptible to collusion and sybil attacks,79,https://github.com/code-423n4/2021-06-realitycards-findings/issues/79,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,0xRajeev,rajeev.eth,2,Incorrect/Insufficient validation of market locking timestamp,80,https://github.com/code-423n4/2021-06-realitycards-findings/issues/80,realitycards,2021/06,bug;duplicate;2 (Med Risk)
13,0xRajeev,rajeev.eth,1,Uninitialized referenceContractAddress may be used,81,https://github.com/code-423n4/2021-06-realitycards-findings/issues/81,realitycards,2021/06,bug;duplicate;1 (Low Risk);sponsor disputed
13,0xRajeev,rajeev.eth,1,Misplaced zero-address check,82,https://github.com/code-423n4/2021-06-realitycards-findings/issues/82,realitycards,2021/06,bug;1 (Low Risk);sponsor confirmed;resolved
13,0xRajeev,rajeev.eth,1,Use of assert() instead of require(),83,https://github.com/code-423n4/2021-06-realitycards-findings/issues/83,realitycards,2021/06,bug;1 (Low Risk)
13,0xRajeev,rajeev.eth,2,Prediction question string is not emitted in any event,84,https://github.com/code-423n4/2021-06-realitycards-findings/issues/84,realitycards,2021/06,bug;2 (Med Risk);sponsor disputed;disagree with severity
13,0xRajeev,rajeev.eth,2,Market may never get locked,85,https://github.com/code-423n4/2021-06-realitycards-findings/issues/85,realitycards,2021/06,bug;duplicate;1 (Low Risk);sponsor disputed;disagree with severity
13,0xRajeev,rajeev.eth,1,Missing market open check,86,https://github.com/code-423n4/2021-06-realitycards-findings/issues/86,realitycards,2021/06,bug;1 (Low Risk);sponsor confirmed;resolved
13,0xRajeev,rajeev.eth,2,maxSumOfPrices check is broken,87,https://github.com/code-423n4/2021-06-realitycards-findings/issues/87,realitycards,2021/06,bug;2 (Med Risk);sponsor confirmed;resolved
13,0xRajeev,rajeev.eth,1,Design is susceptible to front-running risk with Sybils,88,https://github.com/code-423n4/2021-06-realitycards-findings/issues/88,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,0xRajeev,rajeev.eth,2,Flows can bypass market and global pause,89,https://github.com/code-423n4/2021-06-realitycards-findings/issues/89,realitycards,2021/06,bug;2 (Med Risk);sponsor disputed;disagree with severity
13,0xRajeev,rajeev.eth,1,Assert indicates unnecessary check or missing constraint/logic,90,https://github.com/code-423n4/2021-06-realitycards-findings/issues/90,realitycards,2021/06,bug;duplicate;1 (Low Risk)
13,0xRajeev,rajeev.eth,1,exitedTimestamp set prematurely,91,https://github.com/code-423n4/2021-06-realitycards-findings/issues/91,realitycards,2021/06,bug;1 (Low Risk);sponsor confirmed;resolved
13,0xRajeev,rajeev.eth,1,Anyone can call Market sponsor,92,https://github.com/code-423n4/2021-06-realitycards-findings/issues/92,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,0xRajeev,rajeev.eth,1,Redundant allowance and balance checks,93,https://github.com/code-423n4/2021-06-realitycards-findings/issues/93,realitycards,2021/06,bug;G (Gas Optimization);sponsor confirmed;disagree with severity;resolved
13,0xRajeev,rajeev.eth,3,Missing Factory-only access check leads to loss of funds,94,https://github.com/code-423n4/2021-06-realitycards-findings/issues/94,realitycards,2021/06,bug;duplicate;3 (High Risk)
13,0xRajeev,rajeev.eth,1,Rent collected doesn’t add up to sponsor amount due to division rounding,95,https://github.com/code-423n4/2021-06-realitycards-findings/issues/95,realitycards,2021/06,bug;duplicate;0 (Non-critical);disagree with severity
13,0xRajeev,rajeev.eth,1,Unused named return values are misleading and could lead to errors,96,https://github.com/code-423n4/2021-06-realitycards-findings/issues/96,realitycards,2021/06,bug;0 (Non-critical);sponsor confirmed;disagree with severity;resolved
13,0xRajeev,rajeev.eth,1,incrementState can be called four times,97,https://github.com/code-423n4/2021-06-realitycards-findings/issues/97,realitycards,2021/06,bug;duplicate;G (Gas Optimization);disagree with severity
13,0xRajeev,rajeev.eth,1,Missing event for circuitBreaker,99,https://github.com/code-423n4/2021-06-realitycards-findings/issues/99,realitycards,2021/06,bug;duplicate;0 (Non-critical)
13,axic,axic.gitcoin.eth,G,Gas inefficiency with NativeMetaTransaction and calldata,1,https://github.com/code-423n4/2021-06-realitycards-findings/issues/1,realitycards,2021/06,bug;G (Gas Optimization);sponsor confirmed;resolved
13,axic,axic.gitcoin.eth,3,Unchecked ERC20 transfers can cause lock up,2,https://github.com/code-423n4/2021-06-realitycards-findings/issues/2,realitycards,2021/06,bug;3 (High Risk);sponsor confirmed;resolved
13,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,3,Anyone can affect deposits of any user and turn the owner of the token,119,https://github.com/code-423n4/2021-06-realitycards-findings/issues/119,realitycards,2021/06,bug;3 (High Risk);sponsor confirmed;resolved
13,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,1,Use SafeERC20/TransferHelper on RCTreasury,121,https://github.com/code-423n4/2021-06-realitycards-findings/issues/121,realitycards,2021/06,bug;duplicate;3 (High Risk)
13,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,2,Wrong calculation on _collectRentAction,122,https://github.com/code-423n4/2021-06-realitycards-findings/issues/122,realitycards,2021/06,bug;2 (Med Risk);sponsor confirmed;resolved
13,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,1,Use ECDSA to verify signature,136,https://github.com/code-423n4/2021-06-realitycards-findings/issues/136,realitycards,2021/06,bug;duplicate;1 (Low Risk)
13,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,1,Missing validation on msgSender,138,https://github.com/code-423n4/2021-06-realitycards-findings/issues/138,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,G,Gas optimizations - Duplicated state variable ,139,https://github.com/code-423n4/2021-06-realitycards-findings/issues/139,realitycards,2021/06,bug;G (Gas Optimization);sponsor confirmed;resolved
13,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,G,Gas Optimizations - Use storage or memory to reduce reads,140,https://github.com/code-423n4/2021-06-realitycards-findings/issues/140,realitycards,2021/06,bug;G (Gas Optimization);sponsor acknowledged
13,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,0,Lack of zero address check,147,https://github.com/code-423n4/2021-06-realitycards-findings/issues/147,realitycards,2021/06,bug;duplicate;1 (Low Risk)
13,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,G,Gas optimizations - Remove isMarket from RCMarket,161,https://github.com/code-423n4/2021-06-realitycards-findings/issues/161,realitycards,2021/06,bug;G (Gas Optimization);sponsor confirmed;resolved
13,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,0,Use Mode instead of uint in RCFactory to make code much more readable,162,https://github.com/code-423n4/2021-06-realitycards-findings/issues/162,realitycards,2021/06,bug;0 (Non-critical);sponsor confirmed;resolved
13,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,G,Gas optimizations - Use operation for assignations in structs,164,https://github.com/code-423n4/2021-06-realitycards-findings/issues/164,realitycards,2021/06,bug;G (Gas Optimization);sponsor disputed
13,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,0,Missing events in multiple functions ,65,https://github.com/code-423n4/2021-06-realitycards-findings/issues/65,realitycards,2021/06,bug;0 (Non-critical);sponsor acknowledged
13,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,1,Use two steps in order to change the uberOwner ,69,https://github.com/code-423n4/2021-06-realitycards-findings/issues/69,realitycards,2021/06,bug;duplicate;2 (Med Risk)
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,142,https://github.com/code-423n4/2021-06-realitycards-findings/issues/142,realitycards,2021/06,bug;duplicate;1 (Low Risk)
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Market-specific pause is not checked for payRent,143,https://github.com/code-423n4/2021-06-realitycards-findings/issues/143,realitycards,2021/06,bug;2 (Med Risk);sponsor disputed
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Market-specific pause is not checked for payout,144,https://github.com/code-423n4/2021-06-realitycards-findings/issues/144,realitycards,2021/06,bug;duplicate;2 (Med Risk)
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Market-specific pause is not checked for sponsor,145,https://github.com/code-423n4/2021-06-realitycards-findings/issues/145,realitycards,2021/06,bug;2 (Med Risk);sponsor confirmed;disagree with severity;resolved
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Cards can be rented after market maturity,146,https://github.com/code-423n4/2021-06-realitycards-findings/issues/146,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Card affiliate payouts are skipped if a single card does not have an affiliate,148,https://github.com/code-423n4/2021-06-realitycards-findings/issues/148,realitycards,2021/06,bug;2 (Med Risk);sponsor disputed
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,User deposits can be turned into sponsors and then be stolen,149,https://github.com/code-423n4/2021-06-realitycards-findings/issues/149,realitycards,2021/06,bug;duplicate;3 (High Risk)
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Unchecked return value from ERC20,150,https://github.com/code-423n4/2021-06-realitycards-findings/issues/150,realitycards,2021/06,bug;duplicate;3 (High Risk)
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Problems with non-standard compliant ERC20 tokens,151,https://github.com/code-423n4/2021-06-realitycards-findings/issues/151,realitycards,2021/06,bug;duplicate;3 (High Risk)
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Deposits don't work with fee-on transfer tokens,152,https://github.com/code-423n4/2021-06-realitycards-findings/issues/152,realitycards,2021/06,bug;2 (Med Risk);sponsor disputed
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Deposits can be denied by abusing `maxContractBalance`,153,https://github.com/code-423n4/2021-06-realitycards-findings/issues/153,realitycards,2021/06,bug;2 (Med Risk);sponsor acknowledged
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unbounded iteration on _cardAffiliateAddresses,154,https://github.com/code-423n4/2021-06-realitycards-findings/issues/154,realitycards,2021/06,bug;1 (Low Risk);sponsor confirmed;resolved
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Many functions `assert` instead of `revert`ing,155,https://github.com/code-423n4/2021-06-realitycards-findings/issues/155,realitycards,2021/06,bug;duplicate;1 (Low Risk);sponsor confirmed;resolved
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,uberOwner cannot do all the things an owner can,156,https://github.com/code-423n4/2021-06-realitycards-findings/issues/156,realitycards,2021/06,bug;1 (Low Risk);sponsor confirmed
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Dangerous toggle functions,157,https://github.com/code-423n4/2021-06-realitycards-findings/issues/157,realitycards,2021/06,bug;1 (Low Risk);sponsor confirmed
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Pot distribution does not need to add up to 100%,158,https://github.com/code-423n4/2021-06-realitycards-findings/issues/158,realitycards,2021/06,bug;2 (Med Risk);sponsor disputed
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`WithdrawnBatch` event is not fired,159,https://github.com/code-423n4/2021-06-realitycards-findings/issues/159,realitycards,2021/06,bug;duplicate;0 (Non-critical)
13,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`RCNftHubL2.safeTransferFrom` not accoring to spec,160,https://github.com/code-423n4/2021-06-realitycards-findings/issues/160,realitycards,2021/06,bug;2 (Med Risk);sponsor confirmed;resolved
13,gpersoon,gpersoon.eth,0,1000 as a constant,10,https://github.com/code-423n4/2021-06-realitycards-findings/issues/10,realitycards,2021/06,bug;0 (Non-critical);sponsor confirmed;resolved
13,gpersoon,gpersoon.eth,2,Can access cards of other markets,11,https://github.com/code-423n4/2021-06-realitycards-findings/issues/11,realitycards,2021/06,bug;3 (High Risk);sponsor confirmed;disagree with severity;resolved
13,gpersoon,gpersoon.eth,1,Multiple calls necessary for getWinnerFromOracle,12,https://github.com/code-423n4/2021-06-realitycards-findings/issues/12,realitycards,2021/06,bug;1 (Low Risk);sponsor acknowledged
13,gpersoon,gpersoon.eth,1,exit can be done within 1 minute,21,https://github.com/code-423n4/2021-06-realitycards-findings/issues/21,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,gpersoon,gpersoon.eth,2,underflow with _timeHeldToIncrement ,22,https://github.com/code-423n4/2021-06-realitycards-findings/issues/22,realitycards,2021/06,bug;2 (Med Risk);sponsor disputed
13,gpersoon,gpersoon.eth,1,modifier balancedBooks missing in a few functions,23,https://github.com/code-423n4/2021-06-realitycards-findings/issues/23,realitycards,2021/06,bug;duplicate;2 (Med Risk);sponsor confirmed;resolved
13,gpersoon,gpersoon.eth,1,addToWhitelist doesn't check factoryAddress,24,https://github.com/code-423n4/2021-06-realitycards-findings/issues/24,realitycards,2021/06,bug;1 (Low Risk);sponsor confirmed;resolved
13,gpersoon,gpersoon.eth,1,transferFrom result not checked,25,https://github.com/code-423n4/2021-06-realitycards-findings/issues/25,realitycards,2021/06,bug;duplicate;3 (High Risk)
13,gpersoon,gpersoon.eth,1,_amount added to deposit twice,26,https://github.com/code-423n4/2021-06-realitycards-findings/issues/26,realitycards,2021/06,bug;duplicate;1 (Low Risk);sponsor confirmed;resolved
13,gpersoon,gpersoon.eth,1,unnecessary emit of LogUserForeclosed,27,https://github.com/code-423n4/2021-06-realitycards-findings/issues/27,realitycards,2021/06,bug;1 (Low Risk);sponsor confirmed;resolved
13,gpersoon,gpersoon.eth,0,payout doesn't fix isForeclosed state,28,https://github.com/code-423n4/2021-06-realitycards-findings/issues/28,realitycards,2021/06,bug;2 (Med Risk);sponsor confirmed;disagree with severity;resolved
13,gpersoon,gpersoon.eth,1,possible underflow in removeUserFromOrderbook,29,https://github.com/code-423n4/2021-06-realitycards-findings/issues/29,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,gpersoon,gpersoon.eth,0,Add comment to not obvious code in withdrawDeposit ,30,https://github.com/code-423n4/2021-06-realitycards-findings/issues/30,realitycards,2021/06,bug;0 (Non-critical);sponsor confirmed;resolved
13,gpersoon,gpersoon.eth,1,minRentalDayDivisor can be different between markets and treasury,31,https://github.com/code-423n4/2021-06-realitycards-findings/issues/31,realitycards,2021/06,bug;2 (Med Risk);sponsor acknowledged
13,gpersoon,gpersoon.eth,1,call updateTimeHeldLimit multiple times?,4,https://github.com/code-423n4/2021-06-realitycards-findings/issues/4,realitycards,2021/06,bug;duplicate;1 (Low Risk)
13,gpersoon,gpersoon.eth,1,extra security for changeUberOwner,5,https://github.com/code-423n4/2021-06-realitycards-findings/issues/5,realitycards,2021/06,bug;duplicate;2 (Med Risk);sponsor disputed
13,gpersoon,gpersoon.eth,0,Use immutable keyword,6,https://github.com/code-423n4/2021-06-realitycards-findings/issues/6,realitycards,2021/06,bug;0 (Non-critical);sponsor confirmed;resolved
13,gpersoon,gpersoon.eth,G,_realitioAddress not used,7,https://github.com/code-423n4/2021-06-realitycards-findings/issues/7,realitycards,2021/06,bug;G (Gas Optimization);sponsor confirmed;resolved
13,gpersoon,gpersoon.eth,0,improve readability of 1000000 ,8,https://github.com/code-423n4/2021-06-realitycards-findings/issues/8,realitycards,2021/06,bug;0 (Non-critical);sponsor confirmed;resolved
13,gpersoon,gpersoon.eth,G,Checks for enum bounds,9,https://github.com/code-423n4/2021-06-realitycards-findings/issues/9,realitycards,2021/06,bug;G (Gas Optimization);sponsor confirmed;resolved
13,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,0,Camel case function name,13,https://github.com/code-423n4/2021-06-realitycards-findings/issues/13,realitycards,2021/06,bug;0 (Non-critical);sponsor confirmed;resolved
13,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,Locked ether,14,https://github.com/code-423n4/2021-06-realitycards-findings/issues/14,realitycards,2021/06,bug;duplicate;2 (Med Risk)
13,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,reentrancy-no-eth,15,https://github.com/code-423n4/2021-06-realitycards-findings/issues/15,realitycards,2021/06,bug;2 (Med Risk);sponsor disputed
13,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,1,missing-zero-check,16,https://github.com/code-423n4/2021-06-realitycards-findings/issues/16,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,G,costly-loop,17,https://github.com/code-423n4/2021-06-realitycards-findings/issues/17,realitycards,2021/06,bug;G (Gas Optimization);sponsor confirmed;resolved
13,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,1,constable-states,18,https://github.com/code-423n4/2021-06-realitycards-findings/issues/18,realitycards,2021/06,bug;duplicate;G (Gas Optimization);disagree with severity
13,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,external-function,19,https://github.com/code-423n4/2021-06-realitycards-findings/issues/19,realitycards,2021/06,bug;G (Gas Optimization);sponsor confirmed;disagree with severity;resolved
13,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,1,timestamp,20,https://github.com/code-423n4/2021-06-realitycards-findings/issues/20,realitycards,2021/06,bug;0 (Non-critical);sponsor disputed
13,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Unused return value from  erc20.transfer()/ erc20.transferFrom(),52,https://github.com/code-423n4/2021-06-realitycards-findings/issues/52,realitycards,2021/06,bug;duplicate;3 (High Risk)
13,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Unused return value from orderbook.findNewOwner() and treasury.payRent(),53,https://github.com/code-423n4/2021-06-realitycards-findings/issues/53,realitycards,2021/06,bug;0 (Non-critical);sponsor confirmed;resolved
13,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,Unused State variable in RcMarket.sol,54,https://github.com/code-423n4/2021-06-realitycards-findings/issues/54,realitycards,2021/06,bug;duplicate;G (Gas Optimization)
13,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,No emmission of events after sensitive action in RCNftHub2.sol  and  in RCtreasury.sol,55,https://github.com/code-423n4/2021-06-realitycards-findings/issues/55,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Lack of zero address validation ,56,https://github.com/code-423n4/2021-06-realitycards-findings/issues/56,realitycards,2021/06,bug;1 (Low Risk);sponsor confirmed;resolved
13,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,Use of assert() instead of require() for input validation in RCmarket.sol,57,https://github.com/code-423n4/2021-06-realitycards-findings/issues/57,realitycards,2021/06,bug;duplicate;1 (Low Risk);sponsor confirmed
13,jvaqa,0x3C2b8156D8AbE9814BFc800b170b60C66eC33cc2,1,RCTreasury.collectRentUser() improperly uses assert() rather than require(),44,https://github.com/code-423n4/2021-06-realitycards-findings/issues/44,realitycards,2021/06,bug;duplicate;1 (Low Risk);sponsor confirmed
13,jvaqa,0x3C2b8156D8AbE9814BFc800b170b60C66eC33cc2,1,RCFactory.changeMarketApproval() improperly uses assert() rather than require(),45,https://github.com/code-423n4/2021-06-realitycards-findings/issues/45,realitycards,2021/06,bug;duplicate;1 (Low Risk);sponsor confirmed
13,jvaqa,0x3C2b8156D8AbE9814BFc800b170b60C66eC33cc2,1,RCFactory.setReferenceContractAddress() improperly uses assert() rather than require(),46,https://github.com/code-423n4/2021-06-realitycards-findings/issues/46,realitycards,2021/06,bug;duplicate;1 (Low Risk);sponsor confirmed
13,jvaqa,0x3C2b8156D8AbE9814BFc800b170b60C66eC33cc2,2,RCTreasury.updateRentalRate()._increaseMarketBalance() adjusts user's deposit in storage but does not trigger corresponding event LogAdjustDeposit(),48,https://github.com/code-423n4/2021-06-realitycards-findings/issues/48,realitycards,2021/06,bug;duplicate;0 (Non-critical)
13,jvaqa,0x3C2b8156D8AbE9814BFc800b170b60C66eC33cc2,2,RCTreasury.addToWhitelist() will erroneously remove user from whitelist if user is already whitelisted,49,https://github.com/code-423n4/2021-06-realitycards-findings/issues/49,realitycards,2021/06,bug;1 (Low Risk);sponsor confirmed;disagree with severity
13,jvaqa,0x3C2b8156D8AbE9814BFc800b170b60C66eC33cc2,2,"RCFactory.createMarket() does not enforce _timestamps[1] and _timestamps[2] being larger than _timestamps[0], even though proper functioning requires them to be so",61,https://github.com/code-423n4/2021-06-realitycards-findings/issues/61,realitycards,2021/06,bug;2 (Med Risk);sponsor confirmed;resolved
13,jvaqa,0x3C2b8156D8AbE9814BFc800b170b60C66eC33cc2,0,Redundant require() statement in RCFactory.createMarket(),62,https://github.com/code-423n4/2021-06-realitycards-findings/issues/62,realitycards,2021/06,bug;0 (Non-critical);sponsor confirmed;resolved
13,jvaqa,0x3C2b8156D8AbE9814BFc800b170b60C66eC33cc2,1,RCMarket.initialize() improperly uses assert() rather than require(),63,https://github.com/code-423n4/2021-06-realitycards-findings/issues/63,realitycards,2021/06,bug;duplicate;1 (Low Risk)
13,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,1,Shadowing Local Variables found in RCOrderbook.sol,124,https://github.com/code-423n4/2021-06-realitycards-findings/issues/124,realitycards,2021/06,bug;1 (Low Risk);sponsor confirmed;resolved
13,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,1,Missing events for arithmetic parameters in RCOrderbook.sol,125,https://github.com/code-423n4/2021-06-realitycards-findings/issues/125,realitycards,2021/06,bug;duplicate;0 (Non-critical);sponsor disputed
13,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,1,Missing zero address validation in RCOrderbook.sol,126,https://github.com/code-423n4/2021-06-realitycards-findings/issues/126,realitycards,2021/06,bug;duplicate;1 (Low Risk)
13,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,1,Missing zero check for variable in RCOrderbook.sol [Continued],127,https://github.com/code-423n4/2021-06-realitycards-findings/issues/127,realitycards,2021/06,bug;duplicate;1 (Low Risk)
13,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,1,Calls being made inside a loop in RCOrderbook.sol,129,https://github.com/code-423n4/2021-06-realitycards-findings/issues/129,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,1,Benign Reentrancy Issues found in RCOrderbook.sol,131,https://github.com/code-423n4/2021-06-realitycards-findings/issues/131,realitycards,2021/06,bug;duplicate;1 (Low Risk)
13,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,1,Reentrancy Events found in RCOrderbook.sol,132,https://github.com/code-423n4/2021-06-realitycards-findings/issues/132,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,Possible locked-ether (funds) Issue in RCOrderbook.sol,43,https://github.com/code-423n4/2021-06-realitycards-findings/issues/43,realitycards,2021/06,bug;2 (Med Risk);sponsor disputed;disagree with severity
13,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,Possible Reentrency not-involving-eth Issues [RCOrderbook.sol],47,https://github.com/code-423n4/2021-06-realitycards-findings/issues/47,realitycards,2021/06,bug;2 (Med Risk);sponsor disputed
13,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,Uninitialized Local Variables found in RCOrderbook.sol,50,https://github.com/code-423n4/2021-06-realitycards-findings/issues/50,realitycards,2021/06,bug;2 (Med Risk);sponsor disputed;disagree with severity
13,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,Possible locked-ether (funds) issue found in RCNftHubL2.sol,51,https://github.com/code-423n4/2021-06-realitycards-findings/issues/51,realitycards,2021/06,bug;duplicate;2 (Med Risk)
13,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,Uninitialized Local Variables found in RCNftHubL2.sol,59,https://github.com/code-423n4/2021-06-realitycards-findings/issues/59,realitycards,2021/06,bug;duplicate;2 (Med Risk)
13,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,G,Declaring a public function as external in RCNftHubL2.sol to save gas,60,https://github.com/code-423n4/2021-06-realitycards-findings/issues/60,realitycards,2021/06,bug;G (Gas Optimization);sponsor disputed
13,maxgrok,0x4B037687c1C5159285A7DefAD3681f8e123D2478,1,Function Visibility Not Set,58,https://github.com/code-423n4/2021-06-realitycards-findings/issues/58,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,questionFinalised is redundant,111,https://github.com/code-423n4/2021-06-realitycards-findings/issues/111,realitycards,2021/06,bug;0 (Non-critical);sponsor confirmed;resolved
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Calculation imprecision when calculating the reaming cut,117,https://github.com/code-423n4/2021-06-realitycards-findings/issues/117,realitycards,2021/06,bug;0 (Non-critical);sponsor acknowledged
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Redudant calculations in payRent when marketBalance < _amount,123,https://github.com/code-423n4/2021-06-realitycards-findings/issues/123,realitycards,2021/06,bug;G (Gas Optimization);sponsor confirmed;resolved
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Check that marketLockingTime >= marketOpeningTime,128,https://github.com/code-423n4/2021-06-realitycards-findings/issues/128,realitycards,2021/06,bug;duplicate;2 (Med Risk)
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,changeUberOwner does not allow 0x0 address,130,https://github.com/code-423n4/2021-06-realitycards-findings/issues/130,realitycards,2021/06,bug;duplicate;1 (Low Risk)
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,_processRentCollection does not check the return value of payRent,133,https://github.com/code-423n4/2021-06-realitycards-findings/issues/133,realitycards,2021/06,bug;duplicate;0 (Non-critical)
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,totalNftMintCount can be replaced with ERC721 totalSupply(),134,https://github.com/code-423n4/2021-06-realitycards-findings/issues/134,realitycards,2021/06,bug;1 (Low Risk);sponsor confirmed;resolved
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,minRentalDayDivisor may change,135,https://github.com/code-423n4/2021-06-realitycards-findings/issues/135,realitycards,2021/06,bug;duplicate;2 (Med Risk)
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,event WithdrawnBatch is not used,32,https://github.com/code-423n4/2021-06-realitycards-findings/issues/32,realitycards,2021/06,bug;0 (Non-critical);sponsor confirmed;resolved
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,function resetUser should emit LogUserForeclosed,33,https://github.com/code-423n4/2021-06-realitycards-findings/issues/33,realitycards,2021/06,bug;duplicate;0 (Non-critical);sponsor confirmed;resolved
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,functions safeTransferFrom and transferFrom are too similar,34,https://github.com/code-423n4/2021-06-realitycards-findings/issues/34,realitycards,2021/06,bug;0 (Non-critical);sponsor confirmed;resolved
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,contract RCTreasury does not use nfthub and setNftHubAddress,35,https://github.com/code-423n4/2021-06-realitycards-findings/issues/35,realitycards,2021/06,bug;0 (Non-critical);sponsor confirmed;resolved
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,updateRentalRate updates deposit but does not emit LogAdjustDeposit,36,https://github.com/code-423n4/2021-06-realitycards-findings/issues/36,realitycards,2021/06,bug;duplicate;0 (Non-critical);sponsor confirmed;resolved
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Inclusive check of user deposit,37,https://github.com/code-423n4/2021-06-realitycards-findings/issues/37,realitycards,2021/06,bug;duplicate;1 (Low Risk);sponsor confirmed
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,circuitBreaker overrides the state,38,https://github.com/code-423n4/2021-06-realitycards-findings/issues/38,realitycards,2021/06,bug;0 (Non-critical);sponsor confirmed;resolved
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,function _incrementState checks the boundaries before incrementing it,39,https://github.com/code-423n4/2021-06-realitycards-findings/issues/39,realitycards,2021/06,bug;duplicate;G (Gas Optimization)
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,anyone can call function sponsor,40,https://github.com/code-423n4/2021-06-realitycards-findings/issues/40,realitycards,2021/06,bug;3 (High Risk);sponsor confirmed;resolved
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,erc20 transfer and transferFrom functions,41,https://github.com/code-423n4/2021-06-realitycards-findings/issues/41,realitycards,2021/06,bug;duplicate;3 (High Risk)
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,break loop if 0 card affiliate address is found,42,https://github.com/code-423n4/2021-06-realitycards-findings/issues/42,realitycards,2021/06,bug;duplicate;G (Gas Optimization)
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,prevent bids in WINNER_TAKES_ALL when it is no longer possible to win,64,https://github.com/code-423n4/2021-06-realitycards-findings/issues/64,realitycards,2021/06,bug;0 (Non-critical);sponsor acknowledged
13,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,function topupMarketBalance should have a balancedBooks modifier,98,https://github.com/code-423n4/2021-06-realitycards-findings/issues/98,realitycards,2021/06,bug;duplicate;2 (Med Risk)
13,s1m0,0x7d379c4d48FB5bff0FDcb3efE14F7864aD46Dc10,1,Function name doesn't correspond to its behaviour,137,https://github.com/code-423n4/2021-06-realitycards-findings/issues/137,realitycards,2021/06,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
13,s1m0,0x7d379c4d48FB5bff0FDcb3efE14F7864aD46Dc10,2,User could deposit for free,141,https://github.com/code-423n4/2021-06-realitycards-findings/issues/141,realitycards,2021/06,bug;duplicate;3 (High Risk)
13,s1m0,0x7d379c4d48FB5bff0FDcb3efE14F7864aD46Dc10,1,maxContractBalance can be bypassed,163,https://github.com/code-423n4/2021-06-realitycards-findings/issues/163,realitycards,2021/06,bug;0 (Non-critical);sponsor disputed
13,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Market opening time can be before the locking time,165,https://github.com/code-423n4/2021-06-realitycards-findings/issues/165,realitycards,2021/06,bug;duplicate;2 (Med Risk)
13,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,The `domainSeperator` is not recalculated after a hard fork happens,166,https://github.com/code-423n4/2021-06-realitycards-findings/issues/166,realitycards,2021/06,bug;1 (Low Risk);sponsor confirmed
13,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Lack of non-zero check of parameter `_percentIncrease` in `setminimumPriceIncreasePercent`,167,https://github.com/code-423n4/2021-06-realitycards-findings/issues/167,realitycards,2021/06,bug;duplicate;1 (Low Risk)
13,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Variable `globalPause` is not checked in the function `refundUser`,168,https://github.com/code-423n4/2021-06-realitycards-findings/issues/168,realitycards,2021/06,bug;1 (Low Risk);sponsor disputed
13,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Return values of ERC20 `transfer` and `transferFrom` are unchecked,169,https://github.com/code-423n4/2021-06-realitycards-findings/issues/169,realitycards,2021/06,bug;duplicate;3 (High Risk)
13,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Incorrect deposit check when canceling user's foreclosure in function `deposit`,170,https://github.com/code-423n4/2021-06-realitycards-findings/issues/170,realitycards,2021/06,bug;duplicate;1 (Low Risk)
13,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Function `foreclosureTimeUser` returns a shorter user's foreclosure time than expected,171,https://github.com/code-423n4/2021-06-realitycards-findings/issues/171,realitycards,2021/06,bug;2 (Med Risk);sponsor confirmed;resolved
13,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,A malicious actor can let market sponsors send sponsorship to unintended markets,172,https://github.com/code-423n4/2021-06-realitycards-findings/issues/172,realitycards,2021/06,bug;duplicate;3 (High Risk)
16,0xRajeev,asdf,0,test issue,1,https://github.com/code-423n4/2021-06-tracer-findings/issues/1,tracer,2021/06,invalid
16,0xRajeev,rajeev.eth,2,Single-step process for critical ownership transfer ,43,https://github.com/code-423n4/2021-06-tracer-findings/issues/43,tracer,2021/06,bug;2 (Med Risk);sponsor acknowledged
16,0xRajeev,rajeev.eth,2,Lack of enforcement of non-unique marketId’s may confuse/trick users leading to cross-market risk ,45,https://github.com/code-423n4/2021-06-tracer-findings/issues/45,tracer,2021/06,bug;invalid;sponsor dispute
16,0xRajeev,rajeev.eth,2,Events missing for critical actions of owner ,46,https://github.com/code-423n4/2021-06-tracer-findings/issues/46,tracer,2021/06,bug;duplicate;invalid
16,0xRajeev,rajeev.eth,1,LIQUIDATION_GAS_COST may not be a constant ,48,https://github.com/code-423n4/2021-06-tracer-findings/issues/48,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed
16,0xRajeev,rajeev.eth,1,Zero-address checks are missing,49,https://github.com/code-423n4/2021-06-tracer-findings/issues/49,tracer,2021/06,bug;1 (Low Risk)
16,0xRajeev,rajeev.eth,2,Missing input validation on key market parameters,51,https://github.com/code-423n4/2021-06-tracer-findings/issues/51,tracer,2021/06,bug;duplicate;invalid
16,0xRajeev,rajeev.eth,2,Missing event to log all market parameters on market creation,53,https://github.com/code-423n4/2021-06-tracer-findings/issues/53,tracer,2021/06,bug;invalid;sponsor dispute
16,0xRajeev,rajeev.eth,2,Lack of return value check or use of SafeERC20 wrappers for token transfers ,54,https://github.com/code-423n4/2021-06-tracer-findings/issues/54,tracer,2021/06,bug;duplicate;2 (Med Risk)
16,0xRajeev,rajeev.eth,2,Incompatibility With Rebasing/Deflationary/Inflationary tokens,55,https://github.com/code-423n4/2021-06-tracer-findings/issues/55,tracer,2021/06,bug;duplicate;1 (Low Risk)
16,0xRajeev,rajeev.eth,1,Deposit event should use the converted WAD amount,56,https://github.com/code-423n4/2021-06-tracer-findings/issues/56,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed
16,0xRajeev,rajeev.eth,1,tvl calculation in withdraw() should use convertedWadAmount instead of amount,57,https://github.com/code-423n4/2021-06-tracer-findings/issues/57,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed
16,0xRajeev,rajeev.eth,2,Malicious owner can remove whitelist to cause DoS/griefing or lock/loss of funds,58,https://github.com/code-423n4/2021-06-tracer-findings/issues/58,tracer,2021/06,bug;duplicate;invalid
16,0xRajeev,rajeev.eth,1,Overly permissive insurance position check ,59,https://github.com/code-423n4/2021-06-tracer-findings/issues/59,tracer,2021/06,bug;invalid;sponsor dispute
16,0xRajeev,rajeev.eth,1,Missing input validation on account address being settled may lead to undefined behavior ,60,https://github.com/code-423n4/2021-06-tracer-findings/issues/60,tracer,2021/06,bug;invalid;sponsor dispute
16,0xRajeev,rajeev.eth,1,Dangerous use of storage data location specifier,61,https://github.com/code-423n4/2021-06-tracer-findings/issues/61,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed;disagree with severity
16,0xRajeev,rajeev.eth,1,Event log poisoning/griefing in withdrawFees() ,63,https://github.com/code-423n4/2021-06-tracer-findings/issues/63,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed;disagree with severity
16,0xRajeev,rajeev.eth,2,Missing events for critical parameter changing operations by owner,64,https://github.com/code-423n4/2021-06-tracer-findings/issues/64,tracer,2021/06,bug;2 (Med Risk)
16,0xRajeev,rajeev.eth,2,Missing timelock for critical parameter changing operations by owner ,65,https://github.com/code-423n4/2021-06-tracer-findings/issues/65,tracer,2021/06,bug;duplicate;invalid
16,0xRajeev,rajeev.eth,2,Malicious owner can arbitrarily change fee to any % value ,66,https://github.com/code-423n4/2021-06-tracer-findings/issues/66,tracer,2021/06,bug;2 (Med Risk);sponsor confirmed
16,0xRajeev,rajeev.eth,3,ChainID is hardcoded to `1337` leading to all trades failing across all markets,67,https://github.com/code-423n4/2021-06-tracer-findings/issues/67,tracer,2021/06,bug;duplicate;1 (Low Risk);sponsor dispute;disagree with severity
16,0xRajeev,rajeev.eth,1,Key trading function executeTrade() is missing an event ,68,https://github.com/code-423n4/2021-06-tracer-findings/issues/68,tracer,2021/06,bug;invalid;sponsor dispute
16,0xRajeev,rajeev.eth,1,Potential Out-of-Gas exception due to unbounded loop,69,https://github.com/code-423n4/2021-06-tracer-findings/issues/69,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed
16,0xRajeev,rajeev.eth,1,Missing replay protection against previously executed orders ,70,https://github.com/code-423n4/2021-06-tracer-findings/issues/70,tracer,2021/06,bug;invalid;sponsor dispute
16,0xRajeev,rajeev.eth,1,Lack of a contract existence check may lead to undefined behavior,71,https://github.com/code-423n4/2021-06-tracer-findings/issues/71,tracer,2021/06,bug;1 (Low Risk)
16,0xRajeev,rajeev.eth,1,Lack of nonreentrant modifier or CEI pattern may lead to reentrancy ,72,https://github.com/code-423n4/2021-06-tracer-findings/issues/72,tracer,2021/06,bug;duplicate;2 (Med Risk);sponsor dispute
16,0xRajeev,rajeev.eth,1,Use of deprecated Chainlink API ,73,https://github.com/code-423n4/2021-06-tracer-findings/issues/73,tracer,2021/06,bug;2 (Med Risk)
16,0xRajeev,rajeev.eth,3,Use of incorrect index leads to incorrect updation of funding rates,74,https://github.com/code-423n4/2021-06-tracer-findings/issues/74,tracer,2021/06,bug;3 (High Risk);sponsor confirmed
16,0xRajeev,rajeev.eth,1,Close-ended time ranges may confuse users/interfaces,75,https://github.com/code-423n4/2021-06-tracer-findings/issues/75,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed;disagree with severity
16,0xRajeev,rajeev.eth,1,Using tx.gasprice to prevent front-running may lead to failed liquidations,76,https://github.com/code-423n4/2021-06-tracer-findings/issues/76,tracer,2021/06,bug;1 (Low Risk);sponsor acknowledged
16,0xRajeev,rajeev.eth,2,Missing events and sanity/threshold checks for critical onlyOwner setter functions in Liquidation ,77,https://github.com/code-423n4/2021-06-tracer-findings/issues/77,tracer,2021/06,bug;duplicate;invalid;sponsor confirmed;disagree with severity
16,0xRajeev,rajeev.eth,1,setDecimals can be set by anyone and not used,78,https://github.com/code-423n4/2021-06-tracer-findings/issues/78,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed;disagree with severity
16,0xRajeev,rajeev.eth,1,Missing length check on array could lead to undefined behavior,79,https://github.com/code-423n4/2021-06-tracer-findings/issues/79,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed;disagree with severity
16,0xRajeev,rajeev.eth,1,Potential division by zero,80,https://github.com/code-423n4/2021-06-tracer-findings/issues/80,tracer,2021/06,bug;duplicate;invalid
16,0xRajeev,rajeev.eth,3,Malicious owner can drain the market at any time using SafetyWithdraw ,81,https://github.com/code-423n4/2021-06-tracer-findings/issues/81,tracer,2021/06,bug;3 (High Risk);sponsor confirmed;disagree with severity
16,0xRajeev,rajeev.eth,3,Malicious owner can drain Insurance Pool at any time by minting InsurancePool tokens,82,https://github.com/code-423n4/2021-06-tracer-findings/issues/82,tracer,2021/06,bug;invalid;sponsor dispute
16,0xRajeev,rajeev.eth,1,Potential division by zero ,83,https://github.com/code-423n4/2021-06-tracer-findings/issues/83,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed
16,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,Missing checks for lowestMaxLeverage < maxLeverage and insurancePoolSwitchStage < deleveragingCliff,117,https://github.com/code-423n4/2021-06-tracer-findings/issues/117,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed
16,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,Wrong trading pricing calculations,119,https://github.com/code-423n4/2021-06-tracer-findings/issues/119,tracer,2021/06,bug;3 (High Risk);sponsor confirmed
16,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,Superfluous verifySignature function,121,https://github.com/code-423n4/2021-06-tracer-findings/issues/121,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed
16,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,State variable not used,122,https://github.com/code-423n4/2021-06-tracer-findings/issues/122,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed
16,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Comparison between Raw token amount and WAD,124,https://github.com/code-423n4/2021-06-tracer-findings/issues/124,tracer,2021/06,bug;invalid;sponsor dispute
16,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,Gas savings in getPoolFundingRate(),125,https://github.com/code-423n4/2021-06-tracer-findings/issues/125,tracer,2021/06,bug;G (Gas Optimization);sponsor confirmed
16,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,Logic error in fee subtraction,127,https://github.com/code-423n4/2021-06-tracer-findings/issues/127,tracer,2021/06,bug;3 (High Risk);sponsor confirmed
16,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,Change claimEscrow() to external,128,https://github.com/code-423n4/2021-06-tracer-findings/issues/128,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed
16,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,Gas savings in verifyAndSubmitLiquidation(),131,https://github.com/code-423n4/2021-06-tracer-findings/issues/131,tracer,2021/06,bug;G (Gas Optimization);sponsor confirmed
16,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,G,Use EIP-1167 in order to deploy new perpetual swap contracts,120,https://github.com/code-423n4/2021-06-tracer-findings/issues/120,tracer,2021/06,bug;G (Gas Optimization);sponsor confirmed
16,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,1,Missing validation matchOrders == true in executeTrade,126,https://github.com/code-423n4/2021-06-tracer-findings/issues/126,tracer,2021/06,bug;duplicate;1 (Low Risk);sponsor confirmed
16,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,1,Accumulation of error in method averagePriceForPeriod,129,https://github.com/code-423n4/2021-06-tracer-findings/issues/129,tracer,2021/06,bug;invalid;sponsor dispute
16,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,1,Missing validation on calculateTWAP,130,https://github.com/code-423n4/2021-06-tracer-findings/issues/130,tracer,2021/06,bug;invalid;sponsor dispute
16,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,1,Use latestRoundData instead of latestAnswer,132,https://github.com/code-423n4/2021-06-tracer-findings/issues/132,tracer,2021/06,bug;duplicate;2 (Med Risk)
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Trader orders can be frontrun and users can be denied from trading,100,https://github.com/code-423n4/2021-06-tracer-findings/issues/100,tracer,2021/06,bug;2 (Med Risk)
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`TracerPerpetualSwaps.LIQUIDATION_GAS_COST` should be upgradeable,101,https://github.com/code-423n4/2021-06-tracer-findings/issues/101,tracer,2021/06,bug;duplicate;1 (Low Risk);sponsor confirmed
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Can set values to more than 100%,102,https://github.com/code-423n4/2021-06-tracer-findings/issues/102,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,0,Market creator can steal user funds by setting fess >= 100%,103,https://github.com/code-423n4/2021-06-tracer-findings/issues/103,tracer,2021/06,bug;duplicate;invalid
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Deflationary tokens are not supported,104,https://github.com/code-423n4/2021-06-tracer-findings/issues/104,tracer,2021/06,bug;1 (Low Risk);sponsor dispute;disagree with severity
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Insurance slippage reimbursement can be used to steal insurance fund,105,https://github.com/code-423n4/2021-06-tracer-findings/issues/105,tracer,2021/06,bug;3 (High Risk);sponsor confirmed
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Wrong funding index in settle when no base?,106,https://github.com/code-423n4/2021-06-tracer-findings/issues/106,tracer,2021/06,bug;2 (Med Risk);sponsor confirmed
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,87,https://github.com/code-423n4/2021-06-tracer-findings/issues/87,tracer,2021/06,bug;duplicate;1 (Low Risk)
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,LibMath fails implicitly,88,https://github.com/code-423n4/2021-06-tracer-findings/issues/88,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,LibMath sumN can iterate over array,89,https://github.com/code-423n4/2021-06-tracer-findings/issues/89,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unused code,90,https://github.com/code-423n4/2021-06-tracer-findings/issues/90,tracer,2021/06,bug;duplicate;0 (Non-critical);sponsor confirmed;disagree with severity
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Usage of deprecated ChainLink API in `GasOracle`,91,https://github.com/code-423n4/2021-06-tracer-findings/issues/91,tracer,2021/06,bug;duplicate;2 (Med Risk)
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Usage of deprecated ChainLink API in `OracleAdapter`,92,https://github.com/code-423n4/2021-06-tracer-findings/issues/92,tracer,2021/06,bug;duplicate;invalid
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Wrong price scale for `GasOracle`,93,https://github.com/code-423n4/2021-06-tracer-findings/issues/93,tracer,2021/06,bug;3 (High Risk);sponsor confirmed;disagree with severity
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing access restriction on `GasOracle.setDecimals`,94,https://github.com/code-423n4/2021-06-tracer-findings/issues/94,tracer,2021/06,bug;duplicate;0 (Non-critical)
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`Oracle` example contract is vulnerable,95,https://github.com/code-423n4/2021-06-tracer-findings/issues/95,tracer,2021/06,bug;invalid;sponsor dispute
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Insurance ERC20 return values not checked,96,https://github.com/code-423n4/2021-06-tracer-findings/issues/96,tracer,2021/06,bug;duplicate;2 (Med Risk)
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,TracerPerpetualSwaps ERC20 return values not checked,97,https://github.com/code-423n4/2021-06-tracer-findings/issues/97,tracer,2021/06,bug;duplicate;invalid
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,SafetyWithdraw ERC20 return values not checked,98,https://github.com/code-423n4/2021-06-tracer-findings/issues/98,tracer,2021/06,bug;duplicate;2 (Med Risk)
16,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Wrong token approval,99,https://github.com/code-423n4/2021-06-tracer-findings/issues/99,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed;disagree with severity
16,gpersoon,gpersoon.eth,0,Only one constructor with an emit,10,https://github.com/code-423n4/2021-06-tracer-findings/issues/10,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed
16,gpersoon,gpersoon.eth,2,prb-math not audited,11,https://github.com/code-423n4/2021-06-tracer-findings/issues/11,tracer,2021/06,bug;2 (Med Risk);sponsor confirmed
16,gpersoon,gpersoon.eth,1,todos left in the code,12,https://github.com/code-423n4/2021-06-tracer-findings/issues/12,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed
16,gpersoon,gpersoon.eth,0,Use constants for numbers,14,https://github.com/code-423n4/2021-06-tracer-findings/issues/14,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed
16,gpersoon,gpersoon.eth,0,alternative solidity coding,15,https://github.com/code-423n4/2021-06-tracer-findings/issues/15,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed
16,gpersoon,gpersoon.eth,0,Comment for formula calcEscrowLiquidationAmount different than code,16,https://github.com/code-423n4/2021-06-tracer-findings/issues/16,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed
16,gpersoon,gpersoon.eth,1,check sign in calculateSlippage,17,https://github.com/code-423n4/2021-06-tracer-findings/issues/17,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed;disagree with severity
16,gpersoon,gpersoon.eth,0,Comment in partialLiquidationIsValid misleading,18,https://github.com/code-423n4/2021-06-tracer-findings/issues/18,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed
16,gpersoon,gpersoon.eth,1,LIQUIDATION_GAS_COST hardcoded,19,https://github.com/code-423n4/2021-06-tracer-findings/issues/19,tracer,2021/06,bug;duplicate;1 (Low Risk)
16,gpersoon,gpersoon.eth,2,Claim liquidation escrow,2,https://github.com/code-423n4/2021-06-tracer-findings/issues/2,tracer,2021/06,bug;2 (Med Risk);sponsor confirmed
16,gpersoon,gpersoon.eth,1,Possible division by 0 in averagePriceForPeriod/meanN,20,https://github.com/code-423n4/2021-06-tracer-findings/issues/20,tracer,2021/06,bug;duplicate;1 (Low Risk)
16,gpersoon,gpersoon.eth,1,calculateTWAP  doesn't calculate oraclePrices when no trades are done in the last 8 hours,21,https://github.com/code-423n4/2021-06-tracer-findings/issues/21,tracer,2021/06,bug;invalid;sponsor dispute
16,gpersoon,gpersoon.eth,1,oracle price and decimals updateable by everyone,22,https://github.com/code-423n4/2021-06-tracer-findings/issues/22,tracer,2021/06,bug;duplicate;0 (Non-critical)
16,gpersoon,gpersoon.eth,1,make sure withdrawFees allways can withdraw,23,https://github.com/code-423n4/2021-06-tracer-findings/issues/23,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed
16,gpersoon,gpersoon.eth,0,use try catch,25,https://github.com/code-423n4/2021-06-tracer-findings/issues/25,tracer,2021/06,bug;0 (Non-critical);sponsor acknowledged
16,gpersoon,gpersoon.eth,0,Comment in claimEscrow,26,https://github.com/code-423n4/2021-06-tracer-findings/issues/26,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed
16,gpersoon,gpersoon.eth,1,releaseTime different from whitepaper,27,https://github.com/code-423n4/2021-06-tracer-findings/issues/27,tracer,2021/06,bug;invalid;sponsor dispute
16,gpersoon,gpersoon.eth,1,transferOwnership check for address(0),28,https://github.com/code-423n4/2021-06-tracer-findings/issues/28,tracer,2021/06,bug;duplicate;1 (Low Risk)
16,gpersoon,gpersoon.eth,0,Use immutable keyword,29,https://github.com/code-423n4/2021-06-tracer-findings/issues/29,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed
16,gpersoon,gpersoon.eth,2,executeTrade with same trades,3,https://github.com/code-423n4/2021-06-tracer-findings/issues/3,tracer,2021/06,bug;invalid;sponsor dispute
16,gpersoon,gpersoon.eth,2,avoid paying insurance,30,https://github.com/code-423n4/2021-06-tracer-findings/issues/30,tracer,2021/06,bug;2 (Med Risk);sponsor confirmed;disagree with severity
16,gpersoon,gpersoon.eth,2,executeTrade can be frontrun,4,https://github.com/code-423n4/2021-06-tracer-findings/issues/4,tracer,2021/06,bug;duplicate;2 (Med Risk)
16,gpersoon,gpersoon.eth,2,Predate trades,5,https://github.com/code-423n4/2021-06-tracer-findings/issues/5,tracer,2021/06,bug;invalid;sponsor dispute
16,gpersoon,gpersoon.eth,1,matchOrders could/should check market,6,https://github.com/code-423n4/2021-06-tracer-findings/issues/6,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed
16,gpersoon,gpersoon.eth,3,rug pull possible via SafetyWithdraw ,7,https://github.com/code-423n4/2021-06-tracer-findings/issues/7,tracer,2021/06,bug;duplicate;3 (High Risk)
16,gpersoon,gpersoon.eth,2,No pause function is present,8,https://github.com/code-423n4/2021-06-tracer-findings/issues/8,tracer,2021/06,bug;invalid;sponsor dispute
16,gpersoon,gpersoon.eth,1,Deployers can be called by everyone,9,https://github.com/code-423n4/2021-06-tracer-findings/issues/9,tracer,2021/06,bug;invalid;sponsor dispute
16,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Variables that can be converted into immutables,24,https://github.com/code-423n4/2021-06-tracer-findings/issues/24,tracer,2021/06,bug;G (Gas Optimization);sponsor confirmed
16,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,[Gas] Change some function parameters from `memory` to `calldata`,36,https://github.com/code-423n4/2021-06-tracer-findings/issues/36,tracer,2021/06,bug;G (Gas Optimization);sponsor confirmed
16,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,[Gas] Use at least 0.8.0 instead of 0.8.4,37,https://github.com/code-423n4/2021-06-tracer-findings/issues/37,tracer,2021/06,bug;G (Gas Optimization);sponsor confirmed
16,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,3,Lack of access modifier,31,https://github.com/code-423n4/2021-06-tracer-findings/issues/31,tracer,2021/06,bug;duplicate;invalid
16,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Unused return value from transfer()/transferFrom(),32,https://github.com/code-423n4/2021-06-tracer-findings/issues/32,tracer,2021/06,bug;duplicate;2 (Med Risk)
16,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,claimEscrow() accepts invalid receiptId,33,https://github.com/code-423n4/2021-06-tracer-findings/issues/33,tracer,2021/06,bug;0 (Non-critical)
16,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Floating Pragma is used in all the contracts,34,https://github.com/code-423n4/2021-06-tracer-findings/issues/34,tracer,2021/06,bug;duplicate;1 (Low Risk)
16,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Using array memory parameter without checking its length ,35,https://github.com/code-423n4/2021-06-tracer-findings/issues/35,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed
16,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,Unused State variable,38,https://github.com/code-423n4/2021-06-tracer-findings/issues/38,tracer,2021/06,bug;G (Gas Optimization);sponsor confirmed
16,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,Unused Function(),39,https://github.com/code-423n4/2021-06-tracer-findings/issues/39,tracer,2021/06,bug;duplicate;0 (Non-critical);sponsor confirmed
16,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,state variable which can be declared as immutable,40,https://github.com/code-423n4/2021-06-tracer-findings/issues/40,tracer,2021/06,bug;G (Gas Optimization);sponsor confirmed
16,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,function which can declared as external ,62,https://github.com/code-423n4/2021-06-tracer-findings/issues/62,tracer,2021/06,bug;G (Gas Optimization);sponsor confirmed
16,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,Lack of zero address validation in constructor,84,https://github.com/code-423n4/2021-06-tracer-findings/issues/84,tracer,2021/06,bug;duplicate;1 (Low Risk)
16,Lucius,0x5dC36821bA68D5C3E2d7Ddfd9daDA782A45EDB8E,2,Unchecked token transfers,13,https://github.com/code-423n4/2021-06-tracer-findings/issues/13,tracer,2021/06,bug;duplicate;2 (Med Risk)
16,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,claimEscrow with not yet existing id,107,https://github.com/code-423n4/2021-06-tracer-findings/issues/107,tracer,2021/06,bug;duplicate;0 (Non-critical);sponsor confirmed;disagree with severity
16,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,amountToReturn > receipt.escrowedAmount could be inclusive,108,https://github.com/code-423n4/2021-06-tracer-findings/issues/108,tracer,2021/06,bug;G (Gas Optimization);sponsor confirmed
16,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,inclusive check that account is not above minimum margin,109,https://github.com/code-423n4/2021-06-tracer-findings/issues/109,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed
16,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Low-level call returns true even if the account called is non-existent,110,https://github.com/code-423n4/2021-06-tracer-findings/issues/110,tracer,2021/06,bug;duplicate;1 (Low Risk)
16,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,erc20 transfers do not check the return value,111,https://github.com/code-423n4/2021-06-tracer-findings/issues/111,tracer,2021/06,bug;duplicate;2 (Med Risk)
16,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Unused functions and variables,41,https://github.com/code-423n4/2021-06-tracer-findings/issues/41,tracer,2021/06,bug;duplicate;0 (Non-critical)
16,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,SafetyWithdraw can transfer any erc20 token,42,https://github.com/code-423n4/2021-06-tracer-findings/issues/42,tracer,2021/06,bug;duplicate;3 (High Risk)
16,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,cover the case of block.timestamp = receipt.releaseTime,44,https://github.com/code-423n4/2021-06-tracer-findings/issues/44,tracer,2021/06,bug;duplicate;0 (Non-critical)
16,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,orders and orderToSig mappings,47,https://github.com/code-423n4/2021-06-tracer-findings/issues/47,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed;disagree with severity
16,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,recalculation of 10**18,50,https://github.com/code-423n4/2021-06-tracer-findings/issues/50,tracer,2021/06,bug;G (Gas Optimization);sponsor confirmed
16,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,"executionPrice, newMakeAverage and newTakeAverage before calling the market",52,https://github.com/code-423n4/2021-06-tracer-findings/issues/52,tracer,2021/06,bug;G (Gas Optimization);sponsor confirmed
16,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,hardcoded chainId,85,https://github.com/code-423n4/2021-06-tracer-findings/issues/85,tracer,2021/06,bug;1 (Low Risk)
16,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,uninitialized addresses,86,https://github.com/code-423n4/2021-06-tracer-findings/issues/86,tracer,2021/06,bug;duplicate;1 (Low Risk)
16,s1m0,0x7d379c4d48FB5bff0FDcb3efE14F7864aD46Dc10,1,No support for token with fee on transfer,112,https://github.com/code-423n4/2021-06-tracer-findings/issues/112,tracer,2021/06,bug;duplicate;1 (Low Risk)
16,s1m0,0x7d379c4d48FB5bff0FDcb3efE14F7864aD46Dc10,1,No support for token with decimals > 18,113,https://github.com/code-423n4/2021-06-tracer-findings/issues/113,tracer,2021/06,bug;duplicate;2 (Med Risk)
16,s1m0,0x7d379c4d48FB5bff0FDcb3efE14F7864aD46Dc10,1,EIP-712 ChainId hardcoded,114,https://github.com/code-423n4/2021-06-tracer-findings/issues/114,tracer,2021/06,bug;duplicate;1 (Low Risk)
16,s1m0,0x7d379c4d48FB5bff0FDcb3efE14F7864aD46Dc10,2,No check transferFrom() return value,115,https://github.com/code-423n4/2021-06-tracer-findings/issues/115,tracer,2021/06,bug;2 (Med Risk);sponsor confirmed
16,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Unlocked pragma used in multiple contracts,133,https://github.com/code-423n4/2021-06-tracer-findings/issues/133,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed;disagree with severity
16,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Return values of ERC20 `transfer` and `transferFrom` are unchecked,134,https://github.com/code-423n4/2021-06-tracer-findings/issues/134,tracer,2021/06,bug;duplicate;2 (Med Risk)
16,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Unchangeable chain ID information in `EIP712_DOMAIN`,135,https://github.com/code-423n4/2021-06-tracer-findings/issues/135,tracer,2021/06,bug;duplicate;1 (Low Risk)
16,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,The `transferOwnership` function of `Liquidation` lacks a non-zero address check,136,https://github.com/code-423n4/2021-06-tracer-findings/issues/136,tracer,2021/06,bug;duplicate;1 (Low Risk);sponsor confirmed
16,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,The `setDecimals` function of `GasOracle` is permissionless,137,https://github.com/code-423n4/2021-06-tracer-findings/issues/137,tracer,2021/06,bug;duplicate;0 (Non-critical);disagree with severity;sponsor acknowledged
16,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Two tracer markets can have the same market ID,138,https://github.com/code-423n4/2021-06-tracer-findings/issues/138,tracer,2021/06,bug;duplicate;invalid
16,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,`Prices.averagePrice` does not show a difference between no trades and a zero price,139,https://github.com/code-423n4/2021-06-tracer-findings/issues/139,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed
16,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,The `averagePriceForPeriod` function may revert without proper error message returned,140,https://github.com/code-423n4/2021-06-tracer-findings/issues/140,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed
16,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Margin value is not checked to be non-negative in `leveragedNotionalValue`,141,https://github.com/code-423n4/2021-06-tracer-findings/issues/141,tracer,2021/06,bug;1 (Low Risk);sponsor acknowledged
16,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,The `currentHour` variable in `Pricing` could be out of sync,142,https://github.com/code-423n4/2021-06-tracer-findings/issues/142,tracer,2021/06,bug;1 (Low Risk);sponsor confirmed
16,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Add reentracy protections on function `executeTrade`,143,https://github.com/code-423n4/2021-06-tracer-findings/issues/143,tracer,2021/06,bug;2 (Med Risk);sponsor dispute
16,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,A market's hourly average price can be biased by a large number of trades,144,https://github.com/code-423n4/2021-06-tracer-findings/issues/144,tracer,2021/06,bug;duplicate;3 (High Risk)
16,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Using deprecated Chainlink function `latestAnswer`,145,https://github.com/code-423n4/2021-06-tracer-findings/issues/145,tracer,2021/06,bug;duplicate;2 (Med Risk);sponsor confirmed
16,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Underflow problems occurring when a token has >18 decimals,116,https://github.com/code-423n4/2021-06-tracer-findings/issues/116,tracer,2021/06,bug;2 (Med Risk);sponsor confirmed
16,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,0,Unnecessary type conversions,118,https://github.com/code-423n4/2021-06-tracer-findings/issues/118,tracer,2021/06,bug;0 (Non-critical);sponsor confirmed
16,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Bots can frontrun market maker orders and cancel orders.,123,https://github.com/code-423n4/2021-06-tracer-findings/issues/123,tracer,2021/06,bug;duplicate;2 (Med Risk);sponsor dispute
19,0xRajeev,rajeev.eth,G,Using access lists can save gas due to EIP-2930 post-Berlin hard fork,39,https://github.com/code-423n4/2021-07-connext-findings/issues/39,connext,2021/07,bug;G (Gas Optimization);sponsor confirmed
19,0xRajeev,rajeev.eth,G,Caching repeatedly read state variables in local variables can save gas,40,https://github.com/code-423n4/2021-07-connext-findings/issues/40,connext,2021/07,bug;duplicate;G (Gas Optimization)
19,0xRajeev,rajeev.eth,G,Checking before external library call can save 2600 gas,41,https://github.com/code-423n4/2021-07-connext-findings/issues/41,connext,2021/07,bug;G (Gas Optimization);sponsor confirmed
19,0xRajeev,rajeev.eth,G,Consolidating library functions can save gas by preventing external calls,42,https://github.com/code-423n4/2021-07-connext-findings/issues/42,connext,2021/07,bug;G (Gas Optimization);sponsor confirmed
19,0xRajeev,rajeev.eth,G,Evaluate security benefit vs gas usage trade-off for using nonreentrant modifier on different functions,43,https://github.com/code-423n4/2021-07-connext-findings/issues/43,connext,2021/07,bug;G (Gas Optimization);sponsor confirmed
19,0xRajeev,rajeev.eth,G,Removing redundant checks can save gas,44,https://github.com/code-423n4/2021-07-connext-findings/issues/44,connext,2021/07,bug;duplicate;G (Gas Optimization)
19,0xRajeev,rajeev.eth,G,Checking non-zero value can avoid an external call to save gas,45,https://github.com/code-423n4/2021-07-connext-findings/issues/45,connext,2021/07,bug;G (Gas Optimization);sponsor confirmed
19,0xRajeev,rajeev.eth,3,Router liquidity on receiving chain can be double-dipped by the user,46,https://github.com/code-423n4/2021-07-connext-findings/issues/46,connext,2021/07,bug;3 (High Risk);sponsor confirmed
19,0xRajeev,rajeev.eth,3,Expired transfers will lock user funds on the sending chain,47,https://github.com/code-423n4/2021-07-connext-findings/issues/47,connext,2021/07,bug;3 (High Risk);sponsor confirmed
19,0xRajeev,rajeev.eth,1,Anyone can arbitrarily add router liquidity,48,https://github.com/code-423n4/2021-07-connext-findings/issues/48,connext,2021/07,bug;3 (High Risk);sponsor acknowledged
19,0xRajeev,rajeev.eth,1,Lack of guarded launch approach may be risky,49,https://github.com/code-423n4/2021-07-connext-findings/issues/49,connext,2021/07,bug;1 (Low Risk);sponsor confirmed
19,0xRajeev,rajeev.eth,1,Missing zero-address checks,50,https://github.com/code-423n4/2021-07-connext-findings/issues/50,connext,2021/07,bug;1 (Low Risk);sponsor confirmed
19,0xRajeev,rajeev.eth,1,Incompatibility With Rebasing/Deflationary/Inflationary tokens,51,https://github.com/code-423n4/2021-07-connext-findings/issues/51,connext,2021/07,bug;duplicate;1 (Low Risk)
19,0xRajeev,rajeev.eth,1,An attacker can front-run a user’s prepare() tx on sending chain to cause DoS by griefing,52,https://github.com/code-423n4/2021-07-connext-findings/issues/52,connext,2021/07,bug;1 (Low Risk);sponsor acknowledged
19,0xRajeev,rajeev.eth,1,Expiry check is strict and not consistent with other similar checks,53,https://github.com/code-423n4/2021-07-connext-findings/issues/53,connext,2021/07,bug;duplicate;1 (Low Risk)
19,0xRajeev,rajeev.eth,1,Signatures use only tx ID instead of entire digest,54,https://github.com/code-423n4/2021-07-connext-findings/issues/54,connext,2021/07,bug;2 (Med Risk);sponsor acknowledged
19,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,Loss of funds from contract,62,https://github.com/code-423n4/2021-07-connext-findings/issues/62,connext,2021/07,bug;duplicate;3 (High Risk);sponsor confirmed
19,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Missing function to view router balances,63,https://github.com/code-423n4/2021-07-connext-findings/issues/63,connext,2021/07,bug;invalid;sponsor confirmed
19,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,Missing @param in fulfill NatSpec,64,https://github.com/code-423n4/2021-07-connext-findings/issues/64,connext,2021/07,bug;0 (Non-critical);sponsor confirmed
19,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Funds can be stolen because of approval + send,10,https://github.com/code-423n4/2021-07-connext-findings/issues/10,connext,2021/07,bug;duplicate;3 (High Risk);sponsor confirmed
19,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Issues with fee-on transfer & rebasing tokens,11,https://github.com/code-423n4/2021-07-connext-findings/issues/11,connext,2021/07,bug;duplicate;1 (Low Risk)
19,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Malicious router can block cross-chain-transfers,12,https://github.com/code-423n4/2021-07-connext-findings/issues/12,connext,2021/07,bug;2 (Med Risk);sponsor acknowledged
19,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unsafe approve,13,https://github.com/code-423n4/2021-07-connext-findings/issues/13,connext,2021/07,bug;1 (Low Risk);sponsor confirmed
19,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,TransactionIDs may not be reused by user,14,https://github.com/code-423n4/2021-07-connext-findings/issues/14,connext,2021/07,bug;duplicate;2 (Med Risk)
19,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Router needs to decrease expiry by a significant buffer,15,https://github.com/code-423n4/2021-07-connext-findings/issues/15,connext,2021/07,bug;1 (Low Risk);sponsor acknowledged
19,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Unnecessary overflow checks,16,https://github.com/code-423n4/2021-07-connext-findings/issues/16,connext,2021/07,bug;duplicate;G (Gas Optimization)
19,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: removeUserActiveBlocks repeated storage access,17,https://github.com/code-423n4/2021-07-connext-findings/issues/17,connext,2021/07,bug;duplicate;G (Gas Optimization);sponsor acknowledged
19,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,"Gas: removeUserActiveBlocks could use ""swap with last trick""",18,https://github.com/code-423n4/2021-07-connext-findings/issues/18,connext,2021/07,bug;duplicate;G (Gas Optimization)
19,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Only pass transactionId as parameter instead of TransactionData,19,https://github.com/code-423n4/2021-07-connext-findings/issues/19,connext,2021/07,bug;G (Gas Optimization);sponsor confirmed
19,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Unnecessary data is sent to blockchain,20,https://github.com/code-423n4/2021-07-connext-findings/issues/20,connext,2021/07,bug;invalid;G (Gas Optimization);sponsor acknowledged
19,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,User `prepare` can be denied,7,https://github.com/code-423n4/2021-07-connext-findings/issues/7,connext,2021/07,bug;duplicate;3 (High Risk)
19,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`addLiquidity` can be denied,8,https://github.com/code-423n4/2021-07-connext-findings/issues/8,connext,2021/07,bug;duplicate;3 (High Risk)
19,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Funds are sent twice on `callTo` errors,9,https://github.com/code-423n4/2021-07-connext-findings/issues/9,connext,2021/07,bug;duplicate;3 (High Risk);sponsor confirmed
19,GalloDaSballo,0xB943cdb5622E7Bb26D3E462dB68Ee71D8868C940,G,"GAS: removeUserActiveBlocks can be done by finding and eliminating the found, rather than copying all fields into a new array",55,https://github.com/code-423n4/2021-07-connext-findings/issues/55,connext,2021/07,bug;duplicate;G (Gas Optimization)
19,GalloDaSballo,0xB943cdb5622E7Bb26D3E462dB68Ee71D8868C940,0,Refacotr: Reuse same code for hashVariantTransactionData with txData and when preparedBlockNumber is 0,56,https://github.com/code-423n4/2021-07-connext-findings/issues/56,connext,2021/07,bug;0 (Non-critical);sponsor confirmed
19,gpersoon,gpersoon.eth,3,receive funds 2x,1,https://github.com/code-423n4/2021-07-connext-findings/issues/1,connext,2021/07,bug;duplicate;3 (High Risk);sponsor confirmed
19,gpersoon,gpersoon.eth,3,receive and retrieve funds,2,https://github.com/code-423n4/2021-07-connext-findings/issues/2,connext,2021/07,bug;duplicate;3 (High Risk);sponsor confirmed
19,gpersoon,gpersoon.eth,0,don't use assembly ,3,https://github.com/code-423n4/2021-07-connext-findings/issues/3,connext,2021/07,bug;0 (Non-critical);sponsor confirmed
19,gpersoon,gpersoon.eth,1,wrapCall with weird ERC20 contracts,4,https://github.com/code-423n4/2021-07-connext-findings/issues/4,connext,2021/07,bug;1 (Low Risk);sponsor confirmed
19,gpersoon,gpersoon.eth,2,grief a user by not allowing him to retrieve funds,5,https://github.com/code-423n4/2021-07-connext-findings/issues/5,connext,2021/07,bug;duplicate;3 (High Risk)
19,gpersoon,gpersoon.eth,G,optimize removeUserActiveBlocks,6,https://github.com/code-423n4/2021-07-connext-findings/issues/6,connext,2021/07,bug;duplicate;G (Gas Optimization)
19,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,Redundant Liquidity Check,21,https://github.com/code-423n4/2021-07-connext-findings/issues/21,connext,2021/07,bug;duplicate;G (Gas Optimization)
19,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,0,Code Consistency for hashVariantTransactionData(),22,https://github.com/code-423n4/2021-07-connext-findings/issues/22,connext,2021/07,bug;0 (Non-critical);sponsor confirmed
19,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,0,Utilise EnumerableSet of tx ids instead of block numbers for active transfers tracking,23,https://github.com/code-423n4/2021-07-connext-findings/issues/23,connext,2021/07,bug;invalid;0 (Non-critical);sponsor disputed
19,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Revert strings,59,https://github.com/code-423n4/2021-07-connext-findings/issues/59,connext,2021/07,bug;G (Gas Optimization);sponsor confirmed
19,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Optimizing the for loop,60,https://github.com/code-423n4/2021-07-connext-findings/issues/60,connext,2021/07,bug;G (Gas Optimization);sponsor acknowledged
19,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,2,Transactions nearing `block.gaslimit` may cause issues,61,https://github.com/code-423n4/2021-07-connext-findings/issues/61,connext,2021/07,bug;invalid;2 (Med Risk);sponsor acknowledged
19,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Increment in the loop can be made unchecked,65,https://github.com/code-423n4/2021-07-connext-findings/issues/65,connext,2021/07,bug;G (Gas Optimization);sponsor acknowledged
19,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Weird ERC20s,24,https://github.com/code-423n4/2021-07-connext-findings/issues/24,connext,2021/07,bug;duplicate;1 (Low Risk)
19,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Require with LibERC20 and LibAsset,25,https://github.com/code-423n4/2021-07-connext-findings/issues/25,connext,2021/07,bug;duplicate;G (Gas Optimization)
19,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,addLiquidity transfers tokens from the wrong sender,26,https://github.com/code-423n4/2021-07-connext-findings/issues/26,connext,2021/07,bug;duplicate;3 (High Risk)
19,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,activeTransactionBlocks are vulnerable to DDoS attacks,27,https://github.com/code-423n4/2021-07-connext-findings/issues/27,connext,2021/07,bug;3 (High Risk);sponsor confirmed
19,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,txData.expiry = block.timestamp,28,https://github.com/code-423n4/2021-07-connext-findings/issues/28,connext,2021/07,bug;1 (Low Risk);sponsor confirmed
19,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Style issues,29,https://github.com/code-423n4/2021-07-connext-findings/issues/29,connext,2021/07,bug;0 (Non-critical);sponsor confirmed
19,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Initial temporal restrictions,30,https://github.com/code-423n4/2021-07-connext-findings/issues/30,connext,2021/07,bug;duplicate;1 (Low Risk)
19,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,Approval is not reset if the call to IFulfillHelper fails,31,https://github.com/code-423n4/2021-07-connext-findings/issues/31,connext,2021/07,bug;3 (High Risk);sponsor confirmed
19,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,addFunds and execute may send tokens twice,32,https://github.com/code-423n4/2021-07-connext-findings/issues/32,connext,2021/07,bug;duplicate;3 (High Risk);sponsor confirmed
19,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,MAX_TIMEOUT,33,https://github.com/code-423n4/2021-07-connext-findings/issues/33,connext,2021/07,bug;1 (Low Risk);sponsor confirmed
19,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Validations of empty address,34,https://github.com/code-423n4/2021-07-connext-findings/issues/34,connext,2021/07,bug;duplicate;1 (Low Risk)
19,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Don't ask for the user's signature when msg.sender == txData.user,57,https://github.com/code-423n4/2021-07-connext-findings/issues/57,connext,2021/07,bug;0 (Non-critical);sponsor confirmed
19,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Relayer txs can be frontrunned,58,https://github.com/code-423n4/2021-07-connext-findings/issues/58,connext,2021/07,bug;1 (Low Risk);sponsor acknowledged
19,s1m0,0x7d379c4d48FB5bff0FDcb3efE14F7864aD46Dc10,G,Multiple require() not needed,35,https://github.com/code-423n4/2021-07-connext-findings/issues/35,connext,2021/07,bug;duplicate;G (Gas Optimization)
19,s1m0,0x7d379c4d48FB5bff0FDcb3efE14F7864aD46Dc10,G,Assignment of variables not needed,36,https://github.com/code-423n4/2021-07-connext-findings/issues/36,connext,2021/07,bug;G (Gas Optimization);sponsor acknowledged
19,s1m0,0x7d379c4d48FB5bff0FDcb3efE14F7864aD46Dc10,3,The fallback receiver address could get twice the toSend amount,37,https://github.com/code-423n4/2021-07-connext-findings/issues/37,connext,2021/07,bug;duplicate;3 (High Risk);sponsor confirmed
19,s1m0,0x7d379c4d48FB5bff0FDcb3efE14F7864aD46Dc10,3,Logic error in fulfill() function,38,https://github.com/code-423n4/2021-07-connext-findings/issues/38,connext,2021/07,bug;duplicate;3 (High Risk);sponsor confirmed
19,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Unchangeable chain ID information,66,https://github.com/code-423n4/2021-07-connext-findings/issues/66,connext,2021/07,bug;1 (Low Risk);sponsor acknowledged
19,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Inconsistent comparison between the expiry of transactions and the block timestamp,67,https://github.com/code-423n4/2021-07-connext-findings/issues/67,connext,2021/07,bug;duplicate;1 (Low Risk)
19,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Deflantionay and fee-on-transfer tokens are not correctly accounted,68,https://github.com/code-423n4/2021-07-connext-findings/issues/68,connext,2021/07,bug;1 (Low Risk);sponsor confirmed
19,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Signature replay attacks are possible if a user's `transactionId` is not unique,69,https://github.com/code-423n4/2021-07-connext-findings/issues/69,connext,2021/07,bug;duplicate;2 (Med Risk)
19,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Gas griefing attack on the `removeUserActiveBlocks` function,70,https://github.com/code-423n4/2021-07-connext-findings/issues/70,connext,2021/07,bug;duplicate;3 (High Risk);sponsor confirmed
19,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,The approval before `addFunds` could allow users to transfer out more assets,71,https://github.com/code-423n4/2021-07-connext-findings/issues/71,connext,2021/07,bug;duplicate;3 (High Risk);sponsor confirmed
19,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Assets are transferred if the `execute` call fails,72,https://github.com/code-423n4/2021-07-connext-findings/issues/72,connext,2021/07,bug;duplicate;3 (High Risk);sponsor confirmed
19,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Gas optimization on maintaining the `activeTransactionBlocks` array,73,https://github.com/code-423n4/2021-07-connext-findings/issues/73,connext,2021/07,bug;duplicate;G (Gas Optimization)
19,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Use the `unchecked` keyword to save gas,74,https://github.com/code-423n4/2021-07-connext-findings/issues/74,connext,2021/07,bug;G (Gas Optimization);sponsor confirmed
19,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Cache storage variables to local variables to save gas,75,https://github.com/code-423n4/2021-07-connext-findings/issues/75,connext,2021/07,bug;G (Gas Optimization);sponsor confirmed
19,Sparta,0xfa9dd286e43F3ED5CEea3202268D2c413a4b012a,0,#recommended,76,https://github.com/code-423n4/2021-07-connext-findings/issues/76,connext,2021/07,bug;invalid;0 (Non-critical)
19,Sparta,0xfa9dd286e43F3ED5CEea3202268D2c413a4b012a,0,#recommended,77,https://github.com/code-423n4/2021-07-connext-findings/issues/77,connext,2021/07,bug;invalid;0 (Non-critical)
24,0xRajeev,rajeev.eth,G,Changing function visibility from public to external can save gas,32,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/32,pooltogether,2021/07,bug;G (Gas Optimization);SwappableYieldSource;sponsor confirmed
24,0xRajeev,rajeev.eth,G,Redundant zero-address check,33,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/33,pooltogether,2021/07,bug;G (Gas Optimization);SwappableYieldSource;sponsor confirmed
24,0xRajeev,rajeev.eth,G,Checking for zero amounts can avoid unnecessary further execution flow,34,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/34,pooltogether,2021/07,bug;G (Gas Optimization);mStableYieldSource;SwappableYieldSource;sponsor disputed
24,0xRajeev,rajeev.eth,G,Caching the result of an external call can save 2600 gas,35,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/35,pooltogether,2021/07,bug;duplicate;G (Gas Optimization);SwappableYieldSource
24,0xRajeev,rajeev.eth,G,Unnecessary external call instead of using immutable contract variable,36,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/36,pooltogether,2021/07,bug;duplicate;G (Gas Optimization);mStableYieldSource
24,0xRajeev,rajeev.eth,G,Adding unchecked directive can save gas,37,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/37,pooltogether,2021/07,bug;G (Gas Optimization);mStableYieldSource;sponsor confirmed
24,0xRajeev,rajeev.eth,G,Unnecessary mock initializer,38,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/38,pooltogether,2021/07,bug;G (Gas Optimization);SwappableYieldSource;sponsor disputed
24,0xRajeev,rajeev.eth,1,Initialization function can be front-run with malicious values,39,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/39,pooltogether,2021/07,bug;1 (Low Risk);SwappableYieldSource;sponsor disputed
24,0xRajeev,rajeev.eth,2,Single-step process for critical ownership transfer/renounce is risky,40,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/40,pooltogether,2021/07,bug;2 (Med Risk);SwappableYieldSource;sponsor acknowledged
24,0xRajeev,rajeev.eth,1,Missing zero-address checks,41,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/41,pooltogether,2021/07,bug;1 (Low Risk);mStableYieldSource;SwappableYieldSource;sponsor confirmed
24,0xRajeev,rajeev.eth,1,Missing check for same deposit token in transferFunds(),42,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/42,pooltogether,2021/07,bug;duplicate;1 (Low Risk);SwappableYieldSource
24,0xRajeev,rajeev.eth,3,Incorrect address check in transferERC20 can allow rugging,43,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/43,pooltogether,2021/07,bug;duplicate;3 (High Risk);SwappableYieldSource;sponsor disputed
24,0xRajeev,rajeev.eth,1,onlyOwner for approveMaxAmount() is risky,44,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/44,pooltogether,2021/07,bug;1 (Low Risk);SwappableYieldSource;sponsor acknowledged
24,0xRajeev,rajeev.eth,1,Missing emit indicates missing logic for sponsor,45,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/45,pooltogether,2021/07,bug;duplicate;1 (Low Risk);mStableYieldSource
24,0xRajeev,rajeev.eth,1,Overly permissive access control lets anyone approve max amount,46,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/46,pooltogether,2021/07,bug;1 (Low Risk);mStableYieldSource;sponsor confirmed
24,0xRajeev,rajeev.eth,2,Use of safeApprove will always cause approveMax to revert,47,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/47,pooltogether,2021/07,bug;2 (Med Risk);mStableYieldSource;sponsor confirmed
24,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`Sponsored` event not used,56,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/56,pooltogether,2021/07,bug;duplicate;1 (Low Risk);mStableYieldSource
24,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Usage of deprecated safeApprove,57,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/57,pooltogether,2021/07,bug;duplicate;1 (Low Risk);mStableYieldSource;SwappableYieldSource
24,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Deposits don't work with fee-on transfer tokens,58,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/58,pooltogether,2021/07,bug;duplicate;2 (Med Risk);mStableYieldSource;SwappableYieldSource
24,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,freeze does not do anything,59,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/59,pooltogether,2021/07,bug;duplicate;1 (Low Risk);SwappableYieldSource
24,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`_requireYieldSource` does not check return value,60,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/60,pooltogether,2021/07,bug;1 (Low Risk);SwappableYieldSource;sponsor confirmed
24,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`redeemToken` can fail for certain tokens,61,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/61,pooltogether,2021/07,bug;3 (High Risk);SwappableYieldSource
24,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`_setYieldSource` does not reset approval,62,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/62,pooltogether,2021/07,bug;duplicate;2 (Med Risk);SwappableYieldSource
24,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Cache deposit token,63,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/63,pooltogether,2021/07,bug;duplicate;G (Gas Optimization);SwappableYieldSource
24,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: swapYieldSource,64,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/64,pooltogether,2021/07,bug;G (Gas Optimization);SwappableYieldSource;sponsor confirmed
24,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,SwappableYieldSource._requireYieldSource is not a guarantee that you are interacting with a valid yield source,11,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/11,pooltogether,2021/07,bug;1 (Low Risk);SwappableYieldSource;sponsor disputed
24,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,0,SwappableYieldSource - Minor Refactoring - Use `depositToken()` instead of `yieldSource.depositToken()`,12,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/12,pooltogether,2021/07,bug;duplicate;0 (Non-critical);SwappableYieldSource
24,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,SwappableYieldSource. _setYieldSource is not removing approval for the old Yield Source,13,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/13,pooltogether,2021/07,bug;duplicate;1 (Low Risk);SwappableYieldSource
24,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,3,"onlyOwnerOrAssetManager can swap Yield Source in SwappableYieldSource at any time, immediately rugging all funds from old yield source",14,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/14,pooltogether,2021/07,bug;3 (High Risk);SwappableYieldSource;sponsor disputed
24,gpersoon,gpersoon.eth,3,setYieldSource leads to temporary wrong results,4,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/4,pooltogether,2021/07,bug;3 (High Risk);SwappableYieldSource;sponsor confirmed
24,gpersoon,gpersoon.eth,2,reputation risk via upgradable contracts,5,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/5,pooltogether,2021/07,bug;2 (Med Risk);SwappableYieldSource;sponsor disputed
24,gpersoon,gpersoon.eth,1,yield source token can be transferred by owner/assetmanager,6,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/6,pooltogether,2021/07,bug;1 (Low Risk);SwappableYieldSource;sponsor acknowledged
24,gpersoon,gpersoon.eth,1,_requireYieldSource not always called,7,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/7,pooltogether,2021/07,bug;1 (Low Risk);SwappableYieldSource;sponsor disputed
24,gpersoon,gpersoon.eth,1,Variable name or isInvalidYieldSource is confusion,8,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/8,pooltogether,2021/07,bug;1 (Low Risk);SwappableYieldSource;sponsor confirmed
24,gpersoon,gpersoon.eth,2,supplyTokenTo doesn't account for safeTransferFrom fees,9,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/9,pooltogether,2021/07,bug;2 (Med Risk);mStableYieldSource;sponsor disputed
24,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Increase Solc Optimiser Runs,18,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/18,pooltogether,2021/07,bug;G (Gas Optimization);mStableYieldSource;SwappableYieldSource;sponsor disputed
24,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,MStableYieldSource.sol: approveMax can use mAsset instead of savings.underlying(),19,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/19,pooltogether,2021/07,bug;G (Gas Optimization);mStableYieldSource;sponsor confirmed
24,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,MStableYieldSource.sol: approveMax() and depositToken() can be made external,20,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/20,pooltogether,2021/07,bug;duplicate;G (Gas Optimization);mStableYieldSource
24,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,MStableYieldSource.sol: Optimise balanceOf(),21,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/21,pooltogether,2021/07,bug;G (Gas Optimization);mStableYieldSource;sponsor disputed
24,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,MStableYieldSource.sol: Redundant Sponsored Event,22,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/22,pooltogether,2021/07,bug;duplicate;G (Gas Optimization);mStableYieldSource
24,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,SwappableYieldSource.sol: depositToken() visibility can be made external,23,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/23,pooltogether,2021/07,bug;duplicate;G (Gas Optimization);mStableYieldSource
24,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,SwappableYieldSource.sol: isInvalidYieldSource → isValidYieldSource,24,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/24,pooltogether,2021/07,bug;duplicate;0 (Non-critical);SwappableYieldSource
24,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,SwappableYieldSource.sol: redeemToken() should use safeTransfer instead of safeTransferFrom,25,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/25,pooltogether,2021/07,bug;duplicate;G (Gas Optimization);SwappableYieldSource;sponsor confirmed
24,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,SwappableYieldSource.sol: Save depositToken as a storage variable,26,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/26,pooltogether,2021/07,bug;G (Gas Optimization);SwappableYieldSource;sponsor confirmed
24,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,SwappableYieldSource.sol: Shorten revert messages,27,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/27,pooltogether,2021/07,bug;G (Gas Optimization);SwappableYieldSource;sponsor disputed
24,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,SwappableYieldSource.sol: Wrong reporting amount in FundsTransferred() event,28,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/28,pooltogether,2021/07,bug;1 (Low Risk);SwappableYieldSource;sponsor confirmed
24,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,SwappableYieldSource: Missing same deposit token check in transferFunds(),29,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/29,pooltogether,2021/07,bug;3 (High Risk);SwappableYieldSource;sponsor confirmed
24,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,SwappableYieldSource: Set zero allowance to current yield source when setting a new one,30,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/30,pooltogether,2021/07,bug;duplicate;0 (Non-critical);SwappableYieldSource
24,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,SwappableYieldSource: setYieldSource() should check no deposited tokens in current yield source,31,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/31,pooltogether,2021/07,bug;1 (Low Risk);SwappableYieldSource;sponsor acknowledged
24,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,[Optimization] Use 0.8.4 in MStableYieldSource.sol,65,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/65,pooltogether,2021/07,bug;G (Gas Optimization);mStableYieldSource;sponsor confirmed
24,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,[Optimization] Replace an external call with the immutable variable,66,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/66,pooltogether,2021/07,bug;duplicate;G (Gas Optimization);mStableYieldSource
24,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,[Optimization] Replacing low level call with a proper call,67,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/67,pooltogether,2021/07,bug;G (Gas Optimization);SwappableYieldSource;sponsor disputed
24,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,[Optimization] Shorten revert strings larger than 32 bytes,68,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/68,pooltogether,2021/07,bug;duplicate;G (Gas Optimization);SwappableYieldSource;sponsor disputed
24,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,0,Incorrect comment about memory,69,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/69,pooltogether,2021/07,bug;0 (Non-critical);mStableYieldSource;sponsor confirmed
24,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,0,Functions that can be made external,70,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/70,pooltogether,2021/07,bug;duplicate;0 (Non-critical);mStableYieldSource
24,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,No input validation for  while setting up value for immutable state variables,15,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/15,pooltogether,2021/07,bug;1 (Low Risk);mStableYieldSource;sponsor confirmed
24,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Amount should > 0 in supplyToken() and RedeemToken()  in SwappableYieldSource.sol,16,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/16,pooltogether,2021/07,bug;0 (Non-critical);SwappableYieldSource;sponsor disputed
24,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,Lack of zero address validation in _requireDifferentYieldSource(),17,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/17,pooltogether,2021/07,bug;0 (Non-critical);SwappableYieldSource;sponsor acknowledged
24,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,G,event `Sponsored` is not used,82,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/82,pooltogether,2021/07,bug;duplicate;G (Gas Optimization);mStableYieldSource
24,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,G,redeemToken do not provide error message on insufficient imbalance,83,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/83,pooltogether,2021/07,bug;G (Gas Optimization);mStableYieldSource;sponsor disputed
24,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,ambiguous transferFrom,84,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/84,pooltogether,2021/07,bug;duplicate;2 (Med Risk);SwappableYieldSource
24,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,G,[MStableYieldSource.sol] Public functions that should be declared as external to save gas,10,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/10,pooltogether,2021/07,bug;G (Gas Optimization);mStableYieldSource;sponsor confirmed
24,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Small issues with events,71,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/71,pooltogether,2021/07,bug;duplicate;0 (Non-critical);mStableYieldSource
24,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,approveMax in the constructor,72,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/72,pooltogether,2021/07,bug;0 (Non-critical);mStableYieldSource;sponsor disputed
24,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Retrieve stuck tokens from MStableYieldSource,73,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/73,pooltogether,2021/07,bug;1 (Low Risk);mStableYieldSource;sponsor confirmed
24,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Validation,74,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/74,pooltogether,2021/07,bug;1 (Low Risk);mStableYieldSource;sponsor confirmed
24,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Usage of safeApprove,75,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/75,pooltogether,2021/07,bug;duplicate;2 (Med Risk);mStableYieldSource;SwappableYieldSource
24,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,_requireYieldSource when setting new yield source,76,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/76,pooltogether,2021/07,bug;duplicate;1 (Low Risk);SwappableYieldSource
24,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Inverted isInvalidYieldSource,77,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/77,pooltogether,2021/07,bug;duplicate;0 (Non-critical);SwappableYieldSource
24,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,redeemToken sends tokens with safeTransferFrom,78,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/78,pooltogether,2021/07,bug;duplicate;3 (High Risk);SwappableYieldSource
24,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Possible enhancements to supply/redeem full balance,79,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/79,pooltogether,2021/07,bug;0 (Non-critical);SwappableYieldSource;sponsor confirmed
24,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,cache duplicate call,80,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/80,pooltogether,2021/07,bug;duplicate;G (Gas Optimization);SwappableYieldSource
24,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,getBalance() uses SafeMath with Solidity 0.8.2,81,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/81,pooltogether,2021/07,bug;G (Gas Optimization);mStableYieldSource;sponsor disputed
24,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Incorrect parameter of `FundsTransferred` event,48,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/48,pooltogether,2021/07,bug;duplicate;1 (Low Risk);SwappableYieldSource
24,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Missing `sponsor` function in `MStableYieldSource`,49,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/49,pooltogether,2021/07,bug;duplicate;1 (Low Risk);mStableYieldSource
24,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,The `approveMax` function of `MStableYieldSource` always reverts,50,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/50,pooltogether,2021/07,bug;duplicate;2 (Med Risk);mStableYieldSource
24,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Yield sources cannot be swapped back,51,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/51,pooltogether,2021/07,bug;2 (Med Risk);SwappableYieldSource;sponsor acknowledged
24,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Inconsistent balance when supplying transfer-on-fee or deflationary tokens,52,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/52,pooltogether,2021/07,bug;2 (Med Risk);SwappableYieldSource;sponsor confirmed
24,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Use `abi.encodePacked` for gas optimization,53,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/53,pooltogether,2021/07,bug;G (Gas Optimization);SwappableYieldSource;sponsor confirmed
24,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Gas optimization on `approveMax` of `MStableYieldSource`,54,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/54,pooltogether,2021/07,bug;duplicate;G (Gas Optimization);mStableYieldSource
24,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Declaring functions as `external` to save gas,55,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/55,pooltogether,2021/07,bug;G (Gas Optimization);mStableYieldSource;SwappableYieldSource;sponsor confirmed
24,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Sponsored event not used,1,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/1,pooltogether,2021/07,bug;0 (Non-critical);mStableYieldSource;sponsor confirmed;disagree with severity
24,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Some tokens do not have decimals.,2,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/2,pooltogether,2021/07,bug;1 (Low Risk);SwappableYieldSource;sponsor confirmed
24,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Old yield source still has infinite approval,3,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/3,pooltogether,2021/07,bug;2 (Med Risk);SwappableYieldSource;sponsor confirmed
21,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,gas reduction in `calcUnderlying`,124,https://github.com/code-423n4/2021-07-sherlock-findings/issues/124,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,NatSpec typo in `_doSherX` @return,125,https://github.com/code-423n4/2021-07-sherlock-findings/issues/125,sherlock,2021/07,bug;0 (Non-critical);sponsor confirmed
21,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,uncheckable math in `payout()`,126,https://github.com/code-423n4/2021-07-sherlock-findings/issues/126,sherlock,2021/07,bug;G (Gas Optimization);sponsor acknowledged
21,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,Uncheckable math in `redeem()`,127,https://github.com/code-423n4/2021-07-sherlock-findings/issues/127,sherlock,2021/07,bug;G (Gas Optimization);sponsor acknowledged
21,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,Confusing exponentiation (10e17),129,https://github.com/code-423n4/2021-07-sherlock-findings/issues/129,sherlock,2021/07,bug;0 (Non-critical);sponsor confirmed
21,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,order of operations in Payout.sol,130,https://github.com/code-423n4/2021-07-sherlock-findings/issues/130,sherlock,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
21,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,G,"[Gas optimizations] - Public functions that are public, but could be external",112,https://github.com/code-423n4/2021-07-sherlock-findings/issues/112,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,bw,0x3d977eF4855A526500E901bFA43c209E0C51BA84,G,Make variables immutable or constant,1,https://github.com/code-423n4/2021-07-sherlock-findings/issues/1,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`transferFrom` gas improval,100,https://github.com/code-423n4/2021-07-sherlock-findings/issues/100,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed;disagree with severity
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Government initializer functions can be frontrun,101,https://github.com/code-423n4/2021-07-sherlock-findings/issues/101,sherlock,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unbounded iteration over all premium tokens,102,https://github.com/code-423n4/2021-07-sherlock-findings/issues/102,sherlock,2021/07,bug;1 (Low Risk);sponsor acknowledged
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unbounded iteration over all staking tokens,103,https://github.com/code-423n4/2021-07-sherlock-findings/issues/103,sherlock,2021/07,bug;1 (Low Risk);sponsor acknowledged
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unbounded iteration over all protocols,104,https://github.com/code-423n4/2021-07-sherlock-findings/issues/104,sherlock,2021/07,bug;1 (Low Risk);sponsor acknowledged
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing verification on `tokenInit`'s lock,105,https://github.com/code-423n4/2021-07-sherlock-findings/issues/105,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing verification in `setProtocolPremium`,106,https://github.com/code-423n4/2021-07-sherlock-findings/issues/106,sherlock,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`_doSherX` optimistically assumes premiums will be paid,107,https://github.com/code-423n4/2021-07-sherlock-findings/issues/107,sherlock,2021/07,bug;2 (Med Risk);sponsor acknowledged
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`_doSherX` does not return correct precision and it's confusing,108,https://github.com/code-423n4/2021-07-sherlock-findings/issues/108,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3, `Payout.deduction` computation uses wrong decimals,109,https://github.com/code-423n4/2021-07-sherlock-findings/issues/109,sherlock,2021/07,bug;invalid;3 (High Risk);sponsor disputed
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`TokenToLock` default value,110,https://github.com/code-423n4/2021-07-sherlock-findings/issues/110,sherlock,2021/07,bug;invalid;2 (Med Risk);sponsor disputed
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Deposits don't work with fee-on transfer tokens,111,https://github.com/code-423n4/2021-07-sherlock-findings/issues/111,sherlock,2021/07,bug;duplicate;2 (Med Risk)
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`activateCooldownFee` can be more than 100%,113,https://github.com/code-423n4/2021-07-sherlock-findings/issues/113,sherlock,2021/07,bug;duplicate;invalid;question;1 (Low Risk)
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Anyone can unstake on behalf of someone,114,https://github.com/code-423n4/2021-07-sherlock-findings/issues/114,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Sanitize `_weights` in `setWeights` on every use,115,https://github.com/code-423n4/2021-07-sherlock-findings/issues/115,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`initializeSherXERC20` can be called more than once,116,https://github.com/code-423n4/2021-07-sherlock-findings/issues/116,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,ERC20 non-standard names,117,https://github.com/code-423n4/2021-07-sherlock-findings/issues/117,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed;disagree with severity
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,ERC20 can accidentally burn tokens,118,https://github.com/code-423n4/2021-07-sherlock-findings/issues/118,sherlock,2021/07,bug;1 (Low Risk);sponsor acknowledged
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Single under-funded protocol can break paying off debt,119,https://github.com/code-423n4/2021-07-sherlock-findings/issues/119,sherlock,2021/07,bug;3 (High Risk);sponsor acknowledged
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,0,typo: `ineglible_yield_amount` -> `ineligible_yield_amount`,62,https://github.com/code-423n4/2021-07-sherlock-findings/issues/62,sherlock,2021/07,bug;0 (Non-critical);sponsor confirmed
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,`SherX.setWeights` only accrue _tokens,96,https://github.com/code-423n4/2021-07-sherlock-findings/issues/96,sherlock,2021/07,bug;G (Gas Optimization);sponsor acknowledged
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,`payout` does token transfers twice,97,https://github.com/code-423n4/2021-07-sherlock-findings/issues/97,sherlock,2021/07,bug;G (Gas Optimization);sponsor acknowledged
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,`increaseApproval` gas improval,98,https://github.com/code-423n4/2021-07-sherlock-findings/issues/98,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,`decreaseApproval` gas improval,99,https://github.com/code-423n4/2021-07-sherlock-findings/issues/99,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,eriksal1217,0x64b29cf8A5b2eC1133f2eA5B8BE644F41C9D6d53,G,[PoolBase.sol] Functions that are public that should be declared as external to save gas,52,https://github.com/code-423n4/2021-07-sherlock-findings/issues/52,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,eriksal1217,0x64b29cf8A5b2eC1133f2eA5B8BE644F41C9D6d53,G,[LibPool.sol] Functions that should be declared as external to save gas,53,https://github.com/code-423n4/2021-07-sherlock-findings/issues/53,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,eriksal1217,0x64b29cf8A5b2eC1133f2eA5B8BE644F41C9D6d53,G,[LibSherX.sol] Functions that should be declared as external to save gas,54,https://github.com/code-423n4/2021-07-sherlock-findings/issues/54,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,eriksal1217,0x64b29cf8A5b2eC1133f2eA5B8BE644F41C9D6d53,G,[AaveV2.sol] Function that should be declared as external to save gas,55,https://github.com/code-423n4/2021-07-sherlock-findings/issues/55,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,eriksal1217,0x64b29cf8A5b2eC1133f2eA5B8BE644F41C9D6d53,1,[ForeignLock.sol] Local Variables Shadowing other variables,56,https://github.com/code-423n4/2021-07-sherlock-findings/issues/56,sherlock,2021/07,bug;0 (Non-critical);sponsor disputed
21,eriksal1217,0x64b29cf8A5b2eC1133f2eA5B8BE644F41C9D6d53,1,[NativeLock.sol] Local Variables shadowing other variables ,57,https://github.com/code-423n4/2021-07-sherlock-findings/issues/57,sherlock,2021/07,bug;duplicate;invalid;1 (Low Risk)
21,eriksal1217,0x64b29cf8A5b2eC1133f2eA5B8BE644F41C9D6d53,2,[PoolBase.sol] Calculations are being divided before being multiplied ,61,https://github.com/code-423n4/2021-07-sherlock-findings/issues/61,sherlock,2021/07,bug;0 (Non-critical);sponsor acknowledged;disagree with severity
21,eriksal1217,0x64b29cf8A5b2eC1133f2eA5B8BE644F41C9D6d53,2,[Gov.sol] Ignoring the return value of function _token.approve(...),77,https://github.com/code-423n4/2021-07-sherlock-findings/issues/77,sherlock,2021/07,bug;duplicate;2 (Med Risk)
21,eriksal1217,0x64b29cf8A5b2eC1133f2eA5B8BE644F41C9D6d53,2,[SherX.sol] Multiple external function values are ignored ,80,https://github.com/code-423n4/2021-07-sherlock-findings/issues/80,sherlock,2021/07,bug;duplicate;2 (Med Risk)
21,eriksal1217,0x64b29cf8A5b2eC1133f2eA5B8BE644F41C9D6d53,2,[AaveV2.sol] Multiple values from external functions being called are ignored,91,https://github.com/code-423n4/2021-07-sherlock-findings/issues/91,sherlock,2021/07,bug;duplicate;1 (Low Risk)
21,gpersoon,gpersoon.eth,G,uint40 for block.number storage,10,https://github.com/code-423n4/2021-07-sherlock-findings/issues/10,sherlock,2021/07,bug;G (Gas Optimization)
21,gpersoon,gpersoon.eth,0,Use constants for numbers,11,https://github.com/code-423n4/2021-07-sherlock-findings/issues/11,sherlock,2021/07,bug;duplicate;0 (Non-critical)
21,gpersoon,gpersoon.eth,0,Different solidity pramas,16,https://github.com/code-423n4/2021-07-sherlock-findings/issues/16,sherlock,2021/07,bug;0 (Non-critical);sponsor confirmed
21,gpersoon,gpersoon.eth,G,Two functions with the same implementation,17,https://github.com/code-423n4/2021-07-sherlock-findings/issues/17,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,gpersoon,gpersoon.eth,1,extra check setUnstakeWindow and setCooldown,18,https://github.com/code-423n4/2021-07-sherlock-findings/issues/18,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed
21,gpersoon,gpersoon.eth,0,confusing comment in protocolUpdate,19,https://github.com/code-423n4/2021-07-sherlock-findings/issues/19,sherlock,2021/07,bug;0 (Non-critical);sponsor confirmed
21,gpersoon,gpersoon.eth,1,delete ps.stakeBalance,20,https://github.com/code-423n4/2021-07-sherlock-findings/issues/20,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed
21,gpersoon,gpersoon.eth,G,x > 0 ==> x!=0,21,https://github.com/code-423n4/2021-07-sherlock-findings/issues/21,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,gpersoon,gpersoon.eth,1,prevent div by 0,22,https://github.com/code-423n4/2021-07-sherlock-findings/issues/22,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed
21,gpersoon,gpersoon.eth,0,don't use add(add.sub(sub),23,https://github.com/code-423n4/2021-07-sherlock-findings/issues/23,sherlock,2021/07,bug;0 (Non-critical);sponsor confirmed
21,gpersoon,gpersoon.eth,1,series of divs,24,https://github.com/code-423n4/2021-07-sherlock-findings/issues/24,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed
21,gpersoon,gpersoon.eth,1,extra precautions in stakeBalance,25,https://github.com/code-423n4/2021-07-sherlock-findings/issues/25,sherlock,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
21,gpersoon,gpersoon.eth,1,unbounded loop in getInitialUnstakeEntry ,26,https://github.com/code-423n4/2021-07-sherlock-findings/issues/26,sherlock,2021/07,bug;1 (Low Risk);sponsor acknowledged
21,gpersoon,gpersoon.eth,1,result of getUnstakeEntrySize is incorrect,27,https://github.com/code-423n4/2021-07-sherlock-findings/issues/27,sherlock,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
21,gpersoon,gpersoon.eth,1,limit CooldownFee,28,https://github.com/code-423n4/2021-07-sherlock-findings/issues/28,sherlock,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
21,gpersoon,gpersoon.eth,1,prevent burn in _transfer,29,https://github.com/code-423n4/2021-07-sherlock-findings/issues/29,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed
21,gpersoon,gpersoon.eth,2,Ensure payOffDebtAll can always run,3,https://github.com/code-423n4/2021-07-sherlock-findings/issues/3,sherlock,2021/07,bug;duplicate;3 (High Risk)
21,gpersoon,gpersoon.eth,2,reputation risks with updateSolution,4,https://github.com/code-423n4/2021-07-sherlock-findings/issues/4,sherlock,2021/07,bug;2 (Med Risk);sponsor acknowledged
21,gpersoon,gpersoon.eth,2,transfer blocked by insufficient unallocatedSherX,49,https://github.com/code-423n4/2021-07-sherlock-findings/issues/49,sherlock,2021/07,bug;duplicate;invalid;2 (Med Risk)
21,gpersoon,gpersoon.eth,2,Yield distribution after large payout seems unfair,50,https://github.com/code-423n4/2021-07-sherlock-findings/issues/50,sherlock,2021/07,bug;2 (Med Risk);sponsor confirmed
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Define Global Constants,30,https://github.com/code-423n4/2021-07-sherlock-findings/issues/30,sherlock,2021/07,bug;0 (Non-critical);sponsor confirmed
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Gov.sol: Consider abstracting protocolUpdate() and protocolDepositAdd() to avoid duplicate checks,31,https://github.com/code-423n4/2021-07-sherlock-findings/issues/31,sherlock,2021/07,bug;G (Gas Optimization);sponsor acknowledged
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Gov.sol: Fetch _token directly from index in tokenDisableStakers() and tokenDisableProtocol(),32,https://github.com/code-423n4/2021-07-sherlock-findings/issues/32,sherlock,2021/07,bug;invalid;G (Gas Optimization);sponsor disputed
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Gov.sol: Non-intuitive comment in tokenRemove(),33,https://github.com/code-423n4/2021-07-sherlock-findings/issues/33,sherlock,2021/07,bug;0 (Non-critical);sponsor confirmed
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Gov.sol: Optimise protocolRemove(),34,https://github.com/code-423n4/2021-07-sherlock-findings/issues/34,sherlock,2021/07,bug;G (Gas Optimization);sponsor acknowledged
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Gov.sol: Small refactoring of tokenInit() to save gas,35,https://github.com/code-423n4/2021-07-sherlock-findings/issues/35,sherlock,2021/07,bug;G (Gas Optimization);sponsor acknowledged
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,GovStorage.sol: Efficient Variable Packing,36,https://github.com/code-423n4/2021-07-sherlock-findings/issues/36,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Increase Solc Optimiser Runs,37,https://github.com/code-423n4/2021-07-sherlock-findings/issues/37,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,LibSherX.sol: Optimise calcUnderlying(),38,https://github.com/code-423n4/2021-07-sherlock-findings/issues/38,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Manager.sol: Can avoid safemath sub in usdPerBlock and usdPool calculations,39,https://github.com/code-423n4/2021-07-sherlock-findings/issues/39,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Manager.sol: Pass ps.sherXUnderlying instead of ps into updateData(),40,https://github.com/code-423n4/2021-07-sherlock-findings/issues/40,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,Payout.sol: Deduction calculation can possibly revert with divByZero error,41,https://github.com/code-423n4/2021-07-sherlock-findings/issues/41,sherlock,2021/07,bug;duplicate;1 (Low Risk)
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,PoolBase.sol: Consider returning 0 instead of reverting in LockToToken(),42,https://github.com/code-423n4/2021-07-sherlock-findings/issues/42,sherlock,2021/07,bug;0 (Non-critical);sponsor acknowledged
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,PoolStorage.sol: Efficient Variable Packing,43,https://github.com/code-423n4/2021-07-sherlock-findings/issues/43,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,PoolStrategy.sol: Consider minimising trust with implemented strategies,44,https://github.com/code-423n4/2021-07-sherlock-findings/issues/44,sherlock,2021/07,bug;1 (Low Risk);sponsor acknowledged
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,SherX.sol: Change variable names weightSub and weightAdd to totalWeightOld and totalWeightNew,45,https://github.com/code-423n4/2021-07-sherlock-findings/issues/45,sherlock,2021/07,bug;0 (Non-critical);sponsor confirmed
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,SherX.sol: Redeeming SherX may run out of gas,46,https://github.com/code-423n4/2021-07-sherlock-findings/issues/46,sherlock,2021/07,bug;0 (Non-critical);sponsor acknowledged
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,SherX.sol: Unsafe casting of _weights  in setWeights(),47,https://github.com/code-423n4/2021-07-sherlock-findings/issues/47,sherlock,2021/07,bug;0 (Non-critical);sponsor acknowledged
21,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Gov.sol: Use SafeERC20.safeApprove in tokenUnload(),51,https://github.com/code-423n4/2021-07-sherlock-findings/issues/51,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed
21,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,[Optimization] Caching variable,81,https://github.com/code-423n4/2021-07-sherlock-findings/issues/81,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,[Optimization] A branchless version of an if else statement,82,https://github.com/code-423n4/2021-07-sherlock-findings/issues/82,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,[Optimization] Setting higher value for optimize-runs,83,https://github.com/code-423n4/2021-07-sherlock-findings/issues/83,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,[Optimization] Use at least 0.8.4,84,https://github.com/code-423n4/2021-07-sherlock-findings/issues/84,sherlock,2021/07,bug;G (Gas Optimization);sponsor acknowledged
21,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,[Optimization] Packing various structs carefully,85,https://github.com/code-423n4/2021-07-sherlock-findings/issues/85,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,[Optimization] Caching in for loops,86,https://github.com/code-423n4/2021-07-sherlock-findings/issues/86,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,[Optimization] Changing memory to calldata and again caching in loops,87,https://github.com/code-423n4/2021-07-sherlock-findings/issues/87,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,[Optimization] Change variable to immutable,88,https://github.com/code-423n4/2021-07-sherlock-findings/issues/88,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,0,General suggestions,89,https://github.com/code-423n4/2021-07-sherlock-findings/issues/89,sherlock,2021/07,bug;0 (Non-critical);sponsor confirmed
21,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,3,[Bug] A critical bug in bps function,90,https://github.com/code-423n4/2021-07-sherlock-findings/issues/90,sherlock,2021/07,bug;3 (High Risk);sponsor confirmed
21,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,G,PoolStrategy unused parameter `_token`,48,https://github.com/code-423n4/2021-07-sherlock-findings/issues/48,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,G,Unnecessary `_govPool == 0` check in `function tokenInit`,58,https://github.com/code-423n4/2021-07-sherlock-findings/issues/58,sherlock,2021/07,bug;invalid;G (Gas Optimization);sponsor disputed
21,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Free stake by replacing input token address,59,https://github.com/code-423n4/2021-07-sherlock-findings/issues/59,sherlock,2021/07,bug;duplicate;3 (High Risk)
21,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,G,Use calldata is a little more gas efficient ,60,https://github.com/code-423n4/2021-07-sherlock-findings/issues/60,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,patitonar,0xDaA39d73eF9b4495bfe206FF13eE29E759F95d63,G,Declare AaveV2 lpAddressProvider as constant,5,https://github.com/code-423n4/2021-07-sherlock-findings/issues/5,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,patitonar,0xDaA39d73eF9b4495bfe206FF13eE29E759F95d63,G,Declare AaveV2 contract variables as immutable,6,https://github.com/code-423n4/2021-07-sherlock-findings/issues/6,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,patitonar,0xDaA39d73eF9b4495bfe206FF13eE29E759F95d63,G,Avoid storing lp in AaveV2 constructor,7,https://github.com/code-423n4/2021-07-sherlock-findings/issues/7,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,patitonar,0xDaA39d73eF9b4495bfe206FF13eE29E759F95d63,G,Aav2V2 is Ownable but not owner capabilites are used,8,https://github.com/code-423n4/2021-07-sherlock-findings/issues/8,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,patitonar,0xDaA39d73eF9b4495bfe206FF13eE29E759F95d63,G,Declare NativeLock underlying variable as immutable,9,https://github.com/code-423n4/2021-07-sherlock-findings/issues/9,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Use EnumerableSet to store protocols,63,https://github.com/code-423n4/2021-07-sherlock-findings/issues/63,sherlock,2021/07,bug;0 (Non-critical);sponsor acknowledged
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,transferFrom when from = to,64,https://github.com/code-423n4/2021-07-sherlock-findings/issues/64,sherlock,2021/07,bug;0 (Non-critical);sponsor disputed
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,AaveV2 approves lending pool in the constructor,65,https://github.com/code-423n4/2021-07-sherlock-findings/issues/65,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Function initializeSherXERC20 can be called multiple times,66,https://github.com/code-423n4/2021-07-sherlock-findings/issues/66,sherlock,2021/07,bug;duplicate;1 (Low Risk)
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Approval event in LibSherXERC20,67,https://github.com/code-423n4/2021-07-sherlock-findings/issues/67,sherlock,2021/07,bug;invalid;0 (Non-critical);sponsor disputed
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Inclusive checks,68,https://github.com/code-423n4/2021-07-sherlock-findings/issues/68,sherlock,2021/07,bug;1 (Low Risk);sponsor acknowledged
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Group related data into separate structs,69,https://github.com/code-423n4/2021-07-sherlock-findings/issues/69,sherlock,2021/07,bug;1 (Low Risk);sponsor acknowledged
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Re-entrancy mitigation,70,https://github.com/code-423n4/2021-07-sherlock-findings/issues/70,sherlock,2021/07,bug;1 (Low Risk);sponsor acknowledged
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,ps.govPool in function tokenInit,71,https://github.com/code-423n4/2021-07-sherlock-findings/issues/71,sherlock,2021/07,bug;invalid;G (Gas Optimization);sponsor disputed
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Functions aBalance and balanceOf,72,https://github.com/code-423n4/2021-07-sherlock-findings/issues/72,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Call to LibDiamond.contractOwner() can be cached,73,https://github.com/code-423n4/2021-07-sherlock-findings/issues/73,sherlock,2021/07,bug;G (Gas Optimization);sponsor acknowledged
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,.length in a loop can be extracted into a variable,74,https://github.com/code-423n4/2021-07-sherlock-findings/issues/74,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Immutable variables,75,https://github.com/code-423n4/2021-07-sherlock-findings/issues/75,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Order of fields in struct,76,https://github.com/code-423n4/2021-07-sherlock-findings/issues/76,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,withdraw returns the final amount withdrawn,78,https://github.com/code-423n4/2021-07-sherlock-findings/issues/78,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,getFirstMoneyOut _token parameter,79,https://github.com/code-423n4/2021-07-sherlock-findings/issues/79,sherlock,2021/07,bug;G (Gas Optimization);sponsor acknowledged
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,getInitialUnstakeEntry when unstakeEntries is empty,92,https://github.com/code-423n4/2021-07-sherlock-findings/issues/92,sherlock,2021/07,bug;1 (Low Risk);sponsor acknowledged
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Loops may exceed gas limit,93,https://github.com/code-423n4/2021-07-sherlock-findings/issues/93,sherlock,2021/07,bug;1 (Low Risk);sponsor acknowledged
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,_token parameter not validated,94,https://github.com/code-423n4/2021-07-sherlock-findings/issues/94,sherlock,2021/07,bug;invalid;3 (High Risk);sponsor disputed
21,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Check _aaveLmReceiver and _sherlock are not empty,95,https://github.com/code-423n4/2021-07-sherlock-findings/issues/95,sherlock,2021/07,bug;0 (Non-critical);sponsor acknowledged
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Using unlocked/floating pragmas,132,https://github.com/code-423n4/2021-07-sherlock-findings/issues/132,sherlock,2021/07,bug;duplicate;0 (Non-critical)
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,SafeMath library is not always used in `PoolBase`,133,https://github.com/code-423n4/2021-07-sherlock-findings/issues/133,sherlock,2021/07,bug;1 (Low Risk);sponsor acknowledged
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Missing zero address check for the recipient in `SherXERC20`,134,https://github.com/code-423n4/2021-07-sherlock-findings/issues/134,sherlock,2021/07,bug;duplicate;1 (Low Risk)
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Missing non-zero address checks,135,https://github.com/code-423n4/2021-07-sherlock-findings/issues/135,sherlock,2021/07,bug;1 (Low Risk);sponsor acknowledged
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Possible divide-by-zero error in `PoolBase`,136,https://github.com/code-423n4/2021-07-sherlock-findings/issues/136,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Division using a division result,137,https://github.com/code-423n4/2021-07-sherlock-findings/issues/137,sherlock,2021/07,bug;duplicate;1 (Low Risk)
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Use `safeApprove` instead of `approve`,138,https://github.com/code-423n4/2021-07-sherlock-findings/issues/138,sherlock,2021/07,bug;duplicate;1 (Low Risk)
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Inconsistent block number comparison when deciding an unstaking entry is active,139,https://github.com/code-423n4/2021-07-sherlock-findings/issues/139,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Cannot set `watsonsSherxWeight` to the maximum,140,https://github.com/code-423n4/2021-07-sherlock-findings/issues/140,sherlock,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Tokens cannot be reinitialized with new lock tokens,141,https://github.com/code-423n4/2021-07-sherlock-findings/issues/141,sherlock,2021/07,bug;1 (Low Risk);sponsor acknowledged
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Unsafe implementation of `decreaseApproval` of `SherXERC20`,142,https://github.com/code-423n4/2021-07-sherlock-findings/issues/142,sherlock,2021/07,bug;duplicate;1 (Low Risk)
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Transfer-on-fee/deflationary tokens are not correctly accounted for,143,https://github.com/code-423n4/2021-07-sherlock-findings/issues/143,sherlock,2021/07,bug;duplicate;2 (Med Risk)
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,User's `calcUnderlyingInStoredUSD` value is underestimated,144,https://github.com/code-423n4/2021-07-sherlock-findings/issues/144,sherlock,2021/07,bug;1 (Low Risk);sponsor confirmed;disagree with severity
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Possible inaccurate stake balance after withdrawing funds from strategies,145,https://github.com/code-423n4/2021-07-sherlock-findings/issues/145,sherlock,2021/07,bug;duplicate;1 (Low Risk)
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Declare dynamic function parameters as `calldata` to save gas,146,https://github.com/code-423n4/2021-07-sherlock-findings/issues/146,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Declare variables as `constant` or `immutable` to save gas,147,https://github.com/code-423n4/2021-07-sherlock-findings/issues/147,sherlock,2021/07,bug;duplicate;G (Gas Optimization)
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Gas optimization on calculating the storage slot of a token,148,https://github.com/code-423n4/2021-07-sherlock-findings/issues/148,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Avoid repeating storage reads in a loop to save gas,149,https://github.com/code-423n4/2021-07-sherlock-findings/issues/149,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Saving gas by checking the last-recorded block number,150,https://github.com/code-423n4/2021-07-sherlock-findings/issues/150,sherlock,2021/07,bug;G (Gas Optimization);sponsor confirmed
21,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Unused functions and storage cost gas.,120,https://github.com/code-423n4/2021-07-sherlock-findings/issues/120,sherlock,2021/07,bug;G (Gas Optimization);sponsor acknowledged
21,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Unnecessary require + if combination.,121,https://github.com/code-423n4/2021-07-sherlock-findings/issues/121,sherlock,2021/07,bug;invalid;G (Gas Optimization);sponsor disputed
21,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Token price should not be set manually.,122,https://github.com/code-423n4/2021-07-sherlock-findings/issues/122,sherlock,2021/07,bug;invalid;3 (High Risk);sponsor disputed
21,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Poorly Named variables,123,https://github.com/code-423n4/2021-07-sherlock-findings/issues/123,sherlock,2021/07,bug;0 (Non-critical);sponsor confirmed;disagree with severity
21,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,If statement should output ps.protoclBalance if amount > ps.protocolBalance,128,https://github.com/code-423n4/2021-07-sherlock-findings/issues/128,sherlock,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
21,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Difficult for the project to be decentralized if the Watsons share one address.,131,https://github.com/code-423n4/2021-07-sherlock-findings/issues/131,sherlock,2021/07,bug;invalid;3 (High Risk);sponsor disputed
21,walker,0x3Fd7691eA5E9339fBc7bba59cF9226a2DEfCEDD4,3,Incorrect internal balance bookkeeping,12,https://github.com/code-423n4/2021-07-sherlock-findings/issues/12,sherlock,2021/07,bug;2 (Med Risk);sponsor acknowledged;disagree with severity
21,walker,0x3Fd7691eA5E9339fBc7bba59cF9226a2DEfCEDD4,3,Insider attack,13,https://github.com/code-423n4/2021-07-sherlock-findings/issues/13,sherlock,2021/07,bug;invalid;3 (High Risk);sponsor acknowledged;disagree with severity
21,walker,0x3Fd7691eA5E9339fBc7bba59cF9226a2DEfCEDD4,3,DoS for protocol withdrawals,14,https://github.com/code-423n4/2021-07-sherlock-findings/issues/14,sherlock,2021/07,bug;duplicate;3 (High Risk)
21,walker,0x3Fd7691eA5E9339fBc7bba59cF9226a2DEfCEDD4,1,Misaligned doc string for _doSherX,15,https://github.com/code-423n4/2021-07-sherlock-findings/issues/15,sherlock,2021/07,bug;duplicate;0 (Non-critical)
21,walker,0x3Fd7691eA5E9339fBc7bba59cF9226a2DEfCEDD4,3,PoolBase enables an easy withdrawal of funds,2,https://github.com/code-423n4/2021-07-sherlock-findings/issues/2,sherlock,2021/07,bug;duplicate;3 (High Risk)
20,0xRajeev,rajeev.eth,1,Max approvals are risky,100,https://github.com/code-423n4/2021-07-spartan-findings/issues/100,spartan,2021/07,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
20,0xRajeev,rajeev.eth,2,Deflationary assets are not handled uniformly across the protocol,101,https://github.com/code-423n4/2021-07-spartan-findings/issues/101,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed
20,0xRajeev,rajeev.eth,2,DAO can be DoS’ed causing it to make no progress on valid proposals,102,https://github.com/code-423n4/2021-07-spartan-findings/issues/102,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,0xRajeev,rajeev.eth,1,Lack of input validation in new proposals leads to loss of fee/gas and can block progress for 15 days,103,https://github.com/code-423n4/2021-07-spartan-findings/issues/103,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,0xRajeev,rajeev.eth,1,Event log poisoning by griefing attackers,104,https://github.com/code-423n4/2021-07-spartan-findings/issues/104,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,0xRajeev,rajeev.eth,1,Attackers can grief voting by removing votes just before finalization,105,https://github.com/code-423n4/2021-07-spartan-findings/issues/105,spartan,2021/07,bug;1 (Low Risk);sponsor acknowledged
20,0xRajeev,rajeev.eth,2,Vote removals for critical proposal types are not re-checked for hasMajority at execution,106,https://github.com/code-423n4/2021-07-spartan-findings/issues/106,spartan,2021/07,bug;duplicate;invalid;2 (Med Risk)
20,0xRajeev,rajeev.eth,2,Old DAO continues to exist/function even after moving to a new DAO,107,https://github.com/code-423n4/2021-07-spartan-findings/issues/107,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed;disagree with severity
20,0xRajeev,rajeev.eth,1,Unused threshold function indicates missing logic or dead code,108,https://github.com/code-423n4/2021-07-spartan-findings/issues/108,spartan,2021/07,bug;duplicate;0 (Non-critical)
20,0xRajeev,rajeev.eth,2,"Deployer backdoors in DAOVault, Router and SynthVault contracts",109,https://github.com/code-423n4/2021-07-spartan-findings/issues/109,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,0xRajeev,rajeev.eth,3,Decrease allowance attempt will fail silently if current allowance is type(uint256).max,115,https://github.com/code-423n4/2021-07-spartan-findings/issues/115,spartan,2021/07,bug;duplicate;3 (High Risk)
20,0xRajeev,rajeev.eth,3,transferFrom does not check/reduce allowance if current allowance is type(uint256).max,116,https://github.com/code-423n4/2021-07-spartan-findings/issues/116,spartan,2021/07,bug;invalid;3 (High Risk);sponsor confirmed;disagree with severity
20,0xRajeev,rajeev.eth,2,Missing zero-address check on recipient address in transfer,117,https://github.com/code-423n4/2021-07-spartan-findings/issues/117,spartan,2021/07,bug;0 (Non-critical);sponsor disputed
20,0xRajeev,rajeev.eth,1,Unnecessary payable attribute may allow users to send/lock BNB accidentally,118,https://github.com/code-423n4/2021-07-spartan-findings/issues/118,spartan,2021/07,bug;duplicate;1 (Low Risk)
20,0xRajeev,rajeev.eth,1,Incorrect event parameter used in emit,119,https://github.com/code-423n4/2021-07-spartan-findings/issues/119,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,0xRajeev,rajeev.eth,3,Attacker can trigger pool sync leading to user fund loss,120,https://github.com/code-423n4/2021-07-spartan-findings/issues/120,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed;disagree with severity
20,0xRajeev,rajeev.eth,2,Broken access control leads to protocol functionality freeze,121,https://github.com/code-423n4/2021-07-spartan-findings/issues/121,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,0xRajeev,rajeev.eth,1,isMember and arrayMembers are only added to but never removed from,122,https://github.com/code-423n4/2021-07-spartan-findings/issues/122,spartan,2021/07,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
20,0xRajeev,rajeev.eth,3,Misplaced logic leads to loss of member bondedLP funds,123,https://github.com/code-423n4/2021-07-spartan-findings/issues/123,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,0xRajeev,rajeev.eth,2,Use safeTransfer/safeTransferFrom instead of transfer/transferFrom,124,https://github.com/code-423n4/2021-07-spartan-findings/issues/124,spartan,2021/07,bug;duplicate;3 (High Risk)
20,0xRajeev,rajeev.eth,1,Duplicated functionality in two functions is a maintainability risk,125,https://github.com/code-423n4/2021-07-spartan-findings/issues/125,spartan,2021/07,bug;0 (Non-critical);disagree with severity
20,0xRajeev,rajeev.eth,1,receive() function in Router allows locking of accidentally sent user’s BNB,126,https://github.com/code-423n4/2021-07-spartan-findings/issues/126,spartan,2021/07,bug;0 (Non-critical);sponsor acknowledged
20,0xRajeev,rajeev.eth,1,Missing check for toPool != fromPool,127,https://github.com/code-423n4/2021-07-spartan-findings/issues/127,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,0xRajeev,rajeev.eth,1,Unused _token potentially indicates missing logic or is dead code,128,https://github.com/code-423n4/2021-07-spartan-findings/issues/128,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed;disagree with severity
20,0xRajeev,rajeev.eth,1,Unnecessary redundant check for basisPoints,129,https://github.com/code-423n4/2021-07-spartan-findings/issues/129,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,0xRajeev,rajeev.eth,1,Missing isListedPool checks may lead to lock/loss of user funds,130,https://github.com/code-423n4/2021-07-spartan-findings/issues/130,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,0xRajeev,rajeev.eth,1,Lack of require() allows control flow to proceed leading to undefined behavior,131,https://github.com/code-423n4/2021-07-spartan-findings/issues/131,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed;disagree with severity
20,0xRajeev,rajeev.eth,1,Potential reentrancy may lead to unexpected behavior,132,https://github.com/code-423n4/2021-07-spartan-findings/issues/132,spartan,2021/07,bug;0 (Non-critical);sponsor acknowledged
20,0xRajeev,rajeev.eth,3,Members lose SPARTA tokens in removeLiquiditySingle(),133,https://github.com/code-423n4/2021-07-spartan-findings/issues/133,spartan,2021/07,bug;3 (High Risk);sponsor confirmed
20,0xRajeev,rajeev.eth,1,Number of curated pools can only be 10 at any point,134,https://github.com/code-423n4/2021-07-spartan-findings/issues/134,spartan,2021/07,bug;1 (Low Risk);sponsor acknowledged
20,0xRajeev,rajeev.eth,1,Incorrect event parameter logs zero address instead of WBNB,135,https://github.com/code-423n4/2021-07-spartan-findings/issues/135,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,0xRajeev,rajeev.eth,1,Missing check for token type/decimals in createPool,136,https://github.com/code-423n4/2021-07-spartan-findings/issues/136,spartan,2021/07,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
20,0xRajeev,rajeev.eth,1,Missing check for already curated pool being re-curated,137,https://github.com/code-423n4/2021-07-spartan-findings/issues/137,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,0xRajeev,rajeev.eth,1,Unused/Incorrect onlyDAO modifier could be an indication of missing access control,138,https://github.com/code-423n4/2021-07-spartan-findings/issues/138,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,0xRajeev,rajeev.eth,1,Missing onlyPool modifier for burnSynth(),139,https://github.com/code-423n4/2021-07-spartan-findings/issues/139,spartan,2021/07,bug;duplicate;1 (Low Risk)
20,0xRajeev,rajeev.eth,1,Unnecessary/Incorrect onlyDAO modifier could be an indication of missing access control,140,https://github.com/code-423n4/2021-07-spartan-findings/issues/140,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,0xRajeev,rajeev.eth,1,Incorrect event parameter in MemberWithdraws,141,https://github.com/code-423n4/2021-07-spartan-findings/issues/141,spartan,2021/07,bug;duplicate;0 (Non-critical)
20,0xRajeev,rajeev.eth,1,Critical protocol parameter changes should emit events,90,https://github.com/code-423n4/2021-07-spartan-findings/issues/90,spartan,2021/07,bug;0 (Non-critical);sponsor acknowledged
20,0xRajeev,rajeev.eth,2,Critical protocol parameter changes should have sanity/threshold checks,91,https://github.com/code-423n4/2021-07-spartan-findings/issues/91,spartan,2021/07,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
20,0xRajeev,rajeev.eth,2,Critical protocol parameter changes should have timelocked enforcement,92,https://github.com/code-423n4/2021-07-spartan-findings/issues/92,spartan,2021/07,bug;duplicate;invalid;2 (Med Risk)
20,0xRajeev,rajeev.eth,1,Missing zero-address checks in constructors and setters,93,https://github.com/code-423n4/2021-07-spartan-findings/issues/93,spartan,2021/07,bug;1 (Low Risk);sponsor acknowledged
20,0xRajeev,rajeev.eth,1,Missing event emit for MemberWithdraws,94,https://github.com/code-423n4/2021-07-spartan-findings/issues/94,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed;disagree with severity
20,0xRajeev,rajeev.eth,1,Type mismatch between parameters of setGenesisFactors() and state variables,95,https://github.com/code-423n4/2021-07-spartan-findings/issues/95,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed;disagree with severity
20,0xRajeev,rajeev.eth,2,Purging DAO deployer immediately in a single-step is risky,96,https://github.com/code-423n4/2021-07-spartan-findings/issues/96,spartan,2021/07,bug;1 (Low Risk);sponsor acknowledged
20,0xRajeev,rajeev.eth,2,Address confusion causes incorrect accounting of user’s harvest rewards,97,https://github.com/code-423n4/2021-07-spartan-findings/issues/97,spartan,2021/07,bug;invalid;2 (Med Risk);sponsor acknowledged
20,0xRajeev,rajeev.eth,2,Address confusion allows attacker to reset any user’s harvest rewards,98,https://github.com/code-423n4/2021-07-spartan-findings/issues/98,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,0xRajeev,rajeev.eth,1,Unused membership logic,99,https://github.com/code-423n4/2021-07-spartan-findings/issues/99,spartan,2021/07,bug;invalid;1 (Low Risk);disagree with severity;sponsor acknowledged
20,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Mismatch in event definition,210,https://github.com/code-423n4/2021-07-spartan-findings/issues/210,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Missing input validation in createPool(),211,https://github.com/code-423n4/2021-07-spartan-findings/issues/211,spartan,2021/07,bug;duplicate;1 (Low Risk)
20,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Missing revert if denominator = 0,214,https://github.com/code-423n4/2021-07-spartan-findings/issues/214,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,2,Missing input validation in realise(),216,https://github.com/code-423n4/2021-07-spartan-findings/issues/216,spartan,2021/07,bug;invalid;2 (Med Risk);sponsor disputed
20,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Missing purgeDeployer function,218,https://github.com/code-423n4/2021-07-spartan-findings/issues/218,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,2,Missing function setParams in Dao,220,https://github.com/code-423n4/2021-07-spartan-findings/issues/220,spartan,2021/07,bug;invalid;2 (Med Risk);sponsor disputed;disagree with severity
20,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,Missing synthReward,221,https://github.com/code-423n4/2021-07-spartan-findings/issues/221,spartan,2021/07,bug;0 (Non-critical);disagree with severity
20,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Missing input validation zapLiquidity(),222,https://github.com/code-423n4/2021-07-spartan-findings/issues/222,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Loss of precision,224,https://github.com/code-423n4/2021-07-spartan-findings/issues/224,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Missing input validation in addLiquidityForMember(),225,https://github.com/code-423n4/2021-07-spartan-findings/issues/225,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed;disagree with severity
20,7811,0xDefb6d82bCC8c354491952eBC17904654812A89E,2,withdraw() not defined (Router.sol#217),110,https://github.com/code-423n4/2021-07-spartan-findings/issues/110,spartan,2021/07,bug;invalid;2 (Med Risk);sponsor disputed
20,7811,0xDefb6d82bCC8c354491952eBC17904654812A89E,3,Return value not checked(bool) in BondVault.sol,111,https://github.com/code-423n4/2021-07-spartan-findings/issues/111,spartan,2021/07,bug;duplicate;3 (High Risk)
20,7811,0xDefb6d82bCC8c354491952eBC17904654812A89E,3,Return value not checked(bool) in Dao.sol,112,https://github.com/code-423n4/2021-07-spartan-findings/issues/112,spartan,2021/07,bug;duplicate;invalid;3 (High Risk)
20,7811,0xDefb6d82bCC8c354491952eBC17904654812A89E,3,Return value not checked(bool) in Pool.sol,113,https://github.com/code-423n4/2021-07-spartan-findings/issues/113,spartan,2021/07,bug;duplicate;invalid;3 (High Risk)
20,7811,0xDefb6d82bCC8c354491952eBC17904654812A89E,2,Return value not checked(bool) in Synth.sol,114,https://github.com/code-423n4/2021-07-spartan-findings/issues/114,spartan,2021/07,bug;duplicate;invalid;3 (High Risk)
20,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,3,"[Pool] - Anyone can remove liquidity from Pools, allowing them to alter the price  ",206,https://github.com/code-423n4/2021-07-spartan-findings/issues/206,spartan,2021/07,bug;invalid;3 (High Risk);sponsor disputed;disagree with severity
20,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,3,[Pool] - Flash loan + Synth.realise allows anyone to extract value from LPs,207,https://github.com/code-423n4/2021-07-spartan-findings/issues/207,spartan,2021/07,bug;duplicate;3 (High Risk)
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,147,https://github.com/code-423n4/2021-07-spartan-findings/issues/147,spartan,2021/07,bug;1 (Low Risk);sponsor disputed
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`createPoolADD` does not work with BNB,148,https://github.com/code-423n4/2021-07-spartan-findings/issues/148,spartan,2021/07,bug;duplicate;1 (Low Risk)
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`createPool` does not check that token has 18 decimals,149,https://github.com/code-423n4/2021-07-spartan-findings/issues/149,spartan,2021/07,bug;duplicate;0 (Non-critical)
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Unbounded iteration in `curatedPoolCount`,150,https://github.com/code-423n4/2021-07-spartan-findings/issues/150,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Pools can be created without initial liquidity,151,https://github.com/code-423n4/2021-07-spartan-findings/issues/151,spartan,2021/07,bug;2 (Med Risk);sponsor confirmed;disagree with severity
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Pool: cannot change approval once set to max value,152,https://github.com/code-423n4/2021-07-spartan-findings/issues/152,spartan,2021/07,bug;duplicate;3 (High Risk)
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Synth: cannot change approval once set to max value,153,https://github.com/code-423n4/2021-07-spartan-findings/issues/153,spartan,2021/07,bug;duplicate;invalid;3 (High Risk)
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Pool: approveAndCall sets unnecessary approval,154,https://github.com/code-423n4/2021-07-spartan-findings/issues/154,spartan,2021/07,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Synth: approveAndCall sets unnecessary approval,155,https://github.com/code-423n4/2021-07-spartan-findings/issues/155,spartan,2021/07,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,DAO approval amount too high for BASE,156,https://github.com/code-423n4/2021-07-spartan-findings/issues/156,spartan,2021/07,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,DAO approval amount too high for token,157,https://github.com/code-423n4/2021-07-spartan-findings/issues/157,spartan,2021/07,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Pool: Can accidentally burn tokens by sending them to zero,158,https://github.com/code-423n4/2021-07-spartan-findings/issues/158,spartan,2021/07,bug;0 (Non-critical);sponsor acknowledged
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Synth: Can accidentally burn tokens by sending them to zero,159,https://github.com/code-423n4/2021-07-spartan-findings/issues/159,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Can accidentally lose tokens when removing liquidity from pool,160,https://github.com/code-423n4/2021-07-spartan-findings/issues/160,spartan,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Can accidentally lose tokens when removing liquidity from pool 2,161,https://github.com/code-423n4/2021-07-spartan-findings/issues/161,spartan,2021/07,bug;1 (Low Risk);sponsor disputed
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`removeLiquiditySingle` loses funds,162,https://github.com/code-423n4/2021-07-spartan-findings/issues/162,spartan,2021/07,bug;duplicate;3 (High Risk)
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unbounded iteration in Synth Vault,163,https://github.com/code-423n4/2021-07-spartan-findings/issues/163,spartan,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unbounded iteration in DAO claimAllForMember,164,https://github.com/code-423n4/2021-07-spartan-findings/issues/164,spartan,2021/07,bug;duplicate;1 (Low Risk)
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing onlyPool modifier on burnSynth,165,https://github.com/code-423n4/2021-07-spartan-findings/issues/165,spartan,2021/07,bug;duplicate;1 (Low Risk)
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,SynthVault rewards can be gamed,166,https://github.com/code-423n4/2021-07-spartan-findings/issues/166,spartan,2021/07,bug;3 (High Risk);sponsor confirmed;disagree with severity
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,SynthVault deposit lockup bypass,167,https://github.com/code-423n4/2021-07-spartan-findings/issues/167,spartan,2021/07,bug;2 (Med Risk);sponsor confirmed
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,SynthVault withdraw forfeits rewards,168,https://github.com/code-423n4/2021-07-spartan-findings/issues/168,spartan,2021/07,bug;3 (High Risk);sponsor confirmed;disagree with severity
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`MemberWithdraws` event not fired,169,https://github.com/code-423n4/2021-07-spartan-findings/issues/169,spartan,2021/07,bug;duplicate;1 (Low Risk);sponsor acknowledged
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`calcAsymmetricValueToken` never used,170,https://github.com/code-423n4/2021-07-spartan-findings/issues/170,spartan,2021/07,bug;1 (Low Risk);sponsor acknowledged
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Missing slippage checks,171,https://github.com/code-423n4/2021-07-spartan-findings/issues/171,spartan,2021/07,bug;duplicate;3 (High Risk)
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Missleading onlyDAO modifiers,172,https://github.com/code-423n4/2021-07-spartan-findings/issues/172,spartan,2021/07,bug;2 (Med Risk);sponsor acknowledged
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,DAO.setGenesisFactors sets wrong `erasToEarn`,173,https://github.com/code-423n4/2021-07-spartan-findings/issues/173,spartan,2021/07,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,delisting bond assets does not remove from array,174,https://github.com/code-423n4/2021-07-spartan-findings/issues/174,spartan,2021/07,bug;invalid;1 (Low Risk);sponsor disputed;disagree with severity
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,BondVault fails if no SPARTA in DAO,175,https://github.com/code-423n4/2021-07-spartan-findings/issues/175,spartan,2021/07,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Vote weight can be manipulated,176,https://github.com/code-423n4/2021-07-spartan-findings/issues/176,spartan,2021/07,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Possible to deny proposal creations,177,https://github.com/code-423n4/2021-07-spartan-findings/issues/177,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,BondVault `BASE` incentive can be gamed,178,https://github.com/code-423n4/2021-07-spartan-findings/issues/178,spartan,2021/07,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Pool can be curated several times,179,https://github.com/code-423n4/2021-07-spartan-findings/issues/179,spartan,2021/07,bug;duplicate;1 (Low Risk)
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,ERC20 return values not checked,180,https://github.com/code-423n4/2021-07-spartan-findings/issues/180,spartan,2021/07,bug;duplicate;invalid;3 (High Risk)
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,No ERC20 safe* versions called,181,https://github.com/code-423n4/2021-07-spartan-findings/issues/181,spartan,2021/07,bug;duplicate;3 (High Risk)
20,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Dividend reward can be gamed,182,https://github.com/code-423n4/2021-07-spartan-findings/issues/182,spartan,2021/07,bug;3 (High Risk);sponsor confirmed;disagree with severity
20,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,2,"Calling synthVault:_deposit multiple times, will make you loose rewards",65,https://github.com/code-423n4/2021-07-spartan-findings/issues/65,spartan,2021/07,bug;1 (Low Risk);sponsor acknowledged
20,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,2,_deposit resetting user rewards can be used to grief them and make them loose rewards via `depositForMember `,66,https://github.com/code-423n4/2021-07-spartan-findings/issues/66,spartan,2021/07,bug;2 (Med Risk);sponsor confirmed
20,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,3,addForMember _mints to member but removeForMember _burns to address(this),67,https://github.com/code-423n4/2021-07-spartan-findings/issues/67,spartan,2021/07,bug;invalid;sponsor disputed
20,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,2,"removeForMember can be called by anyone, allowing for griefing",68,https://github.com/code-423n4/2021-07-spartan-findings/issues/68,spartan,2021/07,bug;invalid;2 (Med Risk);sponsor disputed
20,gpersoon,gpersoon.eth,0,(out of scope) mintFromDAO of Sparta.sol can go over max supply,10,https://github.com/code-423n4/2021-07-spartan-findings/issues/10,spartan,2021/07,bug;0 (Non-critical);sponsor acknowledged
20,gpersoon,gpersoon.eth,1,Function no longer executable after purgeDeployer() of DAO.sol,11,https://github.com/code-423n4/2021-07-spartan-findings/issues/11,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,gpersoon,gpersoon.eth,1,purgeDeployer() not in all contracts,12,https://github.com/code-423n4/2021-07-spartan-findings/issues/12,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,gpersoon,gpersoon.eth,2,can keep the DAO voting system hostage,13,https://github.com/code-423n4/2021-07-spartan-findings/issues/13,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,gpersoon,gpersoon.eth,2,In the beginning its relatively easy to gain majority share,14,https://github.com/code-423n4/2021-07-spartan-findings/issues/14,spartan,2021/07,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
20,gpersoon,gpersoon.eth,1,Extra safeguards in finaliseProposal(),15,https://github.com/code-423n4/2021-07-spartan-findings/issues/15,spartan,2021/07,bug;duplicate;2 (Med Risk);sponsor confirmed
20,gpersoon,gpersoon.eth,2,Proposal that require a majority can be executed without a majority ,16,https://github.com/code-423n4/2021-07-spartan-findings/issues/16,spartan,2021/07,bug;invalid;2 (Med Risk);sponsor disputed;disagree with severity
20,gpersoon,gpersoon.eth,2,grantFunds will revert after a DAO upgrade.,17,https://github.com/code-423n4/2021-07-spartan-findings/issues/17,spartan,2021/07,bug;2 (Med Risk);sponsor confirmed
20,gpersoon,gpersoon.eth,G,claimAllForMember could be optimized,24,https://github.com/code-423n4/2021-07-spartan-findings/issues/24,spartan,2021/07,bug;duplicate;G (Gas Optimization);sponsor acknowledged
20,gpersoon,gpersoon.eth,1,sanity checks in DAO functions,25,https://github.com/code-423n4/2021-07-spartan-findings/issues/25,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,gpersoon,gpersoon.eth,1,memberCount not accurate,26,https://github.com/code-423n4/2021-07-spartan-findings/issues/26,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed;disagree with severity
20,gpersoon,gpersoon.eth,G,more efficient calls to DAO functions,4,https://github.com/code-423n4/2021-07-spartan-findings/issues/4,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,gpersoon,gpersoon.eth,1,check if pool exists in getPool ,5,https://github.com/code-423n4/2021-07-spartan-findings/issues/5,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,gpersoon,gpersoon.eth,2,Block usage of addCuratedPool ,6,https://github.com/code-423n4/2021-07-spartan-findings/issues/6,spartan,2021/07,bug;2 (Med Risk);sponsor confirmed;disagree with severity
20,gpersoon,gpersoon.eth,2,Can't add BNB with createPoolADD,7,https://github.com/code-423n4/2021-07-spartan-findings/issues/7,spartan,2021/07,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
20,gpersoon,gpersoon.eth,3,Result of transfer / transferFrom not checked,8,https://github.com/code-423n4/2021-07-spartan-findings/issues/8,spartan,2021/07,bug;3 (High Risk);sponsor confirmed
20,gpersoon,gpersoon.eth,1,vailidity checks in setParams ,9,https://github.com/code-423n4/2021-07-spartan-findings/issues/9,spartan,2021/07,bug;duplicate;1 (Low Risk)
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,Router has an arbitrary send ,184,https://github.com/code-423n4/2021-07-spartan-findings/issues/184,spartan,2021/07,bug;duplicate;invalid;3 (High Risk)
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,Router has a payable re-entrancy ,185,https://github.com/code-423n4/2021-07-spartan-findings/issues/185,spartan,2021/07,bug;duplicate;0 (Non-critical)
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,"Router.swapTo(uint256,address,address,address) is potentially reentrant",186,https://github.com/code-423n4/2021-07-spartan-findings/issues/186,spartan,2021/07,bug;duplicate;invalid;0 (Non-critical)
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,"Router.zapLiquidity(uint256,address,address) has unchecked transfers",187,https://github.com/code-423n4/2021-07-spartan-findings/issues/187,spartan,2021/07,bug;duplicate;invalid;3 (High Risk)
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,"Router.removeLiquidityExact(uint256,address) has unchecked transfers",188,https://github.com/code-423n4/2021-07-spartan-findings/issues/188,spartan,2021/07,bug;duplicate;invalid;3 (High Risk)
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,"Router.removeLiquiditySingle(uint256,bool,address) has unchecked transfers",189,https://github.com/code-423n4/2021-07-spartan-findings/issues/189,spartan,2021/07,bug;duplicate;invalid;3 (High Risk)
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,"Router._handleTransferIn(address,uint256,address) has unchecked transfers",190,https://github.com/code-423n4/2021-07-spartan-findings/issues/190,spartan,2021/07,bug;duplicate;invalid;3 (High Risk)
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,"Router._handleTransferOut(address,uint256,address) has unchecked transfer",191,https://github.com/code-423n4/2021-07-spartan-findings/issues/191,spartan,2021/07,bug;duplicate;invalid;3 (High Risk)
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,"Router.swapSynthToAsset(uint256,address,address) has unchecked transfer",192,https://github.com/code-423n4/2021-07-spartan-findings/issues/192,spartan,2021/07,bug;duplicate;invalid;3 (High Risk)
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,"Router.addDividend(address,uint256) has potentially unsafe arithmetic",193,https://github.com/code-423n4/2021-07-spartan-findings/issues/193,spartan,2021/07,bug;invalid;2 (Med Risk);sponsor disputed
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,"Router.revenueDetails(uint256,address) potentially vulnerable to miner manipulation",194,https://github.com/code-423n4/2021-07-spartan-findings/issues/194,spartan,2021/07,bug;0 (Non-critical);sponsor disputed;disagree with severity
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,"Dao.bond(address,uint256) is reentrant and payable",195,https://github.com/code-423n4/2021-07-spartan-findings/issues/195,spartan,2021/07,bug;duplicate;0 (Non-critical);disagree with severity
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,Dao has unchecked transfers,196,https://github.com/code-423n4/2021-07-spartan-findings/issues/196,spartan,2021/07,bug;duplicate;invalid;3 (High Risk)
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,Dao.calcReward(address) has potential division before multiplication arithmetic errors,197,https://github.com/code-423n4/2021-07-spartan-findings/issues/197,spartan,2021/07,bug;invalid;2 (Med Risk);sponsor disputed
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,DaoVault.constructor(address) is missing a zero address check,198,https://github.com/code-423n4/2021-07-spartan-findings/issues/198,spartan,2021/07,bug;0 (Non-critical);sponsor disputed
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,"DaoVault.withdraw(address,address) potentially subject to timestamp manipulation",199,https://github.com/code-423n4/2021-07-spartan-findings/issues/199,spartan,2021/07,bug;invalid;2 (Med Risk);sponsor disputed;disagree with severity
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,Pool has unchecked transfers,200,https://github.com/code-423n4/2021-07-spartan-findings/issues/200,spartan,2021/07,bug;duplicate;3 (High Risk)
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,Pool._addPoolMetrics(uint256) is subject to potential miner manipulation,201,https://github.com/code-423n4/2021-07-spartan-findings/issues/201,spartan,2021/07,bug;2 (Med Risk);sponsor disputed;disagree with severity
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,"Pool.swapTo(address token, address member) potentially locks funds",202,https://github.com/code-423n4/2021-07-spartan-findings/issues/202,spartan,2021/07,bug;duplicate;1 (Low Risk)
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,"Pool.burnSynth(address,address) is potentially reentrant",203,https://github.com/code-423n4/2021-07-spartan-findings/issues/203,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed;disagree with severity
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,"Pool.constructor(address,address) does not check for zero address",204,https://github.com/code-423n4/2021-07-spartan-findings/issues/204,spartan,2021/07,bug;duplicate;1 (Low Risk);sponsor disputed
20,heiho1,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,Pool._addPoolMetrics(uint256) potentially subject to miner manipulation,205,https://github.com/code-423n4/2021-07-spartan-findings/issues/205,spartan,2021/07,bug;duplicate;0 (Non-critical);sponsor disputed;disagree with severity
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,Low economic barrier to DDOS the DAO,22,https://github.com/code-423n4/2021-07-spartan-findings/issues/22,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,DEPLOYER can drain DAOVault funds + manipulate proposal results,27,https://github.com/code-423n4/2021-07-spartan-findings/issues/27,spartan,2021/07,bug;3 (High Risk);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Create separate permissions for DEPLOYER,28,https://github.com/code-423n4/2021-07-spartan-findings/issues/28,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Pool.sol & Synth.sol: Failing Max Value Allowance,29,https://github.com/code-423n4/2021-07-spartan-findings/issues/29,spartan,2021/07,bug;3 (High Risk);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Utils.sol: Combine Swap Output + Fee Calculation (Avoid Rounding Errors),30,https://github.com/code-423n4/2021-07-spartan-findings/issues/30,spartan,2021/07,bug;duplicate;invalid;1 (Low Risk)
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Utils.sol: Combine Swap Output + Fee Calculation to avoid Rounding Errors + Integer Overflow [Updated],34,https://github.com/code-423n4/2021-07-spartan-findings/issues/34,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Router.sol: Better changeArrayFeeSize implementation,35,https://github.com/code-423n4/2021-07-spartan-findings/issues/35,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Router.sol: Optimise calculation of totalTradeFees in addTradeFee(),36,https://github.com/code-423n4/2021-07-spartan-findings/issues/36,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Dao.sol: Unbounded Iterations in claimAllForMember(),37,https://github.com/code-423n4/2021-07-spartan-findings/issues/37,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,poolFactory.sol: Use counter for curatedPoolCount,39,https://github.com/code-423n4/2021-07-spartan-findings/issues/39,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,BondVault.sol: Possibly unwithdrawable bondedLP funds in claimForMember() + claimRate never zeros after full withdrawals,42,https://github.com/code-423n4/2021-07-spartan-findings/issues/42,spartan,2021/07,bug;2 (Med Risk);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Dao.sol: Insufficient validation for proposal creation,43,https://github.com/code-423n4/2021-07-spartan-findings/issues/43,spartan,2021/07,bug;2 (Med Risk);sponsor confirmed;disagree with severity
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Dao.sol: Reserve emissions must be turned on for depositLPs and bonds,44,https://github.com/code-423n4/2021-07-spartan-findings/issues/44,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,synthVault.sol: _processWithdraw: Replace synthReward with principle,45,https://github.com/code-423n4/2021-07-spartan-findings/issues/45,spartan,2021/07,bug;duplicate;1 (Low Risk)
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Pool.sol: swapTo() should not be payable,46,https://github.com/code-423n4/2021-07-spartan-findings/issues/46,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,"Synth.sol: Redundant _handleTransferIn, onlyDAO, DEPLOYER",47,https://github.com/code-423n4/2021-07-spartan-findings/issues/47,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Dao.sol: Restrict Function Visibilities,48,https://github.com/code-423n4/2021-07-spartan-findings/issues/48,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Pool.sol: Optimizations,49,https://github.com/code-423n4/2021-07-spartan-findings/issues/49,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Router.sol: lastMonth variable is private,50,https://github.com/code-423n4/2021-07-spartan-findings/issues/50,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,BondVault.sol: Optimizations,51,https://github.com/code-423n4/2021-07-spartan-findings/issues/51,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Dao.sol: Return votes > consensus,52,https://github.com/code-423n4/2021-07-spartan-findings/issues/52,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,DaoVault.sol & BondVault.sol: Discrepancies in mapping visibility,53,https://github.com/code-423n4/2021-07-spartan-findings/issues/53,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,isEqual(): Inconsistent Implementation,54,https://github.com/code-423n4/2021-07-spartan-findings/issues/54,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Pool.sol + Synth.sol: Inconsistent Allowance Checking Implementation,55,https://github.com/code-423n4/2021-07-spartan-findings/issues/55,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Pool.sol + Router.sol: Set revenue directly as _fee,56,https://github.com/code-423n4/2021-07-spartan-findings/issues/56,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Router.sol: Redundant _token initialization in addLiquiditySingleForMember(),57,https://github.com/code-423n4/2021-07-spartan-findings/issues/57,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Dao.sol: Define BASE as iBEP20 instead of address,60,https://github.com/code-423n4/2021-07-spartan-findings/issues/60,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Dao.sol: newParamProposal takes in uint32 param,61,https://github.com/code-423n4/2021-07-spartan-findings/issues/61,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Utils.sol: Calculation issue with Slippage Adjustment,62,https://github.com/code-423n4/2021-07-spartan-findings/issues/62,spartan,2021/07,bug;0 (Non-critical);sponsor acknowledged
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Utils.sol: Redundant two assignment in calcLiquidityUnitsAsym(),63,https://github.com/code-423n4/2021-07-spartan-findings/issues/63,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Dao.sol: Unused hasMinority(),69,https://github.com/code-423n4/2021-07-spartan-findings/issues/69,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed
20,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Variables that can be  converted into immutable,73,https://github.com/code-423n4/2021-07-spartan-findings/issues/73,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Use unchecked blocks in some cases to save gas.,74,https://github.com/code-423n4/2021-07-spartan-findings/issues/74,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,unchecked return  value from Transfer()/TransferFrom,209,https://github.com/code-423n4/2021-07-spartan-findings/issues/209,spartan,2021/07,bug;duplicate;3 (High Risk)
20,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,No checking of recipient address validation during low-level call,212,https://github.com/code-423n4/2021-07-spartan-findings/issues/212,spartan,2021/07,bug;invalid;0 (Non-critical);sponsor disputed
20,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,"lack of zero address validation for recipent in _transfer() of pool.sol, synth.sol",213,https://github.com/code-423n4/2021-07-spartan-findings/issues/213,spartan,2021/07,bug;invalid;1 (Low Risk);sponsor acknowledged
20,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,Lack of emission of event when changing  dao fees,215,https://github.com/code-423n4/2021-07-spartan-findings/issues/215,spartan,2021/07,bug;0 (Non-critical);sponsor acknowledged
20,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,state variables that can be declared as immutable,217,https://github.com/code-423n4/2021-07-spartan-findings/issues/217,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,state variable that can be declared as constant,219,https://github.com/code-423n4/2021-07-spartan-findings/issues/219,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,unbounded loop,223,https://github.com/code-423n4/2021-07-spartan-findings/issues/223,spartan,2021/07,bug;duplicate;1 (Low Risk)
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,DaoVault/ BondVault/ SynthVault are vulnerable to price manipulation.,142,https://github.com/code-423n4/2021-07-spartan-findings/issues/142,spartan,2021/07,bug;invalid;3 (High Risk);sponsor disputed
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,0,Contract file name does not follow coding conventions,19,https://github.com/code-423n4/2021-07-spartan-findings/issues/19,spartan,2021/07,bug;0 (Non-critical);sponsor acknowledged
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Dao contract's code size exceeds size limit.,2,https://github.com/code-423n4/2021-07-spartan-findings/issues/2,spartan,2021/07,bug;invalid;1 (Low Risk);sponsor disputed;disagree with severity
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,arbitrary synth mint/burn from pool,20,https://github.com/code-423n4/2021-07-spartan-findings/issues/20,spartan,2021/07,bug;3 (High Risk);sponsor confirmed
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Contract code size exceed contract size limit,21,https://github.com/code-423n4/2021-07-spartan-findings/issues/21,spartan,2021/07,bug;invalid;1 (Low Risk);sponsor disputed;disagree with severity
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Vulnerable Pool initial rate.,23,https://github.com/code-423n4/2021-07-spartan-findings/issues/23,spartan,2021/07,bug;2 (Med Risk);sponsor acknowledged
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Pool does not use `safeTransfer` when dealing with tokens.,3,https://github.com/code-423n4/2021-07-spartan-findings/issues/3,spartan,2021/07,bug;duplicate;3 (High Risk)
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,0,Misleading comment and missing revert message,31,https://github.com/code-423n4/2021-07-spartan-findings/issues/31,spartan,2021/07,bug;0 (Non-critical);sponsor confirmed
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Allowance can not adjust once its set to max,32,https://github.com/code-423n4/2021-07-spartan-findings/issues/32,spartan,2021/07,bug;duplicate;3 (High Risk)
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,`approveAndCall` approve `max` amount of token,33,https://github.com/code-423n4/2021-07-spartan-findings/issues/33,spartan,2021/07,bug;3 (High Risk);sponsor confirmed;disagree with severity
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Hijack token pool by burning liquidity token,38,https://github.com/code-423n4/2021-07-spartan-findings/issues/38,spartan,2021/07,bug;3 (High Risk);sponsor confirmed
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Synth `realise` is vulnerable to flash loan attacks,40,https://github.com/code-423n4/2021-07-spartan-findings/issues/40,spartan,2021/07,bug;3 (High Risk);sponsor confirmed;disagree with severity
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,0,Ambiguous parameter name in `SynthVault`,41,https://github.com/code-423n4/2021-07-spartan-findings/issues/41,spartan,2021/07,bug;0 (Non-critical);sponsor acknowledged
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Misuse of AMM model on minting Synth,58,https://github.com/code-423n4/2021-07-spartan-findings/issues/58,spartan,2021/07,bug;duplicate;invalid;3 (High Risk)
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Misuse of AMM model on minting Synth (resubmit to add more detail),59,https://github.com/code-423n4/2021-07-spartan-findings/issues/59,spartan,2021/07,bug;3 (High Risk);sponsor confirmed
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Inconsistent value of burnSynth between Pool and Synth,70,https://github.com/code-423n4/2021-07-spartan-findings/issues/70,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,wrong `calcLiquidityHoldings` that leads to dead fund in the Pool,71,https://github.com/code-423n4/2021-07-spartan-findings/issues/71,spartan,2021/07,bug;3 (High Risk);disagree with severity;sponsor acknowledged
20,k,0x34c38f6d62db32f368ad66f5a686c9b8bbef7141,2,Unvalidated `transfer` and `transferFrom` Return Values,89,https://github.com/code-423n4/2021-07-spartan-findings/issues/89,spartan,2021/07,bug;duplicate;3 (High Risk)
20,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,Strict equality used in claimForMemeber(),143,https://github.com/code-423n4/2021-07-spartan-findings/issues/143,spartan,2021/07,bug;0 (Non-critical);sponsor disputed
20,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,1,Missing zero address check on BondVault constructor,144,https://github.com/code-423n4/2021-07-spartan-findings/issues/144,spartan,2021/07,bug;1 (Low Risk);sponsor acknowledged
20,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,G,Function purgeDeployer() should be declared external in BondVault.sol,145,https://github.com/code-423n4/2021-07-spartan-findings/issues/145,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,G,Variable one in Utils.sol can be set to constant  ,146,https://github.com/code-423n4/2021-07-spartan-findings/issues/146,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,2,[PoolFactory.sol] createPoolADD() function is payable but does not contain a function to withdraw funds,183,https://github.com/code-423n4/2021-07-spartan-findings/issues/183,spartan,2021/07,bug;invalid;2 (Med Risk);sponsor disputed
20,maplesyrup,0x8b8ce5B07E0a94Fe1B446035EE5D651F90aa7a36,3,Unchecked transfers found in 3 contracts,208,https://github.com/code-423n4/2021-07-spartan-findings/issues/208,spartan,2021/07,bug;duplicate;3 (High Risk)
20,natus,0x8885b44032Cba8813e870dA237f0598D6C822424,G,Remove _token from addLiquiditySingleForMember,64,https://github.com/code-423n4/2021-07-spartan-findings/issues/64,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,natus,0x8885b44032Cba8813e870dA237f0598D6C822424,G,ROUTER.addFee() Gas Optimization,80,https://github.com/code-423n4/2021-07-spartan-findings/issues/80,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,natus,0x8885b44032Cba8813e870dA237f0598D6C822424,G,POOL.addFee() Gas Optimization,81,https://github.com/code-423n4/2021-07-spartan-findings/issues/81,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,natus,0x8885b44032Cba8813e870dA237f0598D6C822424,G,SYNTHVAULT.harvestAll() Gas Optimization,82,https://github.com/code-423n4/2021-07-spartan-findings/issues/82,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,natus,0x8885b44032Cba8813e870dA237f0598D6C822424,G,SYNTHVAULT.addFee() Gas Optimization,83,https://github.com/code-423n4/2021-07-spartan-findings/issues/83,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,natus,0x8885b44032Cba8813e870dA237f0598D6C822424,G,POOLFACTORY.curatedPoolCount() Gas Optimization,84,https://github.com/code-423n4/2021-07-spartan-findings/issues/84,spartan,2021/07,bug;G (Gas Optimization)
20,natus,0x8885b44032Cba8813e870dA237f0598D6C822424,G,ROUTER.addTradeFee(),86,https://github.com/code-423n4/2021-07-spartan-findings/issues/86,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,natus,0x8885b44032Cba8813e870dA237f0598D6C822424,G,ROUTER._handleTransferIn(),87,https://github.com/code-423n4/2021-07-spartan-findings/issues/87,spartan,2021/07,bug;G (Gas Optimization);sponsor confirmed
20,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Assuming `BEP20.name` of a token is implemented,226,https://github.com/code-423n4/2021-07-spartan-findings/issues/226,spartan,2021/07,bug;invalid;1 (Low Risk);disagree with severity;sponsor acknowledged
20,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Some critical parameters cannot be adjusted after deployment,227,https://github.com/code-423n4/2021-07-spartan-findings/issues/227,spartan,2021/07,bug;duplicate;1 (Low Risk)
20,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Missing critical checks in the `createPool` function of `PoolFactory`,228,https://github.com/code-423n4/2021-07-spartan-findings/issues/228,spartan,2021/07,bug;duplicate;1 (Low Risk)
20,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Incorrect implementation of `_handleTransferIn` of `PoolFactory`,229,https://github.com/code-423n4/2021-07-spartan-findings/issues/229,spartan,2021/07,bug;duplicate;1 (Low Risk)
20,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Allowance cannot be reset once it is set to the maximum,230,https://github.com/code-423n4/2021-07-spartan-findings/issues/230,spartan,2021/07,bug;duplicate;3 (High Risk)
20,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,`Approval` event not emitted if the allowance is the maximum,231,https://github.com/code-423n4/2021-07-spartan-findings/issues/231,spartan,2021/07,bug;duplicate;1 (Low Risk)
20,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Possible divide by zero errors in `Utils`,232,https://github.com/code-423n4/2021-07-spartan-findings/issues/232,spartan,2021/07,bug;1 (Low Risk);sponsor confirmed
20,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Return values of `BEP20.transfer` and `BEP20.transferFrom` are unchecked,233,https://github.com/code-423n4/2021-07-spartan-findings/issues/233,spartan,2021/07,bug;duplicate;3 (High Risk)
20,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Unbounded loops in several contracts,234,https://github.com/code-423n4/2021-07-spartan-findings/issues/234,spartan,2021/07,bug;duplicate;1 (Low Risk)
20,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Improper access control of `claimAllForMember` allows anyone to reduce the weight of a member,235,https://github.com/code-423n4/2021-07-spartan-findings/issues/235,spartan,2021/07,bug;2 (Med Risk);sponsor confirmed;disagree with severity
20,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Possible DoS attack in creating new DAO proposals,236,https://github.com/code-423n4/2021-07-spartan-findings/issues/236,spartan,2021/07,bug;duplicate;2 (Med Risk)
20,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Inconsistent slip adjustment calculation with the Thorchain model,237,https://github.com/code-423n4/2021-07-spartan-findings/issues/237,spartan,2021/07,bug;duplicate;0 (Non-critical);disagree with severity
20,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Flash loan manipulation on `getPoolShareWeight` of `Utils`,238,https://github.com/code-423n4/2021-07-spartan-findings/issues/238,spartan,2021/07,bug;3 (High Risk);sponsor confirmed;disagree with severity
20,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Swap fees are not accounted for if users swap directly from the pools,239,https://github.com/code-423n4/2021-07-spartan-findings/issues/239,spartan,2021/07,bug;invalid;3 (High Risk);disagree with severity;sponsor acknowledged
20,Sparta,0x5c8351c52162fbbe4c5688b34390ad3765d7e9ca,3,error_reporting = E_ALL & ~E_DEPRECATED,18,https://github.com/code-423n4/2021-07-spartan-findings/issues/18,spartan,2021/07,bug;invalid;3 (High Risk);sponsor disputed
20,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,getSlipAdjustment assumes base amount in has an extra factor of 2,76,https://github.com/code-423n4/2021-07-spartan-findings/issues/76,spartan,2021/07,bug;duplicate;0 (Non-critical)
20,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,calcLiquidityHoldings and calcLiquidityUnits aren't inverses unless the swap is balanced,77,https://github.com/code-423n4/2021-07-spartan-findings/issues/77,spartan,2021/07,bug;invalid;3 (High Risk);sponsor disputed
20,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,CalcLiquidityHoldings and CalcLiquidty Units are not inverses unless the input amount is balanced,78,https://github.com/code-423n4/2021-07-spartan-findings/issues/78,spartan,2021/07,bug;duplicate;invalid;3 (High Risk)
20,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Pool decimals are always assumed to be 18,79,https://github.com/code-423n4/2021-07-spartan-findings/issues/79,spartan,2021/07,bug;invalid;2 (Med Risk);sponsor disputed
20,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,"Frontrunning is infinitely profitable, slippage is implied 100%",85,https://github.com/code-423n4/2021-07-spartan-findings/issues/85,spartan,2021/07,bug;3 (High Risk);sponsor confirmed;disagree with severity
20,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,zapLiquidity can be manipulated ,88,https://github.com/code-423n4/2021-07-spartan-findings/issues/88,spartan,2021/07,bug;invalid;3 (High Risk);sponsor disputed;disagree with severity
20,zer0dot,0xF4F56fA0D045ae0e6Ba8f82e2C32887FE0B152Ea,1,Confusing Unchecked Return Values,72,https://github.com/code-423n4/2021-07-spartan-findings/issues/72,spartan,2021/07,bug;duplicate;3 (High Risk)
20,zer0dot,0xF4F56fA0D045ae0e6Ba8f82e2C32887FE0B152Ea,0,Inconsistency in Function Naming,75,https://github.com/code-423n4/2021-07-spartan-findings/issues/75,spartan,2021/07,bug;0 (Non-critical);sponsor acknowledged
18,0xRajeev,rajeev.eth,1,Lack of guarded launch approach may be risky,81,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/81,wildcredit,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
18,0xRajeev,rajeev.eth,2,Single-step process for critical ownership transfers is risky,82,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/82,wildcredit,2021/07,bug;0 (Non-critical);sponsor confirmed
18,0xRajeev,rajeev.eth,1,Clone-and-own approach used for OZ libraries is susceptible to errors and missing upstream bug fixes,83,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/83,wildcredit,2021/07,bug;invalid;1 (Low Risk);sponsor acknowledged
18,0xRajeev,rajeev.eth,1,Missing zero-address checks,84,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/84,wildcredit,2021/07,bug;invalid;1 (Low Risk);disagree with severity;sponsor disputed
18,0xRajeev,rajeev.eth,2,Critical protocol parameter configuration/changes should have sanity/threshold checks,85,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/85,wildcredit,2021/07,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
18,0xRajeev,rajeev.eth,2,Incompatibility With Rebasing/Deflationary/Inflationary tokens,86,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/86,wildcredit,2021/07,bug;duplicate;2 (Med Risk)
18,0xRajeev,rajeev.eth,1,Missing threshold check for liquidation fees in constructor,87,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/87,wildcredit,2021/07,bug;duplicate;1 (Low Risk)
18,0xRajeev,rajeev.eth,1,systemRate ignores parameters and returns constant,88,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/88,wildcredit,2021/07,bug;invalid;1 (Low Risk);disagree with severity;sponsor disputed
18,0xRajeev,rajeev.eth,1,The receive() function allows locking of accidentally sent Ether,89,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/89,wildcredit,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
18,0xRajeev,rajeev.eth,1,Redundant _checkMinReserve check,90,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/90,wildcredit,2021/07,bug;duplicate;G (Gas Optimization)
18,0xRajeev,rajeev.eth,1,Use of deprecated Chainlink API,91,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/91,wildcredit,2021/07,bug;duplicate;2 (Med Risk)
18,0xRajeev,rajeev.eth,1,Setting reward for a non-existing pair/token will modify pool 0,92,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/92,wildcredit,2021/07,bug;duplicate;0 (Non-critical)
18,0xRajeev,rajeev.eth,2,Rewards can be migrated to an arbitrary address at anytime by owner,93,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/93,wildcredit,2021/07,bug;invalid;2 (Med Risk);disagree with severity;sponsor acknowledged
18,0xRajeev,rajeev.eth,1,The safe versions of transfer/transferFrom are not implemented as expected,94,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/94,wildcredit,2021/07,bug;duplicate;2 (Med Risk)
18,0xRajeev,rajeev.eth,1,Global borrowing/deposit enabled checks not granular enough,95,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/95,wildcredit,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
18,0xsanson,0xfa9dd286e43F3ED5CEea3202268D2c413a4b012a,3, Recommended,127,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/127,wildcredit,2021/07,bug;invalid;disagree with severity;sponsor disputed;3 (High Risk)
18,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,Unused imported interface in LendingPair,128,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/128,wildcredit,2021/07,bug;0 (Non-critical);sponsor confirmed
18,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,Variables are already of type address,129,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/129,wildcredit,2021/07,bug;duplicate;0 (Non-critical)
18,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,typo: totalAccountBorrrow,130,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/130,wildcredit,2021/07,bug;0 (Non-critical);sponsor confirmed
18,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,typo in revert,131,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/131,wildcredit,2021/07,bug;0 (Non-critical);sponsor acknowledged
18,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,Boolean to constant comparison,132,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/132,wildcredit,2021/07,bug;0 (Non-critical);sponsor acknowledged
18,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,Math.max can be used,133,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/133,wildcredit,2021/07,bug;0 (Non-critical);sponsor confirmed
18,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,G,Gas optimizations - Use bytesX instead of string,74,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/74,wildcredit,2021/07,bug;G (Gas Optimization);sponsor acknowledged
18,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,1,Chainlink - Use latestRoundData instead latestAnswer to run more validations,75,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/75,wildcredit,2021/07,bug;2 (Med Risk);sponsor confirmed
18,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,G,Gas optimizations - Check first If blocksElapsed == 0 in _pendingRewardPerToken,76,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/76,wildcredit,2021/07,bug;G (Gas Optimization);sponsor acknowledged
18,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,G,Gas optimizations - optimize reads in _distributeReward ,77,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/77,wildcredit,2021/07,bug;G (Gas Optimization);sponsor acknowledged
18,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,111,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/111,wildcredit,2021/07,bug;duplicate;0 (Non-critical)
18,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Interest model is non-continuous,112,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/112,wildcredit,2021/07,bug;0 (Non-critical);disagree with severity;sponsor confirmed
18,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,LPTokenMaster does not implement `IERC20`,113,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/113,wildcredit,2021/07,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
18,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`initialize` functions can be frontrun,114,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/114,wildcredit,2021/07,bug;duplicate;invalid;1 (Low Risk)
18,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Total LP supply & total debt accrual is wrong,115,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/115,wildcredit,2021/07,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
18,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Reward computation is wrong,116,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/116,wildcredit,2021/07,bug;disagree with severity;sponsor acknowledged;3 (High Risk)
18,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,ChainLink price data could be stale,117,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/117,wildcredit,2021/07,bug;duplicate;2 (Med Risk)
18,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Uniswap oracle assumes PairToken <> WETH liquidity,118,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/118,wildcredit,2021/07,bug;1 (Low Risk);sponsor acknowledged
18,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Simple interest formula is used,119,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/119,wildcredit,2021/07,bug;1 (Low Risk);sponsor acknowledged
18,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,TransferHelper does not work with all ERC20 tokens,120,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/120,wildcredit,2021/07,bug;duplicate;2 (Med Risk)
18,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`LendingPair._safeTransfer` does not work with all ERC20 tokens,121,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/121,wildcredit,2021/07,bug;duplicate;2 (Med Risk)
18,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`LendingPair.liquidateAccount` does not accrue and update cumulativeInterestRate,122,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/122,wildcredit,2021/07,bug;disagree with severity;sponsor confirmed;3 (High Risk)
18,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`LendingPair.liquidateAccount` fails if tokens are lent out,123,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/123,wildcredit,2021/07,bug;disagree with severity;sponsor confirmed;3 (High Risk)
18,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`LendingPair.pendingSupplyInterest` is not accurate,124,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/124,wildcredit,2021/07,bug;1 (Low Risk);sponsor confirmed
18,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,0,Undefined Event,1,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/1,wildcredit,2021/07,bug;0 (Non-critical);sponsor confirmed
18,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Migrate Rewards Without Distribution,102,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/102,wildcredit,2021/07,bug;1 (Low Risk);sponsor acknowledged
18,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use safetransfer/safetransferfrom consistently instead of transfer/transferfrom,106,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/106,wildcredit,2021/07,bug;invalid;1 (Low Risk);disagree with severity;sponsor acknowledged
18,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,External call does not have amount check in TransferHelper,56,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/56,wildcredit,2021/07,bug;G (Gas Optimization);disagree with severity;sponsor confirmed
18,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant code (systemRate function),57,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/57,wildcredit,2021/07,bug;duplicate;invalid;G (Gas Optimization)
18,GalloDaSballo,0xB943cdb5622E7Bb26D3E462dB68Ee71D8868C940,1,Risk of Overflow in InterestRateModel:borrowRatePerBlock,73,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/73,wildcredit,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
18,gpersoon,gpersoon.eth,2,Griefing lenders,23,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/23,wildcredit,2021/07,bug;invalid;2 (Med Risk);sponsor disputed
18,gpersoon,gpersoon.eth,1,No check of MAX_LIQ_FEES in contructor of Controller,24,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/24,wildcredit,2021/07,bug;1 (Low Risk);sponsor confirmed
18,gpersoon,gpersoon.eth,1,minBorrowUSD not initialized in the contract,25,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/25,wildcredit,2021/07,bug;1 (Low Risk);sponsor confirmed
18,gpersoon,gpersoon.eth,G,redundant call to _checkMinReserve in withdrawBorrowETH ,26,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/26,wildcredit,2021/07,bug;G (Gas Optimization);sponsor confirmed
18,gpersoon,gpersoon.eth,0,_checkMinReserve not checked in all circumstances,27,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/27,wildcredit,2021/07,bug;invalid;0 (Non-critical);sponsor disputed
18,gpersoon,gpersoon.eth,0,Use immutable keyword,28,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/28,wildcredit,2021/07,bug;0 (Non-critical);sponsor confirmed
18,gpersoon,gpersoon.eth,2,how to protect for weird erc20 tokens,29,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/29,wildcredit,2021/07,bug;invalid;2 (Med Risk);sponsor disputed
18,gpersoon,gpersoon.eth,2,WETH not verified to be one of the pair tokens,30,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/30,wildcredit,2021/07,bug;duplicate;invalid;2 (Med Risk)
18,gpersoon,gpersoon.eth,1,WETH not verified to be one of the pair tokens (update),31,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/31,wildcredit,2021/07,bug;duplicate;0 (Non-critical)
18,gpersoon,gpersoon.eth,0,difference between _safeTransferFrom and _safeTransfer,32,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/32,wildcredit,2021/07,bug;0 (Non-critical);sponsor confirmed
18,gpersoon,gpersoon.eth,1,feeRecipient is not initialized,33,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/33,wildcredit,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
18,gpersoon,gpersoon.eth,2,Rewards of the wrong pool could be updated accidentally.,34,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/34,wildcredit,2021/07,bug;duplicate;0 (Non-critical);disagree with severity
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,2,UniswapV3Oracle: Check for stale ETH prices,22,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/22,wildcredit,2021/07,bug;duplicate;2 (Med Risk)
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,InterestRateModel: Infallible logic,35,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/35,wildcredit,2021/07,bug;G (Gas Optimization);sponsor acknowledged
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,0,InterestRateModel: Use constant for 100e18,36,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/36,wildcredit,2021/07,bug;0 (Non-critical);sponsor acknowledged
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,1,LendingPair: Avoid rounding error in _accrueAccountSupply(),37,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/37,wildcredit,2021/07,bug;1 (Low Risk);sponsor acknowledged
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,LendingPair: Cache token decimals,38,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/38,wildcredit,2021/07,bug;G (Gas Optimization);sponsor acknowledged
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,LendingPair: Duplicate _checkMinReserve() call,39,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/39,wildcredit,2021/07,bug;duplicate;G (Gas Optimization)
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,0,LendingPair: Error Messages can be improved,40,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/40,wildcredit,2021/07,bug;0 (Non-critical);sponsor acknowledged
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,0,LendingPair: Make MIN_RESERVE private,41,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/41,wildcredit,2021/07,bug;invalid;0 (Non-critical);sponsor confirmed
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,1,LendingPair: Missing validation check for ETH methods,42,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/42,wildcredit,2021/07,bug;duplicate;invalid;1 (Low Risk)
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,LendingPair: Optimise liquidation parameter calculations,43,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/43,wildcredit,2021/07,bug;G (Gas Optimization);sponsor acknowledged
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,1,LendingPair: Validate token decimals,44,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/44,wildcredit,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,1,LPTokenMaster: CEI Pattern,45,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/45,wildcredit,2021/07,bug;0 (Non-critical);sponsor confirmed
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,LPTokenMaster: underlying() → address underlyingToken,46,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/46,wildcredit,2021/07,bug;G (Gas Optimization);sponsor acknowledged
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,RewardDistribution: Avoid 0 pid to drop boolean flag use,47,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/47,wildcredit,2021/07,bug;G (Gas Optimization);sponsor acknowledged
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,RewardDistribution: Redundant boolean flag check in _getPid(),48,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/48,wildcredit,2021/07,bug;G (Gas Optimization);sponsor acknowledged
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,0,RewardDistribution: Make variables immutable,49,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/49,wildcredit,2021/07,bug;duplicate;0 (Non-critical)
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,RewardDistribution: Optimise _getPid,50,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/50,wildcredit,2021/07,bug;G (Gas Optimization);sponsor confirmed
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,"RewardDistribution: Optimise pendingSupplyReward, pendingBorrowReward, _distributeReward and _poolRewardRate",51,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/51,wildcredit,2021/07,bug;G (Gas Optimization);sponsor acknowledged
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,RewardDistribution: Simplify _onlyLendingPair(),52,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/52,wildcredit,2021/07,bug;duplicate;invalid;G (Gas Optimization)
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,0,"UniswapV3Oracle: No events emitted for setUniPriceConverter, setTwapPeriod, setMinObservations",53,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/53,wildcredit,2021/07,bug;0 (Non-critical);sponsor confirmed
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,1,UniswapV3Oracle: Possibly wrong return argument fetched,54,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/54,wildcredit,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,1,UniswapV3Oracle: Reduce minObservations to uint16,55,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/55,wildcredit,2021/07,bug;1 (Low Risk);sponsor confirmed
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,1,LendingPair: Missing same token check when initializing,58,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/58,wildcredit,2021/07,bug;invalid;1 (Low Risk);sponsor disputed
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,LendingPair: Unnecessary Casting,59,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/59,wildcredit,2021/07,bug;G (Gas Optimization);sponsor confirmed
18,greiart,0x1c95a25459edd226aCF8061D40C7FB03716371F7,0,LendingPair: Missing validation check for ETH methods [Updated],60,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/60,wildcredit,2021/07,bug;0 (Non-critical);sponsor confirmed
18,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Variables that can be converted into immutables,110,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/110,wildcredit,2021/07,bug;G (Gas Optimization);sponsor confirmed
18,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Unused return value from transfer(),100,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/100,wildcredit,2021/07,bug;duplicate;2 (Med Risk)
18,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Insuffiecient input validation in initialize() in LendingPair.sol,101,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/101,wildcredit,2021/07,bug;duplicate;invalid;2 (Med Risk)
18,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,Packing of  variable in controller.sol,103,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/103,wildcredit,2021/07,bug;G (Gas Optimization);sponsor acknowledged
18,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,Uneccessary condition in RewardDistribution.sol,104,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/104,wildcredit,2021/07,bug;invalid;G (Gas Optimization);sponsor disputed
18,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Incorrect position of require() in TransferHelper.sol,105,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/105,wildcredit,2021/07,bug;duplicate;1 (Low Risk)
18,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,Lack of Input validation in selfBurn() & burn(),107,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/107,wildcredit,2021/07,bug;invalid;0 (Non-critical);sponsor disputed
18,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Lack of zero address validation,108,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/108,wildcredit,2021/07,bug;0 (Non-critical);sponsor confirmed
18,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,when setting new value for feeRecepient/totalRewardPerBlock ensure that new value is different from old one,109,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/109,wildcredit,2021/07,bug;0 (Non-critical);sponsor acknowledged
18,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Erc20 Race condition for allowance,96,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/96,wildcredit,2021/07,bug;1 (Low Risk);disagree with severity;sponsor disputed
18,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,3,Owner can burn other users token shares,97,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/97,wildcredit,2021/07,bug;invalid;disagree with severity;sponsor disputed;3 (High Risk)
18,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Lack of access modifier in initialize() in LPTokenMaster.sol,98,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/98,wildcredit,2021/07,bug;duplicate;invalid;1 (Low Risk)
18,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Use of Floating Pragma,99,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/99,wildcredit,2021/07,bug;0 (Non-critical);sponsor confirmed
18,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,G,unnecessary check of _checkMinReserve in withdrawBorrowETH,61,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/61,wildcredit,2021/07,bug;duplicate;G (Gas Optimization)
18,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,0,Missing `isContract` check when initializing LendingPair,62,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/62,wildcredit,2021/07,bug;invalid;0 (Non-critical);sponsor acknowledged
18,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,G,TransferHelper checks amount > 0 after calling transferFrom,63,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/63,wildcredit,2021/07,bug;duplicate;G (Gas Optimization)
18,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Code size exceed limit,64,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/64,wildcredit,2021/07,bug;0 (Non-critical);disagree with severity;sponsor disputed
18,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,safeTransferFrom in TransferHelper is not safeTransferFrom,67,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/67,wildcredit,2021/07,bug;2 (Med Risk);sponsor confirmed
18,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,0,LendingPair does not check valid token when repaying ETH,69,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/69,wildcredit,2021/07,bug;duplicate;0 (Non-critical)
18,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Lending Pair initialize function can be front run.,72,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/72,wildcredit,2021/07,bug;duplicate;invalid;2 (Med Risk);disagree with severity;sponsor disputed
18,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,0,lpTokenMaster doesn't check allowance before transferring ,78,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/78,wildcredit,2021/07,bug;duplicate;0 (Non-critical)
18,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,`SelfBurn` lpToken may create bad debt,79,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/79,wildcredit,2021/07,bug;invalid;question;2 (Med Risk);sponsor disputed
18,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Lending Pair doesn't handle deflationary tokens properly,80,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/80,wildcredit,2021/07,bug;invalid;1 (Low Risk);sponsor acknowledged
18,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Constructor sets values but does not emit events,65,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/65,wildcredit,2021/07,bug;invalid;0 (Non-critical);sponsor disputed
18,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,addPool emits PoolUpdate with wrong pid,68,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/68,wildcredit,2021/07,bug;0 (Non-critical);disagree with severity;sponsor confirmed
18,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,setReward does not check if pid exists,70,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/70,wildcredit,2021/07,bug;0 (Non-critical);sponsor confirmed
18,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,_wethWithdrawTo is vulnerable re-entrancy,71,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/71,wildcredit,2021/07,bug;2 (Med Risk);sponsor confirmed
18,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Use of unlocked pragmas,134,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/134,wildcredit,2021/07,bug;duplicate;0 (Non-critical)
18,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,ERC20 tokens may not implement the `decimals` method,135,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/135,wildcredit,2021/07,bug;duplicate;invalid;1 (Low Risk)
18,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Incorrect parameter used in the `addPool` event of `RewardDistribution`,136,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/136,wildcredit,2021/07,bug;duplicate;1 (Low Risk)
18,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Return values of `rewardToken.transfer` are unchecked,137,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/137,wildcredit,2021/07,bug;duplicate;1 (Low Risk)
18,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Add a proper revert message in `transferFrom` of `LPTokenMaster`,138,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/138,wildcredit,2021/07,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
18,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Unnecessary comparison with `MIN_RATE` in `InterestRateModel`,139,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/139,wildcredit,2021/07,bug;duplicate
18,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Unimplemented methods in several interfaces,140,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/140,wildcredit,2021/07,bug;0 (Non-critical);disagree with severity;sponsor confirmed
18,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Deflationary and fee-on-transfer tokens are not correctly accounted,141,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/141,wildcredit,2021/07,bug;duplicate;2 (Med Risk)
18,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,The interest rate is calculated based on assumptions on the block time,142,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/142,wildcredit,2021/07,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
18,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Use of deprecated Chainlink function `latestAnswer`,143,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/143,wildcredit,2021/07,bug;duplicate;2 (Med Risk)
18,Sparta,0xfa9dd286e43F3ED5CEea3202268D2c413a4b012a,0,## Recommended Mitigation Steps,126,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/126,wildcredit,2021/07,bug;invalid;0 (Non-critical);sponsor disputed
18,toastedsteaksandwich,0xD8f6877aec57C3d70F458C54a1382dDc90522E7D,1,repayAll() and repayAllETH() vulnerable to frontrunning,125,https://github.com/code-423n4/2021-07-wildcredit-findings/issues/125,wildcredit,2021/07,bug;1 (Low Risk);sponsor confirmed
22,0xImpostor,0x2bc996DED6d9325311DEE1bd32998e2fc7f9c922,3,Synths minted to the wrong market when initializing,20,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/20,floatcapital,2021/08,bug;duplicate;3 (High Risk);sponsor confirmed;disagree with severity;resolved
22,0xImpostor,0x2bc996DED6d9325311DEE1bd32998e2fc7f9c922,2,getUsersConfirmedButNotSettledSynthBalance is potentially calculated wrongly,21,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/21,floatcapital,2021/08,bug;2 (Med Risk);sponsor disputed;disagree with severity
22,0xImpostor,0x2bc996DED6d9325311DEE1bd32998e2fc7f9c922,1,If condition can never pass,22,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/22,floatcapital,2021/08,bug;1 (Low Risk);sponsor disputed;disagree with severity
22,0xImpostor,0x2bc996DED6d9325311DEE1bd32998e2fc7f9c922,1,missing revert for when totalRealized > totalHeld,34,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/34,floatcapital,2021/08,bug;duplicate;invalid;1 (Low Risk);sponsor disputed;disagree with severity
22,0xImpostor,0x2bc996DED6d9325311DEE1bd32998e2fc7f9c922,G,Unnecessary transferFrom from LongShort to LongShort,35,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/35,floatcapital,2021/08,bug;invalid;G (Gas Optimization);sponsor disputed
22,0xImpostor,0x2bc996DED6d9325311DEE1bd32998e2fc7f9c922,0,Potential for double withdrawal if payment token is a malicious impl.,38,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/38,floatcapital,2021/08,bug;duplicate;0 (Non-critical);sponsor acknowledged;out-of-scope
22,0xImpostor,0x2bc996DED6d9325311DEE1bd32998e2fc7f9c922,0,[Updated] Potential for double withdrawal if payment token is a malicious impl. ,39,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/39,floatcapital,2021/08,bug;duplicate;0 (Non-critical);resolved;sponsor acknowledged
22,0xImpostor,0x2bc996DED6d9325311DEE1bd32998e2fc7f9c922,0,Typo in staking comments,40,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/40,floatcapital,2021/08,bug;duplicate;0 (Non-critical);sponsor confirmed;resolved;fixed-in-upstream-repo
22,0xImpostor,0x2bc996DED6d9325311DEE1bd32998e2fc7f9c922,3,Potential div by 0,41,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/41,floatcapital,2021/08,bug;invalid;3 (High Risk);sponsor disputed;disagree with severity;resolved
22,0xImpostor,0x2bc996DED6d9325311DEE1bd32998e2fc7f9c922,G,Pass time delta into internal functions,42,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/42,floatcapital,2021/08,bug;G (Gas Optimization);sponsor disputed
22,0xImpostor,0x2bc996DED6d9325311DEE1bd32998e2fc7f9c922,G,Gas optimization for withdraw and withdrawAll,44,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/44,floatcapital,2021/08,bug;duplicate;G (Gas Optimization);sponsor confirmed;resolved
22,0xImpostor,0x2bc996DED6d9325311DEE1bd32998e2fc7f9c922,2,Potential underflow on userAmountStaked[token][msg.sender] in _withdraw,45,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/45,floatcapital,2021/08,bug;2 (Med Risk);sponsor disputed;disagree with severity
22,0xRajeev,rajeev.eth,G,Missing indexed event parameters for optimised access,75,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/75,floatcapital,2021/08,bug;duplicate;G (Gas Optimization);sponsor acknowledged
22,0xRajeev,rajeev.eth,G,Caching state variables in local variables can save gas,76,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/76,floatcapital,2021/08,bug;duplicate;G (Gas Optimization);sponsor confirmed;fixed-in-upstream-repo
22,0xRajeev,rajeev.eth,G,Missing checks for non-zero amounts before making external calls,77,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/77,floatcapital,2021/08,bug;invalid;G (Gas Optimization);sponsor disputed
22,0xRajeev,rajeev.eth,G,State variables used in emit calls,78,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/78,floatcapital,2021/08,bug;invalid;G (Gas Optimization);sponsor confirmed
22,0xRajeev,rajeev.eth,G,Unused named returns can be removed for optimization,79,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/79,floatcapital,2021/08,bug;G (Gas Optimization);sponsor acknowledged;float-wont-fix
22,0xRajeev,rajeev.eth,G,executeOutstandingNextPriceSettlementsUserMulti may exceed gas limits,80,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/80,floatcapital,2021/08,bug;0 (Non-critical);sponsor disputed
22,0xRajeev,rajeev.eth,1,Missing use of requireMarketExists modifier on multiple functions,81,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/81,floatcapital,2021/08,bug;0 (Non-critical);sponsor disputed;disagree with severity
22,0xRajeev,rajeev.eth,1,Race-condition risk with initialize functions,82,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/82,floatcapital,2021/08,bug;1 (Low Risk);sponsor disputed;disagree with severity
22,0xRajeev,rajeev.eth,1,Missing zero-address checks,83,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/83,floatcapital,2021/08,bug;duplicate;1 (Low Risk);sponsor acknowledged;fixed-in-upstream-repo
22,0xRajeev,rajeev.eth,2,Single-step process for critical admin transfer is risky,84,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/84,floatcapital,2021/08,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
22,0xRajeev,rajeev.eth,2,Missing events/timelocks for owner/admin only functions that change critical parameters,85,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/85,floatcapital,2021/08,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
22,0xRajeev,rajeev.eth,1,Interface notations are used for abstract contracts,86,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/86,floatcapital,2021/08,bug;0 (Non-critical);disagree with severity;sponsor acknowledged;fixed-in-upstream-repo
22,0xRajeev,rajeev.eth,G,Function visibility can be changed from public to external,87,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/87,floatcapital,2021/08,bug;G (Gas Optimization);sponsor confirmed;disagree with severity;fixed-in-upstream-repo
22,0xRajeev,rajeev.eth,1,transferPaymentTokensToUser will revert when withdrawn tokens are insufficient,88,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/88,floatcapital,2021/08,bug;1 (Low Risk);sponsor disputed;disagree with severity
22,0xRajeev,rajeev.eth,1,Comment-code mismatch for _balanceIncentiveCurve_exponent threshold,89,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/89,floatcapital,2021/08,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
22,bw,0x3d977eF4855A526500E901bFA43c209E0C51BA84,G,Runtime constants not defined as immutable,7,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/7,floatcapital,2021/08,bug;G (Gas Optimization);sponsor acknowledged
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Admin can be locked out in `FloatCapital_v0`,114,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/114,floatcapital,2021/08,bug;invalid;1 (Low Risk);sponsor disputed;out-of-scope
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Admin can be locked out in `Treasury_v0`,115,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/115,floatcapital,2021/08,bug;invalid;1 (Low Risk);sponsor disputed;disagree with severity
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`initialize` functions can be frontrun,116,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/116,floatcapital,2021/08,bug;1 (Low Risk);sponsor disputed;disagree with severity
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`Migrations.sol` uses old compiler version,117,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/117,floatcapital,2021/08,bug;invalid;1 (Low Risk);sponsor disputed;disagree with severity;out-of-scope
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `SyntheticToken` does not use pausing functionality,118,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/118,floatcapital,2021/08,bug;G (Gas Optimization);sponsor confirmed
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`OracleManagerChainlink` price data could be stale,119,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/119,floatcapital,2021/08,bug;question;2 (Med Risk);sponsor confirmed;out-of-scope
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`OracleManagerEthKillerChainlink` price data could be stale,120,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/120,floatcapital,2021/08,bug;duplicate;invalid;2 (Med Risk);sponsor disputed
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`OracleManagerEthVsBtc` price data could be stale,121,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/121,floatcapital,2021/08,bug;duplicate;invalid;2 (Med Risk);sponsor disputed
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`OracleManagerFlippening_V0` price data could be stale,122,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/122,floatcapital,2021/08,bug;duplicate;invalid;2 (Med Risk);sponsor disputed
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`OracleManagerFlippening_V0` wrong decimals,123,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/123,floatcapital,2021/08,bug;invalid;2 (Med Risk);sponsor disputed;out-of-scope
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,"`OracleManagerFlippening_V0`, `OracleManagerEthVsBtc` only work if chainlink decimals are the same",124,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/124,floatcapital,2021/08,bug;invalid;2 (Med Risk);sponsor disputed
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`initializeMarket` uses wrong market index for synthetic,125,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/125,floatcapital,2021/08,bug;duplicate;3 (High Risk);sponsor confirmed;disagree with severity
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Markets cannot be initialized with payment tokens of few decimals,126,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/126,floatcapital,2021/08,bug;duplicate;invalid;0 (Non-critical);sponsor disputed;disagree with severity;out-of-scope
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`getUsersConfirmedButNotSettledSynthBalance` uses current price instead of deposit price,127,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/127,floatcapital,2021/08,bug;duplicate;3 (High Risk);sponsor confirmed;disagree with severity
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,No ERC20 safe* versions called,128,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/128,floatcapital,2021/08,bug;duplicate;invalid;0 (Non-critical);sponsor disputed;disagree with severity
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Possibly not all synths can be withdrawn,129,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/129,floatcapital,2021/08,bug;1 (Low Risk);sponsor disputed;disagree with severity
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Short shift is not cleared,130,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/130,floatcapital,2021/08,bug;duplicate;3 (High Risk);sponsor confirmed;resolved
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Staker does not check that marketIndex actually exists,131,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/131,floatcapital,2021/08,bug;duplicate;invalid;1 (Low Risk);sponsor disputed;disagree with severity
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,ERC20 return values not checked,132,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/132,floatcapital,2021/08,bug;duplicate;invalid;2 (Med Risk);sponsor disputed;disagree with severity
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Same market can be created twice,133,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/133,floatcapital,2021/08,bug;duplicate;1 (Low Risk);sponsor confirmed
22,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Stable prices don't lead to new time periods,134,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/134,floatcapital,2021/08,bug;duplicate;1 (Low Risk);sponsor disputed
22,evertkors,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,1,Not checking for zero value on withdraw,23,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/23,floatcapital,2021/08,bug;1 (Low Risk);sponsor disputed;disagree with severity
22,evertkors,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,G,Withdraw reading from storage twice,24,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/24,floatcapital,2021/08,bug;duplicate;G (Gas Optimization);sponsor confirmed;resolved;fixed-in-upstream-repo
22,evertkors,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,G,"Withdrawall, read from storage twice.",25,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/25,floatcapital,2021/08,bug;duplicate;G (Gas Optimization)
22,evertkors,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,G,"Internal _withdraw, reading from storage twice.",26,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/26,floatcapital,2021/08,bug;duplicate;G (Gas Optimization);sponsor disputed
22,evertkors,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,0,Docstring,27,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/27,floatcapital,2021/08,bug;1 (Low Risk);sponsor confirmed;fixed-in-upstream-repo
22,evertkors,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,3,User is still able to frontrun,29,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/29,floatcapital,2021/08,bug;duplicate;3 (High Risk);sponsor disputed;disagree with severity;resolved
22,evertkors,0x666B8EbFbF4D5f0CE56962a25635CfF563F13161,3,"Solution is susceptible to MEV, harming users.",30,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/30,floatcapital,2021/08,bug;invalid;0 (Non-critical);sponsor disputed
22,gpersoon,gpersoon.eth,1,extra checks in addNewStakingFund,10,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/10,floatcapital,2021/08,bug;1 (Low Risk);sponsor disputed;disagree with severity
22,gpersoon,gpersoon.eth,0,Constant values used inline,11,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/11,floatcapital,2021/08,bug;0 (Non-critical);sponsor acknowledged;float-wont-fix
22,gpersoon,gpersoon.eth,0,confusing comments,12,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/12,floatcapital,2021/08,bug;0 (Non-critical);sponsor confirmed;resolved;fixed-in-upstream-repo
22,gpersoon,gpersoon.eth,1,prevent reentrancy,13,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/13,floatcapital,2021/08,bug;1 (Low Risk);sponsor disputed;disagree with severity;resolved;out-of-scope;float-wont-fix
22,gpersoon,gpersoon.eth,1,extra safety in distributeYieldForTreasuryAndReturnMarketAllocation,14,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/14,floatcapital,2021/08,bug;invalid;0 (Non-critical);sponsor disputed;disagree with severity
22,gpersoon,gpersoon.eth,1,PERMANENT_INITIAL_LIQUIDITY_HOLDER not 100% safe,15,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/15,floatcapital,2021/08,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
22,gpersoon,gpersoon.eth,3,Prevent markets getting stuck when prices don't move,16,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/16,floatcapital,2021/08,bug;2 (Med Risk);sponsor disputed;disagree with severity;float-wont-fix
22,gpersoon,gpersoon.eth,G,slight difference between withdraw and withdrawAll,17,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/17,floatcapital,2021/08,bug;G (Gas Optimization);resolved;sponsor acknowledged;fixed-in-upstream-repo
22,gpersoon,gpersoon.eth,G,gas improvement in withdraw & withdrawAll,18,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/18,floatcapital,2021/08,bug;G (Gas Optimization);resolved;sponsor acknowledged;fixed-in-upstream-repo
22,gpersoon,gpersoon.eth,3,copy paste error in _batchConfirmOutstandingPendingActions,5,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/5,floatcapital,2021/08,bug;3 (High Risk);sponsor confirmed;resolved;fixed-in-upstream-repo
22,gpersoon,gpersoon.eth,3,2 variables not indexed by marketIndex,8,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/8,floatcapital,2021/08,bug;3 (High Risk);sponsor confirmed;resolved;fixed-in-upstream-repo
22,gpersoon,gpersoon.eth,2,latestMarket used where marketIndex should have been used,9,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/9,floatcapital,2021/08,bug;2 (Med Risk);sponsor confirmed;resolved;fixed-in-upstream-repo
22,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,Contract Inherits from non-required interface,135,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/135,floatcapital,2021/08,bug;invalid;G (Gas Optimization);sponsor disputed;disagree with severity
22,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,consistently use `msg.sender` or `_msgSender()`(recommended),136,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/136,floatcapital,2021/08,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
22,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,Gas optimization (state variables),137,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/137,floatcapital,2021/08,bug;duplicate;G (Gas Optimization);sponsor confirmed
22,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,0,emit event at stage changes,138,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/138,floatcapital,2021/08,bug;0 (Non-critical);sponsor acknowledged
22,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,2,Incorrect parameters passed while adding new staking fund,139,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/139,floatcapital,2021/08,bug;2 (Med Risk);sponsor confirmed
22,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,2,Incorrect balance computed in `getUsersConfirmedButNotSettledSynthBalance()`,142,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/142,floatcapital,2021/08,bug;2 (Med Risk);sponsor confirmed;disagree with severity
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Appropriate storage variable type declaration to save on casting,50,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/50,floatcapital,2021/08,bug;G (Gas Optimization);sponsor disputed
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Consider using SafeERC20 for ERC20 operations,51,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/51,floatcapital,2021/08,bug;0 (Non-critical);sponsor acknowledged;fixed-in-upstream-repo
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Drop require checks for synthetic tokens,52,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/52,floatcapital,2021/08,bug;G (Gas Optimization);fixed-in-upstream-repo
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Immutable Variables,53,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/53,floatcapital,2021/08,bug;duplicate;G (Gas Optimization);sponsor acknowledged;fixed-in-upstream-repo
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Increase Solc Optimiser Runs,54,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/54,floatcapital,2021/08,bug;G (Gas Optimization);sponsor disputed
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Index Events,55,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/55,floatcapital,2021/08,bug;duplicate;0 (Non-critical);sponsor acknowledged
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,LongShort.sol & YieldManagerAave.sol: Verify / derive input arguments,56,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/56,floatcapital,2021/08,bug;duplicate;0 (Non-critical);sponsor acknowledged;float-wont-fix
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Add reentrancy safeguards to user actions,57,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/57,floatcapital,2021/08,bug;invalid;0 (Non-critical);sponsor disputed;float-wont-fix
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,LongShort.sol: Cache marketUpdateIndex[marketIndex],58,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/58,floatcapital,2021/08,bug;G (Gas Optimization);sponsor confirmed;fixed-in-upstream-repo
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,LongShort.sol: Inconsistency in _claimAndDistributeYieldThenRebalanceMarket(),59,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/59,floatcapital,2021/08,bug;0 (Non-critical);sponsor confirmed;float-wont-fix
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,Staker.sol: Wrong values returned in edge cases of _calculateFloatPerSecond(),6,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/6,floatcapital,2021/08,bug;2 (Med Risk);sponsor confirmed;resolved;fixed-in-upstream-repo
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,LongShort.sol: Some math can be unchecked in _getYieldSplit(),60,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/60,floatcapital,2021/08,bug;G (Gas Optimization);sponsor acknowledged;fixed-in-upstream-repo
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Single Source of Truth,61,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/61,floatcapital,2021/08,bug;0 (Non-critical);sponsor acknowledged;float-wont-fix
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Spelling Errors,62,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/62,floatcapital,2021/08,bug;0 (Non-critical);sponsor confirmed;fixed-in-upstream-repo
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Staker.sol: Cache marketIndex,63,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/63,floatcapital,2021/08,bug;duplicate;G (Gas Optimization);sponsor confirmed;resolved;fixed-in-upstream-repo
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Staker.sol: Cache shift amounts,64,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/64,floatcapital,2021/08,bug;G (Gas Optimization);sponsor confirmed;fixed-in-upstream-repo
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Staker.sol: Erroneous Comments,65,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/65,floatcapital,2021/08,bug;invalid;1 (Low Risk);sponsor disputed;disagree with severity
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Staker.sol: Redundant zero intialization for accumulativeFloatPerSyntheticTokenSnapshots,66,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/66,floatcapital,2021/08,bug;G (Gas Optimization);sponsor acknowledged;fixed-in-upstream-repo
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Staker.sol: Shift event emissions to internal functions,67,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/67,floatcapital,2021/08,bug;0 (Non-critical);sponsor acknowledged;float-wont-fix
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Staker.sol: TODO add link in comment,68,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/68,floatcapital,2021/08,bug;0 (Non-critical);sponsor confirmed
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Staker.sol: Updating kValue requires interpolation with initial timestamp,69,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/69,floatcapital,2021/08,bug;1 (Low Risk);sponsor confirmed;fixed-in-upstream-repo
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Staker.sol: withdrawAll() does not include incoming outstanding shifts to the user,70,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/70,floatcapital,2021/08,bug;0 (Non-critical);sponsor acknowledged;float-wont-fix
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,TokenFactory.sol: Appropriate type declaration to avoid numerous casting,71,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/71,floatcapital,2021/08,bug;G (Gas Optimization);sponsor acknowledged;fixed-in-upstream-repo
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,TokenFactory.sol: DEFAULT_ADMIN_ROLE has wrong value ,72,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/72,floatcapital,2021/08,bug;1 (Low Risk);sponsor acknowledged;fixed-in-upstream-repo
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,YieldManagerAave.sol: Declare appropriate variable types in constructor arguments,73,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/73,floatcapital,2021/08,bug;G (Gas Optimization);sponsor disputed
22,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,YieldManagerAave.sol: Wrong branch in depositPaymentToken() if amountReservedInCaseOfInsufficientAaveLiquidity == amount,74,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/74,floatcapital,2021/08,bug;1 (Low Risk);sponsor confirmed
22,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,[Optimization] Cache length in the loop,97,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/97,floatcapital,2021/08,bug;G (Gas Optimization);sponsor confirmed;fixed-in-upstream-repo
22,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,[Optimization] Variables that can be turned into immutable,98,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/98,floatcapital,2021/08,bug;duplicate;G (Gas Optimization);sponsor confirmed
22,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Unchecked return values from transfer(),90,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/90,floatcapital,2021/08,bug;invalid;2 (Med Risk);sponsor disputed;disagree with severity
22,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,lack of input validation in InitializeMarket() ,95,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/95,floatcapital,2021/08,bug;1 (Low Risk);sponsor disputed;disagree with severity
22,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Use of floating pragma,96,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/96,floatcapital,2021/08,bug;invalid;1 (Low Risk);sponsor disputed;disagree with severity
22,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,0,Multiple initialize functions,19,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/19,floatcapital,2021/08,bug;0 (Non-critical);resolved;sponsor acknowledged;fixed-in-upstream-repo
22,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,0,FloatToken would revoke stakerAddress's permission if msg.sender == stakerAddress,36,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/36,floatcapital,2021/08,bug;0 (Non-critical);sponsor confirmed;resolved
22,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,initialMarket always initialize the latest market,47,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/47,floatcapital,2021/08,bug;duplicate;2 (Med Risk);sponsor confirmed;fixed-in-upstream-repo
22,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,LongShort should not shares the same Yield Manager between different markets,48,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/48,floatcapital,2021/08,bug;1 (Low Risk);sponsor confirmed;resolved
22,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Wrong aave usage of `claimRewards`,49,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/49,floatcapital,2021/08,bug;2 (Med Risk);sponsor confirmed
22,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,0,marketIndex parameter marked as int32 in comments but uint32 in code,28,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/28,floatcapital,2021/08,bug;duplicate;0 (Non-critical);sponsor confirmed;resolved;fixed-in-upstream-repo
22,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,0,Not defining integers as constants,37,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/37,floatcapital,2021/08,bug;duplicate;0 (Non-critical);sponsor acknowledged
22,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,2,Potential for market to be created but never initialized,43,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/43,floatcapital,2021/08,bug;duplicate;2 (Med Risk);sponsor confirmed;resolved
22,patitonar,0xDaA39d73eF9b4495bfe206FF13eE29E759F95d63,G,Set longShort variable as immutable in TokenFactory,31,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/31,floatcapital,2021/08,bug;duplicate;G (Gas Optimization);sponsor disputed;resolved
22,patitonar,0xDaA39d73eF9b4495bfe206FF13eE29E759F95d63,G,All variables set in constructor in YieldManagerAave can be set as immutable,32,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/32,floatcapital,2021/08,bug;duplicate;G (Gas Optimization);sponsor confirmed
22,patitonar,0xDaA39d73eF9b4495bfe206FF13eE29E759F95d63,G,All variables set in constructor in SyntheticToken can be set as immutable,33,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/33,floatcapital,2021/08,bug;duplicate;G (Gas Optimization);sponsor disputed
22,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Aave's claimRewards returns the actual rewards claimed,100,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/100,floatcapital,2021/08,bug;0 (Non-critical);sponsor acknowledged
22,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,0xf10A7_F10A7_f10A7_F10a7_F10A7_f10a7_F10A7_f10a7,101,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/101,floatcapital,2021/08,bug;invalid;0 (Non-critical);sponsor disputed;disagree with severity
22,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Incorrect usage of latestMarket in _seedMarketInitially and initializeMarket,102,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/102,floatcapital,2021/08,bug;duplicate;2 (Med Risk);sponsor confirmed
22,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Handle transfers of different payment tokens,103,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/103,floatcapital,2021/08,bug;duplicate;0 (Non-critical)
22,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Immutable variables,104,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/104,floatcapital,2021/08,bug;duplicate;G (Gas Optimization);sponsor confirmed;resolved
22,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Store assetPrice in int256 mapping,105,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/105,floatcapital,2021/08,bug;G (Gas Optimization);sponsor disputed;sponsor acknowledged;fixed-in-upstream-repo
22,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache storage access and duplicate calculations,106,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/106,floatcapital,2021/08,bug;G (Gas Optimization);sponsor confirmed;fixed-in-upstream-repo
22,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,onlyValidMarket is never used,107,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/107,floatcapital,2021/08,bug;duplicate;G (Gas Optimization);sponsor confirmed;fixed-in-upstream-repo
22,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,return values of synthetic token transfers,108,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/108,floatcapital,2021/08,bug;duplicate;G (Gas Optimization);sponsor confirmed;fixed-in-upstream-repo
22,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Functions visibility,109,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/109,floatcapital,2021/08,bug;duplicate;G (Gas Optimization)
22,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,treasury state variable in LongShort,110,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/110,floatcapital,2021/08,bug;G (Gas Optimization);sponsor confirmed;fixed-in-upstream-repo
22,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Style issues,111,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/111,floatcapital,2021/08,bug;0 (Non-critical);sponsor acknowledged;fixed-in-upstream-repo
22,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Validations,112,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/112,floatcapital,2021/08,bug;duplicate;0 (Non-critical);sponsor acknowledged
22,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,What is the right place for amountReservedInCaseOfInsufficientAaveLiquidity in transferPaymentTokensToUser?,113,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/113,floatcapital,2021/08,bug;invalid;2 (Med Risk);sponsor disputed;disagree with severity;resolved
22,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,The address of Aave lendingPool may change,99,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/99,floatcapital,2021/08,bug;1 (Low Risk);sponsor confirmed
22,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Received amount of transfer-on-fee/deflationary tokens are not correctly accounted,140,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/140,floatcapital,2021/08,bug;0 (Non-critical);sponsor disputed;disagree with severity;out-of-scope
22,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Users could shift tokens on `Staker` with more than he has staked,141,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/141,floatcapital,2021/08,bug;3 (High Risk);sponsor confirmed
22,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Incorrect shift variable is reset in `LongShort`,91,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/91,floatcapital,2021/08,bug;duplicate;3 (High Risk);fixed-in-upstream-repo
22,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Incorrect use of `latestMarket` instead of `marketIndex` in several functions of `LongShort`,92,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/92,floatcapital,2021/08,bug;3 (High Risk);sponsor confirmed;disagree with severity;resolved;fixed-in-upstream-repo
22,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Assuming tokens are compliant with ERC20 could cause transactions to revert unexpectedly,93,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/93,floatcapital,2021/08,bug;duplicate;invalid;0 (Non-critical);sponsor disputed;disagree with severity
22,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Use `safeTransfer` instead of `transfer`,94,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/94,floatcapital,2021/08,bug;duplicate;invalid;2 (Med Risk);sponsor disputed;disagree with severity
22,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Missing input validation on many functions throughout the code,1,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/1,floatcapital,2021/08,bug;1 (Low Risk);sponsor disputed;disagree with severity;float-wont-fix
22,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Admin and treasury change should be confirmed.,2,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/2,floatcapital,2021/08,bug;2 (Med Risk);sponsor disputed;disagree with severity;float-wont-fix
22,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Protocol requires a running bot in order to make sure trades are actually executed,3,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/3,floatcapital,2021/08,bug;1 (Low Risk);sponsor disputed;disagree with severity
22,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Oracle updates can be frontrun by stakers to gain a profit,4,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/4,floatcapital,2021/08,bug;0 (Non-critical);sponsor disputed;disagree with severity
27,0xito,0xC59f50aC5C90Ac8AFb9936daB81fe9Dad20808fC,1,signatures are accepted for zero address,21,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/21,gravitybridge,2021/08,bug;1 (Low Risk);sponsor confirmed
27,0xito,0xC59f50aC5C90Ac8AFb9936daB81fe9Dad20808fC,1,signatures are malleable,22,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/22,gravitybridge,2021/08,bug;1 (Low Risk);sponsor confirmed
27,0xito,0xC59f50aC5C90Ac8AFb9936daB81fe9Dad20808fC,1,validator set can be updated with same set,23,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/23,gravitybridge,2021/08,bug;1 (Low Risk);sponsor disputed
27,0xito,0xC59f50aC5C90Ac8AFb9936daB81fe9Dad20808fC,3,DoS for submitting batches and logic calls,24,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/24,gravitybridge,2021/08,bug;3 (High Risk)
27,0xito,0xC59f50aC5C90Ac8AFb9936daB81fe9Dad20808fC,3,logic calls can steal tokens,25,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/25,gravitybridge,2021/08,bug;3 (High Risk);sponsor disputed
27,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Lack of Validation Check,55,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/55,gravitybridge,2021/08,bug;0 (Non-critical);sponsor confirmed
27,ElliotFriedman,0x0AeA60Ce1D3D7CCbCc47F50Af7F14eC5462195AF,3,Arbitrary Logic Enables ERC20 Theft,1,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/1,gravitybridge,2021/08,bug;3 (High Risk);sponsor disputed
27,ElliotFriedman,0x0AeA60Ce1D3D7CCbCc47F50Af7F14eC5462195AF,G,Smart Contract Gas Optimization,3,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/3,gravitybridge,2021/08,bug;G (Gas Optimization);sponsor confirmed
27,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,2,Unhandled reverts from Cosmos to Eth batches can cause *Denial Of Service*,56,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/56,gravitybridge,2021/08,bug;2 (Med Risk);sponsor disputed
27,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,Misleading comments in nonce fetching functions,57,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/57,gravitybridge,2021/08,bug;1 (Low Risk);sponsor confirmed
27,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,2,Filter Logic calls to gravity cosmos at client level to avoid reverts,58,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/58,gravitybridge,2021/08,bug;2 (Med Risk);sponsor disputed
27,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Gravity: Consider enforcing validation expiry on-chain,40,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/40,gravitybridge,2021/08,bug;1 (Low Risk);sponsor disputed
27,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Gravity: Update to latest sol version,41,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/41,gravitybridge,2021/08,bug;1 (Low Risk);sponsor acknowledged
27,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Upgrade to at least Solidity 0.8.4,45,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/45,gravitybridge,2021/08,bug;G (Gas Optimization);sponsor acknowledged
27,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Caching the length in for loops,46,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/46,gravitybridge,2021/08,bug;G (Gas Optimization);sponsor acknowledged
27,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Use `calldata` instead of `memory` for function parameters,47,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/47,gravitybridge,2021/08,bug;G (Gas Optimization);sponsor acknowledged
27,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,State Variables that can be changed to `immutable`,48,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/48,gravitybridge,2021/08,bug;G (Gas Optimization);sponsor confirmed
27,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Avoid long revert strings.,49,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/49,gravitybridge,2021/08,bug;G (Gas Optimization);sponsor acknowledged
27,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,0,Functions that can be made external,50,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/50,gravitybridge,2021/08,bug;0 (Non-critical);sponsor confirmed
27,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,1,The function `updateValset` does not have enough sanity checks,51,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/51,gravitybridge,2021/08,bug;1 (Low Risk);sponsor confirmed
27,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,1,The reward mechanism is front-runnable,52,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/52,gravitybridge,2021/08,bug;1 (Low Risk);sponsor disputed
27,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,1,Anyone can deploy ERC20 tokens,53,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/53,gravitybridge,2021/08,bug;1 (Low Risk);sponsor disputed
27,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,1,Consider adding a token whitelist in `sendToCosmos` function,54,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/54,gravitybridge,2021/08,bug;1 (Low Risk);sponsor disputed
27,jmak,0xc1f83D44281688b35B98480c80991bfa4424c0aB,3,Cannot actually submit evidence,64,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/64,gravitybridge,2021/08,bug;3 (High Risk);sponsor confirmed
27,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,use of floating pragma ,42,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/42,gravitybridge,2021/08,bug;1 (Low Risk);sponsor confirmed
27,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,lack of validation for the v and s value in  recover() funciton ,43,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/43,gravitybridge,2021/08,bug;2 (Med Risk);sponsor confirmed
27,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,state variable that are not updated throughout the contract they should be declared as constant,44,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/44,gravitybridge,2021/08,bug;G (Gas Optimization);sponsor confirmed
27,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,1,Mempool attacks can abuse relayers,10,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/10,gravitybridge,2021/08,bug;1 (Low Risk);sponsor disputed
27,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,2,Crash Eth Oracle On Any LogicCallEvent,11,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/11,gravitybridge,2021/08,bug;2 (Med Risk);sponsor confirmed
27,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,0,Passing by ownership instead of borrowing,16,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/16,gravitybridge,2021/08,bug;0 (Non-critical);sponsor acknowledged
27,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,0,`Vec::new()` instead of `Iterator::collect()`,17,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/17,gravitybridge,2021/08,bug;0 (Non-critical);sponsor acknowledged
27,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,0,"Anti-pattern `is_err()`, `return`, then `.unwrap()`",18,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/18,gravitybridge,2021/08,bug;0 (Non-critical);sponsor acknowledged
27,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,2,Downcasting Can Freeze The Chain,19,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/19,gravitybridge,2021/08,bug;2 (Med Risk);sponsor acknowledged
27,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,3,Panics as error-handling,20,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/20,gravitybridge,2021/08,bug;3 (High Risk);sponsor disputed
27,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,3,Freeze Bridge via Non-UTF8 Token Name/Symbol/Denom,4,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/4,gravitybridge,2021/08,bug;3 (High Risk);sponsor confirmed
27,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,3,Freeze The Bridge Via Large ERC20 Names/Symbols/Denoms,5,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/5,gravitybridge,2021/08,bug;3 (High Risk);sponsor confirmed
27,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,3,Large Validator Sets/Rapid Validator Set Updates May Freeze the Bridge or Relayers,6,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/6,gravitybridge,2021/08,bug;3 (High Risk);sponsor confirmed
27,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,2,Win all relayer rewards,7,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/7,gravitybridge,2021/08,bug;2 (Med Risk);sponsor confirmed
27,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,2,ERC20s that block transfer to particular addresses enable DoS/Censorship,8,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/8,gravitybridge,2021/08,bug;2 (Med Risk);sponsor acknowledged
27,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,2,Large ValSets potentially freezes `Gravity.sol`,9,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/9,gravitybridge,2021/08,bug;2 (Med Risk);sponsor acknowledged
27,patitonar,0xDaA39d73eF9b4495bfe206FF13eE29E759F95d63,G,Set state_gravityId and state_powerThreshold variables as immutable in Gravity.sol,2,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/2,gravitybridge,2021/08,bug;G (Gas Optimization);sponsor confirmed
27,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,cumulativePower check should be inclusive,26,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/26,gravitybridge,2021/08,bug;2 (Med Risk);sponsor acknowledged
27,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,powers in a decreasing order,27,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/27,gravitybridge,2021/08,bug;1 (Low Risk);sponsor disputed
27,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0, ecrecover returns empty address when the signature is invalid,28,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/28,gravitybridge,2021/08,bug;0 (Non-critical);sponsor confirmed
27,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Skip functionCall when the payload is empty,29,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/29,gravitybridge,2021/08,bug;0 (Non-critical);sponsor acknowledged
27,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Validations of validators,30,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/30,gravitybridge,2021/08,bug;1 (Low Risk);sponsor acknowledged
27,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Validations of parameters,31,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/31,gravitybridge,2021/08,bug;1 (Low Risk);sponsor confirmed
27,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Why nonces are not incrementing by 1 ?,32,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/32,gravitybridge,2021/08,bug;1 (Low Risk);sponsor confirmed
27,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Actions can be frontrunned,33,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/33,gravitybridge,2021/08,bug;1 (Low Risk);sponsor disputed
27,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Immutable variables,34,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/34,gravitybridge,2021/08,bug;G (Gas Optimization)
27,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache values,35,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/35,gravitybridge,2021/08,bug;G (Gas Optimization);sponsor acknowledged
27,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Pack structs tightly,36,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/36,gravitybridge,2021/08,bug;G (Gas Optimization);sponsor acknowledged
27,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Sum of validator powers should always be no less than the threshold,37,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/37,gravitybridge,2021/08,bug;1 (Low Risk);sponsor confirmed
27,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Regular arithmetic operations when calculating cumulativePower,38,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/38,gravitybridge,2021/08,bug;1 (Low Risk);sponsor acknowledged
27,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Style issues,39,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/39,gravitybridge,2021/08,bug;0 (Non-critical);sponsor acknowledged
27,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Using unlocked/floating pragma in `Gravity`,59,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/59,gravitybridge,2021/08,bug;1 (Low Risk);sponsor confirmed
27,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,SafeMath library is not always used in `Gravity`,60,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/60,gravitybridge,2021/08,bug;1 (Low Risk);sponsor confirmed
27,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Direct usage of `ecrecover` allows signature malleability,61,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/61,gravitybridge,2021/08,bug;1 (Low Risk);sponsor confirmed
27,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Incorrect accounting on transfer-on-fee/deflationary tokens in `Gravity`,62,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/62,gravitybridge,2021/08,bug;2 (Med Risk);sponsor confirmed
27,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Lack of sufficient power check in `updateValset` of `Gravity`,63,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/63,gravitybridge,2021/08,bug;2 (Med Risk);sponsor confirmed
27,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Possible miner incentive for chain reorgs if ETHBlockDelay is too small,12,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/12,gravitybridge,2021/08,bug;2 (Med Risk);sponsor acknowledged
27,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Anyone can deploy an Erc20 on the cosmos system for a very small cost.,13,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/13,gravitybridge,2021/08,bug;1 (Low Risk);sponsor disputed
27,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Does the cosmos-sdk listen to only 1 gravity.sol contract address?,14,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/14,gravitybridge,2021/08,bug;2 (Med Risk);sponsor disputed
27,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,The gravity.sol router should have pause/unpause functionality.,15,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/15,gravitybridge,2021/08,bug;2 (Med Risk);sponsor acknowledged
23,ad3sh_,0x1aA0F8feFbfCC63C6B0FcB0c3aBF89B483b5349d,1,Lack of address Validation ,2,https://github.com/code-423n4/2021-08-notional-findings/issues/2,notional,2021/08,bug;duplicate;0 (Non-critical)
23,a_delamo,0xEBB014649852462f09489E3DFbe45D9759E9b819,2,Missing validation on latestRoundData,92,https://github.com/code-423n4/2021-08-notional-findings/issues/92,notional,2021/08,bug;duplicate;2 (Med Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,57,https://github.com/code-423n4/2021-08-notional-findings/issues/57,notional,2021/08,bug;duplicate;0 (Non-critical);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,DAO proposals can be executed by anyone due to vulnerable TimelockController,58,https://github.com/code-423n4/2021-08-notional-findings/issues/58,notional,2021/08,bug;3 (High Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`initialize` functions can be frontrun,59,https://github.com/code-423n4/2021-08-notional-findings/issues/59,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Privilige escalation in ERC1155,60,https://github.com/code-423n4/2021-08-notional-findings/issues/60,notional,2021/08,bug;invalid;2 (Med Risk);sponsor disputed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,ERC1155Action returns `false` on `supportsInterface` with the real ERC1155 interface,61,https://github.com/code-423n4/2021-08-notional-findings/issues/61,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Untrusted externall call on `ERC1155Action.safeTransfer*`,62,https://github.com/code-423n4/2021-08-notional-findings/issues/62,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Open TODOs in `ERC1155Action`,63,https://github.com/code-423n4/2021-08-notional-findings/issues/63,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Router calls to `nTokenAction.nTokenTransferApprove` fail,64,https://github.com/code-423n4/2021-08-notional-findings/issues/64,notional,2021/08,bug;1 (Low Risk);sponsor disputed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`nTokenAction` does not emit Approval events,65,https://github.com/code-423n4/2021-08-notional-findings/issues/65,notional,2021/08,bug;invalid;2 (Med Risk);sponsor disputed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Allowance checks not correctly implemented,66,https://github.com/code-423n4/2021-08-notional-findings/issues/66,notional,2021/08,bug;2 (Med Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`CompoundToNotionalV2.enableToken` ERC20 missing return value check,67,https://github.com/code-423n4/2021-08-notional-findings/issues/67,notional,2021/08,bug;2 (Med Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`CompoundToNotionalV2.notionalCallback` ERC20 return values not checked,68,https://github.com/code-423n4/2021-08-notional-findings/issues/68,notional,2021/08,bug;3 (High Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Access restrictions on `CompoundToNotionalV2.notionalCallback` can be bypassed,69,https://github.com/code-423n4/2021-08-notional-findings/issues/69,notional,2021/08,bug;3 (High Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unclear decimals value in `cTokenAggregator`,70,https://github.com/code-423n4/2021-08-notional-findings/issues/70,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Access restrictions on `NotionalV1ToNotionalV2.notionalCallback` can be bypassed,71,https://github.com/code-423n4/2021-08-notional-findings/issues/71,notional,2021/08,bug;3 (High Risk)
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,nTokenERC20Proxy emits events even when not success,72,https://github.com/code-423n4/2021-08-notional-findings/issues/72,notional,2021/08,bug;2 (Med Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Governor average block time is not up-to-date,73,https://github.com/code-423n4/2021-08-notional-findings/issues/73,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,NoteERC20 missing initial ownership event,74,https://github.com/code-423n4/2021-08-notional-findings/issues/74,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,NoteERC20 _authorizeUpgrade not implemented,75,https://github.com/code-423n4/2021-08-notional-findings/issues/75,notional,2021/08,bug;invalid;1 (Low Risk);sponsor disputed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,NoteERC20.getPriorVotes includes current unclaimed incentives,76,https://github.com/code-423n4/2021-08-notional-findings/issues/76,notional,2021/08,bug;1 (Low Risk);disagree with severity;sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`TokenHandler.setToken` ERC20 missing return value check,77,https://github.com/code-423n4/2021-08-notional-findings/issues/77,notional,2021/08,bug;2 (Med Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`TokenHandler.transfer` wrong branch order,78,https://github.com/code-423n4/2021-08-notional-findings/issues/78,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`TokenHandler.safeTransferOut` does not work on non-standard compliant tokens like USDT,79,https://github.com/code-423n4/2021-08-notional-findings/issues/79,notional,2021/08,bug;3 (High Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`TokenHandler.safeTransferIn` does not work on non-standard compliant tokens like USDT,80,https://github.com/code-423n4/2021-08-notional-findings/issues/80,notional,2021/08,bug;3 (High Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`DateTime.isValidMarketMaturity` bounds should be tighter,81,https://github.com/code-423n4/2021-08-notional-findings/issues/81,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`DateTime.getMarketIndex` bounds should be tighter,82,https://github.com/code-423n4/2021-08-notional-findings/issues/82,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,ChainLink price data could be stale,83,https://github.com/code-423n4/2021-08-notional-findings/issues/83,notional,2021/08,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Use of `msg.value` in batch action,84,https://github.com/code-423n4/2021-08-notional-findings/issues/84,notional,2021/08,bug;0 (Non-critical);sponsor disputed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Liquidity token value can be manipulated,85,https://github.com/code-423n4/2021-08-notional-findings/issues/85,notional,2021/08,bug;3 (High Risk);disagree with severity;sponsor confirmed
23,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Liquidator can be liquidatee,86,https://github.com/code-423n4/2021-08-notional-findings/issues/86,notional,2021/08,bug;invalid;1 (Low Risk);sponsor disputed
23,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,SHOULD CHECK RETURN DATA FROM CHAINLINK AGGREGATORS,34,https://github.com/code-423n4/2021-08-notional-findings/issues/34,notional,2021/08,bug;duplicate;2 (Med Risk);sponsor confirmed
23,gpersoon,gpersoon.eth,1,"Double check for ""birthday"" collision",4,https://github.com/code-423n4/2021-08-notional-findings/issues/4,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,gpersoon,gpersoon.eth,1,Use pragma abicoder v2,5,https://github.com/code-423n4/2021-08-notional-findings/issues/5,notional,2021/08,bug;0 (Non-critical);disagree with severity;sponsor confirmed
23,gpersoon,gpersoon.eth,3,_transfer what happens if sender==recipient,6,https://github.com/code-423n4/2021-08-notional-findings/issues/6,notional,2021/08,bug;duplicate;3 (High Risk);sponsor confirmed
23,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Upgrade to at least 0.8.4,87,https://github.com/code-423n4/2021-08-notional-findings/issues/87,notional,2021/08,bug;G (Gas Optimization);sponsor disputed
23,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Caching length in for loops,88,https://github.com/code-423n4/2021-08-notional-findings/issues/88,notional,2021/08,bug;G (Gas Optimization);sponsor confirmed
23,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Consider using assembly instead of the lengthy if statement in Router.sol,89,https://github.com/code-423n4/2021-08-notional-findings/issues/89,notional,2021/08,bug;invalid;G (Gas Optimization);sponsor disputed
23,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,0,Used a fixed or pragma that spans only a single `0.x.*`,90,https://github.com/code-423n4/2021-08-notional-findings/issues/90,notional,2021/08,bug;0 (Non-critical);sponsor confirmed
23,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,0,Replacing the assembly `extcodesize` checks for versions `>0.8.1`,91,https://github.com/code-423n4/2021-08-notional-findings/issues/91,notional,2021/08,bug;0 (Non-critical);sponsor disputed
23,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,proposal get defeated even if forVotes == againstVotes in GovernorAlpha.sol,35,https://github.com/code-423n4/2021-08-notional-findings/issues/35,notional,2021/08,bug;0 (Non-critical);disagree with severity;sponsor confirmed
23,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,3, Incorrect   event   parameters   in    transferFrom    function  ,36,https://github.com/code-423n4/2021-08-notional-findings/issues/36,notional,2021/08,bug;duplicate;1 (Low Risk);disagree with severity
23,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Erc20 Race condition,37,https://github.com/code-423n4/2021-08-notional-findings/issues/37,notional,2021/08,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
23,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Use of transfer() instead of call() to send eth,38,https://github.com/code-423n4/2021-08-notional-findings/issues/38,notional,2021/08,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
23,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Insufficient validation of rate value,39,https://github.com/code-423n4/2021-08-notional-findings/issues/39,notional,2021/08,bug;duplicate;2 (Med Risk)
23,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,use of floating pragma,40,https://github.com/code-423n4/2021-08-notional-findings/issues/40,notional,2021/08,bug;duplicate;0 (Non-critical)
23,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,unchecked return value from isContract(),41,https://github.com/code-423n4/2021-08-notional-findings/issues/41,notional,2021/08,bug;duplicate;1 (Low Risk);disagree with severity
23,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,initialize()   function of router.sol can be reinitialize,42,https://github.com/code-423n4/2021-08-notional-findings/issues/42,notional,2021/08,bug;0 (Non-critical);sponsor disputed
23,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,lack of input validation of arrays,43,https://github.com/code-423n4/2021-08-notional-findings/issues/43,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,transferOwnership should be two step process,49,https://github.com/code-423n4/2021-08-notional-findings/issues/49,notional,2021/08,bug;duplicate;1 (Low Risk)
23,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,lack of require message,50,https://github.com/code-423n4/2021-08-notional-findings/issues/50,notional,2021/08,bug;0 (Non-critical);sponsor disputed
23,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,lack of zero address validation in constructor,51,https://github.com/code-423n4/2021-08-notional-findings/issues/51,notional,2021/08,bug;duplicate;0 (Non-critical);sponsor confirmed
23,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,3,Reentrancy Bug in `TimelockController.sol`,10,https://github.com/code-423n4/2021-08-notional-findings/issues/10,notional,2021/08,bug;duplicate;3 (High Risk)
23,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,3,DOS by Frontrunning NoteERC20 `initialize()` Function,7,https://github.com/code-423n4/2021-08-notional-findings/issues/7,notional,2021/08,bug;3 (High Risk);sponsor confirmed
23,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,Lack of Zero Address Validation,93,https://github.com/code-423n4/2021-08-notional-findings/issues/93,notional,2021/08,bug;0 (Non-critical);sponsor confirmed
23,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,No Transfer Ownership Pattern,94,https://github.com/code-423n4/2021-08-notional-findings/issues/94,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,0,Missing SPDX Identifier,95,https://github.com/code-423n4/2021-08-notional-findings/issues/95,notional,2021/08,bug;invalid;0 (Non-critical);disagree with severity;sponsor disputed
23,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,G,`StorageLayoutV1` Gas Optimisations,96,https://github.com/code-423n4/2021-08-notional-findings/issues/96,notional,2021/08,bug;G (Gas Optimization);sponsor confirmed
23,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,0,Non-existent `nERC1155Interface.supportsInterface.selector`,97,https://github.com/code-423n4/2021-08-notional-findings/issues/97,notional,2021/08,bug;invalid;0 (Non-critical);sponsor disputed
23,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,3,Potential DOS in Contracts Inheriting `UUPSUpgradeable.sol`,98,https://github.com/code-423n4/2021-08-notional-findings/issues/98,notional,2021/08,bug;3 (High Risk);sponsor confirmed
23,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,3,Self transfer can lead to unlimited mint,1,https://github.com/code-423n4/2021-08-notional-findings/issues/1,notional,2021/08,bug;3 (High Risk);sponsor confirmed
23,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,3,executing instruction outside code can lead to failing transfer,3,https://github.com/code-423n4/2021-08-notional-findings/issues/3,notional,2021/08,bug;invalid;3 (High Risk);sponsor disputed
23,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,3,unsafe cast from int to uint can lead to incentive abuse,8,https://github.com/code-423n4/2021-08-notional-findings/issues/8,notional,2021/08,bug;0 (Non-critical);sponsor disputed
23,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,G,Gas optimization on _INT256_MIN ,9,https://github.com/code-423n4/2021-08-notional-findings/issues/9,notional,2021/08,bug;G (Gas Optimization);sponsor disputed
23,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Address.isContract with no check of returned value,44,https://github.com/code-423n4/2021-08-notional-findings/issues/44,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,notionalCallback can be tricked by anyone,45,https://github.com/code-423n4/2021-08-notional-findings/issues/45,notional,2021/08,bug;duplicate;3 (High Risk);sponsor confirmed
23,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,notionalCallback returns no value,46,https://github.com/code-423n4/2021-08-notional-findings/issues/46,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Check if address is a contract,47,https://github.com/code-423n4/2021-08-notional-findings/issues/47,notional,2021/08,bug;duplicate;0 (Non-critical);sponsor confirmed
23,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,NotionalV1ToNotionalV2 should reject ETH transfers from others than WETH,48,https://github.com/code-423n4/2021-08-notional-findings/issues/48,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused variables,52,https://github.com/code-423n4/2021-08-notional-findings/issues/52,notional,2021/08,bug;G (Gas Optimization);sponsor disputed
23,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,uint is always >= 0,53,https://github.com/code-423n4/2021-08-notional-findings/issues/53,notional,2021/08,bug;G (Gas Optimization);sponsor confirmed
23,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache values that are accessed more than once,54,https://github.com/code-423n4/2021-08-notional-findings/issues/54,notional,2021/08,bug;G (Gas Optimization);sponsor acknowledged
23,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Wrong order in Approval event,55,https://github.com/code-423n4/2021-08-notional-findings/issues/55,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Total supply dependency on decimals,56,https://github.com/code-423n4/2021-08-notional-findings/issues/56,notional,2021/08,bug;0 (Non-critical);sponsor confirmed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Can initiate the same token multiple times with different currency IDs,11,https://github.com/code-423n4/2021-08-notional-findings/issues/11,notional,2021/08,bug;invalid;1 (Low Risk);sponsor disputed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Flipped boolean or confusing notation on TokenHandler.sol,12,https://github.com/code-423n4/2021-08-notional-findings/issues/12,notional,2021/08,bug;invalid;1 (Low Risk);sponsor disputed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Gas optimization: Can put require and variable declaration inside the if statement.,13,https://github.com/code-423n4/2021-08-notional-findings/issues/13,notional,2021/08,bug;G (Gas Optimization);sponsor acknowledged
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,"Possible reentrancy in balanceOf, decimals, mint",14,https://github.com/code-423n4/2021-08-notional-findings/issues/14,notional,2021/08,bug;duplicate;invalid;2 (Med Risk);sponsor confirmed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,"TokenHandler.sol, L174 - .transfer is bad practice",15,https://github.com/code-423n4/2021-08-notional-findings/issues/15,notional,2021/08,bug;duplicate;2 (Med Risk)
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Consider deploying on a sidechain or an L2?,16,https://github.com/code-423n4/2021-08-notional-findings/issues/16,notional,2021/08,bug;invalid;G (Gas Optimization);sponsor disputed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Uniswap oracles in valuation/ExchangeRate.sol are lagging indicators.,17,https://github.com/code-423n4/2021-08-notional-findings/issues/17,notional,2021/08,bug;invalid;1 (Low Risk);sponsor disputed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,.latestRoundData() does not update the oracle - ExchangeRate.sol,18,https://github.com/code-423n4/2021-08-notional-findings/issues/18,notional,2021/08,bug;duplicate;2 (Med Risk)
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Time window must be chosen carefully,19,https://github.com/code-423n4/2021-08-notional-findings/issues/19,notional,2021/08,bug;invalid;2 (Med Risk);sponsor disputed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Attackers can force liquidations by borrowing large amounts of an asset.,20,https://github.com/code-423n4/2021-08-notional-findings/issues/20,notional,2021/08,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Can a small order change the lastImpliedRate significantly?,21,https://github.com/code-423n4/2021-08-notional-findings/issues/21,notional,2021/08,bug;invalid;3 (High Risk);sponsor disputed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Idiosyncratic fCash valuation is incorrect,22,https://github.com/code-423n4/2021-08-notional-findings/issues/22,notional,2021/08,bug;invalid;3 (High Risk);sponsor disputed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Gas savings: variables can all be a multiple of each other,23,https://github.com/code-423n4/2021-08-notional-findings/issues/23,notional,2021/08,bug;invalid;G (Gas Optimization);sponsor disputed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Can't call external functions internally ,24,https://github.com/code-423n4/2021-08-notional-findings/issues/24,notional,2021/08,bug;invalid;3 (High Risk);sponsor disputed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,ERC1155 has reentrancy possibilities.,25,https://github.com/code-423n4/2021-08-notional-findings/issues/25,notional,2021/08,bug;duplicate;1 (Low Risk);disagree with severity
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,"Add buffer, haircut and liquidation discount checks.",26,https://github.com/code-423n4/2021-08-notional-findings/issues/26,notional,2021/08,bug;invalid;1 (Low Risk);sponsor disputed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Recommend adding a nonReentrant modifier to external functions,27,https://github.com/code-423n4/2021-08-notional-findings/issues/27,notional,2021/08,bug;0 (Non-critical);disagree with severity;sponsor disputed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,batchBalanceAction could make multiple deposits with the same msg.value?,28,https://github.com/code-423n4/2021-08-notional-findings/issues/28,notional,2021/08,bug;duplicate;0 (Non-critical);sponsor disputed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,No checks on target variable,29,https://github.com/code-423n4/2021-08-notional-findings/issues/29,notional,2021/08,bug;1 (Low Risk);sponsor confirmed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Some TradingActions do not have frontrunning protections,30,https://github.com/code-423n4/2021-08-notional-findings/issues/30,notional,2021/08,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Consider using a solidity version >= 0.8.0,31,https://github.com/code-423n4/2021-08-notional-findings/issues/31,notional,2021/08,bug;invalid;2 (Med Risk);sponsor disputed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Settle Portfolio state could be griefed.,32,https://github.com/code-423n4/2021-08-notional-findings/issues/32,notional,2021/08,bug;invalid;2 (Med Risk);sponsor disputed
23,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,proRataYears is sometimes 0.,33,https://github.com/code-423n4/2021-08-notional-findings/issues/33,notional,2021/08,bug;invalid;2 (Med Risk);sponsor disputed
26,0xImpostor,0x2bc996DED6d9325311DEE1bd32998e2fc7f9c922,0,bidExists check is in the wrong place.,34,https://github.com/code-423n4/2021-08-realitycards-findings/issues/34,realitycards,2021/08,bug;sponsor disputed;0 (Non-critical)
26,0xImpostor,0x2bc996DED6d9325311DEE1bd32998e2fc7f9c922,1,transferCard should be done after treasury is updated.,35,https://github.com/code-423n4/2021-08-realitycards-findings/issues/35,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,0xImpostor,0x2bc996DED6d9325311DEE1bd32998e2fc7f9c922,1,Unclear conditional check within bidExists() function,36,https://github.com/code-423n4/2021-08-realitycards-findings/issues/36,realitycards,2021/08,bug;1 (Low Risk);sponsor disputed
26,0xImpostor,0x2bc996DED6d9325311DEE1bd32998e2fc7f9c922,2,Insufficient checks at the smart contract level to ensure that previous user address is the lowest bid that is higher than the bid to be added.,37,https://github.com/code-423n4/2021-08-realitycards-findings/issues/37,realitycards,2021/08,bug;sponsor disputed;2 (Med Risk)
26,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,gas saving in `_processRentCollection`,68,https://github.com/code-423n4/2021-08-realitycards-findings/issues/68,realitycards,2021/08,bug;G (Gas Optimization);sponsor confirmed;Resolved
26,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,whitelist not working as inteded,69,https://github.com/code-423n4/2021-08-realitycards-findings/issues/69,realitycards,2021/08,bug;duplicate;1 (Low Risk)
26,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Wrong safeCast implementation,70,https://github.com/code-423n4/2021-08-realitycards-findings/issues/70,realitycards,2021/08,bug;duplicate;1 (Low Risk)
26,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,User can deposit more than maxContractBalance,71,https://github.com/code-423n4/2021-08-realitycards-findings/issues/71,realitycards,2021/08,bug;sponsor disputed;0 (Non-critical)
26,animixar,0xA42F02956cE6609923F320EcB89DcF052ad6849F,2,Monopolization of the bidding platform,31,https://github.com/code-423n4/2021-08-realitycards-findings/issues/31,realitycards,2021/08,bug;sponsor disputed;2 (Med Risk)
26,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,52,https://github.com/code-423n4/2021-08-realitycards-findings/issues/52,realitycards,2021/08,bug;duplicate;1 (Low Risk);sponsor disputed
26,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`getMarketInfo` skipResults does not work,53,https://github.com/code-423n4/2021-08-realitycards-findings/issues/53,realitycards,2021/08,bug;duplicate;2 (Med Risk);disagree with severity
26,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Markets can start in the past,54,https://github.com/code-423n4/2021-08-realitycards-findings/issues/54,realitycards,2021/08,bug;1 (Low Risk);sponsor acknowledged
26,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`RCLeaderboard.market` storage variable is not used,55,https://github.com/code-423n4/2021-08-realitycards-findings/issues/55,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed
26,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`RCTreasury` role setup does not match diagram,56,https://github.com/code-423n4/2021-08-realitycards-findings/issues/56,realitycards,2021/08,bug;duplicate;1 (Low Risk)
26,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Market whitelist does not work,57,https://github.com/code-423n4/2021-08-realitycards-findings/issues/57,realitycards,2021/08,bug;duplicate;2 (Med Risk)
26,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Deposits don't work with fee-on transfer tokens,58,https://github.com/code-423n4/2021-08-realitycards-findings/issues/58,realitycards,2021/08,bug;2 (Med Risk);sponsor acknowledged
26,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,NFTHubs don't set `_baseUri`,59,https://github.com/code-423n4/2021-08-realitycards-findings/issues/59,realitycards,2021/08,bug;1 (Low Risk);sponsor disputed
26,gpersoon,gpersoon.eth,0,remove unused modifiers,10,https://github.com/code-423n4/2021-08-realitycards-findings/issues/10,realitycards,2021/08,bug;0 (Non-critical);sponsor confirmed;Resolved
26,gpersoon,gpersoon.eth,0,remove addMarket from RCNftHubL2,11,https://github.com/code-423n4/2021-08-realitycards-findings/issues/11,realitycards,2021/08,bug;0 (Non-critical);sponsor confirmed;Resolved
26,gpersoon,gpersoon.eth,1,updateTokenURI doesn't call setTokenURI ,12,https://github.com/code-423n4/2021-08-realitycards-findings/issues/12,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,gpersoon,gpersoon.eth,1,getMostRecentMarket can revert,13,https://github.com/code-423n4/2021-08-realitycards-findings/issues/13,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,gpersoon,gpersoon.eth,1,Can't retrieve all data with getMarketInfo ,14,https://github.com/code-423n4/2021-08-realitycards-findings/issues/14,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,gpersoon,gpersoon.eth,G,optimize _beforeTokenTransfer,19,https://github.com/code-423n4/2021-08-realitycards-findings/issues/19,realitycards,2021/08,bug;G (Gas Optimization);sponsor acknowledged
26,gpersoon,gpersoon.eth,G,make code of rentAllCards easier to read and maintain,20,https://github.com/code-423n4/2021-08-realitycards-findings/issues/20,realitycards,2021/08,bug;G (Gas Optimization);sponsor confirmed;Resolved
26,gpersoon,gpersoon.eth,1,rentAllCards: don't have to pay for card you already own,21,https://github.com/code-423n4/2021-08-realitycards-findings/issues/21,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,gpersoon,gpersoon.eth,1,msgSender() or _msgSender(),22,https://github.com/code-423n4/2021-08-realitycards-findings/issues/22,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,gpersoon,gpersoon.eth,G,findNewOwner edgecase,27,https://github.com/code-423n4/2021-08-realitycards-findings/issues/27,realitycards,2021/08,bug;sponsor confirmed;Resolved;disagree with severity;3 (High Risk)
26,gpersoon,gpersoon.eth,1,uint32 conversion doesn't work as expected.,28,https://github.com/code-423n4/2021-08-realitycards-findings/issues/28,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,gpersoon,gpersoon.eth,1,one of the whitelist mechanisms doesn't work,29,https://github.com/code-423n4/2021-08-realitycards-findings/issues/29,realitycards,2021/08,bug;duplicate;1 (Low Risk)
26,gpersoon,gpersoon.eth,2,Parameter updates not propagated,30,https://github.com/code-423n4/2021-08-realitycards-findings/issues/30,realitycards,2021/08,bug;2 (Med Risk);sponsor acknowledged
26,gpersoon,gpersoon.eth,1,safer implementation of tokenExists,8,https://github.com/code-423n4/2021-08-realitycards-findings/issues/8,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,gpersoon,gpersoon.eth,0,tokenExists ==> cardExists,9,https://github.com/code-423n4/2021-08-realitycards-findings/issues/9,realitycards,2021/08,bug;0 (Non-critical);sponsor acknowledged
26,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Access Control Constants,38,https://github.com/code-423n4/2021-08-realitycards-findings/issues/38,realitycards,2021/08,bug;0 (Non-critical);sponsor acknowledged
26,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,RCFactory: Do multiplication instead of division for length checks,39,https://github.com/code-423n4/2021-08-realitycards-findings/issues/39,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,RCFactory: Skipping results don't work as intended in getMarketInfo(),40,https://github.com/code-423n4/2021-08-realitycards-findings/issues/40,realitycards,2021/08,bug;duplicate;1 (Low Risk)
26,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,RCFactory: Solve stack too deep for getMarketInfo(),41,https://github.com/code-423n4/2021-08-realitycards-findings/issues/41,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,RCFactory: Unnecessary casting in updateTokenURI(),42,https://github.com/code-423n4/2021-08-realitycards-findings/issues/42,realitycards,2021/08,bug;0 (Non-critical);sponsor acknowledged
26,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,RCLeaderboard: Erroneous comment,43,https://github.com/code-423n4/2021-08-realitycards-findings/issues/43,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,"RCTreasury: AccessControl diagram contains Leaderboard, but it has no role",44,https://github.com/code-423n4/2021-08-realitycards-findings/issues/44,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,RCTreasury: new hasRole() function with string role,45,https://github.com/code-423n4/2021-08-realitycards-findings/issues/45,realitycards,2021/08,bug;0 (Non-critical);sponsor confirmed;Resolved
26,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,RCTreasury: Missing setter for marketWhitelist mapping,46,https://github.com/code-423n4/2021-08-realitycards-findings/issues/46,realitycards,2021/08,bug;1 (Low Risk)
26,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,RCTreasury: Spelling Errors,47,https://github.com/code-423n4/2021-08-realitycards-findings/issues/47,realitycards,2021/08,bug;0 (Non-critical);sponsor confirmed;Resolved
26,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Remove hardhat console import,48,https://github.com/code-423n4/2021-08-realitycards-findings/issues/48,realitycards,2021/08,bug;0 (Non-critical);sponsor acknowledged
26,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,no time restriction in  setMarketTimeRestrictions(),49,https://github.com/code-423n4/2021-08-realitycards-findings/issues/49,realitycards,2021/08,bug;1 (Low Risk);sponsor acknowledged
26,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,No check for the referenceContractAddress in createMarket(),50,https://github.com/code-423n4/2021-08-realitycards-findings/issues/50,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,uninitialized-state-variables,51,https://github.com/code-423n4/2021-08-realitycards-findings/issues/51,realitycards,2021/08,bug;duplicate;1 (Low Risk)
26,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,use of array without checking its length,60,https://github.com/code-423n4/2021-08-realitycards-findings/issues/60,realitycards,2021/08,bug;1 (Low Risk);sponsor acknowledged
26,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,add zero address validation in constructor,61,https://github.com/code-423n4/2021-08-realitycards-findings/issues/61,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,Test Coverage Improvements,15,https://github.com/code-423n4/2021-08-realitycards-findings/issues/15,realitycards,2021/08,bug;1 (Low Risk);sponsor acknowledged
26,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,0,Inaccurate Comment,16,https://github.com/code-423n4/2021-08-realitycards-findings/issues/16,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,Overflow in `Mode` Type,17,https://github.com/code-423n4/2021-08-realitycards-findings/issues/17,realitycards,2021/08,bug;G (Gas Optimization)
26,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,Uninitialized Variable `marketWhitelist` in `RCTreasury.sol`,18,https://github.com/code-423n4/2021-08-realitycards-findings/issues/18,realitycards,2021/08,bug;2 (Med Risk);sponsor confirmed;Resolved;disagree with severity
26,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,External Call Made Before State Change,23,https://github.com/code-423n4/2021-08-realitycards-findings/issues/23,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,Return Value is Not Validated,24,https://github.com/code-423n4/2021-08-realitycards-findings/issues/24,realitycards,2021/08,bug;1 (Low Risk);sponsor confirmed;Resolved
26,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,0,Divide Before Multiply,25,https://github.com/code-423n4/2021-08-realitycards-findings/issues/25,realitycards,2021/08,bug;0 (Non-critical);sponsor acknowledged
26,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,0,Improper Setup of AccessControl,26,https://github.com/code-423n4/2021-08-realitycards-findings/issues/26,realitycards,2021/08,bug;duplicate;0 (Non-critical);sponsor confirmed
26,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,G,Tight Variable Packing,32,https://github.com/code-423n4/2021-08-realitycards-findings/issues/32,realitycards,2021/08,bug;G (Gas Optimization);sponsor acknowledged
26,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,G,`removeFromLeaderboard()` Gas Optimization,33,https://github.com/code-423n4/2021-08-realitycards-findings/issues/33,realitycards,2021/08,bug;G (Gas Optimization);sponsor disputed
26,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,Unable to Recover Improperly Transferred Tokens,62,https://github.com/code-423n4/2021-08-realitycards-findings/issues/62,realitycards,2021/08,bug;0 (Non-critical);sponsor acknowledged
26,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,0,Able to Create a Market with Odd `tokenURIs` length,67,https://github.com/code-423n4/2021-08-realitycards-findings/issues/67,realitycards,2021/08,bug;duplicate;0 (Non-critical)
26,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,1,RCMarket.sol - cardAffiliateCut will always be 0,1,https://github.com/code-423n4/2021-08-realitycards-findings/issues/1,realitycards,2021/08,bug;1 (Low Risk);sponsor disputed
26,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,G,RCMarket.sol - Gas optimization in initialize,2,https://github.com/code-423n4/2021-08-realitycards-findings/issues/2,realitycards,2021/08,bug;duplicate;G (Gas Optimization)
26,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,G,RCMarket.sol - Gas optimization in _postQuestionToOracle,3,https://github.com/code-423n4/2021-08-realitycards-findings/issues/3,realitycards,2021/08,bug;duplicate;G (Gas Optimization);sponsor disputed
26,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,G,RCMarket.sol - Gas optimization in setWinner,4,https://github.com/code-423n4/2021-08-realitycards-findings/issues/4,realitycards,2021/08,bug;duplicate;G (Gas Optimization)
26,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,G,RCMarket.sol - Gas optimization in claimCard,5,https://github.com/code-423n4/2021-08-realitycards-findings/issues/5,realitycards,2021/08,bug;G (Gas Optimization);sponsor acknowledged
26,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,G,RCMarket.sol - Gas optimization in _payoutWinnings,6,https://github.com/code-423n4/2021-08-realitycards-findings/issues/6,realitycards,2021/08,bug;G (Gas Optimization);sponsor confirmed;Resolved
26,qedk,0x76577d204A5bd63b6D006222429c4D5124f4619c,G,Allowance checks are not required,7,https://github.com/code-423n4/2021-08-realitycards-findings/issues/7,realitycards,2021/08,bug;G (Gas Optimization);sponsor acknowledged
26,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Direct usage of `ecrecover` allows signature malleability,63,https://github.com/code-423n4/2021-08-realitycards-findings/issues/63,realitycards,2021/08,bug;1 (Low Risk);sponsor acknowledged
26,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Return value of `erc20.approve` is unchecked,64,https://github.com/code-423n4/2021-08-realitycards-findings/issues/64,realitycards,2021/08,bug;1 (Low Risk);sponsor acknowledged
26,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Use `_safeTransfer` when transferring NFTs,65,https://github.com/code-423n4/2021-08-realitycards-findings/issues/65,realitycards,2021/08,bug;1 (Low Risk);sponsor disputed
26,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Function `setAmicableResolution` is susceptible to front-running attacks,66,https://github.com/code-423n4/2021-08-realitycards-findings/issues/66,realitycards,2021/08,bug;sponsor disputed;3 (High Risk)
26,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Gas optimization in RCMarket.sol and other files,72,https://github.com/code-423n4/2021-08-realitycards-findings/issues/72,realitycards,2021/08,bug;G (Gas Optimization);sponsor disputed
26,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Owner has a rugpull function,73,https://github.com/code-423n4/2021-08-realitycards-findings/issues/73,realitycards,2021/08,bug;duplicate;sponsor disputed;3 (High Risk)
26,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,UberOwner has too much power,74,https://github.com/code-423n4/2021-08-realitycards-findings/issues/74,realitycards,2021/08,bug;sponsor disputed;3 (High Risk)
25,0xRajeev,rajeev.eth,G,Storage slot packing impacts gas efficiency ,41,https://github.com/code-423n4/2021-08-yield-findings/issues/41,yield,2021/08,bug;G (Gas Optimization);sponsor acknowledged;ERC20Rewards;Strategy
25,0xRajeev,rajeev.eth,G,Changing function visibility from public to external saves gas,42,https://github.com/code-423n4/2021-08-yield-findings/issues/42,yield,2021/08,bug;G (Gas Optimization);sponsor confirmed;ERC20Rewards;Strategy
25,0xRajeev,rajeev.eth,G,Caching state variable in local variables for repeated reads saves gas by converting expensive SLOADs into much cheaper MLOADs,43,https://github.com/code-423n4/2021-08-yield-findings/issues/43,yield,2021/08,bug;G (Gas Optimization);sponsor confirmed;ERC20Rewards;Strategy
25,0xRajeev,rajeev.eth,G,Using parameters or local variables instead of state variables in event emits can save gas,44,https://github.com/code-423n4/2021-08-yield-findings/issues/44,yield,2021/08,bug;G (Gas Optimization);sponsor confirmed;ERC20Rewards;Timelock
25,0xRajeev,rajeev.eth,G,Not using memory data location specifier for external function parameters will save gas,45,https://github.com/code-423n4/2021-08-yield-findings/issues/45,yield,2021/08,bug;G (Gas Optimization);sponsor confirmed;EmergencyBrake;FYTokenFactory
25,0xRajeev,rajeev.eth,G,Two functions with same code can be replaced by a single one,46,https://github.com/code-423n4/2021-08-yield-findings/issues/46,yield,2021/08,bug;G (Gas Optimization);sponsor confirmed;Oracles
25,0xRajeev,rajeev.eth,G,Redundant check ,47,https://github.com/code-423n4/2021-08-yield-findings/issues/47,yield,2021/08,bug;G (Gas Optimization);sponsor confirmed;Oracles
25,0xRajeev,rajeev.eth,G,Check made redundant by following check,48,https://github.com/code-423n4/2021-08-yield-findings/issues/48,yield,2021/08,bug;G (Gas Optimization);sponsor confirmed;EmergencyBrake;Timelock
25,0xRajeev,rajeev.eth,1,Missing input validation to check that end > start,49,https://github.com/code-423n4/2021-08-yield-findings/issues/49,yield,2021/08,bug;1 (Low Risk);sponsor confirmed;ERC20Rewards
25,0xRajeev,rajeev.eth,1,Upgrading solc compiler version may help with bug fixes ,50,https://github.com/code-423n4/2021-08-yield-findings/issues/50,yield,2021/08,bug;1 (Low Risk);sponsor confirmed
25,0xRajeev,rajeev.eth,1,Missing emits for events,51,https://github.com/code-423n4/2021-08-yield-findings/issues/51,yield,2021/08,bug;duplicate;1 (Low Risk);sponsor confirmed;Strategy
25,0xRajeev,rajeev.eth,1,Missing zero-address checks,52,https://github.com/code-423n4/2021-08-yield-findings/issues/52,yield,2021/08,bug;0 (Non-critical);sponsor disputed
25,0xRajeev,rajeev.eth,1,Multiple solc versions may be allowed,53,https://github.com/code-423n4/2021-08-yield-findings/issues/53,yield,2021/08,bug;0 (Non-critical);sponsor disputed
25,0xRajeev,rajeev.eth,1,Unused cauldron_ parameter,54,https://github.com/code-423n4/2021-08-yield-findings/issues/54,yield,2021/08,bug;1 (Low Risk);sponsor confirmed;Strategy
25,0xRajeev,rajeev.eth,1,Missing check for contract existence,55,https://github.com/code-423n4/2021-08-yield-findings/issues/55,yield,2021/08,bug;1 (Low Risk);sponsor confirmed;Timelock
25,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,22,https://github.com/code-423n4/2021-08-yield-findings/issues/22,yield,2021/08,bug;0 (Non-critical);sponsor disputed
25,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`_peek` does not work for tokens with > 18 decimals,23,https://github.com/code-423n4/2021-08-yield-findings/issues/23,yield,2021/08,bug;1 (Low Risk);Oracles
25,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,The `Strategy.Invest` event is not fired,24,https://github.com/code-423n4/2021-08-yield-findings/issues/24,yield,2021/08,bug;1 (Low Risk);sponsor confirmed;Strategy
25,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,The `Strategy.Divest` event is not fired,25,https://github.com/code-423n4/2021-08-yield-findings/issues/25,yield,2021/08,bug;1 (Low Risk);sponsor confirmed;Strategy
25,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,CompositeMultiOracle returns wrong decimals for prices?,26,https://github.com/code-423n4/2021-08-yield-findings/issues/26,yield,2021/08,bug;3 (High Risk);Oracles
25,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,TimeLock cannot schedule the same calls multiple times,27,https://github.com/code-423n4/2021-08-yield-findings/issues/27,yield,2021/08,bug;2 (Med Risk);sponsor confirmed;Timelock
25,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,ERC20Rewards returns wrong rewards if no tokens initially exist,28,https://github.com/code-423n4/2021-08-yield-findings/issues/28,yield,2021/08,bug;3 (High Risk);sponsor confirmed;ERC20Rewards
25,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,ERC20Rewards breaks when setting a different token,29,https://github.com/code-423n4/2021-08-yield-findings/issues/29,yield,2021/08,bug;3 (High Risk);sponsor confirmed;ERC20Rewards
25,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,ERC20Rewards claiming can fail if no reward tokens,30,https://github.com/code-423n4/2021-08-yield-findings/issues/30,yield,2021/08,bug;1 (Low Risk);sponsor acknowledged;ERC20Rewards
25,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,No ERC20 safe* versions called,31,https://github.com/code-423n4/2021-08-yield-findings/issues/31,yield,2021/08,bug;2 (Med Risk);sponsor confirmed;ERC20Rewards
25,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,No slippage protection in Strategy,32,https://github.com/code-423n4/2021-08-yield-findings/issues/32,yield,2021/08,bug;invalid;2 (Med Risk);sponsor disputed
25,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `TimeLock.setDelay` reads storage variable for event,33,https://github.com/code-423n4/2021-08-yield-findings/issues/33,yield,2021/08,bug;duplicate;G (Gas Optimization);sponsor confirmed;Timelock
25,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `ERC20Rewards._updateRewardsPerToken` return value is not needed,34,https://github.com/code-423n4/2021-08-yield-findings/issues/34,yield,2021/08,bug;G (Gas Optimization);sponsor confirmed;ERC20Rewards
25,gpersoon,gpersoon.eth,0,double negative in comment,1,https://github.com/code-423n4/2021-08-yield-findings/issues/1,yield,2021/08,bug;0 (Non-critical);sponsor confirmed;Timelock
25,gpersoon,gpersoon.eth,1,extra checks separation of concerns,2,https://github.com/code-423n4/2021-08-yield-findings/issues/2,yield,2021/08,bug;1 (Low Risk);sponsor disputed
25,gpersoon,gpersoon.eth,G,gas improvement in schedule and cancel of TimeLock.sol,3,https://github.com/code-423n4/2021-08-yield-findings/issues/3,yield,2021/08,bug;G (Gas Optimization);sponsor confirmed;Timelock
25,gpersoon,gpersoon.eth,1,improve separation of concerns in TimeLock,4,https://github.com/code-423n4/2021-08-yield-findings/issues/4,yield,2021/08,bug;1 (Low Risk);sponsor disputed
25,gpersoon,gpersoon.eth,G,gas improvement wih source.decimals,5,https://github.com/code-423n4/2021-08-yield-findings/issues/5,yield,2021/08,bug;G (Gas Optimization);sponsor acknowledged;Oracles
25,gpersoon,gpersoon.eth,G,Combine get and peek,6,https://github.com/code-423n4/2021-08-yield-findings/issues/6,yield,2021/08,bug;G (Gas Optimization);sponsor disputed;Oracles
25,gpersoon,gpersoon.eth,1,updateTime of get is 0,7,https://github.com/code-423n4/2021-08-yield-findings/issues/7,yield,2021/08,bug;1 (Low Risk);sponsor confirmed;Oracles
25,gpersoon,gpersoon.eth,1,revoke rights of EmergencyBrake?,8,https://github.com/code-423n4/2021-08-yield-findings/issues/8,yield,2021/08,bug;invalid;1 (Low Risk);sponsor disputed
25,gpersoon,gpersoon.eth,1,improve safety of role constants ,9,https://github.com/code-423n4/2021-08-yield-findings/issues/9,yield,2021/08,bug;1 (Low Risk);sponsor confirmed;Wand
25,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,EmergencyBrake.sol: Permissions cannot be re-planned after termination,21,https://github.com/code-423n4/2021-08-yield-findings/issues/21,yield,2021/08,bug;1 (Low Risk);sponsor confirmed;EmergencyBrake
25,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,ERC20Rewards.sol: Consider making rewardsToken immutable,56,https://github.com/code-423n4/2021-08-yield-findings/issues/56,yield,2021/08,bug;duplicate;2 (Med Risk);sponsor confirmed;ERC20Rewards
25,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,ERC20Rewards.sol: Have a method to calculate the latest rewardsPerToken accumulated value,57,https://github.com/code-423n4/2021-08-yield-findings/issues/57,yield,2021/08,bug;1 (Low Risk);sponsor confirmed;ERC20Rewards
25,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,ERC20Rewards.sol: latest() is unused,58,https://github.com/code-423n4/2021-08-yield-findings/issues/58,yield,2021/08,bug;G (Gas Optimization);sponsor confirmed;ERC20Rewards
25,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,ERC20Rewards.sol: Use TransferHelper for rewardsToken,59,https://github.com/code-423n4/2021-08-yield-findings/issues/59,yield,2021/08,bug;duplicate;2 (Med Risk);sponsor confirmed;ERC20Rewards
25,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,ERC20Rewards.sol: Unnecessary return argument for _updateRewardsPerToken(),60,https://github.com/code-423n4/2021-08-yield-findings/issues/60,yield,2021/08,bug;duplicate;G (Gas Optimization);sponsor confirmed;ERC20Rewards
25,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Methods should be external instead of public,61,https://github.com/code-423n4/2021-08-yield-findings/issues/61,yield,2021/08,bug;duplicate;G (Gas Optimization);sponsor confirmed;ERC20Rewards;Strategy
25,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,Strategy.sol: startPool() can possibly be flashloaned,62,https://github.com/code-423n4/2021-08-yield-findings/issues/62,yield,2021/08,bug;invalid;2 (Med Risk);sponsor disputed
25,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Timelock.sol: Indexing targets array might not be useful,63,https://github.com/code-423n4/2021-08-yield-findings/issues/63,yield,2021/08,bug;0 (Non-critical);sponsor confirmed;EmergencyBrake;Timelock
25,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Floating Pragma,17,https://github.com/code-423n4/2021-08-yield-findings/issues/17,yield,2021/08,bug;duplicate;0 (Non-critical);sponsor disputed
25,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Different definition of beforeMaturity() and afterMaturity() modifier in different file,18,https://github.com/code-423n4/2021-08-yield-findings/issues/18,yield,2021/08,bug;1 (Low Risk);disagree with severity;Strategy
25,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Incorrect type of uint parameter is used in event ,19,https://github.com/code-423n4/2021-08-yield-findings/issues/19,yield,2021/08,bug;0 (Non-critical);sponsor disputed
25,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Unchecked return value from transfer(),20,https://github.com/code-423n4/2021-08-yield-findings/issues/20,yield,2021/08,bug;duplicate;2 (Med Risk);ERC20Rewards
25,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,lack of zero address validation in constructor,40,https://github.com/code-423n4/2021-08-yield-findings/issues/40,yield,2021/08,bug;duplicate;0 (Non-critical);sponsor disputed
25,moose-code,0x2999Fe533BC08A03304C96E8668BfA17D9D0D35b,2,Rewards squatting - setting rewards in different ERC20 tokens opens various economic attacks. ,64,https://github.com/code-423n4/2021-08-yield-findings/issues/64,yield,2021/08,bug;duplicate;2 (Med Risk);sponsor confirmed;ERC20Rewards
25,moose-code,0x2999Fe533BC08A03304C96E8668BfA17D9D0D35b,3,Rewards accumaulated can stay constant and oftern not increment,65,https://github.com/code-423n4/2021-08-yield-findings/issues/65,yield,2021/08,bug;3 (High Risk);sponsor acknowledged;disagree with severity;ERC20Rewards
25,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,G,FYTokenFactory.sol - fyToken.ROOT() can be stored in a variable,10,https://github.com/code-423n4/2021-08-yield-findings/issues/10,yield,2021/08,bug;G (Gas Optimization);sponsor confirmed
25,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,0,CTokenMultiOracle.sol - Add natspec documentation,11,https://github.com/code-423n4/2021-08-yield-findings/issues/11,yield,2021/08,bug;0 (Non-critical);sponsor confirmed;Oracles
25,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,0,CTokenMultiOracle.sol - require in _setSource() seems useless,12,https://github.com/code-423n4/2021-08-yield-findings/issues/12,yield,2021/08,bug;0 (Non-critical);Oracles
25,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,G,CTokenMultiOracle.sol - cTokenIds.length in setSources() can be stored in a variable,13,https://github.com/code-423n4/2021-08-yield-findings/issues/13,yield,2021/08,bug;G (Gas Optimization);sponsor confirmed;Oracles
25,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,G,CTokenMultiOracle.sol - source.source can be stored in a variable,14,https://github.com/code-423n4/2021-08-yield-findings/issues/14,yield,2021/08,bug;invalid;G (Gas Optimization);sponsor disputed;Oracles
25,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,0,CompositeMultiOracle.sol - Add natspec documentation,15,https://github.com/code-423n4/2021-08-yield-findings/issues/15,yield,2021/08,bug;0 (Non-critical);sponsor confirmed;Oracles
25,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,G,CompositeMultiOracle.sol - bases.length in setSources() and setPaths() can be stored in a variable,16,https://github.com/code-423n4/2021-08-yield-findings/issues/16,yield,2021/08,bug;G (Gas Optimization);sponsor confirmed;Oracles
25,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,1,Using unlocked/floating pragmas,35,https://github.com/code-423n4/2021-08-yield-findings/issues/35,yield,2021/08,bug;0 (Non-critical);sponsor disputed
25,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,2,Use `safeTransfer` instead of `transfer`,36,https://github.com/code-423n4/2021-08-yield-findings/issues/36,yield,2021/08,bug;duplicate;2 (Med Risk);sponsor confirmed;ERC20Rewards
25,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Uninitialized `updateTime` variables in `CompositeMultiOracle`,37,https://github.com/code-423n4/2021-08-yield-findings/issues/37,yield,2021/08,bug;duplicate;1 (Low Risk);sponsor confirmed;disagree with severity;Oracles
25,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,3,Exchange rates from Compound are assumed with 18 decimals,38,https://github.com/code-423n4/2021-08-yield-findings/issues/38,yield,2021/08,bug;3 (High Risk);sponsor confirmed;Oracles
25,shw,0xB48B9694BeC446E3Bf54788f913174a6580a279F,G,Gas optimization on `_updateRewardsPerToken` of `ERC20Rewards`,39,https://github.com/code-423n4/2021-08-yield-findings/issues/39,yield,2021/08,bug;G (Gas Optimization);sponsor confirmed;ERC20Rewards
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unused event `StrategyCvxHelper.HarvestState`,41,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/41,bvecvx,2021/09,bug;0 (Non-critical);sponsor confirmed
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unused event `StrategyCvxHelper.TendState`,42,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/42,bvecvx,2021/09,bug;0 (Non-critical);sponsor confirmed
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unused event `veCVXStrategy.Debug`,43,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/43,bvecvx,2021/09,bug;0 (Non-critical);sponsor confirmed
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unused event `veCVXStrategy.TreeDistribution`,44,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/44,bvecvx,2021/09,bug;0 (Non-critical);sponsor acknowledged
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `_onlyNotProtectedTokens` should use maps,45,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/45,bvecvx,2021/09,bug;G (Gas Optimization);sponsor acknowledged
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`veCVXStrategy._withdrawSome` reverts,46,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/46,bvecvx,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`veCVXStrategy.manualRebalance` has wrong logic,47,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/47,bvecvx,2021/09,bug;3 (High Risk);sponsor confirmed;sponsor acknowledged
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`SettV3._withdraw` sometimes burns too many shares,48,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/48,bvecvx,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`SettV3.transferFrom` block lock can be circumvented,49,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/49,bvecvx,2021/09,bug;2 (Med Risk);sponsor acknowledged
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`CvxLocker.setStakeLimits` missing validation,50,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/50,bvecvx,2021/09,bug;1 (Low Risk);sponsor confirmed
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`CvxLocker.setBoost` wrong validation,51,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/51,bvecvx,2021/09,bug;2 (Med Risk);sponsor confirmed;sponsor acknowledged
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`CvxLocker.setApprovals` can be called by anyone,52,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/52,bvecvx,2021/09,bug;1 (Low Risk);sponsor acknowledged
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`CvxLocker.findEpochId` stops after 128 iterations,53,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/53,bvecvx,2021/09,bug;1 (Low Risk);sponsor acknowledged
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unbounded iteration in `CvxLocker.updateReward`,54,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/54,bvecvx,2021/09,bug;1 (Low Risk);sponsor acknowledged
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Missing slippage/min-return check in `BaseStrategy`,55,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/55,bvecvx,2021/09,bug;1 (Low Risk);sponsor acknowledged
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Missing slippage/min-return check in `StrategyCvxHelper`,56,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/56,bvecvx,2021/09,bug;1 (Low Risk);sponsor acknowledged
31,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Missing slippage/min-return check in `veCVXStrategy`,57,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/57,bvecvx,2021/09,bug;1 (Low Risk);sponsor acknowledged
31,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,StrategyCvxHelper: Redundant re-initialisation of path array,32,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/32,bvecvx,2021/09,bug;G (Gas Optimization);sponsor acknowledged
31,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,StrategyCvxHelper: safeApprove instead of approve,33,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/33,bvecvx,2021/09,bug;1 (Low Risk);sponsor confirmed
31,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Swap conversion is susceptible to MEV flashbots,34,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/34,bvecvx,2021/09,bug;1 (Low Risk);sponsor acknowledged
31,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,veCVXStrategy: Erroneous Comments,35,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/35,bvecvx,2021/09,bug;0 (Non-critical);sponsor confirmed
31,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,veCVXStrategy: Extra functions can be external instead of public,36,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/36,bvecvx,2021/09,bug;G (Gas Optimization);sponsor confirmed
31,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,veCVXStrategy: Redundancies,37,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/37,bvecvx,2021/09,bug;G (Gas Optimization);sponsor acknowledged
31,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,veCVXStrategy: Sub-optimal trading path,38,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/38,bvecvx,2021/09,bug;1 (Low Risk);sponsor confirmed
31,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,veCVXStrategy: Unused return outputs from _processRewardsFees(),39,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/39,bvecvx,2021/09,bug;G (Gas Optimization);sponsor acknowledged
31,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,use of floating pragma,58,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/58,bvecvx,2021/09,bug;0 (Non-critical);sponsor disputed
31,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,state variable that are not changed throughout the contract should be declared as constant,59,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/59,bvecvx,2021/09,bug;G (Gas Optimization);sponsor acknowledged
31,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,lack of emission of events while setting fees ,60,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/60,bvecvx,2021/09,bug;0 (Non-critical);sponsor confirmed
31,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,add zero address validation in constructor and initializer,61,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/61,bvecvx,2021/09,bug;1 (Low Risk);sponsor acknowledged
31,patitonar,0xDaA39d73eF9b4495bfe206FF13eE29E759F95d63,G,Declare CvxLocker erc20 contract variables as immutable,14,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/14,bvecvx,2021/09,bug;G (Gas Optimization);sponsor confirmed
31,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Functions not returning declared values,18,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/18,bvecvx,2021/09,bug;1 (Low Risk);sponsor confirmed
31,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Validations,19,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/19,bvecvx,2021/09,bug;0 (Non-critical);sponsor acknowledged
31,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Order of parameters in KickReward event,20,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/20,bvecvx,2021/09,bug;0 (Non-critical);sponsor acknowledged
31,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,events in BaseStrategy are never emitted,21,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/21,bvecvx,2021/09,bug;0 (Non-critical)
31,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Frontrunning distribute functions,22,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/22,bvecvx,2021/09,bug;1 (Low Risk);sponsor acknowledged
31,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused imports,23,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/23,bvecvx,2021/09,bug;invalid;sponsor disputed;sponsor acknowledged
31,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,_processPerformanceFees is useless now,24,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/24,bvecvx,2021/09,bug;G (Gas Optimization);sponsor confirmed
31,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Use cached _ethBalance,25,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/25,bvecvx,2021/09,bug;G (Gas Optimization);sponsor acknowledged
31,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Immutable variables,26,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/26,bvecvx,2021/09,bug;G (Gas Optimization);sponsor confirmed
31,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,tend() can be simplified,27,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/27,bvecvx,2021/09,bug;G (Gas Optimization);sponsor confirmed
31,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,lpComponent is useless,28,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/28,bvecvx,2021/09,bug;G (Gas Optimization);sponsor acknowledged
31,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,public functions that can be external,29,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/29,bvecvx,2021/09,bug;G (Gas Optimization);sponsor confirmed
31,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Calculation of valueInLocker,30,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/30,bvecvx,2021/09,bug;G (Gas Optimization);sponsor acknowledged
31,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Delete function setKeepReward,31,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/31,bvecvx,2021/09,bug;G (Gas Optimization);sponsor confirmed
31,pmerkleplant,0xcaE5f523e58fe033b243da40f2595557c4E1718e,1,Faulty return value in veCVXStrategy::reinvest(),12,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/12,bvecvx,2021/09,bug;1 (Low Risk);sponsor confirmed
31,pmerkleplant,0xcaE5f523e58fe033b243da40f2595557c4E1718e,G,Make variable veCVXStrategy::MAX_BPS constant,13,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/13,bvecvx,2021/09,bug;G (Gas Optimization);sponsor confirmed
31,tabish,0xD6FCD2F85fE975bB9b0f3C1B1c6802bB09d33E43,0,The comments incorrectly indicate the range in which `toLock` input should be given.,15,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/15,bvecvx,2021/09,bug;0 (Non-critical);sponsor confirmed
31,tabish,0xD6FCD2F85fE975bB9b0f3C1B1c6802bB09d33E43,3,`reinvest` function should return a `uint256 reinvested` amount but it returns nothing,16,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/16,bvecvx,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
31,tabish,0xD6FCD2F85fE975bB9b0f3C1B1c6802bB09d33E43,3,Front running transaction possible as min_out_amount = 0 when swapping,17,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/17,bvecvx,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
31,tabish,0xD6FCD2F85fE975bB9b0f3C1B1c6802bB09d33E43,3,Arithmetic Error - `manualRebalance` function has multiple arithmetic bugs,40,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/40,bvecvx,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
31,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,setKeepReward function is unfinished,1,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/1,bvecvx,2021/09,bug;1 (Low Risk);sponsor confirmed
31,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Harvest() in StrategyCvxHelper will be frontrun.,10,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/10,bvecvx,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
31,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,BaseStrategy.sol can be frontrun in 4 different ways.,11,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/11,bvecvx,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
31,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Make harvest() at least optional before prepareWithdrawAll(),2,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/2,bvecvx,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
31,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Harvest function will be frontrun for >90% of the balance.,3,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/3,bvecvx,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
31,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Don't include unused functions,4,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/4,bvecvx,2021/09,bug;1 (Low Risk);sponsor confirmed
31,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,ManualRebalance will be frontrun for most of the tokens.,5,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/5,bvecvx,2021/09,bug;1 (Low Risk);sponsor confirmed
31,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,toLock in the comments is a % while in the code it is measured in bips.,6,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/6,bvecvx,2021/09,bug;0 (Non-critical)
31,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Gas optimization: no need for extra variable declaration,7,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/7,bvecvx,2021/09,bug;G (Gas Optimization);sponsor acknowledged
31,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,0,Refactor code to use calculations at current epoch,8,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/8,bvecvx,2021/09,bug;0 (Non-critical);sponsor acknowledged
31,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Reentrancy on distributeOther(),9,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/9,bvecvx,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,0xalpharush,0x091dA6d5845B18D4147B45472497fF91b768C132,3,`burn` and `mintTo` in `Basket.sol` vulnerable to reentrancy,248,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/248,defiprotocol,2021/09,bug;2 (Med Risk);sponsor acknowledged
36,0xalpharush,0x091dA6d5845B18D4147B45472497fF91b768C132,2,Basket.handleFees() (contracts/Basket.sol#110-129) performs a multiplication on the result of a division,255,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/255,defiprotocol,2021/09,bug;invalid;2 (Med Risk)
36,0xRajeev,rajeev.eth,2,Single-step process for critical Factory ownership transfers is risky,138,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/138,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);sponsor acknowledged
36,0xRajeev,rajeev.eth,1,Lack of guarded launch approach may be risky,139,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/139,defiprotocol,2021/09,bug;0 (Non-critical);sponsor acknowledged
36,0xRajeev,rajeev.eth,1,Missing zero-address checks,140,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/140,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);disagree with severity;sponsor confirmed
36,0xRajeev,rajeev.eth,G,State variables can be made immutable,141,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/141,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,0xRajeev,rajeev.eth,G,Avoiding initializations to default values will save gas,142,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/142,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor acknowledged
36,0xRajeev,rajeev.eth,G,Avoiding state variables in emits saves gas ,143,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/143,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor acknowledged
36,0xRajeev,rajeev.eth,G,Change public visibility to external ,144,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/144,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,0xRajeev,rajeev.eth,G,Caching state variables in local/memory variables avoids SLOADs to save gas,145,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/145,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,0xRajeev,rajeev.eth,G,Caching return values of external calls in local/memory variables avoids CALLs to save gas ,147,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/147,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,0xRajeev,rajeev.eth,G,Rearranging state variable declaration order will allow slot packing to save gas,148,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/148,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor acknowledged
36,0xRajeev,rajeev.eth,G,Using delete to clear variables instead of zero assignment ,149,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/149,defiprotocol,2021/09,bug;0 (Non-critical);sponsor acknowledged
36,0xRajeev,rajeev.eth,G,Unnecessary initialization of loop index variable,150,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/150,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor acknowledged
36,0xRajeev,rajeev.eth,G,Loop can be skipped for i == 0,151,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/151,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor acknowledged
36,0xRajeev,rajeev.eth,G,Use unchecked{} where the underlying arithmetic can be determined to not overflow/underflow ,152,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/152,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor acknowledged
36,0xRajeev,rajeev.eth,G,Avoiding unnecessary return can save gas,153,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/153,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,0xRajeev,rajeev.eth,G,"Choose either explicit return or named return, not both",154,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/154,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,0xRajeev,rajeev.eth,G,Avoiding redundant parameter/argument can save gas ,155,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/155,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,0xRajeev,rajeev.eth,1,Unused constant,156,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/156,defiprotocol,2021/09,bug;G (Gas Optimization);disagree with severity;sponsor confirmed
36,0xRajeev,rajeev.eth,1,Missing check for auctionOngoing is risky,157,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/157,defiprotocol,2021/09,bug;0 (Non-critical);sponsor confirmed
36,0xRajeev,rajeev.eth,1,Missing equality check on lengths of tokens/weights arrays,158,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/158,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);disagree with severity;sponsor confirmed
36,0xRajeev,rajeev.eth,1,Transferring only required differences will avoid excessive fund transfer,159,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/159,defiprotocol,2021/09,bug;invalid;1 (Low Risk);disagree with severity;sponsor acknowledged
36,0xRajeev,rajeev.eth,1,Missing input validation on token address and amount,161,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/161,defiprotocol,2021/09,bug;invalid;1 (Low Risk);disagree with severity;sponsor confirmed
36,0xRajeev,rajeev.eth,2,Malicious tokens can execute arbitrary code,162,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/162,defiprotocol,2021/09,bug;0 (Non-critical);sponsor acknowledged
36,0xRajeev,rajeev.eth,1,Missing interfaces to determine available bounties,164,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/164,defiprotocol,2021/09,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
36,0xRajeev,rajeev.eth,G,Bounty list is never pruned to remove inactive bounties,165,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/165,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,0xRajeev,rajeev.eth,2,Unhandled return value of transfer() could cause bounty payment failure,167,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/167,defiprotocol,2021/09,bug;duplicate;2 (Med Risk);sponsor confirmed
36,0xRajeev,rajeev.eth,3,Incorrect data location specifier can be abused to cause DoS and fund loss,168,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/168,defiprotocol,2021/09,bug;2 (Med Risk);sponsor confirmed
36,0xRajeev,rajeev.eth,1,Lack of indexed event parameters will affect offchain monitoring,169,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/169,defiprotocol,2021/09,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
36,0xRajeev,rajeev.eth,1,Lack of maxLicenseFee to protect users against greedy publishers,170,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/170,defiprotocol,2021/09,bug;duplicate;invalid;1 (Low Risk);sponsor acknowledged
36,0xRajeev,rajeev.eth,2,Missing events for critical protocol parameter setters by owner,171,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/171,defiprotocol,2021/09,bug;0 (Non-critical);disagree with severity;sponsor confirmed
36,0xRajeev,rajeev.eth,1,Missing timelocks for critical protocol parameter setters by owner ,172,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/172,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,0xRajeev,rajeev.eth,1,Missing sanity/threshold checks on critical contract parameter initializations,173,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/173,defiprotocol,2021/09,bug;1 (Low Risk)
36,0xRajeev,rajeev.eth,1,Hardcoded constants are risky,174,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/174,defiprotocol,2021/09,bug;0 (Non-critical);disagree with severity;sponsor confirmed
36,0xRajeev,rajeev.eth,1,Mismatch between implementation & specification/documentation,175,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/175,defiprotocol,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
36,0xRajeev,rajeev.eth,1,Risk of duplicate/scam basket token names/symbols may trick users,176,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/176,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,0xRajeev,rajeev.eth,1,Missing support for (preventing) use of deflationary tokens in baskets,177,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/177,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,0xRajeev,rajeev.eth,1,Missing emission of basket ID and token composition,178,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/178,defiprotocol,2021/09,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
36,0xRajeev,rajeev.eth,1,Separate proposeBasketLicense() and createBasket() functions may lead to unexpected behavior ,179,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/179,defiprotocol,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
36,0xRajeev,rajeev.eth,1,Using the latest compiler version may be susceptible to undiscovered bugs,180,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/180,defiprotocol,2021/09,bug;0 (Non-critical);sponsor disputed
36,0xRajeev,rajeev.eth,1,Timelock duration assumed 15s block times ,181,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/181,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);sponsor acknowledged
36,0xRajeev,rajeev.eth,3,Basket can be initialized multiple times to completely take over the Basket contract ,182,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/182,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
36,0xRajeev,rajeev.eth,1,Missing error message strings with require()s,183,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/183,defiprotocol,2021/09,bug;duplicate;0 (Non-critical);sponsor acknowledged
36,0xRajeev,rajeev.eth,1,Potential reentrancies possible,184,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/184,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
36,0xRajeev,rajeev.eth,1,Publisher role cannot be renounced,185,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/185,defiprotocol,2021/09,bug;1 (Low Risk);sponsor confirmed
36,0xRajeev,rajeev.eth,2, Incorrectly used new publisher and new licenseFee cannot be changed,186,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/186,defiprotocol,2021/09,bug;1 (Low Risk);disagree with severity;sponsor confirmed
36,0xRajeev,rajeev.eth,2,2-step change of publisher address is not robust to errors,187,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/187,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
36,0xRajeev,rajeev.eth,2,2-step change of publisher address and licenseFee does not generate warning event ,188,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/188,defiprotocol,2021/09,bug;0 (Non-critical);disagree with severity;sponsor confirmed
36,0xRajeev,rajeev.eth,1,Resetting partial struct fields is risky,189,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/189,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,0xRajeev,rajeev.eth,1,Recognize the risk of using approve,190,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/190,defiprotocol,2021/09,bug;1 (Low Risk);sponsor confirmed
36,0xRajeev,rajeev.eth,1,Max approvals are risky if contract is malicious/compromised ,191,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/191,defiprotocol,2021/09,bug;0 (Non-critical);sponsor acknowledged
36,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,`mintTo` arguments order,257,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/257,defiprotocol,2021/09,bug;0 (Non-critical);sponsor confirmed
36,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Lack of revert messages,258,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/258,defiprotocol,2021/09,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
36,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,`deleteNewIndex` can be external,259,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/259,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,`approveUnderlying` isn't safe,260,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/260,defiprotocol,2021/09,bug;duplicate;2 (Med Risk);disagree with severity;sponsor confirmed
36,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,`bondTimestamp` is not a timestamp but a blocknumber,261,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/261,defiprotocol,2021/09,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
36,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,`proposeBasketLicense` can be external,262,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/262,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Event BasketLicenseProposed needs an idNumber,263,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/263,defiprotocol,2021/09,bug;0 (Non-critical);disagree with severity;sponsor confirmed
36,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,`handleFees` reverts if supply is zero,264,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/264,defiprotocol,2021/09,bug;1 (Low Risk);sponsor confirmed
36,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,Owner can steal all Basket funds during auction,265,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/265,defiprotocol,2021/09,bug;2 (Med Risk);disagree with severity;sponsor confirmed
36,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Reentrancy during Bounty withdrawal,266,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/266,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
36,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Unusual fee calculation,267,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/267,defiprotocol,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
36,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,2,Risk of memory overflow,268,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/268,defiprotocol,2021/09,bug;invalid;2 (Med Risk);sponsor disputed
36,aga7hokakological,0xE41B989ce8cF92E265995A5cCcb2C5c9C2981184,2,block timestamp manipulation can cause fees change,195,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/195,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,bw,0x3d977eF4855A526500E901bFA43c209E0C51BA84,G,Runtime constants not defined as immutable,15,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/15,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,bw,0x3d977eF4855A526500E901bFA43c209E0C51BA84,G,`handleFees()` wasting gas if called multiple times in the same block,16,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/16,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,bw,0xf7108923aD53c6Ef90B6673bb3EC4Af59342339F,1,Events not emitted for parameter changes ,17,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/17,defiprotocol,2021/09,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
36,bw,0xf7108923aD53c6Ef90B6673bb3EC4Af59342339F,1,Uninitialized Implementation Contracts,18,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/18,defiprotocol,2021/09,bug;0 (Non-critical);sponsor confirmed
36,bw,0xf7108923aD53c6Ef90B6673bb3EC4Af59342339F,G,Require statement can be moved to start of function,19,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/19,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,bw,0xf7108923aD53c6Ef90B6673bb3EC4Af59342339F,1,Changes made to memory and not storage,20,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/20,defiprotocol,2021/09,bug;duplicate;2 (Med Risk);sponsor confirmed
36,chasemartin01,0x504A722a06596490DFBbc38432EB75417c7270e9,G,Use calldata instead of memory in function parameter declarations,75,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/75,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,chasemartin01,0x504A722a06596490DFBbc38432EB75417c7270e9,G,Declare functions as external as gas saving,76,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/76,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Wrong constant for `ONE_DAY`,218,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/218,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Re-entrancy in `Factory.createBasket`,219,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/219,defiprotocol,2021/09,bug;1 (Low Risk);sponsor confirmed
36,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,No ERC20 safe* versions called,220,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/220,defiprotocol,2021/09,bug;invalid;2 (Med Risk);sponsor confirmed
36,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,ERC20 return values not checked,221,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/221,defiprotocol,2021/09,bug;duplicate;2 (Med Risk);sponsor confirmed
36,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Setting wrong publisher cannot be undone,222,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/222,defiprotocol,2021/09,bug;1 (Low Risk);sponsor confirmed
36,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Re-entrancy in `settleAuction` allow stealing all funds,223,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/223,defiprotocol,2021/09,bug;3 (High Risk);sponsor confirmed
36,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`newIbRatio` update math depends on how often it's called,224,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/224,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Factory parameter can be removed from Auction,225,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/225,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Improve `validateWeights` uniqueness check,226,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/226,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Can save an sload in `changePublisher`,227,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/227,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Can save an sload in `changeLicenseFee`,228,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/228,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Zero weighted baskets are allowed to steal funds,21,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/21,defiprotocol,2021/09,bug;2 (Med Risk);sponsor confirmed
36,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Bounties payout will get stuck on publishing new index,22,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/22,defiprotocol,2021/09,bug;invalid;3 (High Risk);sponsor disputed
36,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Mint and burn operation is not deducting the fees from the minted/burned amount,23,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/23,defiprotocol,2021/09,bug;invalid;2 (Med Risk);sponsor disputed
36,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas optimation on validateWeights function,24,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/24,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,Global bounties variable and 0 bounty allow dos in bounty functionality of basket,25,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/25,defiprotocol,2021/09,bug;1 (Low Risk);sponsor confirmed
36,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,Bond amount will not be returned,26,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/26,defiprotocol,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
36,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,FRONT-RUNNABLE INITIALIZERS,49,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/49,defiprotocol,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
36,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,USE SAFEERC20.SAFEAPPROVE IN approveUnderlying(),59,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/59,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
36,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Missing Token Decimals Check,60,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/60,defiprotocol,2021/09,bug;invalid;2 (Med Risk);sponsor disputed
36,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Lack of zero ratio validation,83,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/83,defiprotocol,2021/09,bug;1 (Low Risk);sponsor confirmed
36,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing maximum fee amount check,84,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/84,defiprotocol,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
36,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,Factory.sol - lack of checks for setMinLicenseFee,118,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/118,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,3,Factory.sol - lack of checks in `setAuctionDecrement` will cause reverts in Auction::settleAuction(),119,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/119,defiprotocol,2021/09,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
36,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,lack of checks in Factory.setAuctionMultiplier,120,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/120,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,3,lack of checks in `Factory::setBondPercentDiv` allow owner to prevent bonding in Auction::bondForRebalance(),121,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/121,defiprotocol,2021/09,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,G,Gas saving: pack struct,237,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/237,defiprotocol,2021/09,bug;G (Gas Optimization)
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,G,Gas optimation proposal struct,238,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/238,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,0,Inconsistency: variable setting,239,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/239,defiprotocol,2021/09,bug;invalid;0 (Non-critical);sponsor confirmed
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,G,Set functions to external.,240,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/240,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,2,Bond div set to zero,241,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/241,defiprotocol,2021/09,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,2,Auction multiplier set to zero,242,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/242,defiprotocol,2021/09,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,2,No restrictions on owner setting params,243,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/243,defiprotocol,2021/09,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,2,Front running basket Creation,244,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/244,defiprotocol,2021/09,bug;invalid;2 (Med Risk);disagree with severity;sponsor disputed
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,G,Unecessary transfer trips,245,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/245,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor acknowledged
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,2,Incorrect timing,246,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/246,defiprotocol,2021/09,bug;invalid;2 (Med Risk);disagree with severity;sponsor disputed
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,1,No require messages,247,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/247,defiprotocol,2021/09,bug;duplicate;invalid;1 (Low Risk);disagree with severity;sponsor acknowledged
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,3,Trying to use timestamps with blocknumbers,249,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/249,defiprotocol,2021/09,bug;invalid;3 (High Risk);disagree with severity;sponsor disputed
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,1,Naming,250,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/250,defiprotocol,2021/09,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,3,Zero fees,251,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/251,defiprotocol,2021/09,bug;invalid;3 (High Risk);disagree with severity;sponsor acknowledged
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,G,pack structs *3,252,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/252,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor acknowledged
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,G,Same tokens added to bounty,253,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/253,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor acknowledged
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,G,Vairable never used,254,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/254,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor acknowledged
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,2,Reentrancy hook on bounty,256,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/256,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,2,Limit on growth size of pool - bond size,275,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/275,defiprotocol,2021/09,bug;0 (Non-critical);sponsor disputed
36,goatbug,0x02FA893CD8FCFAc3587e462E3Faa5AA29946FC06,2,DDoS of rebalance,276,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/276,defiprotocol,2021/09,bug;duplicate;2 (Med Risk);sponsor acknowledged
36,gpersoon,gpersoon.eth,1,initialize of Basket.sol is missing initializer ,50,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/50,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
36,gpersoon,gpersoon.eth,0,More readable constants,51,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/51,defiprotocol,2021/09,bug;0 (Non-critical);sponsor acknowledged
36,gpersoon,gpersoon.eth,1,handleFees() will revert if licenseFee is too high,52,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/52,defiprotocol,2021/09,bug;1 (Low Risk)
36,gpersoon,gpersoon.eth,G,handleFees() only mint when necessary,53,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/53,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,gpersoon,gpersoon.eth,G,settleAuction() can reset auctionBonder,54,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/54,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,gpersoon,gpersoon.eth,2,malicious tokens could be added with addBounty,55,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/55,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,gpersoon,gpersoon.eth,2,Scoop ERC20 tokens from basket contract,56,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/56,defiprotocol,2021/09,bug;2 (Med Risk);sponsor acknowledged
36,gpersoon,gpersoon.eth,0,BLOCK_DECREMENT not used,57,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/57,defiprotocol,2021/09,bug;0 (Non-critical);sponsor acknowledged
36,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,Event params are of no practical value,163,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/163,defiprotocol,2021/09,bug;1 (Low Risk);sponsor confirmed
36,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,3,Re-entrancy in burn(),194,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/194,defiprotocol,2021/09,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
36,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,2,Use safeTransfer instead of transfer,196,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/196,defiprotocol,2021/09,bug;2 (Med Risk);sponsor confirmed
36,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,multiply before divide,197,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/197,defiprotocol,2021/09,bug;invalid;1 (Low Risk);sponsor confirmed
36,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,redundant code (unused variables),198,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/198,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,change visibility from to external for several functions,199,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/199,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Use `calldata` instead of `memory` for function parameters,229,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/229,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Replace `tokenList.length` by existing variable `length`,230,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/230,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Caching the length in for loops,231,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/231,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor acknowledged
36,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,The increment in for loop post condition can be made unchecked,232,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/232,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor acknowledged
36,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,State variables that can be set to immutable,233,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/233,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,1,Sanity checks when the contract parameters are updated,234,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/234,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,1,Proposals can never get created due to reaching `block.gaslimit`,235,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/235,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,2,Fee on transfer tokens can lead to incorrect approval,236,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/236,defiprotocol,2021/09,bug;2 (Med Risk);sponsor acknowledged
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,0,Require statements do not have an error message,100,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/100,defiprotocol,2021/09,bug;duplicate;invalid;0 (Non-critical);sponsor acknowledged
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,1,tokensNeeded can potentially be 0,101,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/101,defiprotocol,2021/09,bug;1 (Low Risk);sponsor confirmed
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,1,Validation of weights doesn't check that the sum of the weights add up to 100%,102,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/102,defiprotocol,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,2,Unsafe transfer used for bounty rewards,103,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/103,defiprotocol,2021/09,bug;duplicate;2 (Med Risk);sponsor confirmed
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,2,licenseFee can be greater than BASE,104,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/104,defiprotocol,2021/09,bug;2 (Med Risk);sponsor acknowledged
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,2,Unintentionally causing users to lose their bond,105,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/105,defiprotocol,2021/09,bug;duplicate;2 (Med Risk);sponsor confirmed
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,2,Cannot handle compliant ERC20 tokens that takes fee on transfer,106,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/106,defiprotocol,2021/09,bug;duplicate;2 (Med Risk);sponsor acknowledged
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,3,Withdrawing bounties after checking balances can lead to the entire basket being drained.,107,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/107,defiprotocol,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,2,Fee calculation is potentially incorrect,129,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/129,defiprotocol,2021/09,bug;2 (Med Risk);sponsor confirmed
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,Declare tokensNeeded outside of the for loop,91,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/91,defiprotocol,2021/09,bug;invalid;G (Gas Optimization);sponsor confirmed
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,Transfer tokens directly to the basket,92,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/92,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor acknowledged
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,Use mapping instead of array to check uniqueness of token.,93,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/93,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,set lastFee in initialize() function,94,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/94,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,Only validateWeights when it is needed,95,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/95,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor acknowledged
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,0,Unused variable BLOCK_DECREMENT,96,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/96,defiprotocol,2021/09,bug;duplicate;0 (Non-critical);sponsor confirmed
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,0,Use CEI pattern to align w/ best practices,97,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/97,defiprotocol,2021/09,bug;0 (Non-critical);sponsor acknowledged
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,0,Misleading variable names,98,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/98,defiprotocol,2021/09,bug;0 (Non-critical);sponsor acknowledged
36,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,0,Suggestion for incentive alignment,99,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/99,defiprotocol,2021/09,bug;0 (Non-critical);sponsor acknowledged
36,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,2,Lack of input validation in  initialize function of  Auction.sol,1,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/1,defiprotocol,2021/09,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
36,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,0,many requires doesn't have a reason,10,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/10,defiprotocol,2021/09,bug;duplicate;invalid;0 (Non-critical);sponsor acknowledged
36,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,changing variable to small type tosave gas,11,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/11,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor acknowledged
36,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,changing variable type to save gas ,12,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/12,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor acknowledged
36,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,using struct to save gas ,13,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/13,defiprotocol,2021/09,bug;duplicate;invalid;G (Gas Optimization);sponsor acknowledged
36,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,Gas Saving by changing the visibility of initialize function from public to external ,2,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/2,defiprotocol,2021/09,bug;duplicate;invalid;G (Gas Optimization);sponsor confirmed
36,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,2,initialize function in basket.sol can be front-run,3,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/3,defiprotocol,2021/09,bug;1 (Low Risk)
36,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,Basket.sol is  Ownable but not owner capabilites are used,33,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/33,defiprotocol,2021/09,bug;invalid;G (Gas Optimization);sponsor acknowledged
36,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,Declare Auction.sol variable IBasket and Ifactory as immutable to save gas  ,34,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/34,defiprotocol,2021/09,bug;invalid;G (Gas Optimization);sponsor confirmed
36,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,Gas Saving by changing the visibility of initialize function from public to externa in basket.sol,4,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/4,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,2,Lack of input validation in initialize function of Basket.sol ,5,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/5,defiprotocol,2021/09,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
36,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,2,initialize function in Auction.sol can be front-run,6,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/6,defiprotocol,2021/09,bug;invalid;2 (Med Risk);sponsor disputed
36,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,Some variables type should be changed ,7,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/7,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor acknowledged
36,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,2,wrong maths,8,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/8,defiprotocol,2021/09,bug;invalid;2 (Med Risk);sponsor disputed
36,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,3,missing access control in basket.sol,9,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/9,defiprotocol,2021/09,bug;invalid;3 (High Risk);disagree with severity;sponsor disputed
36,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,unchecked return value from transfer() ,110,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/110,defiprotocol,2021/09,bug;duplicate;2 (Med Risk);sponsor acknowledged
36,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,lack of checking of array length,111,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/111,defiprotocol,2021/09,bug;1 (Low Risk);sponsor confirmed
36,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,packing of state variable,112,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/112,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor acknowledged
36,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,3,lack of Reentrancy guard in burn(),113,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/113,defiprotocol,2021/09,bug;duplicate;2 (Med Risk)
36,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,use of approve() instead of safeApprove(),114,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/114,defiprotocol,2021/09,bug;1 (Low Risk);sponsor confirmed
36,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,specs not according to the docs,115,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/115,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,after sensitive action event should be emitted,116,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/116,defiprotocol,2021/09,bug;duplicate;0 (Non-critical);sponsor confirmed
36,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,lack of zero address(0) validation in constructor and initialize() ,117,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/117,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);sponsor acknowledged
36,joeysantoro,0x25Cb5b18A3D6C7cf562dE456ab8368ED577C0173,1,DAO is fee recipient / cannot revoke owner,27,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/27,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,joeysantoro,0x25Cb5b18A3D6C7cf562dE456ab8368ED577C0173,G,Each basket needs individual ERC20 approval,28,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/28,defiprotocol,2021/09,bug;invalid;G (Gas Optimization);sponsor acknowledged
36,joeysantoro,0x25Cb5b18A3D6C7cf562dE456ab8368ED577C0173,G,Tokens Provided out of order,29,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/29,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,joeysantoro,0x25Cb5b18A3D6C7cf562dE456ab8368ED577C0173,1,Cannot change pending while timelocked,30,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/30,defiprotocol,2021/09,bug;1 (Low Risk);sponsor confirmed
36,johnsterlacci,0xc7BDD438CbEd7701DA476aeBec99cF2Db4d65bb7,1,Basket/Auction Singletons Are Interactable,47,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/47,defiprotocol,2021/09,bug;invalid;1 (Low Risk);sponsor acknowledged
36,johnsterlacci,0xc7BDD438CbEd7701DA476aeBec99cF2Db4d65bb7,3,Reentrancy Risk In Basket.burn and Basket.mintTo,48,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/48,defiprotocol,2021/09,bug;duplicate;2 (Med Risk)
36,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Unsafe approve would halt the auction and burn the bond,35,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/35,defiprotocol,2021/09,bug;duplicate;2 (Med Risk)
36,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,One day is not set correctly,36,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/36,defiprotocol,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
36,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,TIMELOCK_DURATION is not set to 1 day,37,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/37,defiprotocol,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
36,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2, settleAuction may be impossible if locked at a wrong time.,41,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/41,defiprotocol,2021/09,bug;2 (Med Risk);sponsor confirmed
36,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,No minimum rate in the auction may break the protocol under network failure,42,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/42,defiprotocol,2021/09,bug;2 (Med Risk);sponsor confirmed
36,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Reentrancy through `withdrawBounty`,44,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/44,defiprotocol,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
36,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,No safety check in `addbounty` allows attackers to steal tokens from `tx.origin`,67,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/67,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);sponsor acknowledged
36,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,"Reentrancy in settleAuction(): malicious publisher can bypass index timelock mechanism, inject malicious index, and rug the basket",31,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/31,defiprotocol,2021/09,bug;3 (High Risk);sponsor confirmed
36,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Unnecessary new list in Basket's validateWeights(),32,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/32,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Pack together bool variables in Auction,38,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/38,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Unnecessary initializing of variable to 0,39,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/39,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor acknowledged
36,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Restore state to 0 if not needed anymore,40,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/40,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,"Redundant call to external contract, result can be saved",43,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/43,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Auction settler can steal user funds if bond timestamp is high enough,45,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/45,defiprotocol,2021/09,bug;2 (Med Risk);sponsor confirmed
36,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,Inaccurate log emitted at deleteNewIndex,58,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/58,defiprotocol,2021/09,bug;1 (Low Risk);sponsor confirmed
36,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,0,Basket will break and lock all user funds if not used in 100 years,63,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/63,defiprotocol,2021/09,bug;0 (Non-critical);sponsor confirmed
36,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Basket becomes unusable if everybody burns their shares,64,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/64,defiprotocol,2021/09,bug;2 (Med Risk);sponsor confirmed
36,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,0,Remove unused variable from contract,65,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/65,defiprotocol,2021/09,bug;duplicate;0 (Non-critical);sponsor acknowledged
36,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Bonding mechanism allows malicious user to DOS auctions,66,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/66,defiprotocol,2021/09,bug;duplicate;2 (Med Risk);sponsor acknowledged
36,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,"User can mint miniscule amount of shares, later withdraw miniscule more than deposited",81,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/81,defiprotocol,2021/09,bug;2 (Med Risk);sponsor confirmed
36,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,Publisher May Accidentally Publish New Index With Incorrect Token Decimals,146,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/146,defiprotocol,2021/09,bug;invalid;2 (Med Risk);sponsor disputed
36,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,G,Gas Optimization Wrt. Token Uniqueness,160,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/160,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,G,Gas Optimization Via Slot Consolidation,166,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/166,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor acknowledged
36,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`onlyOwner` Role Can Unintentionally Influence `settleAuction()`,192,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/192,defiprotocol,2021/09,bug;2 (Med Risk);sponsor acknowledged
36,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,Lack of Event Logging and Input Validation,193,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/193,defiprotocol,2021/09,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
36,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`bondBurn()` Leads to Unrecoverable Tokens,277,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/277,defiprotocol,2021/09,bug;invalid;2 (Med Risk);disagree with severity;sponsor disputed
36,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`withdrawBounty()` Can Deny Execution of `settleAuction()`,46,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/46,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);sponsor acknowledged
36,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,Lack of `SafeERC20` Library Use,61,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/61,defiprotocol,2021/09,bug;duplicate;2 (Med Risk);sponsor confirmed
36,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,Missing Transfer Ownership Pattern,62,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/62,defiprotocol,2021/09,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
36,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,Code lacking comments/spec,68,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/68,defiprotocol,2021/09,bug;0 (Non-critical);1 (Low Risk);disagree with severity;sponsor acknowledged
36,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,0,Use of uint rather than uint256,69,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/69,defiprotocol,2021/09,bug;0 (Non-critical);sponsor confirmed
36,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Can change order of global variable declaration in Auction to save 2 storage slots,70,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/70,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,0,`proposal` declared as both a function and a Proposal in Factory,71,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/71,defiprotocol,2021/09,bug;0 (Non-critical);sponsor confirmed
36,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,2,Initialize function of Basket can be invoked multiple times,74,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/74,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
36,nikitastupin,0x84F9079a9A39ae80Cf9DEE65a0E316B1a897684A,2,Timelock period may be less than 24 hours because it depends on `block.number` instead of `block.timestamp`,122,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/122,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,nikitastupin,0x84F9079a9A39ae80Cf9DEE65a0E316B1a897684A,0,Timelocked functions doesn't emit proposal events,123,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/123,defiprotocol,2021/09,bug;0 (Non-critical);sponsor confirmed
36,nikitastupin,0x84F9079a9A39ae80Cf9DEE65a0E316B1a897684A,1,Variable assignment has no effect,124,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/124,defiprotocol,2021/09,bug;1 (Low Risk);sponsor confirmed
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,withdrawBounty the same bounty multiple times,201,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/201,defiprotocol,2021/09,bug;duplicate;2 (Med Risk);sponsor confirmed
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Inconvenient to find bounty ids,202,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/202,defiprotocol,2021/09,bug;0 (Non-critical);sponsor confirmed
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Hardcoding numbers is error-prone,203,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/203,defiprotocol,2021/09,bug;0 (Non-critical);sponsor confirmed
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Duplicating variables across contracts,204,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/204,defiprotocol,2021/09,bug;invalid;1 (Low Risk);disagree with severity;sponsor acknowledged
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,emit NewIBRatio in function initialize,205,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/205,defiprotocol,2021/09,bug;0 (Non-critical);sponsor confirmed
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Check the actual amounts transferred,206,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/206,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);sponsor acknowledged
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Re-entrancy guard,207,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/207,defiprotocol,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Accessing the length of the array in every iteration is more gas expensive,208,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/208,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache the results of external calls ,209,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/209,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Double division by BASE,210,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/210,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Dead code,211,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/211,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Functions that can be external not public,212,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/212,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Optimize validateWeights,213,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/213,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Mint fees can be simplified,214,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/214,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,newIbRatio is not really useful,215,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/215,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Eliminate hasBonded,216,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/216,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor acknowledged
36,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Style issues,217,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/217,defiprotocol,2021/09,bug;0 (Non-critical);sponsor acknowledged
36,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,0,Redundant Balance Check,85,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/85,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,1,Missing Zero-Address Checks,86,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/86,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,1,Inconsistent use of `safeTransfer`,87,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/87,defiprotocol,2021/09,bug;duplicate;2 (Med Risk);sponsor confirmed
36,t11s,t11s.eth,G,settleAuction should be external and arguments should use calldata,108,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/108,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,t11s,t11s.eth,G,Packing storage variables in Auction would save gas,109,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/109,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor acknowledged
36,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,If newRatio can differ drastically from the old ibRatio attacks could take place,269,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/269,defiprotocol,2021/09,bug;invalid;3 (High Risk);disagree with severity;sponsor disputed
36,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Add nonreentrant modifiers to external methods in 2 files,270,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/270,defiprotocol,2021/09,bug;1 (Low Risk);sponsor confirmed
36,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,block.timestamp is a better timer than block.number,271,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/271,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,CEI for reentrancy on L85-87,272,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/272,defiprotocol,2021/09,bug;duplicate;0 (Non-critical);sponsor acknowledged
36,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Unnecessary require check,273,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/273,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor confirmed
36,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,No input validation on parameter changes,274,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/274,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Provide meaningful error messages for every exception,128,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/128,defiprotocol,2021/09,bug;invalid;0 (Non-critical);sponsor acknowledged
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use free functions to replace external calls can save gas,130,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/130,defiprotocol,2021/09,bug;invalid;G (Gas Optimization);sponsor confirmed
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`validateWeights()` Limit loop to a meaningful bound can save gas,131,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/131,defiprotocol,2021/09,bug;invalid;G (Gas Optimization);sponsor confirmed
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`validateWeights()` Cache length in the for loops can save gas,132,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/132,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Basket.sol#handleFees()` Cache external call results can save gas,133,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/133,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`Basket.sol#auctionBurn()` A failed auction will freeze part of the funds,134,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/134,defiprotocol,2021/09,bug;3 (High Risk);sponsor confirmed
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,135,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/135,defiprotocol,2021/09,bug;G (Gas Optimization);sponsor acknowledged
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`Auction.sol#settleAuction()` Mishandling bounty state could potentially disrupt `settleAuction()`,136,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/136,defiprotocol,2021/09,bug;2 (Med Risk);sponsor confirmed
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Auction.sol#initialize()` Use msg.sender rather than factory_ parameter can save gas,137,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/137,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Unused code,72,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/72,defiprotocol,2021/09,bug;duplicate;0 (Non-critical);sponsor acknowledged
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Not handling approve return value,73,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/73,defiprotocol,2021/09,bug;1 (Low Risk);sponsor confirmed
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,External visibility should be preferred,77,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/77,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Basket.sol#handleFees() check if timeDiff > 0 can save gas,78,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/78,defiprotocol,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`Basket.sol#handleFees()` could potentially cause disruption of minting and burning,79,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/79,defiprotocol,2021/09,bug;2 (Med Risk);sponsor confirmed
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`Auction.sol#bondTimestamp` Misleading name,80,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/80,defiprotocol,2021/09,bug;0 (Non-critical);sponsor acknowledged
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`Auction.sol#settleAuction()` addBounty with a fake token could potentially disrupt `settleAuction()`,82,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/82,defiprotocol,2021/09,bug;1 (Low Risk)
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Lack of event emission after sensitive actions,88,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/88,defiprotocol,2021/09,bug;duplicate;0 (Non-critical);sponsor acknowledged
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Factory.sol` Lack of two-step procedure and/or input validation routines for critical operations leaves them error-prone,89,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/89,defiprotocol,2021/09,bug;1 (Low Risk);sponsor acknowledged
36,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"`Auction.sol#settleAuction()` late auction bond could potentially not being able to be settled, cause funds loss to bonder",90,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/90,defiprotocol,2021/09,bug;2 (Med Risk);sponsor confirmed
36,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,TIMELOC_DURATION not set correctly (Basket.sol),125,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/125,defiprotocol,2021/09,bug;duplicate;0 (Non-critical);1 (Low Risk);sponsor disputed
36,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Settle Time Limit not set correctly (Auction.sol),126,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/126,defiprotocol,2021/09,bug;0 (Non-critical);sponsor disputed
36,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0, Protocol owner fee limit not verified correctly (Factory.sol),127,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/127,defiprotocol,2021/09,bug;0 (Non-critical);sponsor acknowledged
36,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,licenseFee state variable not checked for maximum value (Basket.sol),200,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/200,defiprotocol,2021/09,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
28,0xRajeev,rajeev.eth,G,Slot packing saves slots but increases runtime gas consumption due to masking,36,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/36,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,0xRajeev,rajeev.eth,G,Init pattern (instead of constructor) prevents making state variables immutable,37,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/37,sushimiso,2021/09,bug;invalid;sponsor acknowledged
28,0xRajeev,rajeev.eth,1,Tokens without 18 decimals are unhandled,38,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/38,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,0xRajeev,rajeev.eth,1,Implicit check for reinitialisation not at the beginning,39,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/39,sushimiso,2021/09,bug;invalid;sponsor disputed
28,0xRajeev,rajeev.eth,G,Change public visibility to external ,40,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/40,sushimiso,2021/09,bug;invalid;sponsor disputed
28,0xRajeev,rajeev.eth,2,Missing zero-address check on beneficiary may lead to loss of funds,41,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/41,sushimiso,2021/09,bug;0 (Non-critical);sponsor acknowledged;disagree with severity
28,0xRajeev,rajeev.eth,G,Caching state variables in local/memory variables avoids SLOADs to save gas,42,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/42,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,0xRajeev,rajeev.eth,1,Front-running cancelAuction can prevent auction cancellation,43,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/43,sushimiso,2021/09,bug;sponsor disputed;1 (Low Risk)
28,0xRajeev,rajeev.eth,1,Critical withdrawTokens function is missing an event ,44,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/44,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,0xRajeev,rajeev.eth,1,Missing zero-address checks,45,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/45,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,0xRajeev,rajeev.eth,1,Missing check on array lengths being same,46,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/46,sushimiso,2021/09,bug;invalid;sponsor disputed
28,0xRajeev,rajeev.eth,1,Missing events for critical contract setters of privileged roles,47,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/47,sushimiso,2021/09,bug;duplicate;0 (Non-critical);sponsor disputed
28,0xRajeev,rajeev.eth,1,Missing timelock for critical contract setters of privileged roles ,48,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/48,sushimiso,2021/09,bug;invalid;sponsor disputed
28,0xRajeev,rajeev.eth,1,Enabling usePointList with zero pointList can cause reverts ,49,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/49,sushimiso,2021/09,bug;invalid
28,0xRajeev,rajeev.eth,1,setList silently accepts a zero-address pointList without any side-effects,50,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/50,sushimiso,2021/09,bug;invalid;sponsor disputed
28,0xRajeev,rajeev.eth,1,Front-running setAuctionPrice can prevent changing the auction prices,51,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/51,sushimiso,2021/09,bug;invalid;sponsor disputed
28,0xRajeev,rajeev.eth,2,Single-step wallet address change is risky,52,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/52,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,0xRajeev,rajeev.eth,2,Payable external init is redundant and may allow unaccounted token claims or DoS,53,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/53,sushimiso,2021/09,bug;sponsor disputed;1 (Low Risk)
28,0xRajeev,rajeev.eth,1,Use of transfer instead of SafeTransfer is susceptible to DoS from gas subsidy and opcode repricing,54,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/54,sushimiso,2021/09,bug;duplicate;1 (Low Risk)
28,0xRajeev,rajeev.eth,1,Allowing a different from address to commitTokensFrom is a concern ,55,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/55,sushimiso,2021/09,bug;invalid;sponsor disputed
28,0xRajeev,rajeev.eth,1,Missing support/documentation for use of deflationary tokens as payment currency,56,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/56,sushimiso,2021/09,bug;invalid;sponsor disputed
28,0xRajeev,rajeev.eth,G,Checking for non-zero amounts before payment functions saves gas,57,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/57,sushimiso,2021/09,bug;invalid;sponsor disputed
28,0xRajeev,rajeev.eth,G,Missing useful isOpen() function could save gas,59,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/59,sushimiso,2021/09,bug;0 (Non-critical);sponsor acknowledged
28,0xRajeev,rajeev.eth,G,Avoiding initialization of loop index can save a little gas,60,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/60,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,0xRajeev,rajeev.eth,1,deployMarket may revert due to integer underflow from missing threshold check,61,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/61,sushimiso,2021/09,bug;sponsor disputed;1 (Low Risk)
28,0xRajeev,rajeev.eth,G,Check for zero msg.value can save gas,62,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/62,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,0xRajeev,rajeev.eth,1,Missing contract existence check may cause silent failures of token transfers,63,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/63,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,0xRajeev,rajeev.eth,1,Init functions are susceptible to front-running,64,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/64,sushimiso,2021/09,bug;sponsor disputed;1 (Low Risk)
28,0xRajeev,rajeev.eth,G,Using function parameters in emits saves gas,65,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/65,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,0xRajeev,rajeev.eth,G,Avoiding unnecessary external call will save > 2600 gas,66,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/66,sushimiso,2021/09,bug;G (Gas Optimization);sponsor confirmed
28,0xRajeev,rajeev.eth,1,finalize is susceptible to front-running leading to DoS and contract redeployment,67,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/67,sushimiso,2021/09,bug;duplicate;3 (High Risk)
28,0xRajeev,rajeev.eth,G,Unnecessary zero check on variable which is never initialized earlier,68,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/68,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,0xRajeev,rajeev.eth,1,TODO comment indicates missing sweep functionality,69,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/69,sushimiso,2021/09,bug;invalid;sponsor disputed
28,0xRajeev,rajeev.eth,1,Relying on setters for initialisation of critical parameters is risky,70,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/70,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,0xRajeev,rajeev.eth,1,Lack of indexed event parameters will affect offchain monitoring,71,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/71,sushimiso,2021/09,bug;0 (Non-critical);sponsor acknowledged;disagree with severity
28,0xRajeev,rajeev.eth,1,Unused event may be unused code or indicative of missed emit/logic,72,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/72,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,0xRajeev,rajeev.eth,2,Event parameters interchanged for emit of access control template addition,73,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/73,sushimiso,2021/09,bug;1 (Low Risk);disagree with severity;sponsor confirmed;resolved
28,0xRajeev,rajeev.eth,1,Missing sanity/threshold checks on critical contract parameter initializations,75,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/75,sushimiso,2021/09,bug;duplicate;0 (Non-critical);sponsor disputed
28,0xRajeev,rajeev.eth,2,Same LP token can be added more than once to affect reward calculations,76,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/76,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,0xRajeev,rajeev.eth,1,Premature emission of event with uninitialized value can confuse monitoring,77,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/77,sushimiso,2021/09,bug;duplicate;0 (Non-critical)
28,0xRajeev,rajeev.eth,1,Unconventional use of basis points for integratorFeePct could cause undefined behavior,78,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/78,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,0xRajeev,rajeev.eth,1,Old Solidity compiler version,79,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/79,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`AccessControlTemplateRemoved` event not used,100,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/100,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Should `TokenList` implement `IPointList`?,101,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/101,sushimiso,2021/09,bug;0 (Non-critical);sponsor acknowledged;disagree with severity
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,102,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/102,sushimiso,2021/09,bug;duplicate;0 (Non-critical);sponsor disputed
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Use constant named variable for auction decimals,103,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/103,sushimiso,2021/09,bug;0 (Non-critical);disagree with severity;sponsor confirmed;resolved
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Cache auction prices,105,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/105,sushimiso,2021/09,bug;G (Gas Optimization);sponsor confirmed
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas:  Remove nonce from parameter list,107,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/107,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Loss of price precision,108,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/108,sushimiso,2021/09,bug;1 (Low Risk);sponsor confirmed
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`HyperbolicAuction.initAuction` 's `_factor` argument is never used,109,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/109,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`MISOMasterChef.setDevPercentage` should be capped,111,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/111,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`WETH9` does not emit `Approval` event on transfer,112,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/112,sushimiso,2021/09,bug;invalid;sponsor disputed
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`TokenVault` incorrectly tracks `userIndex`,114,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/114,sushimiso,2021/09,bug;1 (Low Risk);sponsor acknowledged;disagree with severity
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Commitments can happen after already finalized,115,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/115,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,SushiToken transfers are broken due to wrong delegates accounting on transfers,117,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/117,sushimiso,2021/09,bug;3 (High Risk);disagree with severity
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,PostAuctionLauncher's liquidity provision can be exploited,124,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/124,sushimiso,2021/09,bug;duplicate;3 (High Risk)
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unused event `StrategyCvxHelper.HarvestState`,93,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/93,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`MISOMasterChef` may not be used with fee-on-transfer tokens,94,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/94,sushimiso,2021/09,bug;sponsor disputed;1 (Low Risk)
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Usage of address.transfer,96,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/96,sushimiso,2021/09,bug;1 (Low Risk);sponsor acknowledged
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,No ERC20 safe* versions called in MisoRecipe,97,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/97,sushimiso,2021/09,bug;1 (Low Risk)
28,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,No ERC20 `safeApprove` versions called,99,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/99,sushimiso,2021/09,bug;1 (Low Risk);disagree with severity;sponsor confirmed
28,gpersoon,gpersoon.eth,3,"Last person to withdraw his tokens might not be able to do this, in Crowdsale (edge case)",15,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/15,sushimiso,2021/09,bug;3 (High Risk);sponsor confirmed;resolved
28,gpersoon,gpersoon.eth,1,finalize() can be succesfully called before initMarket(),16,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/16,sushimiso,2021/09,bug;1 (Low Risk);sponsor confirmed
28,gpersoon,gpersoon.eth,G,gas improvement in isInList ,17,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/17,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,gpersoon,gpersoon.eth,2,Random ERC20 tokens can be sweeped from MISOMarket ,18,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/18,sushimiso,2021/09,bug;invalid;sponsor disputed
28,gpersoon,gpersoon.eth,1,token2 and weth in PostAuctionLauncher,20,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/20,sushimiso,2021/09,bug;invalid;sponsor disputed
28,gpersoon,gpersoon.eth,0,comment copy paste error,21,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/21,sushimiso,2021/09,bug;0 (Non-critical)
28,gpersoon,gpersoon.eth,3,nonReentrant missing in several commitEth functions,22,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/22,sushimiso,2021/09,bug;invalid;sponsor disputed
28,gpersoon,gpersoon.eth,2,funds will get lost in deployAccessControl if devaddr isn't set,23,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/23,sushimiso,2021/09,bug;sponsor disputed;1 (Low Risk)
28,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Upgrade to at least 0.8.4,131,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/131,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,## Caching the length in for loops,132,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/132,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G, Use `calldata` instead of `memory` for function parameters,133,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/133,sushimiso,2021/09,bug;G (Gas Optimization);sponsor confirmed
28,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Consider having short revert strings,134,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/134,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Caching `totalPoints` during `setPoints` method,135,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/135,sushimiso,2021/09,bug;G (Gas Optimization);sponsor confirmed
28,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,1,Requiring a decimals method for ERC-20 tokens is non-standard,136,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/136,sushimiso,2021/09,bug;0 (Non-critical);sponsor acknowledged;disagree with severity
28,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,2,An adversarial attacker can initialize ListFactory,137,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/137,sushimiso,2021/09,bug;1 (Low Risk);sponsor acknowledged;disagree with severity
28,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,0,Typo in comment in PointList.sol,10,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/10,sushimiso,2021/09,bug;0 (Non-critical)
28,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,1,Teams should be warned not to accept rebasing tokens as payment currencies,11,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/11,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,1,priceDrop for DutchAuction might potentially be 0 if parameters are not configured correctly.,12,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/12,sushimiso,2021/09,bug;duplicate;1 (Low Risk)
28,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,Redundant _newAddress parameter for deprecateFactory,4,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/4,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,Unnecessary addition in finalize() function,5,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/5,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,Redundant liquidityAdded check,6,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/6,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,0,Wrong auction type in revert message for crowdloan.sol,7,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/7,sushimiso,2021/09,bug;duplicate;0 (Non-critical)
28,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,0,Wrong auction type in BatchAuction.sol,8,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/8,sushimiso,2021/09,bug;duplicate;invalid
28,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,0,Wrong auction type in DutchAuction.sol,9,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/9,sushimiso,2021/09,bug;duplicate;invalid
28,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,3,lack of necessary check in timecontroller.sol,85,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/85,sushimiso,2021/09,bug;duplicate;1 (Low Risk);disagree with severity
28,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,excessive eth is not transfered back to the deployer if msg.value is greater than minimum fees ,86,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/86,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,use of transfer() instead of call()  to send eth,87,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/87,sushimiso,2021/09,bug;2 (Med Risk);sponsor disputed
28,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,unchecked return value from transfer(),88,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/88,sushimiso,2021/09,bug;invalid;sponsor disputed
28,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,Lack of zero address validation in constructor,89,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/89,sushimiso,2021/09,bug;duplicate;0 (Non-critical)
28,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,unused local variable,90,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/90,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,use of floating pragma,91,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/91,sushimiso,2021/09,bug;0 (Non-critical);sponsor acknowledged
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,0,Improper Boolean Comparison,144,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/144,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,0,Missing `uint256` Cast,148,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/148,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,G,Inaccurate Function Name `enableList()`,149,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/149,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,0,Lack of Length Checking,150,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/150,sushimiso,2021/09,bug;invalid;sponsor disputed
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,0,Inconsistent Template Deletion,151,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/151,sushimiso,2021/09,bug;0 (Non-critical);sponsor acknowledged
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,3,Frontrunning Initialization of Contracts,19,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/19,sushimiso,2021/09,bug;1 (Low Risk);sponsor acknowledged;disagree with severity
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,Outdated and Vulnerable `TimelockController.sol` Contract,24,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/24,sushimiso,2021/09,bug;1 (Low Risk);disagree with severity;sponsor confirmed
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,0,Missing SPDX Identifier,26,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/26,sushimiso,2021/09,bug;0 (Non-critical);sponsor confirmed
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,0,List of Typos and Incorrect Revert Messages,28,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/28,sushimiso,2021/09,bug;duplicate;0 (Non-critical);sponsor confirmed
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,Lack of Input Validation,29,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/29,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,Divide Before Multiply,30,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/30,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,Missing Events on State Changing Functions,31,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/31,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed;disagree with severity
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,`currentTemplateId` is Not Actively Removed by `MISOLauncher.removeLiquidityLauncherTemplate()`,32,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/32,sushimiso,2021/09,bug;1 (Low Risk);disagree with severity;sponsor confirmed
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,`_safeApprove()` is Not Used Instead of `approve()`,33,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/33,sushimiso,2021/09,bug;0 (Non-critical);sponsor acknowledged
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,Truncated `priceDrop()` Calculation,34,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/34,sushimiso,2021/09,bug;duplicate;1 (Low Risk);sponsor acknowledged
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,Lack of Factory Contract for `TokenList.sol`,35,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/35,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,Unused `createPair()` Value,58,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/58,sushimiso,2021/09,bug;invalid;sponsor disputed
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,Unchecked `fundsCommitted` in Token Withdrawal,74,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/74,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,Discrepancy Between `isOpen()` and `priceFunction()`,80,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/80,sushimiso,2021/09,bug;invalid;sponsor disputed
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,G,Lack of `Immutable` Keyword,81,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/81,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,G,`clearingPrice()` can Cache Function Results,82,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/82,sushimiso,2021/09,bug;duplicate;G (Gas Optimization)
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,G,Functions can be Declared `External`,83,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/83,sushimiso,2021/09,bug;invalid;sponsor disputed
28,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,G,Consolidation of Storage Slots,84,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/84,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,0,CrowdSale commitEth require has DutchAuction warning ,1,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/1,sushimiso,2021/09,bug;duplicate;0 (Non-critical)
28,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,PostAuctionLauncher _deposit require condition contradicts error message,13,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/13,sushimiso,2021/09,bug;0 (Non-critical);sponsor acknowledged;disagree with severity
28,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,"cancelAuction function is public, but not called internally",2,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/2,sushimiso,2021/09,bug;G (Gas Optimization);sponsor disputed
28,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Require statement in PostAuctionLauncher finalize() function will never be reached.,25,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/25,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,2,Anyone is able to finalize auction if PostAuctionLauncher is the wallet,27,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/27,sushimiso,2021/09,bug;invalid;sponsor disputed
28,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,0,BatchAuction cancelAuction function has CrowdSale in require statement,3,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/3,sushimiso,2021/09,bug;duplicate;invalid
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,misoDiv might be empty for some time,104,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/104,sushimiso,2021/09,bug;invalid;sponsor disputed
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,TokenInitialized token parameter is always empty,106,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/106,sushimiso,2021/09,bug;0 (Non-critical);disagree with severity;sponsor confirmed;resolved
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,The first escrow index underflows,110,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/110,sushimiso,2021/09,bug;1 (Low Risk);disagree with severity;sponsor confirmed;resolved
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Inclusive checks,113,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/113,sushimiso,2021/09,bug;0 (Non-critical)
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,MISORecipe01 uses outdated interfaces,116,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/116,sushimiso,2021/09,bug;1 (Low Risk);sponsor acknowledged;disagree with severity
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Separate minter roles are not really necessary,118,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/118,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Immutable variables,119,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/119,sushimiso,2021/09,bug;invalid;sponsor disputed
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused imports,120,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/120,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache storage access,121,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/121,sushimiso,2021/09,bug;invalid;question
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Useless initialization to default value,122,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/122,sushimiso,2021/09,bug;G (Gas Optimization);sponsor confirmed
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Dead code,123,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/123,sushimiso,2021/09,bug;G (Gas Optimization);sponsor confirmed
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,allDepositIds is pretty much useless,125,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/125,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Pack structs tightly,126,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/126,sushimiso,2021/09,bug;G (Gas Optimization);sponsor acknowledged
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,_startTime is always < 10000000000 when _endTime < 10000000000 (_endTime > _startTime),127,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/127,sushimiso,2021/09,bug;G (Gas Optimization);sponsor confirmed
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,_addCommitment should check that address is not empty,128,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/128,sushimiso,2021/09,bug;0 (Non-critical);sponsor acknowledged;disagree with severity
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Emit events when setting the initial values,129,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/129,sushimiso,2021/09,bug;duplicate;0 (Non-critical)
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Style issues,130,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/130,sushimiso,2021/09,bug;0 (Non-critical);sponsor confirmed
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,lockTokens should validate withdrawer,92,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/92,sushimiso,2021/09,bug;1 (Low Risk);sponsor confirmed
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,EnumerableSet does not guarantee an order,95,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/95,sushimiso,2021/09,bug;invalid;sponsor disputed
28,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,getTokenTemplate should check boundaries,98,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/98,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Consider using a solidity version >= 0.8.0,138,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/138,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Use constructors instead of init functions,139,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/139,sushimiso,2021/09,bug;invalid;sponsor disputed
28,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Using .transfer to send eth is bad practice.,140,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/140,sushimiso,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
28,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Add input validation on some methods,141,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/141,sushimiso,2021/09,bug;0 (Non-critical);sponsor acknowledged
28,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Certain view functions should be used only by UI and not by the code,142,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/142,sushimiso,2021/09,bug;1 (Low Risk);disagree with severity
28,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Use a struct for raw data.,143,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/143,sushimiso,2021/09,bug;0 (Non-critical);sponsor disputed
28,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,PostAuctionLauncher can be manipulated by a caller other than the owner,145,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/145,sushimiso,2021/09,bug;duplicate;3 (High Risk)
28,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Frontrunning on the low level mint() call is possible in .finalize(),146,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/146,sushimiso,2021/09,bug;invalid
28,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Boring Batchable Delegate Call exploit?,147,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/147,sushimiso,2021/09,bug;invalid;sponsor disputed
28,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`PostAuctionLauncher.sol#finalize()` Adding liquidity to an existing pool may allows the attacker to steal most of the tokens,14,https://github.com/code-423n4/2021-09-sushimiso-findings/issues/14,sushimiso,2021/09,bug;3 (High Risk);sponsor confirmed;resolved
35,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,`addIncentive` and `reclaimIncentive` can be external,75,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/75,sushitrident 2,2021/09,bug;G (Gas Optimization);sponsor confirmed
35,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,`addIncentive` may need more inputs checked,76,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/76,sushitrident 2,2021/09,bug;duplicate;1 (Low Risk);sponsor acknowledged
35,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,`subscribe` can be called by anyone,77,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/77,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor disputed
35,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,Wrong indexes: positionId vs incentiveId,78,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/78,sushitrident 2,2021/09,bug;duplicate;3 (High Risk);sponsor disputed
35,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,`incentiveId <= incentiveCount[pool]` is bad and can be removed,79,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/79,sushitrident 2,2021/09,bug;duplicate;0 (Non-critical);sponsor confirmed
35,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,Wrong reward calculation,80,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/80,sushitrident 2,2021/09,bug;duplicate;2 (Med Risk);sponsor disputed
35,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,Wrong reserve decrease in `burn`,81,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/81,sushitrident 2,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,range fee growth underflow,25,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/25,sushitrident 2,2021/09,bug;3 (High Risk);sponsor confirmed
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,`rangeSecondsInside` underflow,26,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/26,sushitrident 2,2021/09,bug;invalid;sponsor disputed
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,burn do not burn reserve ,27,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/27,sushitrident 2,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1, No sanity check of `_price` in the constructor,28,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/28,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor disputed
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Incorrect usage of typecasting in `burn` lets an attacker corrupt the pool state,82,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/82,sushitrident 2,2021/09,bug;duplicate;invalid
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Incorrect usage of typecasting in `_getAmountsForLiquidity` lets an attacker steal funds from the pool,83,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/83,sushitrident 2,2021/09,bug;3 (High Risk);sponsor confirmed
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Overflow in the `mint` function of `ConcentratedLiquidityPool` causes LPs' funds to be stolen,84,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/84,sushitrident 2,2021/09,bug;3 (High Risk);sponsor disputed
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Unclaimed rewards are not deducted when reclaiming an incentive,85,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/85,sushitrident 2,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Wrong usage of `positionId` in `ConcentratedLiquidityPoolManager`,86,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/86,sushitrident 2,2021/09,bug;duplicate;3 (High Risk);sponsor disputed
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Integer underflow error in `claimReward` of `ConcentratedLiquidityPoolManager`,87,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/87,sushitrident 2,2021/09,bug;duplicate;2 (Med Risk);sponsor disputed
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Users cannot receive rewards from `ConcentratedLiquidityPoolManager` if their liquidity is too large,88,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/88,sushitrident 2,2021/09,bug;2 (Med Risk);sponsor acknowledged
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Using unlocked/floating pragmas,89,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/89,sushitrident 2,2021/09,bug;duplicate;1 (Low Risk);sponsor disputed
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Timestamp underflow error in `swap` function of `ConcentratedLiquidityPool`,90,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/90,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor acknowledged
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Incorrect comparison in the `_updatePosition` of `ConcentratedLiquidityPool`,91,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/91,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor acknowledged
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Incorrect comparison in the `subscribe` of `ConcentratedLiquidityPoolManager`,92,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/92,sushitrident 2,2021/09,bug;duplicate;0 (Non-critical);disagree with severity
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Sanity check on the lower and upper ticks,93,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/93,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor confirmed
35,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Incorrect usage of typecasting in `burn` lets an attacker corrupt the pool state,94,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/94,sushitrident 2,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`DyDxMath.getLiquidityForAmounts` underflows,30,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/30,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor confirmed
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`Ticks.cross` wrong comment?,31,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/31,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor acknowledged
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`ConcentratedLiquidityPool.Sync` event never used,32,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/32,sushitrident 2,2021/09,bug;0 (Non-critical);sponsor disputed
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`ConcentratedLiquidityPool`s can be created with the same tokens,33,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/33,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor confirmed
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Wrong inequality when adding/removing liquidity in current price range,34,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/34,sushitrident 2,2021/09,bug;3 (High Risk);sponsor confirmed
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Fragmented liquidity because different pools for different price and tickSpacing,35,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/35,sushitrident 2,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`ConcentratedLiquidityPoolHelper.getTickState` reverts,36,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/36,sushitrident 2,2021/09,bug;duplicate;2 (Med Risk);sponsor acknowledged;disagree with severity
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`ConcentratedLiquidityPoolManager`'s incentives can be stolen,37,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/37,sushitrident 2,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`ConcentratedLiquidityPoolManager` uses wrong index for `incentive`,39,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/39,sushitrident 2,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Wrong inequality when trying to subscribe to an incentive,40,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/40,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor disputed
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Cannot claim reward,41,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/41,sushitrident 2,2021/09,bug;duplicate;2 (Med Risk);sponsor confirmed
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Incentive should check that it hasn't started yet,42,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/42,sushitrident 2,2021/09,bug;2 (Med Risk);sponsor confirmed
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`TridentNFT` ignores `from`,43,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/43,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor acknowledged
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`TridentNFT.permit` should always check `recoveredAddress != 0`,44,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/44,sushitrident 2,2021/09,bug;2 (Med Risk);sponsor confirmed
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`TridentNFT.permitAll` prviliges discrepancy for operator,45,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/45,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor confirmed
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`TridentNFT._mint` can mint to zero address,46,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/46,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor acknowledged
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`TridentNFT.safeTransferFrom` now EIP-721 compliant,47,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/47,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor acknowledged
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`TridentNFT` signature malleability,48,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/48,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor acknowledged
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `ConcentratedLiquidityPoolManager.addIncentive` ,49,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/49,sushitrident 2,2021/09,bug;G (Gas Optimization);sponsor confirmed
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Unsafe cast in ConcentratedLiquidityPool burn leads to attack,50,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/50,sushitrident 2,2021/09,bug;3 (High Risk);sponsor confirmed
35,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Burning does not update reserves,51,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/51,sushitrident 2,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
35,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Understanding the fee growth mechanism (why nearestTick is unsuitable),1,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/1,sushitrident 2,2021/09,bug;3 (High Risk);sponsor acknowledged
35,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,ConcentratedLiquidityPool: initialPrice should be checked to be within allowable range,11,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/11,sushitrident 2,2021/09,bug;3 (High Risk);sponsor confirmed
35,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,ConcentratedLiquidityPool: MAX_TICK_LIQUIDITY is checked incorrectly,12,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/12,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor acknowledged;disagree with severity
35,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,ConcentratedLiquidityPool: rangeFeeGrowth and secondsPerLiquidity math needs to be unchecked,13,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/13,sushitrident 2,2021/09,bug;3 (High Risk);sponsor confirmed
35,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,ConcentratedLiquidityPool: rangeSecondsInside() does not account for active liquidity positions,14,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/14,sushitrident 2,2021/09,bug;invalid;sponsor disputed
35,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,ConcentratedLiquidityPool: secondsPerLiquidity should be modified whenever pool liquidity changes,15,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/15,sushitrident 2,2021/09,bug;3 (High Risk);sponsor disputed
35,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,ConcentratedLiquidityPool: incorrect feeGrowthGlobal accounting when crossing ticks,16,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/16,sushitrident 2,2021/09,bug;3 (High Risk);sponsor confirmed
35,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,ConcentratedLiquidityPoolHelper: getTickState() might run out of gas,17,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/17,sushitrident 2,2021/09,bug;duplicate;2 (Med Risk);sponsor acknowledged
35,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,ConcentratedLiquidityPoolManager: incentive is incorrectly accessed,18,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/18,sushitrident 2,2021/09,bug;duplicate;3 (High Risk);sponsor disputed
35,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,ConcentratedLiquidityPoolManager: incorrect calculation of secondsUnclaimed,19,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/19,sushitrident 2,2021/09,bug;duplicate;2 (Med Risk);sponsor disputed
35,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,ConcentratedLiquidityPoolManager: reclaimIncentive() does not decrement rewardsUnclaimed,20,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/20,sushitrident 2,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
35,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Ticks: getMaxLiquidity() formula should be explained,21,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/21,sushitrident 2,2021/09,bug;0 (Non-critical);sponsor acknowledged
35,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Spelling Errors,22,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/22,sushitrident 2,2021/09,bug;0 (Non-critical);sponsor confirmed
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Replace hex numbers with .selector,58,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/58,sushitrident 2,2021/09,bug;0 (Non-critical);sponsor acknowledged
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Prevent transfers to an empty address,59,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/59,sushitrident 2,2021/09,bug;invalid;sponsor disputed
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,_burn should decrement totalSupply,60,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/60,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor acknowledged
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,functions permit and permitAll can be tricked by an invalid signature,61,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/61,sushitrident 2,2021/09,bug;duplicate;2 (Med Risk);sponsor confirmed;disagree with severity
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Inclusive conditions,62,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/62,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor disputed
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,uint32 for timestamps,63,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/63,sushitrident 2,2021/09,bug;0 (Non-critical);sponsor acknowledged
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,Can reclaim the same incentive multiple times,64,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/64,sushitrident 2,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Handle of deflationary tokens,65,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/65,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor acknowledged
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Wrong index when accessing incentives,66,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/66,sushitrident 2,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Manipulation of secondsClaimed,67,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/67,sushitrident 2,2021/09,bug;duplicate;2 (Med Risk);sponsor disputed
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Boundaries for timestamp values,68,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/68,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor acknowledged
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Anyone can subscribe on behalf of other users,69,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/69,sushitrident 2,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Register protocol,70,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/70,sushitrident 2,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Wrong subtraction from reserve in burn,71,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/71,sushitrident 2,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused import,72,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/72,sushitrident 2,2021/09,bug;G (Gas Optimization);sponsor confirmed
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Useless state variable wETH,73,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/73,sushitrident 2,2021/09,bug;G (Gas Optimization);sponsor confirmed
35,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Style issues,74,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/74,sushitrident 2,2021/09,bug;0 (Non-critical);sponsor confirmed
35,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Incentives for different pools should differ by a large factor,10,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/10,sushitrident 2,2021/09,bug;2 (Med Risk);sponsor disputed
35,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Sync event is unused (+no sync function),2,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/2,sushitrident 2,2021/09,bug;duplicate;0 (Non-critical);sponsor disputed
35,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Unlocked Pragma Statements,3,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/3,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor disputed
35,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Input Validation on Incentive Owner,4,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/4,sushitrident 2,2021/09,bug;duplicate;1 (Low Risk);sponsor acknowledged
35,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Possible underflow if other checks aren't used,5,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/5,sushitrident 2,2021/09,bug;0 (Non-critical);sponsor acknowledged;disagree with severity
35,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Implement or remove functions,6,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/6,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor disputed
35,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Consider using solidity version 0.8.8,7,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/7,sushitrident 2,2021/09,bug;1 (Low Risk);sponsor acknowledged
35,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Possible attacks on Seconds * Liquidity calculation,8,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/8,sushitrident 2,2021/09,bug;3 (High Risk);sponsor acknowledged
35,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Staking calculations and reward incentives are incorrect,9,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/9,sushitrident 2,2021/09,bug;invalid;sponsor disputed
35,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,ConcentratedLiquidityPoolManager.sol#claimReward() and reclaimIncentive() will fail when incentive.token is token0 or token1,23,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/23,sushitrident 2,2021/09,bug;2 (Med Risk);sponsor confirmed
35,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`ConcentratedLiquidityPool.burn()` Wrong implementation,24,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/24,sushitrident 2,2021/09,bug;3 (High Risk);sponsor confirmed
35,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`ConcentratedLiquidityPoolManager.sol#reclaimIncentive()` Unsafe implementation allows malicious users to steal yield,29,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/29,sushitrident 2,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
35,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,## `ConcentratedLiquidityPoolManager.sol` Wrong implementation of `claimReward()` and `getReward()`,38,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/38,sushitrident 2,2021/09,bug;duplicate;2 (Med Risk);sponsor confirmed
35,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`ConcentratedLiquidityPosition.sol#burn()` Wrong implementation allows attackers to steal yield,52,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/52,sushitrident 2,2021/09,bug;3 (High Risk);sponsor confirmed
35,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`ConcentratedLiquidityPosition.sol#collect()` Users may get double the amount of yield when they call `collect()` before `burn()`,53,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/53,sushitrident 2,2021/09,bug;3 (High Risk);sponsor confirmed
35,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`ConcentratedLiquidityPoolManager.sol#reclaimIncentive` Misleading error message,54,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/54,sushitrident 2,2021/09,bug;0 (Non-critical);sponsor confirmed
35,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,55,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/55,sushitrident 2,2021/09,bug;G (Gas Optimization);sponsor acknowledged
35,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache storage variables in the stack can save gas,56,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/56,sushitrident 2,2021/09,bug;G (Gas Optimization);sponsor acknowledged
35,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Struct could be optimized for saving gas,57,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/57,sushitrident 2,2021/09,bug;G (Gas Optimization);sponsor confirmed
29,0xRajeev,rajeev.eth,1,Unused constants could indicate missing logic or redundant code,43,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/43,sushitrident,2021/09,bug;sponsor confirmed;0 (Non-critical)
29,0xRajeev,rajeev.eth,1,Missing enforcement of router-only access to pool mint/burn/swap functions,44,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/44,sushitrident,2021/09,bug;invalid;sponsor disputed
29,0xRajeev,rajeev.eth,1,Missing invalid token check against pool address,45,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/45,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,0xRajeev,rajeev.eth,1,barFee handled incorrectly in flashSwap (or swap),46,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/46,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,0xRajeev,rajeev.eth,1,Strict bound in reserve check of Hybrid Pool,47,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/47,sushitrident,2021/09,bug;duplicate;1 (Low Risk)
29,0xRajeev,rajeev.eth,1,Similarly initialized weight thresholds may cause unexpected deployment failures,48,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/48,sushitrident,2021/09,bug;sponsor disputed;0 (Non-critical)
29,0xRajeev,rajeev.eth,1,Unlocked Solidity compiler pragma is risky,49,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/49,sushitrident,2021/09,bug;1 (Low Risk);sponsor disputed
29,0xRajeev,rajeev.eth,1,Static chainID could allow replay attacks on chain splits,50,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/50,sushitrident,2021/09,bug;duplicate;1 (Low Risk)
29,0xRajeev,rajeev.eth,1,Use of ecrecover is susceptible to signature malleability,51,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/51,sushitrident,2021/09,bug;G (Gas Optimization);sponsor disputed
29,0xRajeev,rajeev.eth,1,Missing zero-address checks,52,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/52,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,0xRajeev,rajeev.eth,1,Unnecessarily payable functions may lead to locked Ether,53,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/53,sushitrident,2021/09,bug;invalid;sponsor disputed
29,0xRajeev,rajeev.eth,1,User’s Ether may get left behind in the Router,54,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/54,sushitrident,2021/09,bug;duplicate;2 (Med Risk)
29,0xRajeev,rajeev.eth,1,Missing timelock for critical contract setters of privileged roles,55,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/55,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,0xRajeev,rajeev.eth,1,Unconditional setting of boolean/address values is risky,56,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/56,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,0xRajeev,rajeev.eth,1,Timelock between new owner transfer+claim will reduce risk,57,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/57,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,0xRajeev,rajeev.eth,1,Allowing direct single-step ownership transfer even as an option is risky,58,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/58,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,0xRajeev,rajeev.eth,1,Missing contract existence check may cause silent failures of token transfers,59,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/59,sushitrident,2021/09,bug;1 (Low Risk);sponsor disputed
29,0xRajeev,rajeev.eth,G,Replace multiple calls with a single new function call,60,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/60,sushitrident,2021/09,bug;G (Gas Optimization);sponsor acknowledged
29,0xRajeev,rajeev.eth,G,Unused code can be removed to save gas,61,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/61,sushitrident,2021/09,bug;G (Gas Optimization);sponsor acknowledged
29,0xRajeev,rajeev.eth,G,Use of unchecked can save gas where computation is known to be overflow/underflow safe,62,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/62,sushitrident,2021/09,bug;G (Gas Optimization);sponsor acknowledged
29,0xRajeev,rajeev.eth,G,Returning early under certain conditions can save gas,63,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/63,sushitrident,2021/09,bug;duplicate;G (Gas Optimization)
29,0xRajeev,rajeev.eth,G,Avoiding initialization of loop index can save a little gas,64,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/64,sushitrident,2021/09,bug;G (Gas Optimization);sponsor acknowledged
29,0xRajeev,rajeev.eth,G,Caching in local variables can save gas ,65,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/65,sushitrident,2021/09,bug;G (Gas Optimization);sponsor acknowledged
29,0xRajeev,rajeev.eth,G,Avoiding function logic duplication only for msg.sender will save gas,66,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/66,sushitrident,2021/09,bug;invalid;sponsor disputed
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,ChainId shouldn't be considered constant,151,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/151,sushitrident,2021/09,bug;duplicate;1 (Low Risk)
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Token Decimals can't be higher than 18,154,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/154,sushitrident,2021/09,bug;invalid;sponsor disputed
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Approximations may finish with inaccurate values,155,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/155,sushitrident,2021/09,bug;duplicate;2 (Med Risk)
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,Follow Curve's convention: `_getYD` and `_getY`,156,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/156,sushitrident,2021/09,bug;sponsor confirmed;0 (Non-critical)
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,2,IndexPool's `flashswap` trasfer before callback,157,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/157,sushitrident,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,`_pow` is mathematically wrong,159,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/159,sushitrident,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,2,`_powApprox`: unbounded loop and meaning,162,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/162,sushitrident,2021/09,bug;1 (Low Risk);sponsor disputed
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,HybridPool's wrong amount to balance conversion,164,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/164,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,HybridPool's flashSwap gives the total fee to `barFeeTo`,168,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/168,sushitrident,2021/09,bug;duplicate;2 (Med Risk)
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,HybridPool's flashSwap gives the total fee to `barFeeTo`,171,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/171,sushitrident,2021/09,bug;duplicate;2 (Med Risk);disagree with severity
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,Wrong balance to reserve casting in `_updateReserves()`,172,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/172,sushitrident,2021/09,bug;duplicate;3 (High Risk)
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,`_computeLiquidityFromAdjustedBalances` order of operations can be improved,173,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/173,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,`_getY` and `_getYD` math operations can be reordered,174,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/174,sushitrident,2021/09,bug;duplicate;1 (Low Risk);sponsor acknowledged
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,blockTimestampLast in memory to save gas,176,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/176,sushitrident,2021/09,bug;duplicate;G (Gas Optimization)
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,2,Inconsistent tokens sent to `barFeeTo`,177,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/177,sushitrident,2021/09,bug;sponsor disputed;0 (Non-critical)
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,2,No bar fees for IndexPools?,181,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/181,sushitrident,2021/09,bug;2 (Med Risk);sponsor confirmed
29,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,2,Accounting for `_nonOptimalMintFee`,196,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/196,sushitrident,2021/09,bug;invalid;sponsor disputed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Overflow in the `mint` function of `IndexPool` causes LPs' funds to be stolen,163,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/163,sushitrident,2021/09,bug;3 (High Risk);sponsor acknowledged
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Incorrect usage of `_pow` in `_computeSingleOutGivenPoolIn` of `IndexPool`,165,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/165,sushitrident,2021/09,bug;3 (High Risk);sponsor confirmed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Incorrect multiplication in `_computeSingleOutGivenPoolIn` of `IndexPool`,166,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/166,sushitrident,2021/09,bug;3 (High Risk);sponsor confirmed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Funds in the pool could be stolen by exploiting `flashSwap` in `HybridPool`,167,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/167,sushitrident,2021/09,bug;3 (High Risk);sponsor confirmed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Incorrect implementation of `difference` in `MathUtils`,169,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/169,sushitrident,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Revert the transaction if convergence does not happen in `HybridPool`,178,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/178,sushitrident,2021/09,bug;duplicate;2 (Med Risk);sponsor confirmed;disagree with severity
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Users are susceptible to back-running when depositing ETH to `TridenRouter`,179,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/179,sushitrident,2021/09,bug;2 (Med Risk);sponsor confirmed;disagree with severity
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Wrong initialization of `blockTimestampLast` in `ConstantProductPool`,180,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/180,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,TWAP in `ConstantProductPool` is disabled if timestamp is set to `2 ** 32`,182,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/182,sushitrident,2021/09,bug;invalid;sponsor disputed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Bypassing swap restrictions in the `batch` function of `TridentHelper`,183,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/183,sushitrident,2021/09,bug;invalid;sponsor disputed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Division by zero in `_computeLiquidityFromAdjustedBalances` of `HybridPool`,185,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/185,sushitrident,2021/09,bug;1 (Low Risk);sponsor confirmed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Lack of sanity checks on the tokens in `HybridPool` and `IndexPool`,186,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/186,sushitrident,2021/09,bug;invalid;sponsor disputed;disagree with severity
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,`HybridPool` does not support tokens with decimals larger than 18,187,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/187,sushitrident,2021/09,bug;duplicate;invalid;sponsor disputed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Division and division in `_getY` of `HybridPool`,188,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/188,sushitrident,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Unnecessary condition on `_processSwap` of `HybridPool`,189,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/189,sushitrident,2021/09,bug;sponsor disputed;0 (Non-critical)
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Incorrect comparison in the `_updateReserves` function of `HybridPool`,190,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/190,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged;disagree with severity
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Callback functions in `TridentRouter` are not declared `payable`,191,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/191,sushitrident,2021/09,bug;invalid;sponsor disputed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Function `addLiquidityLazy` does not work as the document/comments.,192,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/192,sushitrident,2021/09,bug;duplicate;invalid;sponsor disputed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Lack of a whitelist check on the given pool in `TridentRouter`,193,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/193,sushitrident,2021/09,bug;invalid;sponsor disputed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Using unlocked/floating pragmas,194,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/194,sushitrident,2021/09,bug;duplicate;1 (Low Risk);sponsor disputed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,The `DOMAIN_SEPARATOR` is not recalculated after a hard fork happens,197,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/197,sushitrident,2021/09,bug;duplicate;1 (Low Risk)
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Flash swap call back prior to transferring tokens in indexPool,26,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/26,sushitrident,2021/09,bug;duplicate;3 (High Risk)
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Index Pool always swap to Zero,27,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/27,sushitrident,2021/09,bug;duplicate;3 (High Risk)
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,IndexPool pow overflows when `weightRatio` > 10.,28,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/28,sushitrident,2021/09,bug;3 (High Risk);sponsor confirmed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,IndexPool's INIT_POOL_SUPPLY is not fair.,29,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/29,sushitrident,2021/09,bug;duplicate;3 (High Risk)
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Adding imbalanced liquidity earns extra rewards,30,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/30,sushitrident,2021/09,bug;duplicate;2 (Med Risk)
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,hybrid pool uses wrong `non_optimal_mint_fee`,31,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/31,sushitrident,2021/09,bug;3 (High Risk);sponsor confirmed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,# Hybrid Pool underflow when a < 100,32,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/32,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged;disagree with severity
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Router would fail when adding liquidity to index Pool,68,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/68,sushitrident,2021/09,bug;2 (Med Risk);sponsor confirmed
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,First lp provider in Index Pool is vulnerable to MEV,69,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/69,sushitrident,2021/09,bug;duplicate;3 (High Risk)
29,broccoli,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Hybrid pool does not support token with decimal > 18,70,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/70,sushitrident,2021/09,bug;invalid;sponsor disputed
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`HybridPool`'s `flashSwap` does not always call callback,100,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/100,sushitrident,2021/09,bug;1 (Low Risk);sponsor confirmed
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,"`HybridPool`'s reserve is converted to ""amount"" twice",101,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/101,sushitrident,2021/09,bug;3 (High Risk);sponsor confirmed
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `HybridPool` unnecessary `balance` computations,102,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/102,sushitrident,2021/09,bug;G (Gas Optimization);sponsor confirmed
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `HybridPool._computeLiquidityFromAdjustedBalances` should return early,103,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/103,sushitrident,2021/09,bug;G (Gas Optimization);sponsor confirmed
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Unsafe cast in IndexPool mint leads to attack,77,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/77,sushitrident,2021/09,bug;3 (High Risk)
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,IndexPool initial LP supply computation is wrong,78,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/78,sushitrident,2021/09,bug;3 (High Risk);sponsor confirmed
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`IndexPool._pow` wrong loop and does not normalize values,79,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/79,sushitrident,2021/09,bug;duplicate;3 (High Risk)
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`IndexPool`'s `flashSwap` does not transfer tokens before the callback,80,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/80,sushitrident,2021/09,bug;duplicate;3 (High Risk)
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`IndexPool` can swap token for itself,81,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/81,sushitrident,2021/09,bug;invalid;sponsor disputed
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`IndexPool` should check that tokens are supported,82,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/82,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`IndexPool` performs several unsafe type casts,83,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/83,sushitrident,2021/09,bug;duplicate;3 (High Risk)
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`IndexPoolFactory` does not sort tokens,84,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/84,sushitrident,2021/09,bug;invalid;sponsor disputed
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Pool factories allow deploying with exact same parameters several times,85,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/85,sushitrident,2021/09,bug;invalid;sponsor disputed
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,TridentERC20 does not emit Approval event in `transferFrom`,86,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/86,sushitrident,2021/09,bug;sponsor acknowledged;0 (Non-critical)
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Router's `complexPath` percentagePaths don't work as expected,87,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/87,sushitrident,2021/09,bug;2 (Med Risk);sponsor disputed
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unclear what `addLiquidityLazy` is used for,88,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/88,sushitrident,2021/09,bug;invalid;sponsor disputed
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`_depositToBentoBox` sometimes uses both ETH and WETH,89,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/89,sushitrident,2021/09,bug;2 (Med Risk);sponsor acknowledged
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`withdrawFromWETH` always reverts ,90,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/90,sushitrident,2021/09,bug;2 (Med Risk);sponsor confirmed
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Several low-level calls don't check the success return value,91,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/91,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Pool does not allow flashloans,92,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/92,sushitrident,2021/09,bug;invalid;sponsor disputed
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`ConstantProductPool.getAmountOut` does not verify token,93,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/93,sushitrident,2021/09,bug;sponsor confirmed;0 (Non-critical)
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`ConstantProductPool` bar fee computation seems wrong,94,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/94,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`ConstantProductPool` mint liquidity computation should include fees,95,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/95,sushitrident,2021/09,bug;1 (Low Risk);sponsor confirmed
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`ConstantProductPool.burnSingle` swap amount computations should use balance,96,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/96,sushitrident,2021/09,bug;3 (High Risk);sponsor confirmed
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`HybridPool` missing positive token amount checks for initial mint,97,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/97,sushitrident,2021/09,bug;sponsor acknowledged;0 (Non-critical)
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`HybridPool` does not work with tokens with more than 18 decimals,98,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/98,sushitrident,2021/09,bug;duplicate;invalid;sponsor disputed
29,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`HybridPool`'s `flashSwap` sends entire fee to `barFeeTo`,99,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/99,sushitrident,2021/09,bug;2 (Med Risk);sponsor confirmed
29,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Incorrect Pool state on specific token array,17,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/17,sushitrident,2021/09,bug;invalid;sponsor disputed
29,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas optimization on the public functions,19,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/19,sushitrident,2021/09,bug;invalid;sponsor disputed
29,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Lack of white-list check on the swap functions,21,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/21,sushitrident,2021/09,bug;duplicate;invalid;sponsor disputed
29,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Lack Of  Access Control On the Refund Progress,22,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/22,sushitrident,2021/09,bug;invalid;sponsor disputed
29,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing validation of recipient argument could indefinitely lock owner role,23,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/23,sushitrident,2021/09,bug;1 (Low Risk);sponsor disputed
29,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Lack of setter function for the master deployer,24,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/24,sushitrident,2021/09,bug;invalid;sponsor disputed
29,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas optimization on the public function,25,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/25,sushitrident,2021/09,bug;duplicate;invalid;sponsor disputed
29,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,lack of checks in `TridentERC20.approve`,130,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/130,sushitrident,2021/09,bug;invalid;sponsor disputed
29,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,Lack of checks for address and amount in `TridentERC20._mint`,131,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/131,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,Lack of checks for address and amount in `TridentERC20._mint`,132,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/132,sushitrident,2021/09,bug;invalid;sponsor acknowledged
29,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,Lack of checks for address and amount in `TridentERC20._mint`,134,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/134,sushitrident,2021/09,bug;invalid;sponsor disputed
29,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,Lack of checks for address and amount in `TridentERC20._mint`,135,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/135,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,lack of validation for address in MasterDeployer.addToWhitelist,136,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/136,sushitrident,2021/09,bug;duplicate;invalid;sponsor disputed
29,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,Lack of checks for address and amount in `MasterDeployer.addToWhitelist `,137,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/137,sushitrident,2021/09,bug;duplicate;invalid;sponsor disputed
29,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,Lack of address validation in `MasterDeployer.addToWhitelist`,138,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/138,sushitrident,2021/09,bug;sponsor acknowledged;0 (Non-critical)
29,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,Lack of address validation in `MasterDeployer.setMigrator`,140,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/140,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,gpersoon,gpersoon.eth,G,Safe gas on _powApprox,12,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/12,sushitrident,2021/09,bug;G (Gas Optimization);sponsor acknowledged
29,gpersoon,gpersoon.eth,1,Blacklist more functions in batch()?,13,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/13,sushitrident,2021/09,bug;invalid;sponsor disputed
29,gpersoon,gpersoon.eth,1,Add isWhiteListed(..)?,14,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/14,sushitrident,2021/09,bug;invalid;sponsor disputed
29,gpersoon,gpersoon.eth,1,Reset cachedPool ?,15,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/15,sushitrident,2021/09,bug;1 (Low Risk);sponsor disputed
29,gpersoon,gpersoon.eth,G,Use parameter _blockTimestampLast in _update() ,16,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/16,sushitrident,2021/09,bug;G (Gas Optimization);sponsor confirmed
29,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,G,Consider unlocking pool only upon initial mint,33,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/33,sushitrident,2021/09,bug;G (Gas Optimization);sponsor acknowledged
29,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,ConstantProductPool & HybridPool: Adding and removing unbalanced liquidity yields slightly more tokens than swap,34,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/34,sushitrident,2021/09,bug;2 (Med Risk);sponsor confirmed
29,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,0,ConstantProductPool: Move minting of MIN_LIQUIDITY after checks,35,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/35,sushitrident,2021/09,bug;sponsor confirmed;0 (Non-critical)
29,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,G,ConstantProductPool: Redundant initialized pool checks,36,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/36,sushitrident,2021/09,bug;invalid;sponsor disputed
29,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,G,ConstantProductPool: Unnecessary mod before casting to uint32,37,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/37,sushitrident,2021/09,bug;G (Gas Optimization);sponsor confirmed
29,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,G,ConstantProductPool: Unused Constants,38,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/38,sushitrident,2021/09,bug;duplicate;0 (Non-critical)
29,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,HybridPool: SwapCallback should be done regardless of data.length,39,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/39,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,3,IndexPool:  Poor conversion from Balancer V1's corresponding functions,40,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/40,sushitrident,2021/09,bug;3 (High Risk);sponsor acknowledged
29,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,G,IndexPool: Redundant MAX_WEIGHT,41,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/41,sushitrident,2021/09,bug;G (Gas Optimization);sponsor acknowledged
29,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,G,TridentOwnable: pendingOwner should be set to address(1) if direct owner transfer is used,42,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/42,sushitrident,2021/09,bug;G (Gas Optimization);sponsor acknowledged
29,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,TransferOwnerClaim event not emitted consistently,1,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/1,sushitrident,2021/09,bug;invalid;sponsor disputed
29,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,HybridPool.sol lacks zero check for maserDeployer,10,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/10,sushitrident,2021/09,bug;1 (Low Risk);sponsor disputed
29,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,3,absolute difference is not calculated properly when a > b in MathUtils,139,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/139,sushitrident,2021/09,bug;3 (High Risk);sponsor confirmed
29,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,Events not emitted while changing state variables in constructor,2,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/2,sushitrident,2021/09,bug;sponsor acknowledged;0 (Non-critical)
29,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,outdated pragma version in IPool,3,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/3,sushitrident,2021/09,bug;invalid;sponsor disputed
29,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,"unchecked use of optional function ""decimals"" of erc20 standards",4,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/4,sushitrident,2021/09,bug;1 (Low Risk);sponsor disputed
29,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,Add check for zero swap fees in HybridPool,5,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/5,sushitrident,2021/09,bug;invalid;sponsor disputed
29,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,make updateBarFee external,6,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/6,sushitrident,2021/09,bug;invalid;sponsor disputed
29,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,TridentHelper constructor lacks zero check for WETH,8,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/8,sushitrident,2021/09,bug;invalid;sponsor disputed
29,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,ConstantProductPool lacks zero check for maserDeployer,9,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/9,sushitrident,2021/09,bug;1 (Low Risk);sponsor disputed
29,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Caching the length in for loops,112,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/112,sushitrident,2021/09,bug;G (Gas Optimization);sponsor confirmed
29,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Consider using custom errors instead of revert strings,113,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/113,sushitrident,2021/09,bug;G (Gas Optimization);sponsor acknowledged
29,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Consider changing the `_deployData` architecture,114,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/114,sushitrident,2021/09,bug;G (Gas Optimization);sponsor acknowledged
29,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Caching the storage read to `tokens.length`,115,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/115,sushitrident,2021/09,bug;G (Gas Optimization);sponsor confirmed
29,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Caching a storage load in TridentERC20,116,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/116,sushitrident,2021/09,bug;G (Gas Optimization);sponsor confirmed
29,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Unused state variable `barFee` and `_barFeeTo` in IndexPool,117,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/117,sushitrident,2021/09,bug;G (Gas Optimization);sponsor acknowledged
29,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G, Consider putting some parts of `_div` in unchecked,118,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/118,sushitrident,2021/09,bug;G (Gas Optimization);sponsor confirmed
29,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Use `calldata` instead of `memory` for function parameters,119,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/119,sushitrident,2021/09,bug;G (Gas Optimization);sponsor confirmed
29,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,0,Bad use of pragma in the code,120,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/120,sushitrident,2021/09,bug;duplicate;1 (Low Risk);sponsor disputed
29,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,0,Consider avoiding low level calls to MasterDeployer,121,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/121,sushitrident,2021/09,bug;sponsor confirmed;0 (Non-critical)
29,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,0,Functions that can be made external,122,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/122,sushitrident,2021/09,bug;sponsor acknowledged;0 (Non-critical)
29,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,0, Unnecessary `payable` modifier in `refundETH` function,123,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/123,sushitrident,2021/09,bug;duplicate;invalid;0 (Non-critical)
29,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,1,The functions `refundETH` and `unwrapWETH` is generalized-front-runnable,124,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/124,sushitrident,2021/09,bug;1 (Low Risk);sponsor disputed
29,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,1,Several functions are payable when it should not be,125,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/125,sushitrident,2021/09,bug;duplicate;invalid;sponsor disputed
29,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,lack of input validation in Transfer() and TransferFrom(),153,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/153,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged
29,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,no check of sender balance in transferFrom(),158,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/158,sushitrident,2021/09,bug;invalid;sponsor disputed
29,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,use of floating pragma,160,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/160,sushitrident,2021/09,bug;duplicate;1 (Low Risk);sponsor disputed
29,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,  Double-spend allowance   ,170,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/170,sushitrident,2021/09,bug;invalid;sponsor disputed
29,nikitastupin,0x84F9079a9A39ae80Cf9DEE65a0E316B1a897684A,2,[TridentERC20.sol] Possible replay attacks on `permit` function in case of a future chain split,18,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/18,sushitrident,2021/09,bug;duplicate;1 (Low Risk);disagree with severity
29,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,MAX_FEE_SQUARE dependency on MAX_FEE,104,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/104,sushitrident,2021/09,bug;sponsor acknowledged;0 (Non-critical)
29,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Emit events when setting the values in constructor,105,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/105,sushitrident,2021/09,bug;sponsor acknowledged;0 (Non-critical)
29,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,IndexPool does not apply barFee,106,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/106,sushitrident,2021/09,bug;duplicate;2 (Med Risk);sponsor confirmed
29,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Inclusive check of type(uint128).max,107,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/107,sushitrident,2021/09,bug;sponsor acknowledged;0 (Non-critical)
29,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,_depositToBentoBox and _depositFromUserToBentoBox are too similar,108,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/108,sushitrident,2021/09,bug;invalid;sponsor disputed
29,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Reading the same storage several times,109,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/109,sushitrident,2021/09,bug;invalid;sponsor disputed
29,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Reduce calculations by extracting variables,110,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/110,sushitrident,2021/09,bug;invalid;sponsor disputed
29,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Do not allow duplicated of tokens in IndexPool,111,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/111,sushitrident,2021/09,bug;invalid;sponsor disputed
29,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Unsafe casts to uint120,126,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/126,sushitrident,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
29,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Style issues,127,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/127,sushitrident,2021/09,bug;sponsor acknowledged;0 (Non-critical)
29,t11s,0x7eD52863829AB99354F3a0503A622e82AcD5F7d3,2,Permit signature replay across forks in TridentERC20,11,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/11,sushitrident,2021/09,bug;duplicate;1 (Low Risk);sponsor confirmed
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Consider using solidity 0.8.8,141,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/141,sushitrident,2021/09,bug;1 (Low Risk)
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Unlocked Pragma Statements,142,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/142,sushitrident,2021/09,bug;duplicate;1 (Low Risk);sponsor disputed
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Consider enforcing the invariant for flashSwap calls,143,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/143,sushitrident,2021/09,bug;invalid;sponsor disputed
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Flashswap would be more usable if assets could be borrowed without swapping.,144,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/144,sushitrident,2021/09,bug;invalid;sponsor disputed
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,uint256 is too much,145,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/145,sushitrident,2021/09,bug;invalid;sponsor disputed
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Mutex Lock gas optimization,146,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/146,sushitrident,2021/09,bug;invalid;sponsor disputed
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Check Solidity > Unchecked + require statement gas wise,147,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/147,sushitrident,2021/09,bug;invalid;sponsor disputed
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Using 10**X for constants isn't gas efficient,148,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/148,sushitrident,2021/09,bug;G (Gas Optimization);sponsor confirmed
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Oracle Initialization,149,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/149,sushitrident,2021/09,bug;duplicate;1 (Low Risk)
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Using interfaces instead of selectors is best practice,150,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/150,sushitrident,2021/09,bug;sponsor confirmed;0 (Non-critical)
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Rounding errors will occur for tokens without decimals,152,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/152,sushitrident,2021/09,bug;2 (Med Risk);sponsor disputed;sponsor acknowledged
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Amplification of Hybrid is never adjusted,161,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/161,sushitrident,2021/09,bug;invalid;sponsor disputed
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,View functions in Hybrid Pool Contract Pool need better documentation,175,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/175,sushitrident,2021/09,bug;sponsor acknowledged;0 (Non-critical)
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Docs disagrees with index pool code,184,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/184,sushitrident,2021/09,bug;1 (Low Risk);sponsor acknowledged;disagree with severity
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Index pools do not use a stableswap invariant - have high price impact,195,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/195,sushitrident,2021/09,bug;invalid;sponsor disputed;disagree with severity
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,"Unnecessary code, Constant Product Pool is just Index Pool with two tokens and even weights.",198,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/198,sushitrident,2021/09,bug;invalid;sponsor disputed
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Race condition on ERC20 approval,199,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/199,sushitrident,2021/09,bug;invalid;sponsor disputed
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Tests do not cover all the methods under audit,200,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/200,sushitrident,2021/09,bug;invalid;sponsor disputed
29,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Gas optimization for x > 0,201,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/201,sushitrident,2021/09,bug;invalid;sponsor disputed
29,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,128,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/128,sushitrident,2021/09,bug;G (Gas Optimization);sponsor confirmed
29,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache storage variable in the stack can save gas,129,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/129,sushitrident,2021/09,bug;G (Gas Optimization);sponsor confirmed
29,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,133,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/133,sushitrident,2021/09,bug;invalid;sponsor disputed
29,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`IndexPool.sol#_pow()` Wrong implementation,67,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/67,sushitrident,2021/09,bug;duplicate;3 (High Risk)
29,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,TridentRouter.addLiquidity() Add liquidity to IndexPool through TridentRouter may casue loss of a small portion of users funds,71,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/71,sushitrident,2021/09,bug;duplicate;invalid
29,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"`IndexPool.mint` The first liquidity provider is forced to supply assets in the same amount, which may cause a significant amount of fund loss",72,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/72,sushitrident,2021/09,bug;duplicate;3 (High Risk)
29,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`HybridPool._updateReserves` Wrong implementation,73,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/73,sushitrident,2021/09,bug;duplicate;3 (High Risk)
29,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`IndexPool.mint()` Unchecked arithmetic can overflow that allows stealing of almost all the funds in the pool,74,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/74,sushitrident,2021/09,bug;duplicate;3 (High Risk)
29,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"IndexPool.INIT_POOL_SUPPLY is too large, which may cause a significant amount of fund loss to the first liquidity provider",75,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/75,sushitrident,2021/09,bug;duplicate;3 (High Risk)
29,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,TridentRouter.isWhiteListed() Misleading name,76,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/76,sushitrident,2021/09,bug;sponsor acknowledged;0 (Non-critical)
39,0xRajeev,rajeev.eth,1,Missing zero-address checks,100,https://github.com/code-423n4/2021-09-swivel-findings/issues/100,swivel,2021/09,bug;1 (Low Risk);sponsor acknowledged
39,0xRajeev,rajeev.eth,2,Missing event & timelock for critical onlyAdmin functions,101,https://github.com/code-423n4/2021-09-swivel-findings/issues/101,swivel,2021/09,bug;2 (Med Risk)
39,0xRajeev,rajeev.eth,1,Missing input validation may cause revert due to underflow,102,https://github.com/code-423n4/2021-09-swivel-findings/issues/102,swivel,2021/09,bug;0 (Non-critical);sponsor disputed
39,0xRajeev,rajeev.eth,2,Missing zero address check for ecrecover will validate invalid signatures,103,https://github.com/code-423n4/2021-09-swivel-findings/issues/103,swivel,2021/09,bug;duplicate;3 (High Risk)
39,0xRajeev,rajeev.eth,1,Compact signatures not being supported could lead to DoS,104,https://github.com/code-423n4/2021-09-swivel-findings/issues/104,swivel,2021/09,bug;1 (Low Risk);sponsor acknowledged;sponsor confirmed
39,0xRajeev,rajeev.eth,1,Missing input validation on array length match,105,https://github.com/code-423n4/2021-09-swivel-findings/issues/105,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,0xRajeev,rajeev.eth,2,Unhandled return value of ERC20 transfer/transferFrom,106,https://github.com/code-423n4/2021-09-swivel-findings/issues/106,swivel,2021/09,bug;duplicate;3 (High Risk)
39,0xRajeev,rajeev.eth,1,Missing input validation & event in emergency blockWithdrawal could be risky,107,https://github.com/code-423n4/2021-09-swivel-findings/issues/107,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,0xRajeev,rajeev.eth,1,"Missing input validation, threshold check, event and timelock in setFee function",108,https://github.com/code-423n4/2021-09-swivel-findings/issues/108,swivel,2021/09,bug;1 (Low Risk);sponsor confirmed
39,0xRajeev,rajeev.eth,G,Change public visibility to external,109,https://github.com/code-423n4/2021-09-swivel-findings/issues/109,swivel,2021/09,bug;duplicate;G (Gas Optimization)
39,0xRajeev,rajeev.eth,G,Caching state variables in local/memory variables avoids SLOADs to save gas,110,https://github.com/code-423n4/2021-09-swivel-findings/issues/110,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,0xRajeev,rajeev.eth,G,Removing redundant require() can save gas,111,https://github.com/code-423n4/2021-09-swivel-findings/issues/111,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,0xRajeev,rajeev.eth,G, Input validation on amount > 0 will save gas,112,https://github.com/code-423n4/2021-09-swivel-findings/issues/112,swivel,2021/09,bug;G (Gas Optimization);sponsor acknowledged
39,0xRajeev,rajeev.eth,G,+= can be replaced by =,113,https://github.com/code-423n4/2021-09-swivel-findings/issues/113,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,0xRajeev,rajeev.eth,G,Converting fenominator to a static array will save storage slots and gas,114,https://github.com/code-423n4/2021-09-swivel-findings/issues/114,swivel,2021/09,bug;duplicate;G (Gas Optimization)
39,0xRajeev,rajeev.eth,G,Avoiding initialization of loop index can save a little gas,115,https://github.com/code-423n4/2021-09-swivel-findings/issues/115,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,0xRajeev,rajeev.eth,G,Bounded array lengths or checking gasleft will save gas from OOGs,116,https://github.com/code-423n4/2021-09-swivel-findings/issues/116,swivel,2021/09,bug;G (Gas Optimization);sponsor acknowledged;sponsor confirmed
39,0xRajeev,rajeev.eth,1,Abstract contracts should really be interfaces,93,https://github.com/code-423n4/2021-09-swivel-findings/issues/93,swivel,2021/09,bug;1 (Low Risk);sponsor confirmed
39,0xRajeev,rajeev.eth,1,Missing guarded launch,94,https://github.com/code-423n4/2021-09-swivel-findings/issues/94,swivel,2021/09,bug;0 (Non-critical);sponsor acknowledged;disagree with severity
39,0xRajeev,rajeev.eth,2,Admin is a single-point of failure without any mitigations,95,https://github.com/code-423n4/2021-09-swivel-findings/issues/95,swivel,2021/09,bug;duplicate;2 (Med Risk);sponsor acknowledged
39,0xRajeev,rajeev.eth,1,Missing event and timelock for setSwivelAddress,96,https://github.com/code-423n4/2021-09-swivel-findings/issues/96,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,0xRajeev,rajeev.eth,2,Previously created markets can be overwritten,97,https://github.com/code-423n4/2021-09-swivel-findings/issues/97,swivel,2021/09,bug;duplicate;2 (Med Risk)
39,0xRajeev,rajeev.eth,1,Static chainID could allow replay attacks on chain splits,98,https://github.com/code-423n4/2021-09-swivel-findings/issues/98,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,0xRajeev,rajeev.eth,1,Use of ecrecover is susceptible to signature malleability,99,https://github.com/code-423n4/2021-09-swivel-findings/issues/99,swivel,2021/09,bug;0 (Non-critical);sponsor confirmed;disagree with severity
39,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,chainId shouldn't be considered constant,154,https://github.com/code-423n4/2021-09-swivel-findings/issues/154,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,Unsafe handling of underlying tokens,155,https://github.com/code-423n4/2021-09-swivel-findings/issues/155,swivel,2021/09,bug;duplicate;3 (High Risk)
39,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,2,fee-on-transfer underlying can cause problems,156,https://github.com/code-423n4/2021-09-swivel-findings/issues/156,swivel,2021/09,bug;2 (Med Risk);sponsor acknowledged;disagree with severity
39,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,balanceOf should be a _view_ function,157,https://github.com/code-423n4/2021-09-swivel-findings/issues/157,swivel,2021/09,bug;duplicate;0 (Non-critical);disagree with severity
39,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,`setFee` input check (and event),158,https://github.com/code-423n4/2021-09-swivel-findings/issues/158,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Creating the same market shouldn't be possible,159,https://github.com/code-423n4/2021-09-swivel-findings/issues/159,swivel,2021/09,bug;duplicate;2 (Med Risk)
39,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,Admin can abuse onlySwivel,160,https://github.com/code-423n4/2021-09-swivel-findings/issues/160,swivel,2021/09,bug;duplicate;2 (Med Risk);disagree with severity
39,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,Better Math in `calculateReturn`,161,https://github.com/code-423n4/2021-09-swivel-findings/issues/161,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,Math's operations order in Swivel's functions,162,https://github.com/code-423n4/2021-09-swivel-findings/issues/162,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,79,https://github.com/code-423n4/2021-09-swivel-findings/issues/79,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Market can be overwritten,80,https://github.com/code-423n4/2021-09-swivel-findings/issues/80,swivel,2021/09,bug;duplicate;2 (Med Risk);sponsor confirmed
39,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Infinite mint by transferring nTokens to self,81,https://github.com/code-423n4/2021-09-swivel-findings/issues/81,swivel,2021/09,bug;duplicate;3 (High Risk)
39,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,ERC20 return values not checked,82,https://github.com/code-423n4/2021-09-swivel-findings/issues/82,swivel,2021/09,bug;duplicate;3 (High Risk)
39,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Signature check passes for maker=0 orders,83,https://github.com/code-423n4/2021-09-swivel-findings/issues/83,swivel,2021/09,bug;duplicate;3 (High Risk)
39,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,DDOS by cancelling orders or removing approvals,84,https://github.com/code-423n4/2021-09-swivel-findings/issues/84,swivel,2021/09,bug;invalid;2 (Med Risk);sponsor acknowledged;sponsor disputed
39,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Wrong yield computation upon maturity,85,https://github.com/code-423n4/2021-09-swivel-findings/issues/85,swivel,2021/09,bug;0 (Non-critical);sponsor disputed
39,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Unnecessary multiplication for fee computations,86,https://github.com/code-423n4/2021-09-swivel-findings/issues/86,swivel,2021/09,bug;duplicate;G (Gas Optimization)
39,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Approve `cToken` address only once for underlying,87,https://github.com/code-423n4/2021-09-swivel-findings/issues/87,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Interest amount is incorrectly calculated causing financial losses,23,https://github.com/code-423n4/2021-09-swivel-findings/issues/23,swivel,2021/09,bug;invalid;sponsor disputed
39,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Zero amount accepted in both mint and burn operation,24,https://github.com/code-423n4/2021-09-swivel-findings/issues/24,swivel,2021/09,bug;duplicate;G (Gas Optimization);sponsor disputed
39,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,User can get more/less interest than required,25,https://github.com/code-423n4/2021-09-swivel-findings/issues/25,swivel,2021/09,bug;invalid;3 (High Risk);sponsor disputed
39,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,User will lose interest on redeemZcToken,26,https://github.com/code-423n4/2021-09-swivel-findings/issues/26,swivel,2021/09,bug;invalid;sponsor disputed
39,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing validation of address argument could indefinitely lock swivel contract,12,https://github.com/code-423n4/2021-09-swivel-findings/issues/12,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,No ERC20 safe* versions called,13,https://github.com/code-423n4/2021-09-swivel-findings/issues/13,swivel,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
39,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,uToken ERC20 approve method missing return value check #L109,136,https://github.com/code-423n4/2021-09-swivel-findings/issues/136,swivel,2021/09,bug;duplicate;3 (High Risk)
39,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Lack of input validation on the fees,14,https://github.com/code-423n4/2021-09-swivel-findings/issues/14,swivel,2021/09,bug;duplicate;1 (Low Risk);sponsor disputed
39,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Missing events/timelocks for owner/admin only functions that change critical parameters,143,https://github.com/code-423n4/2021-09-swivel-findings/issues/143,swivel,2021/09,bug;duplicate;2 (Med Risk);sponsor confirmed;disagree with severity
39,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimization on the Public Functions,18,https://github.com/code-423n4/2021-09-swivel-findings/issues/18,swivel,2021/09,bug;duplicate;G (Gas Optimization)
39,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimization on the Fenominator Array,20,https://github.com/code-423n4/2021-09-swivel-findings/issues/20,swivel,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
39,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use bytes32 rather than string/bytes,21,https://github.com/code-423n4/2021-09-swivel-findings/issues/21,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,"Swivel.sol constructor, lack of validation for address not being zero",124,https://github.com/code-423n4/2021-09-swivel-findings/issues/124,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,0,"Swivel.sol - marketplace is an immutable address, yet is always casted to MarketPlace - store as MarketPlace to make code cleaner",125,https://github.com/code-423n4/2021-09-swivel-findings/issues/125,swivel,2021/09,bug;0 (Non-critical);sponsor confirmed
39,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,3,Swivel.sol transfer of tokens in `initiateZcTokenFillingZcTokenExit` and `initiateVaultFillingVaultExit` can fail without reverting causing account problems,126,https://github.com/code-423n4/2021-09-swivel-findings/issues/126,swivel,2021/09,bug;duplicate;3 (High Risk)
39,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,3,"exitZcTokenFillingZcTokenInitiate in Swivel.sol, token transfer may fail without function reverting",127,https://github.com/code-423n4/2021-09-swivel-findings/issues/127,swivel,2021/09,bug;duplicate;3 (High Risk)
39,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,G,require(mPlace.custodialExit) in Swivel.sol is redundant,128,https://github.com/code-423n4/2021-09-swivel-findings/issues/128,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,G,Redundant `require` in Swivel.sol,129,https://github.com/code-423n4/2021-09-swivel-findings/issues/129,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,0,The requires used in `p2pVaultExchange` `transferVaultNotional` in Marketplace.sol are not necessary,130,https://github.com/code-423n4/2021-09-swivel-findings/issues/130,swivel,2021/09,bug;0 (Non-critical)
39,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,0,Magic Number 1e26 would best replace by a constant in `VaultTracker`,131,https://github.com/code-423n4/2021-09-swivel-findings/issues/131,swivel,2021/09,bug;duplicate;0 (Non-critical)
39,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,0,"immutable admin means you can't ""burn your keys""",132,https://github.com/code-423n4/2021-09-swivel-findings/issues/132,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,gpersoon,gpersoon.eth,3,return value of 0 from ecrecover not checked,61,https://github.com/code-423n4/2021-09-swivel-findings/issues/61,swivel,2021/09,bug;duplicate;3 (High Risk)
39,gpersoon,gpersoon.eth,1,Prevent underflow in require,62,https://github.com/code-423n4/2021-09-swivel-findings/issues/62,swivel,2021/09,bug;0 (Non-critical);sponsor confirmed;sponsor disputed;disagree with severity
39,gpersoon,gpersoon.eth,3,fee possibly send in the wrong way in exitVaultFillingVaultInitiate ,63,https://github.com/code-423n4/2021-09-swivel-findings/issues/63,swivel,2021/09,bug;duplicate;3 (High Risk)
39,gpersoon,gpersoon.eth,2,Prevent creating the same market twice,64,https://github.com/code-423n4/2021-09-swivel-findings/issues/64,swivel,2021/09,bug;duplicate;2 (Med Risk)
39,gpersoon,gpersoon.eth,3,transferNotionalFrom doesn't check from != to,65,https://github.com/code-423n4/2021-09-swivel-findings/issues/65,swivel,2021/09,bug;duplicate;3 (High Risk);sponsor confirmed
39,gpersoon,gpersoon.eth,1,transferNotionalFee doesn't check f != swivel,66,https://github.com/code-423n4/2021-09-swivel-findings/issues/66,swivel,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
39,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,VaultTracker.sol: Gas optimisation for addNotional,28,https://github.com/code-423n4/2021-09-swivel-findings/issues/28,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed;sponsor disputed
39,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,MarketPlace.sol: Remove maturity from VaultTracker and ZcToken,29,https://github.com/code-423n4/2021-09-swivel-findings/issues/29,swivel,2021/09,bug;G (Gas Optimization);sponsor acknowledged;sponsor confirmed
39,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,VaultTracker.sol: pass in exchangeRate as a variable to matureVault(),30,https://github.com/code-423n4/2021-09-swivel-findings/issues/30,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,VaultTracker.sol: init sVault.exchangeRate in constructor,31,https://github.com/code-423n4/2021-09-swivel-findings/issues/31,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,0,VaultTracker.sol: Replace 1e26 with a constant,32,https://github.com/code-423n4/2021-09-swivel-findings/issues/32,swivel,2021/09,bug;duplicate;0 (Non-critical);sponsor confirmed
39,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,0,Swivel: Unnecessary optimisation compromises implementation logic,33,https://github.com/code-423n4/2021-09-swivel-findings/issues/33,swivel,2021/09,bug;invalid;0 (Non-critical);sponsor disputed
39,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,1,MarketPlace.sol: createMarket should check if market already exists before creating,34,https://github.com/code-423n4/2021-09-swivel-findings/issues/34,swivel,2021/09,bug;duplicate;2 (Med Risk);sponsor confirmed
39,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,1,Swivel: Incorrect dev comments for the 4 initiate functions,35,https://github.com/code-423n4/2021-09-swivel-findings/issues/35,swivel,2021/09,bug;1 (Low Risk);sponsor confirmed
39,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,1,Swivel: Using 1e18 has no impact on calculating fees.,36,https://github.com/code-423n4/2021-09-swivel-findings/issues/36,swivel,2021/09,bug;G (Gas Optimization)
39,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,1,Swivel: Implement check effect interaction to align with best practices,37,https://github.com/code-423n4/2021-09-swivel-findings/issues/37,swivel,2021/09,bug;1 (Low Risk);sponsor confirmed
39,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,2,Swivel: implementation for initiateZcTokenFillingZcTokenExit is incorrect,38,https://github.com/code-423n4/2021-09-swivel-findings/issues/38,swivel,2021/09,bug;2 (Med Risk);sponsor confirmed
39,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,2,Swivel: Taker is charged fees twice in exitVaultFillingVaultInitiate,39,https://github.com/code-423n4/2021-09-swivel-findings/issues/39,swivel,2021/09,bug;3 (High Risk);sponsor confirmed
39,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,lack of input validation of arrays,117,https://github.com/code-423n4/2021-09-swivel-findings/issues/117,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,lack of input validation of array in exit(),118,https://github.com/code-423n4/2021-09-swivel-findings/issues/118,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,swivel and marketPlace contract does not implement the mechanisim to renounce the role of admin,119,https://github.com/code-423n4/2021-09-swivel-findings/issues/119,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,No limitatiion on fees,120,https://github.com/code-423n4/2021-09-swivel-findings/issues/120,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,resubmission :  No limitatiion on fees,121,https://github.com/code-423n4/2021-09-swivel-findings/issues/121,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,lack of event emission after sensitive action,122,https://github.com/code-423n4/2021-09-swivel-findings/issues/122,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,lack of zero address validation in constructor,123,https://github.com/code-423n4/2021-09-swivel-findings/issues/123,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,unchecked return value from Transfer/TransferFrom(),88,https://github.com/code-423n4/2021-09-swivel-findings/issues/88,swivel,2021/09,bug;duplicate;3 (High Risk)
39,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,unchecked return value from approve() ,89,https://github.com/code-423n4/2021-09-swivel-findings/issues/89,swivel,2021/09,bug;duplicate;3 (High Risk)
39,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,3,Different parameter used in  while emitting event,90,https://github.com/code-423n4/2021-09-swivel-findings/issues/90,swivel,2021/09,bug;1 (Low Risk);sponsor confirmed;disagree with severity
39,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,3,Lack of access modifier in burnReturns(),91,https://github.com/code-423n4/2021-09-swivel-findings/issues/91,swivel,2021/09,bug;invalid;sponsor disputed
39,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,3,lack of access modifier in mintReturn(),92,https://github.com/code-423n4/2021-09-swivel-findings/issues/92,swivel,2021/09,bug;invalid;3 (High Risk);sponsor disputed
39,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,Open TODOs in Codebase,67,https://github.com/code-423n4/2021-09-swivel-findings/issues/67,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,Lack of Proper Revert Messages,68,https://github.com/code-423n4/2021-09-swivel-findings/issues/68,swivel,2021/09,bug;0 (Non-critical);sponsor disputed
39,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,Lack of Input Validation,69,https://github.com/code-423n4/2021-09-swivel-findings/issues/69,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,G,Gas Savings Upon Market Creation,70,https://github.com/code-423n4/2021-09-swivel-findings/issues/70,swivel,2021/09,bug;G (Gas Optimization);sponsor acknowledged
39,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,0,Missing Dev Comments,71,https://github.com/code-423n4/2021-09-swivel-findings/issues/71,swivel,2021/09,bug;0 (Non-critical);sponsor confirmed
39,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,3,`onlyAdmin` Role May Unintentionally Cause Issues in the Underlying Protocol,72,https://github.com/code-423n4/2021-09-swivel-findings/issues/72,swivel,2021/09,bug;duplicate;2 (Med Risk);sponsor acknowledged;sponsor confirmed;disagree with severity
39,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,3,Swivel Markets are not Isolated,73,https://github.com/code-423n4/2021-09-swivel-findings/issues/73,swivel,2021/09,bug;1 (Low Risk);sponsor disputed
39,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,3,Markets Do Not Operate Correctly on Non-Standard Tokens,74,https://github.com/code-423n4/2021-09-swivel-findings/issues/74,swivel,2021/09,bug;duplicate;3 (High Risk)
39,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,Potential Reentrancy when Initiating and Exiting Positions,75,https://github.com/code-423n4/2021-09-swivel-findings/issues/75,swivel,2021/09,bug;0 (Non-critical);sponsor disputed
39,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,Lack of Pause Mechanism,76,https://github.com/code-423n4/2021-09-swivel-findings/issues/76,swivel,2021/09,bug;0 (Non-critical);sponsor acknowledged;sponsor disputed;disagree with severity
39,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,Protocol is Unusable in its Current Deployment Setup,77,https://github.com/code-423n4/2021-09-swivel-findings/issues/77,swivel,2021/09,bug;invalid;sponsor disputed
39,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`uToken`'s `approve()` Function is Susceptible to Frontrunning Attacks,78,https://github.com/code-423n4/2021-09-swivel-findings/issues/78,swivel,2021/09,bug;duplicate;invalid;2 (Med Risk)
39,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Bytes constant more efficient than string literal,1,https://github.com/code-423n4/2021-09-swivel-findings/issues/1,swivel,2021/09,bug;G (Gas Optimization);sponsor acknowledged
39,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,Return value of transferNotionalFee ignored,16,https://github.com/code-423n4/2021-09-swivel-findings/issues/16,swivel,2021/09,bug;0 (Non-critical);sponsor disputed
39,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Some public functions can be declared as external,17,https://github.com/code-423n4/2021-09-swivel-findings/issues/17,swivel,2021/09,bug;duplicate;G (Gas Optimization)
39,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,2,Not using the safe* versions of ERC20,19,https://github.com/code-423n4/2021-09-swivel-findings/issues/19,swivel,2021/09,bug;duplicate;3 (High Risk)
39,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,Wrong parameter name used in function spec,2,https://github.com/code-423n4/2021-09-swivel-findings/issues/2,swivel,2021/09,bug;1 (Low Risk);sponsor confirmed;disagree with severity
39,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Unnecessary use of 1e18 in principal-premium-fee calculation,27,https://github.com/code-423n4/2021-09-swivel-findings/issues/27,swivel,2021/09,bug;duplicate;G (Gas Optimization)
39,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,createMarket function missing parameter description,3,https://github.com/code-423n4/2021-09-swivel-findings/issues/3,swivel,2021/09,bug;1 (Low Risk);sponsor confirmed;disagree with severity
39,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,fenominator can be a fixed size array,8,https://github.com/code-423n4/2021-09-swivel-findings/issues/8,swivel,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
39,nikitastupin,0x84F9079a9A39ae80Cf9DEE65a0E316B1a897684A,1,[Swivel.sol] Possible replay attacks in case of a future chain split,4,https://github.com/code-423n4/2021-09-swivel-findings/issues/4,swivel,2021/09,bug;duplicate;1 (Low Risk);sponsor acknowledged
39,nikitastupin,0x84F9079a9A39ae80Cf9DEE65a0E316B1a897684A,2,Multiple unchecked `transfer` and `transferFrom` calls,5,https://github.com/code-423n4/2021-09-swivel-findings/issues/5,swivel,2021/09,bug;duplicate;3 (High Risk)
39,nikitastupin,0x84F9079a9A39ae80Cf9DEE65a0E316B1a897684A,0,No zero address check for `ecrecover` return value,6,https://github.com/code-423n4/2021-09-swivel-findings/issues/6,swivel,2021/09,bug;duplicate;3 (High Risk);sponsor disputed
39,nikitastupin,0x84F9079a9A39ae80Cf9DEE65a0E316B1a897684A,0,[Sig.sol] `splitAndRecover` function is susceptible to signature mellability,7,https://github.com/code-423n4/2021-09-swivel-findings/issues/7,swivel,2021/09,bug;duplicate;0 (Non-critical);sponsor acknowledged
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,0,Uninformative error message,10,https://github.com/code-423n4/2021-09-swivel-findings/issues/10,swivel,2021/09,bug;duplicate;0 (Non-critical);sponsor acknowledged
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,0,Uninformative error message,11,https://github.com/code-423n4/2021-09-swivel-findings/issues/11,swivel,2021/09,bug;duplicate;0 (Non-critical)
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Cache array size in loop,40,https://github.com/code-423n4/2021-09-swivel-findings/issues/40,swivel,2021/09,bug;duplicate;G (Gas Optimization)
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Title: Double reading from calldata o,43,https://github.com/code-423n4/2021-09-swivel-findings/issues/43,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed;sponsor disputed
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Sig.split function could be private instead internal.,44,https://github.com/code-423n4/2021-09-swivel-findings/issues/44,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,More efficient iterating,45,https://github.com/code-423n4/2021-09-swivel-findings/issues/45,swivel,2021/09,bug;duplicate;G (Gas Optimization)
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,No Transfer AdminPattern,46,https://github.com/code-423n4/2021-09-swivel-findings/issues/46,swivel,2021/09,bug;duplicate;1 (Low Risk);sponsor disputed
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Open TODOs in `Sig`,47,https://github.com/code-423n4/2021-09-swivel-findings/issues/47,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Open TODOs in `Hash`,48,https://github.com/code-423n4/2021-09-swivel-findings/issues/48,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Missing initial ownership event,49,https://github.com/code-423n4/2021-09-swivel-findings/issues/49,swivel,2021/09,bug;0 (Non-critical);sponsor disputed;disagree with severity
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Open TODOs in `MarketPlace`,50,https://github.com/code-423n4/2021-09-swivel-findings/issues/50,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,setSwivelAddress function can be frontrun,51,https://github.com/code-423n4/2021-09-swivel-findings/issues/51,swivel,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,setSwivelAddress function doesn't check address 0,52,https://github.com/code-423n4/2021-09-swivel-findings/issues/52,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,0,Double Spending. No decreaseAllowance()/ IncreaseAllowance(),53,https://github.com/code-423n4/2021-09-swivel-findings/issues/53,swivel,2021/09,bug;0 (Non-critical);sponsor acknowledged;sponsor disputed
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,0,Reentrancy Possibility,54,https://github.com/code-423n4/2021-09-swivel-findings/issues/54,swivel,2021/09,bug;duplicate;0 (Non-critical);sponsor disputed
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,`Erc20.approve()` doesn't work on non-standard compliant tokens like USDT,55,https://github.com/code-423n4/2021-09-swivel-findings/issues/55,swivel,2021/09,bug;duplicate;3 (High Risk)
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,`Erc20.transfer()` doesn't work on non-standard compliant tokens like USDT,56,https://github.com/code-423n4/2021-09-swivel-findings/issues/56,swivel,2021/09,bug;duplicate;3 (High Risk)
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,`Erc20.transferFrom()` doesn't work on non-standard compliant tokens like USDT,57,https://github.com/code-423n4/2021-09-swivel-findings/issues/57,swivel,2021/09,bug;duplicate;3 (High Risk)
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,`Erc20.approve()` return value is ignored,58,https://github.com/code-423n4/2021-09-swivel-findings/issues/58,swivel,2021/09,bug;duplicate;3 (High Risk)
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,`Erc20.transfer()` return value is ignored,59,https://github.com/code-423n4/2021-09-swivel-findings/issues/59,swivel,2021/09,bug;duplicate;3 (High Risk)
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,`Erc20.transferFrom()` return value is ignored,60,https://github.com/code-423n4/2021-09-swivel-findings/issues/60,swivel,2021/09,bug;duplicate;3 (High Risk)
39,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,0,Uninformative error message,9,https://github.com/code-423n4/2021-09-swivel-findings/issues/9,swivel,2021/09,bug;duplicate;0 (Non-critical)
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Consider using ECDSA library for signature verifications,133,https://github.com/code-423n4/2021-09-swivel-findings/issues/133,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Safe transfers of tokens,134,https://github.com/code-423n4/2021-09-swivel-findings/issues/134,swivel,2021/09,bug;duplicate;3 (High Risk)
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Return value of transferNotionalFee,135,https://github.com/code-423n4/2021-09-swivel-findings/issues/135,swivel,2021/09,bug;0 (Non-critical);sponsor acknowledged;sponsor disputed
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Validations in setFee,137,https://github.com/code-423n4/2021-09-swivel-findings/issues/137,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Boundaries for fenominator,138,https://github.com/code-423n4/2021-09-swivel-findings/issues/138,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Order of params in event Mature,139,https://github.com/code-423n4/2021-09-swivel-findings/issues/139,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,The 'domain' is not recalculated in case of a hard fork,140,https://github.com/code-423n4/2021-09-swivel-findings/issues/140,swivel,2021/09,bug;duplicate;1 (Low Risk)
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Underlying can be fetched from cToken,142,https://github.com/code-423n4/2021-09-swivel-findings/issues/142,swivel,2021/09,bug;0 (Non-critical);sponsor confirmed;disagree with severity
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Override existing market,144,https://github.com/code-423n4/2021-09-swivel-findings/issues/144,swivel,2021/09,bug;duplicate;2 (Med Risk)
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Can cancel the same order again,145,https://github.com/code-423n4/2021-09-swivel-findings/issues/145,swivel,2021/09,bug;0 (Non-critical);sponsor disputed
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache storage access,146,https://github.com/code-423n4/2021-09-swivel-findings/issues/146,swivel,2021/09,bug;duplicate;G (Gas Optimization)
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,'mature' and 'maturityRate' do not need separate mappings,147,https://github.com/code-423n4/2021-09-swivel-findings/issues/147,swivel,2021/09,bug;G (Gas Optimization);sponsor acknowledged;sponsor disputed
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,'onlyAdmin' and 'onlySwivel' modifiers,148,https://github.com/code-423n4/2021-09-swivel-findings/issues/148,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Functions returning boolean,149,https://github.com/code-423n4/2021-09-swivel-findings/issues/149,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,fixed-size array for fenominator,150,https://github.com/code-423n4/2021-09-swivel-findings/issues/150,swivel,2021/09,bug;duplicate;G (Gas Optimization)
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,'matured' can be replaced by 'maturityRate' > 0,151,https://github.com/code-423n4/2021-09-swivel-findings/issues/151,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,matureVault can receive maturityRate cheapier,152,https://github.com/code-423n4/2021-09-swivel-findings/issues/152,swivel,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
39,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Style issues,153,https://github.com/code-423n4/2021-09-swivel-findings/issues/153,swivel,2021/09,bug;duplicate;0 (Non-critical)
39,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Array .length Used Directly In For Loops,15,https://github.com/code-423n4/2021-09-swivel-findings/issues/15,swivel,2021/09,bug;G (Gas Optimization);sponsor confirmed
39,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,"Open TODOs in Hash.sol, Sig.sol and MarketPlace.sol",22,https://github.com/code-423n4/2021-09-swivel-findings/issues/22,swivel,2021/09,bug;duplicate;1 (Low Risk);sponsor disputed;disagree with severity
39,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Complex state variable copied to memory in redeemZcToken (MarketPlace.sol),41,https://github.com/code-423n4/2021-09-swivel-findings/issues/41,swivel,2021/09,bug;1 (Low Risk);sponsor confirmed
39,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Change function visibility from public to external to save gas,42,https://github.com/code-423n4/2021-09-swivel-findings/issues/42,swivel,2021/09,bug;duplicate;G (Gas Optimization);sponsor confirmed
32,0xRajeev,rajeev.eth,1,Missing SafeMath,53,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/53,wildcredit,2021/09,bug;1 (Low Risk);sponsor-acknowledged
32,0xRajeev,rajeev.eth,1,Missing zero-address checks,54,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/54,wildcredit,2021/09,bug;0 (Non-critical);disagree-with-severity;sponsor-confirmed
32,0xRajeev,rajeev.eth,2,Use of deprecated Chainlink API,55,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/55,wildcredit,2021/09,bug;2 (Med Risk);sponsor-acknowledged
32,0xRajeev,rajeev.eth,1,Lack of input validation,56,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/56,wildcredit,2021/09,bug;invalid;1 (Low Risk);disagree-with-severity;sponsor-confirmed
32,0xRajeev,rajeev.eth,1,Strict inequality should be relaxed to be closed ranges instead of open,57,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/57,wildcredit,2021/09,bug;0 (Non-critical);disagree-with-severity;sponsor-acknowledged
32,0xRajeev,rajeev.eth,1,Incorrect error message strings with require()s,59,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/59,wildcredit,2021/09,bug;0 (Non-critical);disagree-with-severity;sponsor-acknowledged
32,0xRajeev,rajeev.eth,1,Constraint of minRate < lowRate can be broken,61,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/61,wildcredit,2021/09,bug;1 (Low Risk);disagree-with-severity;sponsor-confirmed
32,0xRajeev,rajeev.eth,1,Missing threshold check for highRate,63,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/63,wildcredit,2021/09,bug;1 (Low Risk);disagree-with-severity;sponsor-confirmed
32,0xRajeev,rajeev.eth,1,Remove pair-specific parameters until they are actually used/enforced,65,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/65,wildcredit,2021/09,bug;0 (Non-critical);sponsor-disputed;disagree-with-severity
32,0xRajeev,rajeev.eth,1,receive() may lead to locked Ether,67,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/67,wildcredit,2021/09,bug;invalid;1 (Low Risk);sponsor-disputed
32,0xRajeev,rajeev.eth,1,Using a zero-address check as a proxy for enforcing one-time initialization is risky,68,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/68,wildcredit,2021/09,bug;0 (Non-critical);sponsor-disputed
32,0xRajeev,rajeev.eth,1,Atypical use of maxAmount may cause repayment failure,69,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/69,wildcredit,2021/09,bug;invalid;1 (Low Risk);sponsor-disputed;disagree-with-severity
32,0xRajeev,rajeev.eth,3,Use of tokenB’s price instead of tokenA in determining account health will lead to protocol mis-accounting and insolvency,70,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/70,wildcredit,2021/09,bug;3 (High Risk);sponsor-confirmed
32,0xRajeev,rajeev.eth,1,Renouncing ownership is not allowed,71,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/71,wildcredit,2021/09,bug;0 (Non-critical);disagree-with-severity;sponsor-confirmed
32,0xRajeev,rajeev.eth,2,Missing timelock for critical contract setters of privileged roles,72,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/72,wildcredit,2021/09,bug;invalid;2 (Med Risk);sponsor-disputed;disagree-with-severity
32,0xRajeev,rajeev.eth,2,Missing event for this critical onlyOperator function where the operator can arbitrarily change name+symbol,74,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/74,wildcredit,2021/09,bug;0 (Non-critical);disagree-with-severity;sponsor-confirmed
32,0xRajeev,rajeev.eth,1,Token address should not be PairFactory address,75,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/75,wildcredit,2021/09,bug;invalid;1 (Low Risk);sponsor-disputed
32,0xRajeev,rajeev.eth,1,Lack of guarded launch approach may be risky,76,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/76,wildcredit,2021/09,bug;0 (Non-critical);sponsor-disputed
32,0xRajeev,rajeev.eth,1,Clone-and-own approach used for OZ libraries is susceptible to errors and missing upstream bug fixes,77,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/77,wildcredit,2021/09,bug;0 (Non-critical);sponsor-disputed
32,0xRajeev,rajeev.eth,G,Caching state variables in local/memory variables avoids SLOADs to save gas,79,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/79,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-acknowledged
32,0xRajeev,rajeev.eth,G,Redundant zero-address checks,80,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/80,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-confirmed
32,0xRajeev,rajeev.eth,G, Input validation on positionID not being 0 will save gas,81,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/81,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-confirmed
32,0xRajeev,rajeev.eth,G,Input validation on amount > 0 will save gas,82,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/82,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-acknowledged
32,0xRajeev,rajeev.eth,G,Use unchecked{} primitive to save gas where possible,84,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/84,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-acknowledged
32,0xRajeev,rajeev.eth,G,Moving checks before other logic can save gas,85,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/85,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-confirmed
32,0xRajeev,rajeev.eth,G,Unused parameter removal can save gas,87,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/87,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-confirmed
32,0xRajeev,rajeev.eth,G,Using msg.sender or cached locals in emits instead of state variables saves gas,88,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/88,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-confirmed
32,0xRajeev,rajeev.eth,G,Avoiding unnecessary SSTORE can save gas,90,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/90,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-acknowledged
32,0xRajeev,rajeev.eth,G,Reordering state variable declarations to prevent incorrect packing can save slots/gas,91,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/91,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-confirmed
32,0xRajeev,rajeev.eth,G,Converting state variables to immutable will save storage slots and gas,92,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/92,wildcredit,2021/09,bug;duplicate;G (Gas Optimization)
32,0xRajeev,rajeev.eth,G,Use unchecked{} primitive to save gas where possible,93,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/93,wildcredit,2021/09,bug;invalid;G (Gas Optimization)
32,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,41,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/41,wildcredit,2021/09,bug;0 (Non-critical);disagree-with-severity;sponsor-acknowledged
32,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,ChainLink price data could be stale,42,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/42,wildcredit,2021/09,bug;duplicate;2 (Med Risk)
32,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Uniswap oracle assumes PairToken <> WETH liquidity,43,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/43,wildcredit,2021/09,bug;1 (Low Risk);sponsor-acknowledged
32,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Simple interest formula is used,44,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/44,wildcredit,2021/09,bug;1 (Low Risk);sponsor-acknowledged
32,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`setTargetUtilization`'s `require` statement does not match error ,45,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/45,wildcredit,2021/09,bug;duplicate;0 (Non-critical)
32,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Truncated math in `interestRatePerBlock`,46,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/46,wildcredit,2021/09,bug;0 (Non-critical);disagree-with-severity;sponsor-confirmed
32,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`UniswapV3Helper.getUserTokenAmount` could be simplified,47,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/47,wildcredit,2021/09,bug;0 (Non-critical);disagree-with-severity;sponsor-acknowledged
32,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`LendingPair.withdrawUniPosition` should accrue debt first,48,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/48,wildcredit,2021/09,bug;2 (Med Risk);sponsor-confirmed
32,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Unnecessary `_maxAmount` parameter in `repayAllETH`,49,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/49,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-confirmed
32,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Supply part of the accrued debt can be stolen,50,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/50,wildcredit,2021/09,bug;2 (Med Risk);disagree-with-severity;sponsor-confirmed
32,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,"`InterestRateModel` Constructor doesn't have checks for _minRate, _lowRate and _highRate, while setters do",109,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/109,wildcredit,2021/09,bug;duplicate;1 (Low Risk)
32,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,LPTokenMaster.initialize is not checking for addresses not being 0,110,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/110,wildcredit,2021/09,bug;invalid;1 (Low Risk);sponsor-disputed
32,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,Lack of checks for addresses in `LendingPair.initialize`,111,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/111,wildcredit,2021/09,bug;invalid;1 (Low Risk)
32,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,Lack of check for address(0) in `LendingPair.depositUniPosition`,112,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/112,wildcredit,2021/09,bug;0 (Non-critical);disagree-with-severity;sponsor-acknowledged
32,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,Lack of checks for address in `UniswapV3Oracle.constructor`,113,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/113,wildcredit,2021/09,bug;invalid;1 (Low Risk);disagree-with-severity
32,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,1,UniswapV3Oracle.setUniPriceConverter is not checking for valid address,114,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/114,wildcredit,2021/09,bug;duplicate;0 (Non-critical);disagree-with-severity
32,gpersoon,gpersoon.eth,1,Reduce risk of rounding error in _timeRateToBlockRate,36,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/36,wildcredit,2021/09,bug;1 (Low Risk);sponsor-confirmed
32,gpersoon,gpersoon.eth,0,Improve readability of constants,37,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/37,wildcredit,2021/09,bug;0 (Non-critical);sponsor-confirmed
32,gpersoon,gpersoon.eth,1,Inaccurate require error messages.,38,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/38,wildcredit,2021/09,bug;duplicate;0 (Non-critical)
32,gpersoon,gpersoon.eth,1,nonReentrant modifier for uniswap v3 functions,39,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/39,wildcredit,2021/09,bug;duplicate;0 (Non-critical)
32,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,UniswapV3Helper: Avoid recomputation of sqrtRatio from pool tick,58,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/58,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-acknowledged
32,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,UniswapV3Helper: getSqrtPriceX96() doesn't work for tokens with non-18 decimals,60,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/60,wildcredit,2021/09,bug;invalid;3 (High Risk);sponsor-disputed
32,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,UniswapV3Helper: Misleading param names for getSqrtPriceX96(),62,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/62,wildcredit,2021/09,bug;0 (Non-critical);sponsor-disputed;disagree-with-severity
32,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,UniswapV3Helper: Redundant pool initialization,64,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/64,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-confirmed
32,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,UniV3Helper: Function visibilities can be restricted to pure,66,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/66,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-acknowledged
32,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,1,InterestRateModel: Low rate can be lower than min rate,17,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/17,wildcredit,2021/09,bug;duplicate;1 (Low Risk)
32,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,1,InterestRateModel: High rate can be lower than low rate or min rate ,18,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/18,wildcredit,2021/09,bug;duplicate;1 (Low Risk)
32,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,1,LPTokenMaster: Old attack vector on approve,19,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/19,wildcredit,2021/09,bug;duplicate;1 (Low Risk)
32,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,0,InterestRateModel: Error message on setTargetUtilization is incorrect,20,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/20,wildcredit,2021/09,bug;duplicate;0 (Non-critical)
32,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,Declare variable as immutable to save gas ,10,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/10,wildcredit,2021/09,bug;duplicate;G (Gas Optimization)
32,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,Declare LPTokenMaster  underlying and lendingController variable as immutable ,5,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/5,wildcredit,2021/09,bug;invalid;G (Gas Optimization);sponsor-disputed
32,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,Declare the value when the variable is created ,6,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/6,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-confirmed
32,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,1,missing zero-address check ,7,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/7,wildcredit,2021/09,bug;invalid;1 (Low Risk);sponsor-disputed
32,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,1,missing zero-address check ,8,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/8,wildcredit,2021/09,bug;invalid;1 (Low Risk)
32,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,PairFactory.sol is Ownable but not owner capabilites are used,9,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/9,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-confirmed
32,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,0,Improper File Imports,115,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/115,wildcredit,2021/09,bug;0 (Non-critical);sponsor-disputed
32,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,3,`onlyOwner` Role Can Manipulate Price Oracle,21,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/21,wildcredit,2021/09,bug;invalid;3 (High Risk);sponsor-disputed
32,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`UniswapV3Oracle.sol` Does Not Use `latestRoundData()` Instead of `latestAnswer()`,22,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/22,wildcredit,2021/09,bug;duplicate;2 (Med Risk)
32,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,"Transfer method doesn't consider gained interest correctly,",23,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/23,wildcredit,2021/09,bug;invalid;3 (High Risk);sponsor-disputed
32,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,Initialize can be called multiple times!!!!,24,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/24,wildcredit,2021/09,bug;invalid;3 (High Risk);sponsor-disputed
32,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Whitelist is missing in PairFactory,25,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/25,wildcredit,2021/09,bug;invalid;1 (Low Risk);sponsor-disputed
32,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Multiple getters,26,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/26,wildcredit,2021/09,bug;invalid;G (Gas Optimization);sponsor-disputed
32,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,Wrong implementation of _sqrt function,27,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/27,wildcredit,2021/09,bug;invalid;3 (High Risk);sponsor-disputed
32,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,"Reentrancy in withdraw. Reentrancy guard is missing,",28,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/28,wildcredit,2021/09,bug;invalid;3 (High Risk);sponsor-disputed
32,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,"move to solidity 8, get rid of sageMath.",29,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/29,wildcredit,2021/09,bug;invalid;G (Gas Optimization);sponsor-disputed
32,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Emit events when setting the initial values in the constructor,100,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/100,wildcredit,2021/09,bug;0 (Non-critical);sponsor-acknowledged
32,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Oracle response assumes 8 decimals,101,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/101,wildcredit,2021/09,bug;1 (Low Risk);sponsor-acknowledged
32,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Misleading message and inclusive check in function setTargetUtilization,102,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/102,wildcredit,2021/09,bug;duplicate;0 (Non-critical)
32,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Only accept ETH from WETH contract,103,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/103,wildcredit,2021/09,bug;0 (Non-critical);disagree-with-severity;sponsor-confirmed
32,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Reduce the number of divisions in _timeRateToBlockRateit,104,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/104,wildcredit,2021/09,bug;duplicate;1 (Low Risk)
32,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Ensure targetUtilization > 0,105,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/105,wildcredit,2021/09,bug;0 (Non-critical);disagree-with-severity;sponsor-confirmed
32,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Reading from the storage multiple times,106,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/106,wildcredit,2021/09,bug;invalid;G (Gas Optimization);sponsor-disputed
32,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused imports,107,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/107,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-confirmed
32,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Style issues,108,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/108,wildcredit,2021/09,bug;0 (Non-critical);sponsor-confirmed
32,t11s,t11s.eth,G,Making PairFactory state vars immutable would save gas,1,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/1,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-confirmed
32,t11s,t11s.eth,G,Abandon clone-pattern for pairs in favor of full deploys,2,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/2,wildcredit,2021/09,bug;invalid;G (Gas Optimization);sponsor-disputed
32,t11s,t11s.eth,G,Use unchecked{} in ERC20 to save gas without risk,3,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/3,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-acknowledged
32,t11s,t11s.eth,0,Prefer abi.encode over abi.encodePacked,4,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/4,wildcredit,2021/09,bug;0 (Non-critical);sponsor-acknowledged
32,tabish,0xD6FCD2F85fE975bB9b0f3C1B1c6802bB09d33E43,0,Incorrect import ,11,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/11,wildcredit,2021/09,bug;0 (Non-critical);sponsor-disputed
32,tabish,0xD6FCD2F85fE975bB9b0f3C1B1c6802bB09d33E43,0,Incorrect import ,12,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/12,wildcredit,2021/09,bug;invalid;0 (Non-critical);sponsor-disputed
32,tabish,0xD6FCD2F85fE975bB9b0f3C1B1c6802bB09d33E43,0,Incorrect import ,13,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/13,wildcredit,2021/09,bug;invalid;0 (Non-critical);sponsor-disputed
32,tabish,0xD6FCD2F85fE975bB9b0f3C1B1c6802bB09d33E43,0,Incorrect import,14,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/14,wildcredit,2021/09,bug;invalid;0 (Non-critical);sponsor-disputed
32,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Oracle should call latestRoundData instead.,116,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/116,wildcredit,2021/09,bug;1 (Low Risk);sponsor-acknowledged
32,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Incorrect implementation of chainlink oracle,117,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/117,wildcredit,2021/09,bug;invalid;3 (High Risk);sponsor-disputed;disagree-with-severity
32,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Add nonReentrant modifiers to uniswap position methods + Check effects pattern,118,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/118,wildcredit,2021/09,bug;0 (Non-critical);disagree-with-severity;sponsor-acknowledged
32,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Use constructors instead of init functions,119,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/119,wildcredit,2021/09,bug;invalid;1 (Low Risk);sponsor-disputed
32,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Race condition on ERC20 approval,120,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/120,wildcredit,2021/09,bug;1 (Low Risk);sponsor-confirmed
32,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Liquidation can be escaped by depositing a Uni v3 position with 0 liquidity,30,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/30,wildcredit,2021/09,bug;3 (High Risk);disagree-with-severity;sponsor-confirmed
32,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Change unnecessary _borrowBalanceConverted to _debtOf can save gas,31,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/31,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-confirmed
32,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Change unnecessary _supplyBalanceConverted to _supplyOf can save gas,32,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/32,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-confirmed
32,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Check _returnToken and call _convertTokenValues() only when needed can save gas,33,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/33,wildcredit,2021/09,bug;invalid;G (Gas Optimization);sponsor-disputed
32,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Miscalculation of `_supplyCreditUni` allows undercollateralized loan,34,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/34,wildcredit,2021/09,bug;duplicate;3 (High Risk)
32,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,transferLp() Misleading error message,35,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/35,wildcredit,2021/09,bug;0 (Non-critical);sponsor-confirmed
32,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,The check if _checkBorrowEnabled and _checkBorrowLimits can be done earlier,40,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/40,wildcredit,2021/09,bug;0 (Non-critical);sponsor-confirmed
32,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Consider adding `account` parameter to event WithdrawUniPosition,51,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/51,wildcredit,2021/09,bug;0 (Non-critical);sponsor-confirmed
32,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Check if amount > 0 can save gas,52,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/52,wildcredit,2021/09,bug;duplicate;G (Gas Optimization)
32,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache and check decimals before write storage can save gas,73,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/73,wildcredit,2021/09,bug;G (Gas Optimization);sponsor-acknowledged
32,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`repayAllETH()` The check if amount is valid can be done earlier,78,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/78,wildcredit,2021/09,bug;duplicate;G (Gas Optimization)
32,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`setHighRate()` Insufficient input validation,83,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/83,wildcredit,2021/09,bug;invalid;1 (Low Risk);sponsor-disputed;disagree-with-severity
32,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`setTargetUtilization()` Misleading error message,86,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/86,wildcredit,2021/09,bug;0 (Non-critical);sponsor-confirmed
32,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`setLowRate()` Misleading error message,89,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/89,wildcredit,2021/09,bug;duplicate;0 (Non-critical);sponsor-confirmed
32,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,"Lending pairs can be deployed and in use even though the ""feeRecipient"" contract address is zero",15,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/15,wildcredit,2021/09,bug;duplicate;0 (Non-critical)
32,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Unused function parameter in _checkBorrowLimits (LendingPair.sol),16,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/16,wildcredit,2021/09,bug;duplicate;G (Gas Optimization)
30,0xRajeev,rajeev.eth,1,Old Solidity compiler version,29,https://github.com/code-423n4/2021-09-yaxis-findings/issues/29,yaxis,2021/09,bug;duplicate;G (Gas Optimization);sponsor acknowledged;disagree with severity
30,0xRajeev,rajeev.eth,G,Checking for zero amounts can save gas by preventing expensive external calls,30,https://github.com/code-423n4/2021-09-yaxis-findings/issues/30,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged
30,0xRajeev,rajeev.eth,G,Checking allowed tokens can save gas by preventing expensive external calls,31,https://github.com/code-423n4/2021-09-yaxis-findings/issues/31,yaxis,2021/09,bug;invalid;sponsor disputed
30,0xRajeev,rajeev.eth,1,Lack of vault address input validation may lead to loss of funds,32,https://github.com/code-423n4/2021-09-yaxis-findings/issues/32,yaxis,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
30,0xRajeev,rajeev.eth,G,Checking array length match can save gas by preventing expensive external calls,33,https://github.com/code-423n4/2021-09-yaxis-findings/issues/33,yaxis,2021/09,bug;duplicate;G (Gas Optimization)
30,0xRajeev,rajeev.eth,G,Unbounded arrays may lead to OOG exception,34,https://github.com/code-423n4/2021-09-yaxis-findings/issues/34,yaxis,2021/09,bug;invalid;sponsor disputed
30,0xRajeev,rajeev.eth,1,Missing zero-address checks,35,https://github.com/code-423n4/2021-09-yaxis-findings/issues/35,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged
30,0xRajeev,rajeev.eth,1,Missing events for critical contract setters of privileged roles,36,https://github.com/code-423n4/2021-09-yaxis-findings/issues/36,yaxis,2021/09,bug;invalid;sponsor acknowledged;0 (Non-critical)
30,0xRajeev,rajeev.eth,1,Missing timelock for critical contract setters of privileged roles,37,https://github.com/code-423n4/2021-09-yaxis-findings/issues/37,yaxis,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
30,0xRajeev,rajeev.eth,1,Missing sanity/threshold check on totalDepositCap may cause DoS,38,https://github.com/code-423n4/2021-09-yaxis-findings/issues/38,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged
30,0xRajeev,rajeev.eth,G,Checking for non-zero amounts before payment functions saves gas,39,https://github.com/code-423n4/2021-09-yaxis-findings/issues/39,yaxis,2021/09,bug;duplicate;G (Gas Optimization);sponsor acknowledged
30,0xRajeev,rajeev.eth,1,Relying on setters for initialisation of critical parameters is risky,40,https://github.com/code-423n4/2021-09-yaxis-findings/issues/40,yaxis,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
30,0xRajeev,rajeev.eth,1,User may receive less than the eligible amount per the shares being withdrawn,41,https://github.com/code-423n4/2021-09-yaxis-findings/issues/41,yaxis,2021/09,bug;duplicate;2 (Med Risk);sponsor disputed
30,0xRajeev,rajeev.eth,2,Tokens with > 18 decimals will break logic,42,https://github.com/code-423n4/2021-09-yaxis-findings/issues/42,yaxis,2021/09,bug;duplicate;0 (Non-critical)
30,0xRajeev,rajeev.eth,G,Rearranging declaration of state variables will save storage slots because of packing,43,https://github.com/code-423n4/2021-09-yaxis-findings/issues/43,yaxis,2021/09,bug;G (Gas Optimization);sponsor confirmed
30,0xRajeev,rajeev.eth,2,Single-step change of governance address is extremely risky,44,https://github.com/code-423n4/2021-09-yaxis-findings/issues/44,yaxis,2021/09,bug;duplicate;0 (Non-critical)
30,0xRajeev,rajeev.eth,1,Missing check for duplicate token in addToken,45,https://github.com/code-423n4/2021-09-yaxis-findings/issues/45,yaxis,2021/09,bug;duplicate;3 (High Risk)
30,0xRajeev,rajeev.eth,G,Removal of last token in the array can be optimized,46,https://github.com/code-423n4/2021-09-yaxis-findings/issues/46,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged
30,0xRajeev,rajeev.eth,2,Halting the protocol should be onlyGovernance and not onlyStrategist,47,https://github.com/code-423n4/2021-09-yaxis-findings/issues/47,yaxis,2021/09,bug;2 (Med Risk);sponsor acknowledged
30,0xRajeev,rajeev.eth,2,There is no corresponding setResume() for setHalted(),48,https://github.com/code-423n4/2021-09-yaxis-findings/issues/48,yaxis,2021/09,bug;invalid;2 (Med Risk);sponsor disputed
30,0xRajeev,rajeev.eth,1,Unused event may be unused code or indicative of missed emit/logic,49,https://github.com/code-423n4/2021-09-yaxis-findings/issues/49,yaxis,2021/09,bug;sponsor acknowledged;sponsor confirmed;0 (Non-critical)
30,0xRajeev,rajeev.eth,2,manager.allowedVaults check missing for add/remove strategy,50,https://github.com/code-423n4/2021-09-yaxis-findings/issues/50,yaxis,2021/09,bug;2 (Med Risk);sponsor acknowledged;sponsor confirmed
30,0xRajeev,rajeev.eth,1,Missing notHalted modifier on inCaseStrategyGetStuck() and inCaseTokensGetStuck(),51,https://github.com/code-423n4/2021-09-yaxis-findings/issues/51,yaxis,2021/09,bug;documentation;invalid;1 (Low Risk);sponsor disputed
30,0xRajeev,rajeev.eth,2,Incorrect access control on Harvester add/remove strategy functions,52,https://github.com/code-423n4/2021-09-yaxis-findings/issues/52,yaxis,2021/09,bug;invalid;2 (Med Risk);sponsor disputed
30,0xRajeev,rajeev.eth,1,100% is a very loose threshold for slippage,53,https://github.com/code-423n4/2021-09-yaxis-findings/issues/53,yaxis,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
30,0xRajeev,rajeev.eth,1,Missing canHarvest() in harvest(),54,https://github.com/code-423n4/2021-09-yaxis-findings/issues/54,yaxis,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
30,0xRajeev,rajeev.eth,G,Change public visibility to external,55,https://github.com/code-423n4/2021-09-yaxis-findings/issues/55,yaxis,2021/09,bug;sponsor disputed;0 (Non-critical)
30,0xRajeev,rajeev.eth,G,Caching state variables in local/memory variables avoids SLOADs to save gas,56,https://github.com/code-423n4/2021-09-yaxis-findings/issues/56,yaxis,2021/09,bug;duplicate;G (Gas Optimization)
30,0xRajeev,rajeev.eth,1,No use of notHalted in LegacyController functions,57,https://github.com/code-423n4/2021-09-yaxis-findings/issues/57,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged
30,0xRajeev,rajeev.eth,G,Removing unused parameter and modifier can save gas,58,https://github.com/code-423n4/2021-09-yaxis-findings/issues/58,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged
30,0xRajeev,rajeev.eth,1,Vault may not have enough tokens for withdraw,59,https://github.com/code-423n4/2021-09-yaxis-findings/issues/59,yaxis,2021/09,bug;duplicate;3 (High Risk)
30,0xRajeev,rajeev.eth,1,onlyEnabledConverter modifier is not used in all functions,60,https://github.com/code-423n4/2021-09-yaxis-findings/issues/60,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged
30,0xRajeev,rajeev.eth,G,Removing the explicit return in favor of the used named return will save some gas,61,https://github.com/code-423n4/2021-09-yaxis-findings/issues/61,yaxis,2021/09,bug;invalid;sponsor disputed
30,0xRajeev,rajeev.eth,1,Missing support/documentation for use of deflationary tokens in protocol,62,https://github.com/code-423n4/2021-09-yaxis-findings/issues/62,yaxis,2021/09,bug;1 (Low Risk);sponsor disputed
30,0xRajeev,rajeev.eth,1,safeApprove may revert for non-zero to non-zero approvals,63,https://github.com/code-423n4/2021-09-yaxis-findings/issues/63,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged;sponsor confirmed
30,0xRajeev,rajeev.eth,1,Max approvals are risky if contract is malicious/compromised,64,https://github.com/code-423n4/2021-09-yaxis-findings/issues/64,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged
30,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,`cap` isn't enforced,134,https://github.com/code-423n4/2021-09-yaxis-findings/issues/134,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged
30,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Unclear `totalDepositCap`,135,https://github.com/code-423n4/2021-09-yaxis-findings/issues/135,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged
30,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,2,Vault.withdraw can be unfair,136,https://github.com/code-423n4/2021-09-yaxis-findings/issues/136,yaxis,2021/09,bug;duplicate;2 (Med Risk)
30,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,`convert` fails for fee-on-transfer tokens,137,https://github.com/code-423n4/2021-09-yaxis-findings/issues/137,yaxis,2021/09,bug;duplicate;2 (Med Risk)
30,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,Earn process emits two events that can be arranged into one,138,https://github.com/code-423n4/2021-09-yaxis-findings/issues/138,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged;sponsor confirmed
30,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,`getMostPremium()` can be wrong,139,https://github.com/code-423n4/2021-09-yaxis-findings/issues/139,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged;sponsor confirmed;disagree with severity
30,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,2,Harvest can be frontrun,140,https://github.com/code-423n4/2021-09-yaxis-findings/issues/140,yaxis,2021/09,bug;2 (Med Risk);sponsor acknowledged
30,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,Unnecessary `balanceOfWant() > 0`,141,https://github.com/code-423n4/2021-09-yaxis-findings/issues/141,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged;sponsor confirmed
30,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Unsafe 'safeApprove',142,https://github.com/code-423n4/2021-09-yaxis-findings/issues/142,yaxis,2021/09,bug;duplicate;1 (Low Risk)
30,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,`tokens[i]` can be memorized,143,https://github.com/code-423n4/2021-09-yaxis-findings/issues/143,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged;sponsor confirmed
30,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Missing check in `reorderStrategies`,144,https://github.com/code-423n4/2021-09-yaxis-findings/issues/144,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged
30,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,`maxStrategies` can be lower than existing strategies,145,https://github.com/code-423n4/2021-09-yaxis-findings/issues/145,yaxis,2021/09,bug;1 (Low Risk);sponsor disputed
30,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,`harvestNextStrategy` can be optimized,146,https://github.com/code-423n4/2021-09-yaxis-findings/issues/146,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged
30,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,Issue in balance update in `setCap`,147,https://github.com/code-423n4/2021-09-yaxis-findings/issues/147,yaxis,2021/09,bug;duplicate;3 (High Risk)
30,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Missing zero-address check in `setGovernance`,148,https://github.com/code-423n4/2021-09-yaxis-findings/issues/148,yaxis,2021/09,bug;duplicate;invalid;1 (Low Risk)
30,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,Earn and Harvest work when halted,149,https://github.com/code-423n4/2021-09-yaxis-findings/issues/149,yaxis,2021/09,bug;duplicate;1 (Low Risk);sponsor disputed
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,107,https://github.com/code-423n4/2021-09-yaxis-findings/issues/107,yaxis,2021/09,bug;sponsor disputed;0 (Non-critical)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unused event `Harvester.ControllerSet`,108,https://github.com/code-423n4/2021-09-yaxis-findings/issues/108,yaxis,2021/09,bug;duplicate;0 (Non-critical)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,# Unused event `Harvester.VaultManagerSet`,109,https://github.com/code-423n4/2021-09-yaxis-findings/issues/109,yaxis,2021/09,bug;duplicate;0 (Non-critical)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unused event `Controller.InsuranceClaimed`,110,https://github.com/code-423n4/2021-09-yaxis-findings/issues/110,yaxis,2021/09,bug;duplicate;0 (Non-critical)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unbounded iterations over strategies or tokens,111,https://github.com/code-423n4/2021-09-yaxis-findings/issues/111,yaxis,2021/09,bug;duplicate;1 (Low Risk)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,wrong YAXIS estimates,112,https://github.com/code-423n4/2021-09-yaxis-findings/issues/112,yaxis,2021/09,bug;2 (Med Risk);sponsor acknowledged
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`YAxisVotePower.balanceOf` can be manipulated,113,https://github.com/code-423n4/2021-09-yaxis-findings/issues/113,yaxis,2021/09,bug;documentation;2 (Med Risk)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,ERC20 return values not checked,114,https://github.com/code-423n4/2021-09-yaxis-findings/issues/114,yaxis,2021/09,bug;duplicate;2 (Med Risk)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Pending strategist timelock works on next block,115,https://github.com/code-423n4/2021-09-yaxis-findings/issues/115,yaxis,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `removeToken` iteration over all tokens can be avoided,116,https://github.com/code-423n4/2021-09-yaxis-findings/issues/116,yaxis,2021/09,bug;G (Gas Optimization)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `removeStrategy` iteration over all strategies can be avoided,117,https://github.com/code-423n4/2021-09-yaxis-findings/issues/117,yaxis,2021/09,bug;G (Gas Optimization)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Unnecessary addition in `Vault.deposit`,118,https://github.com/code-423n4/2021-09-yaxis-findings/issues/118,yaxis,2021/09,bug;G (Gas Optimization)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Same modifiers are repeatedly computed in `Vault.depositMultiple`,119,https://github.com/code-423n4/2021-09-yaxis-findings/issues/119,yaxis,2021/09,bug;duplicate;G (Gas Optimization)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`Vault.balanceOfThis` values all tokens equally,120,https://github.com/code-423n4/2021-09-yaxis-findings/issues/120,yaxis,2021/09,bug;duplicate;3 (High Risk)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`Vault.withdraw` sometimes burns too many shares,121,https://github.com/code-423n4/2021-09-yaxis-findings/issues/121,yaxis,2021/09,bug;duplicate;2 (Med Risk)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Withdraw event uses wrong parameter,122,https://github.com/code-423n4/2021-09-yaxis-findings/issues/122,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged;sponsor confirmed
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Loop in `StablesConverter.convert` can be avoided,123,https://github.com/code-423n4/2021-09-yaxis-findings/issues/123,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Loop in `StablesConverter.expected` can be avoided,124,https://github.com/code-423n4/2021-09-yaxis-findings/issues/124,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Timestamp in router swap can be hardcoded,125,https://github.com/code-423n4/2021-09-yaxis-findings/issues/125,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged;sponsor confirmed
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,token -> vault mapping can be overwritten,126,https://github.com/code-423n4/2021-09-yaxis-findings/issues/126,yaxis,2021/09,bug;duplicate;2 (Med Risk)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,VaultHelper deposits don't work with fee-on transfer tokens,127,https://github.com/code-423n4/2021-09-yaxis-findings/issues/127,yaxis,2021/09,bug;2 (Med Risk)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`Controller.setCap` sets wrong vault balance,128,https://github.com/code-423n4/2021-09-yaxis-findings/issues/128,yaxis,2021/09,bug;duplicate;3 (High Risk)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`Controller.withdrawAll` sets wrong vault balance,129,https://github.com/code-423n4/2021-09-yaxis-findings/issues/129,yaxis,2021/09,bug;duplicate;3 (High Risk)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`Controller.inCaseStrategyGetStuck` does not update balance,130,https://github.com/code-423n4/2021-09-yaxis-findings/issues/130,yaxis,2021/09,bug;2 (Med Risk);sponsor acknowledged
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`Vault.withdraw` mixes normalized and standard amounts,131,https://github.com/code-423n4/2021-09-yaxis-findings/issues/131,yaxis,2021/09,bug;duplicate;3 (High Risk)
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`Vault.balance()` mixes normalized and standard amounts,132,https://github.com/code-423n4/2021-09-yaxis-findings/issues/132,yaxis,2021/09,bug;3 (High Risk);sponsor acknowledged
30,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,No slippage checks can lead to sandwich attacks,133,https://github.com/code-423n4/2021-09-yaxis-findings/issues/133,yaxis,2021/09,bug;1 (Low Risk);sponsor disputed
30,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Harvesting and Funding Is Not Checked When the Contract Is Halted,10,https://github.com/code-423n4/2021-09-yaxis-findings/issues/10,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged;sponsor confirmed
30,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,11,https://github.com/code-423n4/2021-09-yaxis-findings/issues/11,yaxis,2021/09,bug;duplicate;2 (Med Risk)
30,gpersoon,gpersoon.eth,3,harvestNextStrategy never executes because lastCalled is 0 and stays 0,16,https://github.com/code-423n4/2021-09-yaxis-findings/issues/16,yaxis,2021/09,bug;invalid;3 (High Risk);sponsor disputed
30,gpersoon,gpersoon.eth,1,shadowing of strategies,17,https://github.com/code-423n4/2021-09-yaxis-findings/issues/17,yaxis,2021/09,bug;sponsor disputed;0 (Non-critical)
30,gpersoon,gpersoon.eth,G,Save a step in withdraw of Vault.sol,18,https://github.com/code-423n4/2021-09-yaxis-findings/issues/18,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged
30,gpersoon,gpersoon.eth,1,Possible division by 0 in withdraw of Vault.sol,19,https://github.com/code-423n4/2021-09-yaxis-findings/issues/19,yaxis,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
30,gpersoon,gpersoon.eth,1,extra array length check in depositMultipleVault ,20,https://github.com/code-423n4/2021-09-yaxis-findings/issues/20,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged;sponsor confirmed
30,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Controller: Extra sload of _vaultDetails[_vault].balance,65,https://github.com/code-423n4/2021-09-yaxis-findings/issues/65,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged;sponsor confirmed
30,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Harvester: Simpler implementation for canHarvest(),66,https://github.com/code-423n4/2021-09-yaxis-findings/issues/66,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged;sponsor confirmed
30,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Harvester: Unnecessary rotation and timeout mechanism,67,https://github.com/code-423n4/2021-09-yaxis-findings/issues/67,yaxis,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
30,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Harvester: Unneeded safemath subtraction in removeStrategy(),68,https://github.com/code-423n4/2021-09-yaxis-findings/issues/68,yaxis,2021/09,bug;duplicate;G (Gas Optimization)
30,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,Removed tokens can't be withdrawn from vault,69,https://github.com/code-423n4/2021-09-yaxis-findings/issues/69,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged
30,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Vault: Redundant notHalted modifier in depositMultiple(),70,https://github.com/code-423n4/2021-09-yaxis-findings/issues/70,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged;sponsor confirmed
30,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Vault: Swaps at parity with swap fee = withdrawal fee,71,https://github.com/code-423n4/2021-09-yaxis-findings/issues/71,yaxis,2021/09,bug;2 (Med Risk)
30,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Vault: Unnecessary _add in _shares assignment,72,https://github.com/code-423n4/2021-09-yaxis-findings/issues/72,yaxis,2021/09,bug;duplicate;G (Gas Optimization)
30,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Vault: Withdrawal amount isn't un-normalized,73,https://github.com/code-423n4/2021-09-yaxis-findings/issues/73,yaxis,2021/09,bug;duplicate;3 (High Risk)
30,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,Vault: Withdrawals can be frontrun to cause users to burn tokens without receiving funds in return,74,https://github.com/code-423n4/2021-09-yaxis-findings/issues/74,yaxis,2021/09,bug;duplicate;2 (Med Risk);sponsor acknowledged
30,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Vault: Zero Withdrawal Fee If Protocol Halts,75,https://github.com/code-423n4/2021-09-yaxis-findings/issues/75,yaxis,2021/09,bug;1 (Low Risk)
30,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,1,VaultHelper contract should never have tokens at the end of a transaction,100,https://github.com/code-423n4/2021-09-yaxis-findings/issues/100,yaxis,2021/09,bug;documentation;sponsor acknowledged;0 (Non-critical)
30,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,1,The function `removeToken` can get prohibitively expensive,101,https://github.com/code-423n4/2021-09-yaxis-findings/issues/101,yaxis,2021/09,bug;G (Gas Optimization);sponsor disputed
30,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,1,Overflow in `depositMultiple` can lead to infinite loop and incorrect deposit,102,https://github.com/code-423n4/2021-09-yaxis-findings/issues/102,yaxis,2021/09,bug;duplicate;G (Gas Optimization)
30,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,1,Tokens that have multiple addresses can break some computations,103,https://github.com/code-423n4/2021-09-yaxis-findings/issues/103,yaxis,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
30,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,1,The `sqrt` function can overflow execute invalid operation,104,https://github.com/code-423n4/2021-09-yaxis-findings/issues/104,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged
30,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,2,`addToken` does not check if token decimals is at most `18`,105,https://github.com/code-423n4/2021-09-yaxis-findings/issues/105,yaxis,2021/09,bug;duplicate;0 (Non-critical)
30,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,3,The function `addToken` does not check if the token was already added,106,https://github.com/code-423n4/2021-09-yaxis-findings/issues/106,yaxis,2021/09,bug;duplicate;3 (High Risk)
30,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Consider making some constants as non-public to save gas,94,https://github.com/code-423n4/2021-09-yaxis-findings/issues/94,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged
30,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Caching the length in for loops,95,https://github.com/code-423n4/2021-09-yaxis-findings/issues/95,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged
30,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Caching storage pointer in `removeToken`,96,https://github.com/code-423n4/2021-09-yaxis-findings/issues/96,yaxis,2021/09,bug;invalid;sponsor disputed
30,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Redundant `notHalted` modifier in `depositMultiple`,97,https://github.com/code-423n4/2021-09-yaxis-findings/issues/97,yaxis,2021/09,bug;duplicate;G (Gas Optimization)
30,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,G,Upgrade to at least 0.8.4,98,https://github.com/code-423n4/2021-09-yaxis-findings/issues/98,yaxis,2021/09,bug;duplicate;G (Gas Optimization)
30,hrkrshnn,0x58993cFa67cD6151EC3D806AE93a7Ed365dB2f88,1,Safety of the Vyper compiler,99,https://github.com/code-423n4/2021-09-yaxis-findings/issues/99,yaxis,2021/09,bug;sponsor acknowledged;disagree with severity;0 (Non-critical)
30,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,Inefficient algo to find if a token exists for a given vault,12,https://github.com/code-423n4/2021-09-yaxis-findings/issues/12,yaxis,2021/09,bug;duplicate;G (Gas Optimization);sponsor acknowledged
30,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,1,Strategist should be warned not to allow rebasing tokens,13,https://github.com/code-423n4/2021-09-yaxis-findings/issues/13,yaxis,2021/09,bug;duplicate;1 (Low Risk);sponsor disputed
30,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,3,Deposits into vaults are not tracked at a token level,14,https://github.com/code-423n4/2021-09-yaxis-findings/issues/14,yaxis,2021/09,bug;duplicate;3 (High Risk)
30,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,Inefficient algo to find if a strategy exists,15,https://github.com/code-423n4/2021-09-yaxis-findings/issues/15,yaxis,2021/09,bug;duplicate;G (Gas Optimization);sponsor acknowledged
30,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,2,Reordering of strategies on Controller does not reorder strategies in Harvester,22,https://github.com/code-423n4/2021-09-yaxis-findings/issues/22,yaxis,2021/09,bug;invalid;2 (Med Risk);sponsor disputed
30,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3, set cap breaks vault's Balance,1,https://github.com/code-423n4/2021-09-yaxis-findings/issues/1,yaxis,2021/09,bug;3 (High Risk);sponsor acknowledged;sponsor confirmed
30,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Vault treats all tokens exactly the same that creates (huge) arbitrage opportunities.,2,https://github.com/code-423n4/2021-09-yaxis-findings/issues/2,yaxis,2021/09,bug;3 (High Risk);sponsor acknowledged
30,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,missing safety check in addStrategy,23,https://github.com/code-423n4/2021-09-yaxis-findings/issues/23,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged;sponsor confirmed
30,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Strategy is not cap at strategy's cap,24,https://github.com/code-423n4/2021-09-yaxis-findings/issues/24,yaxis,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
30,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,vault cap's at totalSupply would behave unexpectedly,25,https://github.com/code-423n4/2021-09-yaxis-findings/issues/25,yaxis,2021/09,bug;1 (Low Risk)
30,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,hijack the vault by pumping vault price.,26,https://github.com/code-423n4/2021-09-yaxis-findings/issues/26,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged
30,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Vault does not normalize decimal on withdrawing,27,https://github.com/code-423n4/2021-09-yaxis-findings/issues/27,yaxis,2021/09,bug;duplicate;3 (High Risk)
30,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Controller does not raise an error when there's insufficient liquidity,28,https://github.com/code-423n4/2021-09-yaxis-findings/issues/28,yaxis,2021/09,bug;3 (High Risk);sponsor acknowledged
30,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,No safety check in addToken,3,https://github.com/code-423n4/2021-09-yaxis-findings/issues/3,yaxis,2021/09,bug;3 (High Risk);sponsor acknowledged;sponsor confirmed
30,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,removeToken would break the vault/protocol.,4,https://github.com/code-423n4/2021-09-yaxis-findings/issues/4,yaxis,2021/09,bug;3 (High Risk);sponsor acknowledged;sponsor confirmed
30,jonah1005,0x501eE2A368f1E58C736dd7cE3b494B33c3158c68,1,Manager contract doest not use safe token.,5,https://github.com/code-423n4/2021-09-yaxis-findings/issues/5,yaxis,2021/09,bug;duplicate;2 (Med Risk);sponsor acknowledged;sponsor confirmed
30,jonah1005,0x501eE2A368f1E58C736dd7cE3b494B33c3158c68,G,Unnecessary  operation in vault,6,https://github.com/code-423n4/2021-09-yaxis-findings/issues/6,yaxis,2021/09,bug;duplicate;G (Gas Optimization);sponsor acknowledged;sponsor confirmed
30,jonah1005,0x501eE2A368f1E58C736dd7cE3b494B33c3158c68,2, # Controller is vulnerable to sandwich attack,7,https://github.com/code-423n4/2021-09-yaxis-findings/issues/7,yaxis,2021/09,bug;2 (Med Risk);sponsor acknowledged
30,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Controller transfer extra token on withdrawing tokens,8,https://github.com/code-423n4/2021-09-yaxis-findings/issues/8,yaxis,2021/09,bug;duplicate;3 (High Risk);sponsor acknowledged
30,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,earn results in decreasing share price,9,https://github.com/code-423n4/2021-09-yaxis-findings/issues/9,yaxis,2021/09,bug;3 (High Risk);sponsor acknowledged
30,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Inclusive check in setSlippage,78,https://github.com/code-423n4/2021-09-yaxis-findings/issues/78,yaxis,2021/09,bug;invalid
30,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Gauge can be updated,79,https://github.com/code-423n4/2021-09-yaxis-findings/issues/79,yaxis,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
30,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Deposit event should emit amount or shares,80,https://github.com/code-423n4/2021-09-yaxis-findings/issues/80,yaxis,2021/09,bug;invalid;sponsor disputed
30,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,setMinter should check that _minter is not empty,81,https://github.com/code-423n4/2021-09-yaxis-findings/issues/81,yaxis,2021/09,bug;sponsor acknowledged;sponsor confirmed;0 (Non-critical)
30,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Decimals of upgradeable tokens may change,82,https://github.com/code-423n4/2021-09-yaxis-findings/issues/82,yaxis,2021/09,bug;1 (Low Risk);sponsor acknowledged;sponsor confirmed
30,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,totalDepositCap caps shares not amount,83,https://github.com/code-423n4/2021-09-yaxis-findings/issues/83,yaxis,2021/09,bug;duplicate;1 (Low Risk);sponsor disputed
30,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,_normalizeDecimals does not handle tokens with more than 18 decimals,84,https://github.com/code-423n4/2021-09-yaxis-findings/issues/84,yaxis,2021/09,bug;duplicate;0 (Non-critical)
30,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,VaultHelper could validate that amount is greater than 0,85,https://github.com/code-423n4/2021-09-yaxis-findings/issues/85,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged;sponsor confirmed
30,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,uint8 is less efficient than uint256 in loop iterations,86,https://github.com/code-423n4/2021-09-yaxis-findings/issues/86,yaxis,2021/09,bug;G (Gas Optimization);sponsor acknowledged
30,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Dead code,87,https://github.com/code-423n4/2021-09-yaxis-findings/issues/87,yaxis,2021/09,bug;G (Gas Optimization);sponsor disputed
30,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache storage access,88,https://github.com/code-423n4/2021-09-yaxis-findings/issues/88,yaxis,2021/09,bug;duplicate;G (Gas Optimization)
30,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused imports,89,https://github.com/code-423n4/2021-09-yaxis-findings/issues/89,yaxis,2021/09,bug;sponsor acknowledged;0 (Non-critical)
30,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Useless addition of _shares,90,https://github.com/code-423n4/2021-09-yaxis-findings/issues/90,yaxis,2021/09,bug;duplicate;G (Gas Optimization)
30,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Join _checkToken function and modifier together,91,https://github.com/code-423n4/2021-09-yaxis-findings/issues/91,yaxis,2021/09,bug;G (Gas Optimization);sponsor confirmed
30,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,notHalted in depositMultiple is not needed,92,https://github.com/code-423n4/2021-09-yaxis-findings/issues/92,yaxis,2021/09,bug;duplicate;G (Gas Optimization)
30,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Style issues,93,https://github.com/code-423n4/2021-09-yaxis-findings/issues/93,yaxis,2021/09,bug;sponsor disputed;0 (Non-critical)
30,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Add non-zero address checks.,150,https://github.com/code-423n4/2021-09-yaxis-findings/issues/150,yaxis,2021/09,bug;duplicate;1 (Low Risk)
30,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Uninitialized variables are automatically set to 0,151,https://github.com/code-423n4/2021-09-yaxis-findings/issues/151,yaxis,2021/09,bug;invalid;sponsor disputed
30,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Consider using a solidity version >= 0.8.0,152,https://github.com/code-423n4/2021-09-yaxis-findings/issues/152,yaxis,2021/09,bug;duplicate;G (Gas Optimization)
30,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Be aware that transactions can be frontrun to exactly the estimated amount.,153,https://github.com/code-423n4/2021-09-yaxis-findings/issues/153,yaxis,2021/09,bug;duplicate;1 (Low Risk)
30,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,"Certain view functions should never be used in code, only UI. They are easily manipulated.",154,https://github.com/code-423n4/2021-09-yaxis-findings/issues/154,yaxis,2021/09,bug;invalid;2 (Med Risk);sponsor disputed
30,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Consider adding a pause modifier.,155,https://github.com/code-423n4/2021-09-yaxis-findings/issues/155,yaxis,2021/09,bug;invalid;1 (Low Risk);sponsor disputed
30,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,getMostPremium() does not necessarily return the best asset to trade for.,156,https://github.com/code-423n4/2021-09-yaxis-findings/issues/156,yaxis,2021/09,bug;duplicate;1 (Low Risk)
30,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,_addLiquidity will lose user funds due to frontrunning.,157,https://github.com/code-423n4/2021-09-yaxis-findings/issues/157,yaxis,2021/09,bug;duplicate;2 (Med Risk)
30,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Adding assymetric liquidity in _addLiquidity results in fewer LP tokens minted than what should be wanted,158,https://github.com/code-423n4/2021-09-yaxis-findings/issues/158,yaxis,2021/09,bug;2 (Med Risk)
30,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,_harvest and _swap ,159,https://github.com/code-423n4/2021-09-yaxis-findings/issues/159,yaxis,2021/09,bug;duplicate;2 (Med Risk);sponsor disputed
30,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Use mutex lock on VaultHelper.sol,160,https://github.com/code-423n4/2021-09-yaxis-findings/issues/160,yaxis,2021/09,bug;duplicate;invalid;2 (Med Risk)
30,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Carefully add tokens to the list that the protocol uses,161,https://github.com/code-423n4/2021-09-yaxis-findings/issues/161,yaxis,2021/09,bug;duplicate;2 (Med Risk);sponsor disputed
30,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Normalize decimals doesn't work for >18 decimals,162,https://github.com/code-423n4/2021-09-yaxis-findings/issues/162,yaxis,2021/09,bug;duplicate;0 (Non-critical)
30,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,Anyone can call harvestNextStrategy with a very low amount of _estimated tokens,163,https://github.com/code-423n4/2021-09-yaxis-findings/issues/163,yaxis,2021/09,bug;invalid;3 (High Risk);sponsor disputed
30,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Lack of Documentation in Swaps.sol,164,https://github.com/code-423n4/2021-09-yaxis-findings/issues/164,yaxis,2021/09,bug;documentation;invalid;1 (Low Risk)
30,verifyfirst,0xe034a5282b731F1ea330043ECc0aA988B930CB25,2,Possibility to Stake Twice,21,https://github.com/code-423n4/2021-09-yaxis-findings/issues/21,yaxis,2021/09,bug;invalid;2 (Med Risk);sponsor disputed
30,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Controller.withdraw(...) User may lose funds when withdraw wantToken from the underlying contract,76,https://github.com/code-423n4/2021-09-yaxis-findings/issues/76,yaxis,2021/09,bug;duplicate;3 (High Risk)
30,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,An attacker can steal funds from multi-token vaults,77,https://github.com/code-423n4/2021-09-yaxis-findings/issues/77,yaxis,2021/09,bug;3 (High Risk);sponsor acknowledged
38,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`Zapper` should safeApprove(0) first,32,https://github.com/code-423n4/2021-10-ambire-findings/issues/32,ambire,2021/10,bug;sponsor acknowledged;1 (Low Risk);resolved
38,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`Zapper` only works for whitelisted tokens,33,https://github.com/code-423n4/2021-10-ambire-findings/issues/33,ambire,2021/10,bug;sponsor disputed;0 (Non-critical)
38,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`Zapper` withdrawals from Aave might not work as intended,34,https://github.com/code-423n4/2021-10-ambire-findings/issues/34,ambire,2021/10,bug;invalid;sponsor disputed;1 (Low Risk)
38,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,No ERC20 safe* versions called & no return values checked,35,https://github.com/code-423n4/2021-10-ambire-findings/issues/35,ambire,2021/10,bug;duplicate;sponsor acknowledged;disagree with severity;0 (Non-critical);resolved
38,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`Identity` fallback returns too many bytes,36,https://github.com/code-423n4/2021-10-ambire-findings/issues/36,ambire,2021/10,bug;sponsor acknowledged;0 (Non-critical);resolved
38,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,If zero address is added as privilege anyone can execute arbitrary transactions,37,https://github.com/code-423n4/2021-10-ambire-findings/issues/37,ambire,2021/10,bug;sponsor confirmed;1 (Low Risk);resolved
38,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,No check for signature malleability,38,https://github.com/code-423n4/2021-10-ambire-findings/issues/38,ambire,2021/10,bug;sponsor acknowledged;0 (Non-critical);resolved
38,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Signature replay attacks for different identities (nonce on wrong party),39,https://github.com/code-423n4/2021-10-ambire-findings/issues/39,ambire,2021/10,bug;duplicate;sponsor confirmed;3 (High Risk);resolved
38,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,QuickAccManager Smart Contract signature verification can be exploited,40,https://github.com/code-423n4/2021-10-ambire-findings/issues/40,ambire,2021/10,bug;sponsor confirmed;3 (High Risk);resolved
38,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `BytesLib` addition can be unchecked,41,https://github.com/code-423n4/2021-10-ambire-findings/issues/41,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `SignatureValidatorV2.recoverAddrImpl` should use `else if`,42,https://github.com/code-423n4/2021-10-ambire-findings/issues/42,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,cryptojedi88,0xCa4ce0873Bb676f6157b2246691255731A02d172,G,Call deposit() in the WETH contract,43,https://github.com/code-423n4/2021-10-ambire-findings/issues/43,ambire,2021/10,bug;duplicate;sponsor confirmed;G (Gas Optimization);resolved
38,cryptojedi88,0xCa4ce0873Bb676f6157b2246691255731A02d172,1,Using SafeERC20 in recoverFunds(),44,https://github.com/code-423n4/2021-10-ambire-findings/issues/44,ambire,2021/10,bug;duplicate;sponsor acknowledged;0 (Non-critical);resolved
38,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Use of safeApprove will always cause approveMaxMany to revert,18,https://github.com/code-423n4/2021-10-ambire-findings/issues/18,ambire,2021/10,bug;invalid;sponsor disputed
38,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,"Double check for ""birthday"" collision",19,https://github.com/code-423n4/2021-10-ambire-findings/issues/19,ambire,2021/10,bug;invalid;sponsor disputed
38,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,20,https://github.com/code-423n4/2021-10-ambire-findings/issues/20,ambire,2021/10,bug;duplicate;sponsor acknowledged;0 (Non-critical);resolved
38,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Call to swapExactTokensForTokens in exchangeV2() will always fail without approvement,21,https://github.com/code-423n4/2021-10-ambire-findings/issues/21,ambire,2021/10,bug;invalid;sponsor disputed
38,gpersoon,gpersoon.eth,3,cancel() calculates hashTx in the wrong way,12,https://github.com/code-423n4/2021-10-ambire-findings/issues/12,ambire,2021/10,bug;duplicate;sponsor confirmed;3 (High Risk);resolved
38,gpersoon,gpersoon.eth,3,Prevent execution with invalid signatures,13,https://github.com/code-423n4/2021-10-ambire-findings/issues/13,ambire,2021/10,bug;duplicate;sponsor confirmed;disagree with severity;3 (High Risk);resolved
38,gpersoon,gpersoon.eth,G,Safe some gas on the nonce increment,14,https://github.com/code-423n4/2021-10-ambire-findings/issues/14,ambire,2021/10,bug;sponsor acknowledged;G (Gas Optimization);resolved
38,gpersoon,gpersoon.eth,G,Compare with 0 and 1 in a more efficient way,15,https://github.com/code-423n4/2021-10-ambire-findings/issues/15,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,unchecked return  value from transfer(),47,https://github.com/code-423n4/2021-10-ambire-findings/issues/47,ambire,2021/10,bug;duplicate;sponsor acknowledged;disagree with severity;0 (Non-critical);resolved
38,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,No account existence check for low-level call,48,https://github.com/code-423n4/2021-10-ambire-findings/issues/48,ambire,2021/10,bug;invalid;sponsor disputed;1 (Low Risk)
38,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Incorrect checking of signature length,49,https://github.com/code-423n4/2021-10-ambire-findings/issues/49,ambire,2021/10,bug;invalid;sponsor disputed;2 (Med Risk)
38,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,lack of checking of address in array ,50,https://github.com/code-423n4/2021-10-ambire-findings/issues/50,ambire,2021/10,bug;invalid;sponsor acknowledged
38,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,use of floating pragma,51,https://github.com/code-423n4/2021-10-ambire-findings/issues/51,ambire,2021/10,bug;sponsor confirmed;0 (Non-critical);resolved
38,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,State variable that can be decalred as constant,52,https://github.com/code-423n4/2021-10-ambire-findings/issues/52,ambire,2021/10,bug;duplicate;sponsor confirmed;G (Gas Optimization);resolved
38,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,lack of require message,53,https://github.com/code-423n4/2021-10-ambire-findings/issues/53,ambire,2021/10,bug;sponsor confirmed;0 (Non-critical);resolved
38,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,IdentityFactory.withdraw can be external,10,https://github.com/code-423n4/2021-10-ambire-findings/issues/10,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,0,Some code is commented out,11,https://github.com/code-423n4/2021-10-ambire-findings/issues/11,ambire,2021/10,bug;sponsor acknowledged;0 (Non-critical);resolved
38,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,IdentityFactory.withdraw ERC20 missing return value check,8,https://github.com/code-423n4/2021-10-ambire-findings/issues/8,ambire,2021/10,bug;duplicate;sponsor acknowledged;0 (Non-critical);resolved
38,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,2,Zapper.recoverFunds ERC20 return value not checked,9,https://github.com/code-423n4/2021-10-ambire-findings/issues/9,ambire,2021/10,bug;duplicate;sponsor acknowledged;disagree with severity;0 (Non-critical);resolved
38,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Hardcoded WETH,54,https://github.com/code-423n4/2021-10-ambire-findings/issues/54,ambire,2021/10,bug;sponsor confirmed;1 (Low Risk);resolved
38,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,block.chainid may change in case of a hardfork,55,https://github.com/code-423n4/2021-10-ambire-findings/issues/55,ambire,2021/10,bug;sponsor confirmed;1 (Low Risk);resolved
38,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,ecrecover may return empty address,56,https://github.com/code-423n4/2021-10-ambire-findings/issues/56,ambire,2021/10,bug;sponsor confirmed;1 (Low Risk);resolved
38,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Duplicate math operations,57,https://github.com/code-423n4/2021-10-ambire-findings/issues/57,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,LibBytes uses itself,58,https://github.com/code-423n4/2021-10-ambire-findings/issues/58,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused imports,59,https://github.com/code-423n4/2021-10-ambire-findings/issues/59,ambire,2021/10,bug;invalid;sponsor disputed;G (Gas Optimization)
38,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,block.timestamp cannot be 0,60,https://github.com/code-423n4/2021-10-ambire-findings/issues/60,ambire,2021/10,bug;invalid;sponsor disputed;G (Gas Optimization)
38,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Immutable variables,61,https://github.com/code-423n4/2021-10-ambire-findings/issues/61,ambire,2021/10,bug;duplicate;sponsor acknowledged;G (Gas Optimization);resolved
38,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache storage access,62,https://github.com/code-423n4/2021-10-ambire-findings/issues/62,ambire,2021/10,bug;duplicate;sponsor confirmed;G (Gas Optimization);resolved
38,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Pack structs tightly,63,https://github.com/code-423n4/2021-10-ambire-findings/issues/63,ambire,2021/10,bug;invalid;sponsor acknowledged;G (Gas Optimization);resolved
38,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unchecked math operations,64,https://github.com/code-423n4/2021-10-ambire-findings/issues/64,ambire,2021/10,bug;duplicate;sponsor confirmed;G (Gas Optimization);resolved
38,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Only prepare tx when the fee is present,65,https://github.com/code-423n4/2021-10-ambire-findings/issues/65,ambire,2021/10,bug;sponsor acknowledged;G (Gas Optimization);resolved
38,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Hex selector,66,https://github.com/code-423n4/2021-10-ambire-findings/issues/66,ambire,2021/10,bug;sponsor acknowledged;0 (Non-critical);resolved
38,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,create2 assembly,67,https://github.com/code-423n4/2021-10-ambire-findings/issues/67,ambire,2021/10,bug;sponsor acknowledged;0 (Non-critical);resolved
38,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,3,"If `address(0)` is set as privileged in `Identity.sol`, all funds can be drained",2,https://github.com/code-423n4/2021-10-ambire-findings/issues/2,ambire,2021/10,bug;duplicate;sponsor confirmed;disagree with severity;1 (Low Risk);resolved
38,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,3,Address with privilege for QuickAccount with `address(0)`'s can execute arbitrary transactions,3,https://github.com/code-423n4/2021-10-ambire-findings/issues/3,ambire,2021/10,bug;sponsor confirmed;disagree with severity;1 (Low Risk);resolved
38,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Set `QuickAccManager::DOMAIN_SEPARATOR` as immutable,4,https://github.com/code-423n4/2021-10-ambire-findings/issues/4,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Set variables in `Zapper.sol` as immutable,5,https://github.com/code-423n4/2021-10-ambire-findings/issues/5,ambire,2021/10,bug;duplicate;sponsor confirmed;G (Gas Optimization);resolved
38,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Set `IdentityFactory::creator` as immutable,6,https://github.com/code-423n4/2021-10-ambire-findings/issues/6,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Set `QuickAccManager::CANCEL_PREFIX` as constant,7,https://github.com/code-423n4/2021-10-ambire-findings/issues/7,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`QuickAccManager.sol#cancel()` Wrong `hashTx` makes it impossible to cancel a scheduled transaction,1,https://github.com/code-423n4/2021-10-ambire-findings/issues/1,ambire,2021/10,bug;sponsor confirmed;3 (High Risk);resolved
38,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`QuickAccManager.sol#send()` Potential replay attack,23,https://github.com/code-423n4/2021-10-ambire-findings/issues/23,ambire,2021/10,bug;duplicate;sponsor confirmed;3 (High Risk);resolved
38,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`QuickAccManager.sol` Potential replay attack,24,https://github.com/code-423n4/2021-10-ambire-findings/issues/24,ambire,2021/10,bug;duplicate;invalid;sponsor confirmed;3 (High Risk);resolved
38,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`QuickAccManager.sol#send()` Avoid unnecessary read from storage can save gas,25,https://github.com/code-423n4/2021-10-ambire-findings/issues/25,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,26,https://github.com/code-423n4/2021-10-ambire-findings/issues/26,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Zapper.sol#wrapETH()` Use `WETH.deposit` can save some gas,27,https://github.com/code-423n4/2021-10-ambire-findings/issues/27,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Zapper.sol#tradeV3Single()` Remove unnecessary variable can make the code simpler and save gas,28,https://github.com/code-423n4/2021-10-ambire-findings/issues/28,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unnecessary storage variables,29,https://github.com/code-423n4/2021-10-ambire-findings/issues/29,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache storage variables in the stack can save gas,30,https://github.com/code-423n4/2021-10-ambire-findings/issues/30,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`QuickAccManager.sol` Constants should be marked as `constant`,31,https://github.com/code-423n4/2021-10-ambire-findings/issues/31,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Inconsistent code style of for loops,45,https://github.com/code-423n4/2021-10-ambire-findings/issues/45,ambire,2021/10,bug;sponsor confirmed;0 (Non-critical);resolved
38,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,46,https://github.com/code-423n4/2021-10-ambire-findings/issues/46,ambire,2021/10,bug;sponsor acknowledged;G (Gas Optimization);resolved
38,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Long Revert Strings,16,https://github.com/code-423n4/2021-10-ambire-findings/issues/16,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Assignment Of Variable To Default (Identity.sol),17,https://github.com/code-423n4/2021-10-ambire-findings/issues/17,ambire,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
38,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Save Gas With The Unchecked Keyword,22,https://github.com/code-423n4/2021-10-ambire-findings/issues/22,ambire,2021/10,bug;duplicate;sponsor confirmed;G (Gas Optimization);resolved
47,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`pricePerShare` is only lazily updated,39,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/39,badgerdao,2021/10,bug;duplicate;3 (High Risk);sponsor confirmed
47,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`initialize` functions can be frontrun,40,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/40,badgerdao,2021/10,bug;1 (Low Risk);sponsor acknowledged
47,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,41,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/41,badgerdao,2021/10,bug;1 (Low Risk);sponsor confirmed
47,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Pending governance is not cleared,42,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/42,badgerdao,2021/10,bug;1 (Low Risk);sponsor confirmed
47,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Approved spender can spend too many tokens,43,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/43,badgerdao,2021/10,bug;3 (High Risk);sponsor confirmed
47,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Old solidity version with SafeMath,44,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/44,badgerdao,2021/10,bug;duplicate;G (Gas Optimization)
47,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Event parameters read from storage,45,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/45,badgerdao,2021/10,bug;G (Gas Optimization)
47,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Mint function will fail in most cases,37,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/37,badgerdao,2021/10,bug;invalid;G (Gas Optimization);sponsor disputed
47,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Duplicate function sharesToBalance and balanceOf,38,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/38,badgerdao,2021/10,bug;invalid;G (Gas Optimization);sponsor acknowledged
47,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Lack Of Return Value Check On the Oracle,33,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/33,badgerdao,2021/10,bug;duplicate;2 (Med Risk);sponsor confirmed
47,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,34,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/34,badgerdao,2021/10,bug;G (Gas Optimization);sponsor acknowledged
47,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Add zero address validation in the setPendingGovernance function,35,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/35,badgerdao,2021/10,bug;1 (Low Risk);sponsor confirmed
47,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Initialize functions can be frontrun,36,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/36,badgerdao,2021/10,bug;duplicate;1 (Low Risk);sponsor acknowledged
47,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Deprecated Function Usage,69,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/69,badgerdao,2021/10,bug;1 (Low Risk);sponsor confirmed
47,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,PREVENT DIV BY 0,70,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/70,badgerdao,2021/10,bug;1 (Low Risk);sponsor confirmed
47,gpersoon,gpersoon.eth,3,Profit from difference between core.pricePerShare() and pricePerShare() ,7,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/7,badgerdao,2021/10,bug;duplicate;3 (High Risk);sponsor confirmed
47,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Inconsistent ERC20 function may lead to DOS and unexpected behaviour,17,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/17,badgerdao,2021/10,bug;duplicate;3 (High Risk)
47,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Curve Metapool does not support rebasing token,18,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/18,badgerdao,2021/10,bug;duplicate;3 (High Risk);sponsor confirmed
47,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Retrieve internal variables directly ,19,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/19,badgerdao,2021/10,bug;G (Gas Optimization)
47,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Unable to transfer WrappedIbbtc if Oracle go down,20,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/20,badgerdao,2021/10,bug;2 (Med Risk);sponsor confirmed
47,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,inconsistent use of msg.sender and _msgSender(),88,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/88,badgerdao,2021/10,bug;duplicate;0 (Non-critical);sponsor confirmed
47,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,Logical issue in governance event emission,89,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/89,badgerdao,2021/10,bug;duplicate;1 (Low Risk);sponsor confirmed
47,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,2,Null check in pricePerShare,90,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/90,badgerdao,2021/10,bug;2 (Med Risk);sponsor confirmed
47,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,Use Minimal Interface for gas optimizations,91,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/91,badgerdao,2021/10,bug;G (Gas Optimization);resolved
47,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,Use immutable keyword on ibbtc interface,92,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/92,badgerdao,2021/10,bug;duplicate;G (Gas Optimization);sponsor acknowledged
47,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,3,Front-running displacement to beat oracle updates for price manipulation,93,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/93,badgerdao,2021/10,bug;duplicate;3 (High Risk);sponsor acknowledged
47,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,WrappedIbbtcEth contract will use stalled price for mint/burn if updatePricePerShare wasn't run properly,86,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/86,badgerdao,2021/10,bug;3 (High Risk);sponsor confirmed
47,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,WrappedIbbtc and WrappedIbbtcEth contracts do not filter out price feed outliers,87,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/87,badgerdao,2021/10,bug;3 (High Risk);sponsor confirmed
47,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,1,missing zero-address check ,1,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/1,badgerdao,2021/10,bug;duplicate;1 (Low Risk)
47,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,Gas Saving by changing the visibility of initialize function from public to externa ,2,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/2,badgerdao,2021/10,bug;invalid;G (Gas Optimization)
47,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,Gas Saving by changing the visibility of initialize function from public to external,3,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/3,badgerdao,2021/10,bug;G (Gas Optimization)
47,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,Gas Saving by changing the visibility of functions from public to external To save gas,4,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/4,badgerdao,2021/10,bug;invalid;G (Gas Optimization)
47,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,missing zero-address check ,5,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/5,badgerdao,2021/10,bug;G (Gas Optimization);sponsor confirmed
47,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,use of floating pragma,71,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/71,badgerdao,2021/10,bug;0 (Non-critical);sponsor confirmed
47,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,lack of access modifier in Initialize(),72,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/72,badgerdao,2021/10,bug;invalid;1 (Low Risk);sponsor confirmed
47,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Lack of input validation in settng PendingGovernance,73,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/73,badgerdao,2021/10,bug;duplicate;1 (Low Risk);sponsor confirmed
47,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,pendingGovernance and  Governace address can be same,74,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/74,badgerdao,2021/10,bug;1 (Low Risk);sponsor confirmed
47,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,"use of depreciated ""now"" ",83,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/83,badgerdao,2021/10,bug;1 (Low Risk);sponsor confirmed
47,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,No address(0) validation in initialize(),84,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/84,badgerdao,2021/10,bug;duplicate;1 (Low Risk);sponsor acknowledged
47,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,In updatePricePerShare() no value is returned,85,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/85,badgerdao,2021/10,bug;1 (Low Risk);sponsor acknowledged
47,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,hard to clear balance,24,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/24,badgerdao,2021/10,bug;2 (Med Risk);sponsor confirmed
47,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Allowance is consistent in different functions,25,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/25,badgerdao,2021/10,bug;duplicate;3 (High Risk)
47,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Events are emitting storage vars instead of user/system values,46,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/46,badgerdao,2021/10,bug;G (Gas Optimization)
47,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,"pricePerShare might become stale and cause to lose user funds, as update is not enforced",66,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/66,badgerdao,2021/10,bug;duplicate;3 (High Risk);sponsor confirmed
47,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,No sanity check on pricePerShare might lead to lost value,68,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/68,badgerdao,2021/10,bug;2 (Med Risk);sponsor confirmed
47,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`WrappedIbbtcEth.sol` Does Not Incentivize Price Updates,94,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/94,badgerdao,2021/10,bug;duplicate;3 (High Risk);sponsor confirmed
47,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,2,"Ethereum wibBTC price per share dependant on being updated every X time, but contract has no checks whether price is updated",29,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/29,badgerdao,2021/10,bug;duplicate;3 (High Risk);sponsor confirmed
47,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Some functions can be external,30,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/30,badgerdao,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
47,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,0,Unlocked pragma,31,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/31,badgerdao,2021/10,bug;duplicate;0 (Non-critical);sponsor confirmed
47,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,initialize function can be frontrun,10,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/10,badgerdao,2021/10,bug;duplicate;1 (Low Risk);sponsor acknowledged
47,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,use safeTransfer instead of transfer of ibbtc,11,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/11,badgerdao,2021/10,bug;1 (Low Risk);sponsor confirmed
47,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,updatePricePerShare public functions could be set external to save gas,12,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/12,badgerdao,2021/10,bug;invalid;G (Gas Optimization)
47,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,initialize doesn't check address 0 case,13,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/13,badgerdao,2021/10,bug;duplicate;1 (Low Risk);sponsor acknowledged
47,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,mint may never succeed,14,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/14,badgerdao,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
47,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,lastPricePerShareUpdate state variable is unnecessary ,15,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/15,badgerdao,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
47,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,transferFrom function can be frontrun and unusable,16,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/16,badgerdao,2021/10,bug;invalid;2 (Med Risk);sponsor disputed
47,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Compile all project with the same solidity version,8,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/8,badgerdao,2021/10,bug;duplicate;0 (Non-critical);sponsor confirmed
47,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,ibbtc state variable can be immutable,9,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/9,badgerdao,2021/10,bug;duplicate;G (Gas Optimization);sponsor acknowledged
47,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,updatePricePerShare does not return declared value,75,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/75,badgerdao,2021/10,bug;duplicate;1 (Low Risk)
47,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Consider making contracts Pausable,76,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/76,badgerdao,2021/10,bug;1 (Low Risk);sponsor confirmed
47,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,balanceToShares should handle division by 0 case,77,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/77,badgerdao,2021/10,bug;duplicate;1 (Low Risk);sponsor confirmed
47,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0, modified _balances in OZ contract ,78,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/78,badgerdao,2021/10,bug;0 (Non-critical);sponsor disputed
47,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,ICore import,79,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/79,badgerdao,2021/10,bug;G (Gas Optimization);sponsor confirmed
47,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,onlyOracle never used,80,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/80,badgerdao,2021/10,bug;G (Gas Optimization);sponsor confirmed
47,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Immutable variable,81,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/81,badgerdao,2021/10,bug;duplicate;G (Gas Optimization);sponsor acknowledged
47,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Check if amount is not zero,82,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/82,badgerdao,2021/10,bug;G (Gas Optimization);sponsor confirmed
47,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,1,Lack of `address(0)` check,26,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/26,badgerdao,2021/10,bug;1 (Low Risk);sponsor confirmed
47,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,Remove unused functions in dependencys,27,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/27,badgerdao,2021/10,bug;0 (Non-critical)
47,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,"`WrappedIbbtc.sol` implements, but does not inherit, the `ICoreOracle` interface",28,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/28,badgerdao,2021/10,bug;0 (Non-critical)
47,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,2,Token is not ERC20 compliant (potential DOS of other contracts by oracle),6,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/6,badgerdao,2021/10,bug;duplicate;3 (High Risk);sponsor confirmed
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Unused code,47,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/47,badgerdao,2021/10,bug;duplicate;G (Gas Optimization)
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary storage read can save gas,48,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/48,badgerdao,2021/10,bug;G (Gas Optimization)
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Outdated compiler version,49,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/49,badgerdao,2021/10,bug;0 (Non-critical);sponsor acknowledged
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Outdated versions of OpenZeppelin library,50,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/50,badgerdao,2021/10,bug;0 (Non-critical);sponsor acknowledged
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache external call result in the stack can save gas,51,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/51,badgerdao,2021/10,bug;G (Gas Optimization);sponsor confirmed
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Missing error messages in require statements,52,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/52,badgerdao,2021/10,bug;0 (Non-critical);sponsor acknowledged
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Methods should be declared external,53,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/53,badgerdao,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Inconsistent use of `_msgSender()`,54,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/54,badgerdao,2021/10,bug;0 (Non-critical);sponsor confirmed
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Consider caching `pricePerShare` for `WrappedIbbtc.sol` to save gas,55,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/55,badgerdao,2021/10,bug;G (Gas Optimization);sponsor confirmed
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Consider removing `ICore.sol`,56,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/56,badgerdao,2021/10,bug;0 (Non-critical);sponsor confirmed
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Constants are not explicitly declared,57,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/57,badgerdao,2021/10,bug;0 (Non-critical);sponsor confirmed
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary external calls and storage writes can save gas,58,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/58,badgerdao,2021/10,bug;G (Gas Optimization);sponsor confirmed
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`WrappedIbbtcEth.sol` Sanity check of `pricePerShare` should be enforced,59,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/59,badgerdao,2021/10,bug;duplicate;3 (High Risk);sponsor confirmed
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Critical changes should use two-step procedure,60,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/60,badgerdao,2021/10,bug;0 (Non-critical);sponsor acknowledged
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`updatePricePerShare` should be run atomically with `setCore()` to make sure `pricePerShare` is up-to-date with the new Core,61,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/61,badgerdao,2021/10,bug;1 (Low Risk);sponsor confirmed
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,The `value` parameter of the `Transfer` event is wrong,62,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/62,badgerdao,2021/10,bug;1 (Low Risk);disagree with severity
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`transferFrom` amount may exceed allowance,63,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/63,badgerdao,2021/10,bug;duplicate;3 (High Risk)
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Redundant use of `virtual`,64,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/64,badgerdao,2021/10,bug;1 (Low Risk);sponsor confirmed
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,The design of `wibBTC` is not fully compatible with the current Curve StableSwap pool,65,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/65,badgerdao,2021/10,bug;3 (High Risk);sponsor confirmed
47,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Inconsistent use of `_msgSender()`,67,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/67,badgerdao,2021/10,bug;invalid;0 (Non-critical);sponsor confirmed
47,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,1,No restriction for initialize() function,32,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/32,badgerdao,2021/10,bug;duplicate;1 (Low Risk);sponsor acknowledged
47,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Use existing memory value of state variable (setPendingGovernance),21,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/21,badgerdao,2021/10,bug;G (Gas Optimization)
47,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,"No Initial Ownership Event  (WrappedIbbtcEth.sol, WrappedIbbtcEth.sol)",22,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/22,badgerdao,2021/10,bug;0 (Non-critical);sponsor confirmed
47,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Both msg.sender and _msgSender() are being used,23,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/23,badgerdao,2021/10,bug;duplicate;0 (Non-critical);sponsor confirmed
43,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,ERC20 return values not checked,56,https://github.com/code-423n4/2021-10-covalent-findings/issues/56,covalent,2021/10,bug;duplicate;G (Gas Optimization);sponsor disputed
43,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`unstake` should update exchange rates first,57,https://github.com/code-423n4/2021-10-covalent-findings/issues/57,covalent,2021/10,bug;3 (High Risk);resolved;sponsor confirmed
43,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`addValidator` could restrict `commissionRate`,58,https://github.com/code-423n4/2021-10-covalent-findings/issues/58,covalent,2021/10,bug;duplicate;1 (Low Risk)
43,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unbounded iteration over validators array,59,https://github.com/code-423n4/2021-10-covalent-findings/issues/59,covalent,2021/10,bug;1 (Low Risk);sponsor acknowledged
43,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Financial loss :: commissionAvailableToRedeem is assigned incorrectly,11,https://github.com/code-423n4/2021-10-covalent-findings/issues/11,covalent,2021/10,bug;invalid;3 (High Risk);sponsor disputed
43,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,takeOutRewardTokens does not work correctly,12,https://github.com/code-423n4/2021-10-covalent-findings/issues/12,covalent,2021/10,bug;invalid;2 (Med Risk);sponsor disputed
43,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,allocatedTokensPerEpoch cannot be changed under special scenario,7,https://github.com/code-423n4/2021-10-covalent-findings/issues/7,covalent,2021/10,bug;invalid;2 (Med Risk);sponsor disputed
43,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,redelegateUnstaked does not need to change coolDownEnd,8,https://github.com/code-423n4/2021-10-covalent-findings/issues/8,covalent,2021/10,bug;invalid;G (Gas Optimization);sponsor disputed
43,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,getValidatorsDetails is getting disabled validators as well,9,https://github.com/code-423n4/2021-10-covalent-findings/issues/9,covalent,2021/10,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
43,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,CALL TO transferToContract() IN THE CONTRACT WILL FAIL,18,https://github.com/code-423n4/2021-10-covalent-findings/issues/18,covalent,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
43,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Duplicate Validator Is not Checked,4,https://github.com/code-423n4/2021-10-covalent-findings/issues/4,covalent,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
43,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Validator Should Not Be Disabled By an Owner,5,https://github.com/code-423n4/2021-10-covalent-findings/issues/5,covalent,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
43,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,6,https://github.com/code-423n4/2021-10-covalent-findings/issues/6,covalent,2021/10,bug;duplicate;G (Gas Optimization)
43,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant Check On the Uint,64,https://github.com/code-423n4/2021-10-covalent-findings/issues/64,covalent,2021/10,bug;invalid;G (Gas Optimization);sponsor disputed
43,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimization on the Public Functions,78,https://github.com/code-423n4/2021-10-covalent-findings/issues/78,covalent,2021/10,bug;duplicate;G (Gas Optimization)
43,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,3,DOS By Front Running DelegatedStaking `initialize`,84,https://github.com/code-423n4/2021-10-covalent-findings/issues/84,covalent,2021/10,bug;invalid;2 (Med Risk);sponsor acknowledged
43,gpersoon,gpersoon.eth,2,reward tokens could get lost due to rounding down,10,https://github.com/code-423n4/2021-10-covalent-findings/issues/10,covalent,2021/10,bug;2 (Med Risk);resolved;sponsor confirmed
43,gpersoon,gpersoon.eth,G,reset rewardsLocked to 0 when no longer used,13,https://github.com/code-423n4/2021-10-covalent-findings/issues/13,covalent,2021/10,bug;G (Gas Optimization);resolved;sponsor confirmed
43,gpersoon,gpersoon.eth,2,disableValidator() can distort totalGlobalShares  (edge case),14,https://github.com/code-423n4/2021-10-covalent-findings/issues/14,covalent,2021/10,bug;invalid;2 (Med Risk);sponsor disputed
43,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,Public functions that should be external,86,https://github.com/code-423n4/2021-10-covalent-findings/issues/86,covalent,2021/10,bug;duplicate;G (Gas Optimization)
43,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,Change CQT storage variable to be constant,88,https://github.com/code-423n4/2021-10-covalent-findings/issues/88,covalent,2021/10,bug;duplicate;G (Gas Optimization)
43,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,Remove duplicate reads of validatorsN storage variable,90,https://github.com/code-423n4/2021-10-covalent-findings/issues/90,covalent,2021/10,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
43,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,addValidator(): Validator's commission rate should be checked to not exceed divider,20,https://github.com/code-423n4/2021-10-covalent-findings/issues/20,covalent,2021/10,bug;1 (Low Risk);resolved;sponsor confirmed
43,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Have function to withdraw accidentally sent funds,21,https://github.com/code-423n4/2021-10-covalent-findings/issues/21,covalent,2021/10,bug;invalid;0 (Non-critical);sponsor disputed
43,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Make more data accessible,22,https://github.com/code-423n4/2021-10-covalent-findings/issues/22,covalent,2021/10,bug;0 (Non-critical);sponsor acknowledged
43,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Spelling errors,23,https://github.com/code-423n4/2021-10-covalent-findings/issues/23,covalent,2021/10,bug;duplicate;0 (Non-critical);resolved;sponsor confirmed
43,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,takeOutRewardTokens(): epochs calculation should be rounded up ,24,https://github.com/code-423n4/2021-10-covalent-findings/issues/24,covalent,2021/10,bug;duplicate;2 (Med Risk)
43,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,unstake(): validatorSharesRemove should be calculated after updateValidator() is called,25,https://github.com/code-423n4/2021-10-covalent-findings/issues/25,covalent,2021/10,bug;invalid;3 (High Risk);sponsor disputed
43,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,takeOutRewardTokens(): Optimise epochs calculation and comparison ,26,https://github.com/code-423n4/2021-10-covalent-findings/issues/26,covalent,2021/10,bug;G (Gas Optimization);resolved;sponsor confirmed
43,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,No sanity check in `addValidator`.,61,https://github.com/code-423n4/2021-10-covalent-findings/issues/61,covalent,2021/10,bug;duplicate;1 (Low Risk)
43,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,G,Use constant to save gas,62,https://github.com/code-423n4/2021-10-covalent-findings/issues/62,covalent,2021/10,bug;duplicate;G (Gas Optimization)
43,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,G,unnecessary assert when dealing with CQT,63,https://github.com/code-423n4/2021-10-covalent-findings/issues/63,covalent,2021/10,bug;G (Gas Optimization);sponsor disputed
43,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Validator can fail to receive commission reward in `redeemAllRewards`,65,https://github.com/code-423n4/2021-10-covalent-findings/issues/65,covalent,2021/10,bug;2 (Med Risk);sponsor acknowledged
43,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Epoch may rounded to zero in deposit depositRewardTokens and takeOutRewardTokens,66,https://github.com/code-423n4/2021-10-covalent-findings/issues/66,covalent,2021/10,bug;duplicate;2 (Med Risk)
43,Koustre,0xa360E38cdf57e092218E7A5f4Eb73032eE74A8bD,1,Anyone can call the initialize function,72,https://github.com/code-423n4/2021-10-covalent-findings/issues/72,covalent,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,state variable divider could be set immutable.,27,https://github.com/code-423n4/2021-10-covalent-findings/issues/27,covalent,2021/10,bug;G (Gas Optimization);resolved;sponsor confirmed
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,validatorCoolDown  at DelegatedStaking.sol,28,https://github.com/code-423n4/2021-10-covalent-findings/issues/28,covalent,2021/10,bug;invalid;G (Gas Optimization);sponsor acknowledged;sponsor disputed
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,delegatorCoolDown ,29,https://github.com/code-423n4/2021-10-covalent-findings/issues/29,covalent,2021/10,bug;G (Gas Optimization);sponsor acknowledged;sponsor disputed
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,CQT,30,https://github.com/code-423n4/2021-10-covalent-findings/issues/30,covalent,2021/10,bug;duplicate;G (Gas Optimization)
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,initializer can be frontrun,31,https://github.com/code-423n4/2021-10-covalent-findings/issues/31,covalent,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,An explicit Reentrancy issue,32,https://github.com/code-423n4/2021-10-covalent-findings/issues/32,covalent,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,emit initialize,33,https://github.com/code-423n4/2021-10-covalent-findings/issues/33,covalent,2021/10,bug;0 (Non-critical);resolved;sponsor confirmed
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,0,emit staked should be at stake function and not _stake.,34,https://github.com/code-423n4/2021-10-covalent-findings/issues/34,covalent,2021/10,bug;0 (Non-critical);sponsor disputed
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,addValidatior doesn't check new validator address != 0,35,https://github.com/code-423n4/2021-10-covalent-findings/issues/35,covalent,2021/10,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Line 127 lack of precision,36,https://github.com/code-423n4/2021-10-covalent-findings/issues/36,covalent,2021/10,bug;1 (Low Risk);resolved;sponsor confirmed
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,++i is more gas efficient than i++ in loops forwarding,37,https://github.com/code-423n4/2021-10-covalent-findings/issues/37,covalent,2021/10,bug;G (Gas Optimization);resolved;sponsor confirmed
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,storage state variable is called inside a loop instead of caching,38,https://github.com/code-423n4/2021-10-covalent-findings/issues/38,covalent,2021/10,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,getDelegatorDetails declaration inside a loop,39,https://github.com/code-423n4/2021-10-covalent-findings/issues/39,covalent,2021/10,bug;G (Gas Optimization);resolved;sponsor confirmed
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,public functions could be set internal,40,https://github.com/code-423n4/2021-10-covalent-findings/issues/40,covalent,2021/10,bug;duplicate;G (Gas Optimization)
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,0,Can't change CQT,41,https://github.com/code-423n4/2021-10-covalent-findings/issues/41,covalent,2021/10,bug;invalid;0 (Non-critical);sponsor disputed
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Change order of lines to save gas in setAllocatedTokensPerEpoch,73,https://github.com/code-423n4/2021-10-covalent-findings/issues/73,covalent,2021/10,bug;G (Gas Optimization);sponsor acknowledged
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,setValidatorMinStakedRequired forgot to check amount >0,74,https://github.com/code-423n4/2021-10-covalent-findings/issues/74,covalent,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Change lines to save gas,75,https://github.com/code-423n4/2021-10-covalent-findings/issues/75,covalent,2021/10,bug;G (Gas Optimization);resolved;sponsor confirmed
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,change lines to save gas,76,https://github.com/code-423n4/2021-10-covalent-findings/issues/76,covalent,2021/10,bug;invalid;G (Gas Optimization);sponsor disputed
43,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,Validators can only be added but not removed,77,https://github.com/code-423n4/2021-10-covalent-findings/issues/77,covalent,2021/10,bug;invalid;2 (Med Risk);sponsor disputed
43,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Lower than uint256 type variables ,80,https://github.com/code-423n4/2021-10-covalent-findings/issues/80,covalent,2021/10,bug;invalid;G (Gas Optimization);sponsor disputed
43,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unchecked operations,81,https://github.com/code-423n4/2021-10-covalent-findings/issues/81,covalent,2021/10,bug;duplicate;G (Gas Optimization)
43,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,public external functions,82,https://github.com/code-423n4/2021-10-covalent-findings/issues/82,covalent,2021/10,bug;duplicate;G (Gas Optimization)
43,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,addValidator should validate commissionRate,83,https://github.com/code-423n4/2021-10-covalent-findings/issues/83,covalent,2021/10,bug;duplicate;1 (Low Risk)
43,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Declare variable `CQT` as constant,67,https://github.com/code-423n4/2021-10-covalent-findings/issues/67,covalent,2021/10,bug;G (Gas Optimization);resolved;sponsor confirmed
43,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,Unclear definition of `validatorId`'s integer size,68,https://github.com/code-423n4/2021-10-covalent-findings/issues/68,covalent,2021/10,bug;0 (Non-critical);resolved;sponsor confirmed
43,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,1,Function `addValidator()` is missing check if validator exists already,69,https://github.com/code-423n4/2021-10-covalent-findings/issues/69,covalent,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
43,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,Inconsistent definition of integer sizes in function `getDelegatorDetails()`,70,https://github.com/code-423n4/2021-10-covalent-findings/issues/70,covalent,2021/10,bug;0 (Non-critical);resolved;sponsor confirmed
43,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Typos,42,https://github.com/code-423n4/2021-10-covalent-findings/issues/42,covalent,2021/10,bug;0 (Non-critical);resolved;sponsor confirmed
43,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Changing function visibility from public to external can save gas,43,https://github.com/code-423n4/2021-10-covalent-findings/issues/43,covalent,2021/10,bug;duplicate;G (Gas Optimization)
43,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`redeemAllRewards()` may fail when a validator tries to redeem `v.commissionAvailableToRedeem`,44,https://github.com/code-423n4/2021-10-covalent-findings/issues/44,covalent,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
43,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Usage of an incorrect version of `Ownbale` library can potentially malfunction all `onlyOwner` functions,45,https://github.com/code-423n4/2021-10-covalent-findings/issues/45,covalent,2021/10,bug;3 (High Risk);resolved;sponsor confirmed
43,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code duplication,46,https://github.com/code-423n4/2021-10-covalent-findings/issues/46,covalent,2021/10,bug;0 (Non-critical);resolved;sponsor confirmed
43,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`setAllocatedTokensPerEpoch()` will fail when `endEpoch > block.number`,47,https://github.com/code-423n4/2021-10-covalent-findings/issues/47,covalent,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
43,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary code execution can save gas,48,https://github.com/code-423n4/2021-10-covalent-findings/issues/48,covalent,2021/10,bug;duplicate;G (Gas Optimization)
43,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary storage read can save gas,49,https://github.com/code-423n4/2021-10-covalent-findings/issues/49,covalent,2021/10,bug;G (Gas Optimization);resolved;sponsor confirmed
43,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Unsafe type casting may over/underflow,50,https://github.com/code-423n4/2021-10-covalent-findings/issues/50,covalent,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
43,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Check `validatorId < validatorsN` can be done earlier,51,https://github.com/code-423n4/2021-10-covalent-findings/issues/51,covalent,2021/10,bug;G (Gas Optimization);sponsor disputed
43,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,52,https://github.com/code-423n4/2021-10-covalent-findings/issues/52,covalent,2021/10,bug;G (Gas Optimization);resolved;sponsor confirmed
43,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache storage variables in the stack can save gas,53,https://github.com/code-423n4/2021-10-covalent-findings/issues/53,covalent,2021/10,bug;G (Gas Optimization);resolved;sponsor confirmed
43,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Change unchanged storage variables to constants can save gas,54,https://github.com/code-423n4/2021-10-covalent-findings/issues/54,covalent,2021/10,bug;duplicate;G (Gas Optimization)
43,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code Style: private/internal function names should be prefixed with `_`,55,https://github.com/code-423n4/2021-10-covalent-findings/issues/55,covalent,2021/10,bug;0 (Non-critical);resolved;sponsor confirmed
43,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Misleading parameter name,60,https://github.com/code-423n4/2021-10-covalent-findings/issues/60,covalent,2021/10,bug;0 (Non-critical);resolved;sponsor confirmed
43,xYrYuYx,0xc105124ff3c4208a03696d779019eF3171633186,G,Recommend to use OZ SafeERC20 library,1,https://github.com/code-423n4/2021-10-covalent-findings/issues/1,covalent,2021/10,bug;G (Gas Optimization);resolved;sponsor confirmed
43,xYrYuYx,0xc105124ff3c4208a03696d779019eF3171633186,2,Unable to redeem rest funds if deposited reward is not multiplier of allocatedTokensPerEpoch,15,https://github.com/code-423n4/2021-10-covalent-findings/issues/15,covalent,2021/10,bug;duplicate;2 (Med Risk)
43,xYrYuYx,0xc105124ff3c4208a03696d779019eF3171633186,2,Users could lose funds if owner took out reward which is not multiplier of allocatedTokensPerEpoch,16,https://github.com/code-423n4/2021-10-covalent-findings/issues/16,covalent,2021/10,bug;duplicate;2 (Med Risk)
43,xYrYuYx,0xc105124ff3c4208a03696d779019eF3171633186,2,Incorrect updateGlobalExchangeRate implementation,17,https://github.com/code-423n4/2021-10-covalent-findings/issues/17,covalent,2021/10,bug;2 (Med Risk);disagree with severity;resolved;sponsor acknowledged;sponsor confirmed
43,xYrYuYx,0xc105124ff3c4208a03696d779019eF3171633186,G,Update function access,2,https://github.com/code-423n4/2021-10-covalent-findings/issues/2,covalent,2021/10,bug;G (Gas Optimization);sponsor acknowledged
43,xYrYuYx,0xc105124ff3c4208a03696d779019eF3171633186,0,Unnecessary require checker,3,https://github.com/code-423n4/2021-10-covalent-findings/issues/3,covalent,2021/10,bug;0 (Non-critical);resolved;sponsor confirmed
43,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Long Revert Strings,19,https://github.com/code-423n4/2021-10-covalent-findings/issues/19,covalent,2021/10,bug;G (Gas Optimization);resolved;sponsor confirmed
43,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Save Gas With The Unchecked Keyword,71,https://github.com/code-423n4/2021-10-covalent-findings/issues/71,covalent,2021/10,bug;duplicate;G (Gas Optimization)
43,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Save Gas With The Unchecked Keyword,85,https://github.com/code-423n4/2021-10-covalent-findings/issues/85,covalent,2021/10,bug;duplicate;invalid;G (Gas Optimization)
43,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Comment typos,87,https://github.com/code-423n4/2021-10-covalent-findings/issues/87,covalent,2021/10,bug;duplicate;0 (Non-critical)
43,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Move Function _stake Validator Declaration,89,https://github.com/code-423n4/2021-10-covalent-findings/issues/89,covalent,2021/10,bug;G (Gas Optimization);resolved;sponsor confirmed
41,0xngndev,0xF8cE240B29246FAff3AF7fdE780A4AC6d537f59A,G,Gas Optimization - Struct Packing and Variable Packing,3,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/3,defiprotocol,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
41,0xngndev,0xF8cE240B29246FAff3AF7fdE780A4AC6d537f59A,G,Gas Optimization: Removing Unnecesarry NonReentrant Modifiers,5,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/5,defiprotocol,2021/10,bug;invalid;G (Gas Optimization);sponsor acknowledged
41,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1, Missing events for basket only functions that change critical parameters,81,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/81,defiprotocol,2021/10,bug;0 (Non-critical);sponsor confirmed;disagree with severity
41,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing events for owner only functions that change critical parameters,82,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/82,defiprotocol,2021/10,bug;0 (Non-critical);sponsor confirmed;disagree with severity
41,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Bonding mechanism allows malicious user to DOS auctions,48,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/48,defiprotocol,2021/10,bug;3 (High Risk);sponsor acknowledged
41,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Basket becomes unusable if everybody burns their shares,49,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/49,defiprotocol,2021/10,bug;2 (Med Risk);sponsor confirmed
41,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,Inaccurate log emitted at deleteNewIndex,50,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/50,defiprotocol,2021/10,bug;1 (Low Risk);sponsor acknowledged
41,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Auction bonder can steal user funds if bond block is high enough,51,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/51,defiprotocol,2021/10,bug;2 (Med Risk);sponsor confirmed
41,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,"Redundant call to external contract, result can be saved",52,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/52,defiprotocol,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
41,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Restore state to 0 if not needed anymore,53,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/53,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor acknowledged
41,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Unnecessary initializing of variable to 0,54,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/54,defiprotocol,2021/10,bug;duplicate;G (Gas Optimization);sponsor acknowledged
41,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Pack together bool variables in Auction,55,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/55,defiprotocol,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
41,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Unnecessary new list in Basket's validateWeights(),56,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/56,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Unnecessary nonReentrant at mint breaks protocol,57,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/57,defiprotocol,2021/10,bug;duplicate;2 (Med Risk);sponsor confirmed
41,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,Tests are broken,58,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/58,defiprotocol,2021/10,bug;1 (Low Risk);sponsor acknowledged
41,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Basket: No need for initialized variable,63,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/63,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor acknowledged
41,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Comparisons to boolean constant,47,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/47,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,DAY Long calculation,1,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/1,defiprotocol,2021/10,bug;invalid;1 (Low Risk);sponsor acknowledged;disagree with severity
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Open TODOs in `Factory`,10,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/10,defiprotocol,2021/10,bug;0 (Non-critical);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,State variables in `Factory` can be `immutable`,11,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/11,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`public` functions in `Auction` can be `external`,12,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/12,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`public` functions in `Basket` can be `external`,13,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/13,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`public` functions in `Factory` can be `external`,14,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/14,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`internal` function in `Auction` can be `private`,15,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/15,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Require statements without messages in `Auction`,16,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/16,defiprotocol,2021/10,bug;0 (Non-critical);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Require statements without messages in `Basket`,17,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/17,defiprotocol,2021/10,bug;0 (Non-critical);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Require statements without messages in `Factory`,18,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/18,defiprotocol,2021/10,bug;0 (Non-critical);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,0,Confusing return value in `Factory.proposeBasketLicense()`,19,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/19,defiprotocol,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Year long calculation is wrong,2,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/2,defiprotocol,2021/10,bug;invalid;1 (Low Risk);sponsor acknowledged;disagree with severity
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary cast in `Factory.proposeBasketLicense()`,20,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/20,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary cast in `Basket.onlyPublisher()`,21,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/21,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Prefix increament is cheaper than postfix increament,22,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/22,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Setting `Factory.bondPercentDiv` to zero cause Denial of Service in `Auction.bondForRebalance()`,23,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/23,defiprotocol,2021/10,bug;2 (Med Risk);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Setting `Factory.auctionDecrement` to zero causes Denial of Service in `Auction.settleAuction()`,24,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/24,defiprotocol,2021/10,bug;2 (Med Risk);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,"Unnecessary checked arithmetic in `Auction.settleAuction()`, `Auction.bondBurn()`, `Basket.changePublisher()`, `Basket.changeLicenseFee()` and `Basket.publishNewIndex()`",25,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/25,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary checked arithmetic in `Auction.addBounty()` and `Factory.proposeBasketLicense()`,26,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/26,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary checked arithmetic in `Basket.handleFees()`,27,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/27,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary checked arithmetic in for loops,28,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/28,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary require statement in `Auction.initialize()` and `Basket.initialize()`,29,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/29,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Array out-of-bounds errors in `Factory`,30,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/30,defiprotocol,2021/10,bug;1 (Low Risk);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Array out-of-bounds error in `Auction`,31,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/31,defiprotocol,2021/10,bug;1 (Low Risk);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,0,Inconsistent naming of a function's argument in `Factory`,32,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/32,defiprotocol,2021/10,bug;0 (Non-critical);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary `SLOAD`s in `Auction`,33,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/33,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary `SLOAD`s in `Basket`,34,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/34,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary `SLOAD`s in `Factory`,35,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/35,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary `SLOAD`s and `MLOAD`s in for-each loops,36,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/36,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary array boundaries check when loading an array element twice,37,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/37,defiprotocol,2021/10,bug;invalid;G (Gas Optimization);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Empty `else if` block in `Basket.publishNewIndex()`,38,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/38,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary external call in `Basket.approveUnderlying()`,39,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/39,defiprotocol,2021/10,bug;invalid;G (Gas Optimization);sponsor disputed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,Denial of Service in `Basket.mint()`,40,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/40,defiprotocol,2021/10,bug;duplicate;2 (Med Risk);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,`Auction.settleAuction()` and `IAuction.settleAuction()` accept arguments with different data locations,41,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/41,defiprotocol,2021/10,bug;1 (Low Risk);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,`Basket.publishNewIndex()` and `IBasket.publishNewIndex()` accept arguments with different data locations,42,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/42,defiprotocol,2021/10,bug;1 (Low Risk);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,`Factory.proposeBasketLicense()` and `IFactory.proposeBasketLicense()` accept arguments with different data locations,43,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/43,defiprotocol,2021/10,bug;1 (Low Risk);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,0,Events in `IAuction` don't use the `indexed` keyword,44,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/44,defiprotocol,2021/10,bug;0 (Non-critical);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,0,`nonReentrant` modifier should be used before any other modifier,45,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/45,defiprotocol,2021/10,bug;0 (Non-critical);sponsor confirmed
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Open TODOs in `IBasket`,6,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/6,defiprotocol,2021/10,bug;0 (Non-critical);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Open TODOs in `IFactory`,7,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/7,defiprotocol,2021/10,bug;0 (Non-critical);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Open TODOs in `Auction`,8,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/8,defiprotocol,2021/10,bug;0 (Non-critical);sponsor acknowledged
41,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Open TODOs in `Basket`,9,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/9,defiprotocol,2021/10,bug;0 (Non-critical);sponsor acknowledged
41,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,mint will always revert,83,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/83,defiprotocol,2021/10,bug;duplicate;2 (Med Risk);sponsor confirmed
41,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Validations,84,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/84,defiprotocol,2021/10,bug;2 (Med Risk);sponsor acknowledged;disagree with severity
41,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,createBasket re-entrancy,85,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/85,defiprotocol,2021/10,bug;2 (Med Risk);sponsor confirmed
41,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,How much to approve before calling mintTo,86,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/86,defiprotocol,2021/10,bug;1 (Low Risk);sponsor acknowledged
41,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,There may be no bounties or user is not interested in any of them,87,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/87,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache basketAsERC20.totalSupply(),88,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/88,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache factory.ownerSplit(),89,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/89,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Useless initialization,90,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/90,defiprotocol,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
41,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Set initial value for lastFee,91,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/91,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Uninitialized variables are automatically set to 0,70,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/70,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor acknowledged
41,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Unchecked modifiers should be used when over/under-flow isnt an issue to save gas,71,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/71,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor acknowledged
41,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,uint256 can be lowered to unitX with X < 256 in some cases,72,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/72,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor acknowledged
41,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Remove hardhat import,73,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/73,defiprotocol,2021/10,bug;0 (Non-critical);sponsor acknowledged
41,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,G,Increase optimizer runs,74,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/74,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor acknowledged
41,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Input Validation on Factory.sol,75,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/75,defiprotocol,2021/10,bug;1 (Low Risk);sponsor acknowledged
41,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,1,Lack of Documentation on key functions,77,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/77,defiprotocol,2021/10,bug;0 (Non-critical);sponsor acknowledged
41,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Fee on transfer tokens do not work within the protocol,78,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/78,defiprotocol,2021/10,bug;2 (Med Risk);sponsor acknowledged
41,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,3,If newRatio > ibRatio after a settlement the protocol could lose its funds.,79,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/79,defiprotocol,2021/10,bug;invalid;3 (High Risk);sponsor disputed
41,tensors,0x3C86b2B86F0A4B180802026cB1d0d73F80200AB3,2,Sensitive variables should not be able to be changed easily,80,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/80,defiprotocol,2021/10,bug;1 (Low Risk);sponsor acknowledged
41,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`Basket.sol#mint()` Malfunction due to extra `nonReentrant` modifier,59,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/59,defiprotocol,2021/10,bug;2 (Med Risk);sponsor confirmed
41,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Basket.sol` should have methods to cancel pending changes,60,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/60,defiprotocol,2021/10,bug;0 (Non-critical);sponsor confirmed
41,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Basket.sol#changePublisher()` Insufficient input validation,61,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/61,defiprotocol,2021/10,bug;1 (Low Risk);sponsor confirmed
41,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Basket.sol#changeLicenseFee()` Remove redundant check can save gas,62,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/62,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Basket.sol#changePublisher()` Remove redundant assertion can save gas,64,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/64,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
41,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Basket.sol#initialize()` Remove redundant code can save gas,65,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/65,defiprotocol,2021/10,bug;duplicate;G (Gas Optimization);sponsor acknowledged
41,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Factory.sol#constructor` Remove redundant code can save gas,66,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/66,defiprotocol,2021/10,bug;duplicate;G (Gas Optimization);sponsor acknowledged
41,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Basket.sol#initialize()` Remove redundant assertion can save gas,67,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/67,defiprotocol,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
41,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Basket.sol` should use the Upgradeable variant of OpenZeppelin Contracts,68,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/68,defiprotocol,2021/10,bug;1 (Low Risk);sponsor acknowledged
41,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Unused imports,69,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/69,defiprotocol,2021/10,bug;duplicate;0 (Non-critical);sponsor acknowledged
41,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused Named Returns Can Be Removed,4,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/4,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor acknowledged
41,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Minimize Storage Slots (Auction.sol),46,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/46,defiprotocol,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,getLiquidity() should be external,140,https://github.com/code-423n4/2021-10-mochi-findings/issues/140,mochi,2021/10,bug;duplicate;G (Gas Optimization)
42,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Cached length of arrays to avoid loading them repeadetly,64,https://github.com/code-423n4/2021-10-mochi-findings/issues/64,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,flashFee includes operations between constants and further tips,78,https://github.com/code-423n4/2021-10-mochi-findings/issues/78,mochi,2021/10,bug;invalid;G (Gas Optimization)
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,ERC20 return values not checked,120,https://github.com/code-423n4/2021-10-mochi-findings/issues/120,mochi,2021/10,bug;duplicate;2 (Med Risk)
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,General missing parameter validation,121,https://github.com/code-423n4/2021-10-mochi-findings/issues/121,mochi,2021/10,bug;duplicate;1 (Low Risk)
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Key currencies can be double counted,122,https://github.com/code-423n4/2021-10-mochi-findings/issues/122,mochi,2021/10,bug;1 (Low Risk);sponsor acknowledged
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Mochi fees can be accidentally burned,123,https://github.com/code-423n4/2021-10-mochi-findings/issues/123,mochi,2021/10,bug;1 (Low Risk);sponsor confirmed
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Flashloan fee griefing attack for existing approvals,124,https://github.com/code-423n4/2021-10-mochi-findings/issues/124,mochi,2021/10,bug;1 (Low Risk);sponsor confirmed
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Missing slippage checks,125,https://github.com/code-423n4/2021-10-mochi-findings/issues/125,mochi,2021/10,bug;duplicate;2 (Med Risk)
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,liquidation factor < collateral factor for Sigma type,126,https://github.com/code-423n4/2021-10-mochi-findings/issues/126,mochi,2021/10,bug;2 (Med Risk);sponsor confirmed
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unsafe `int256` casts in `accrueDebt`,128,https://github.com/code-423n4/2021-10-mochi-findings/issues/128,mochi,2021/10,bug;1 (Low Risk);sponsor confirmed
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Debt accrual is path-dependant and inaccurate,129,https://github.com/code-423n4/2021-10-mochi-findings/issues/129,mochi,2021/10,bug;2 (Med Risk);sponsor confirmed
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Changing engine.nft contract breaks vaults,130,https://github.com/code-423n4/2021-10-mochi-findings/issues/130,mochi,2021/10,bug;2 (Med Risk);sponsor confirmed
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,"""Liquidated"" status never set on NFT",131,https://github.com/code-423n4/2021-10-mochi-findings/issues/131,mochi,2021/10,bug;duplicate;0 (Non-critical);disagree with severity
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing low-level call success check,132,https://github.com/code-423n4/2021-10-mochi-findings/issues/132,mochi,2021/10,bug;duplicate;1 (Low Risk)
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,ChainLink price data could be stale,133,https://github.com/code-423n4/2021-10-mochi-findings/issues/133,mochi,2021/10,bug;duplicate;2 (Med Risk)
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,UniswapV2/SushiwapLPAdapter update the wrong token,134,https://github.com/code-423n4/2021-10-mochi-findings/issues/134,mochi,2021/10,bug;2 (Med Risk);sponsor confirmed
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,UniswapV2TokenAdapter does not support Sushiswap-only assets,135,https://github.com/code-423n4/2021-10-mochi-findings/issues/135,mochi,2021/10,bug;2 (Med Risk);sponsor confirmed
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`UniswapV2CSSR` assumes data was observed when block state was inserted,136,https://github.com/code-423n4/2021-10-mochi-findings/issues/136,mochi,2021/10,bug;1 (Low Risk);sponsor acknowledged
42,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Uniswap / Sushiswap prices can be manipulated through flashloans,137,https://github.com/code-423n4/2021-10-mochi-findings/issues/137,mochi,2021/10,bug;invalid;3 (High Risk)
42,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing events for governor only functions that change critical parameters,32,https://github.com/code-423n4/2021-10-mochi-findings/issues/32,mochi,2021/10,bug;0 (Non-critical);disagree with severity
42,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,SHOULD CHECK RETURN DATA FROM CHAINLINK AGGREGATORS,33,https://github.com/code-423n4/2021-10-mochi-findings/issues/33,mochi,2021/10,bug;duplicate;2 (Med Risk)
42,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,34,https://github.com/code-423n4/2021-10-mochi-findings/issues/34,mochi,2021/10,bug;G (Gas Optimization)
42,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,35,https://github.com/code-423n4/2021-10-mochi-findings/issues/35,mochi,2021/10,bug;duplicate;2 (Med Risk)
42,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,ERC20 approve method missing return value check,36,https://github.com/code-423n4/2021-10-mochi-findings/issues/36,mochi,2021/10,bug;0 (Non-critical)
42,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,FRONT-RUNNABLE INITIALIZERS,37,https://github.com/code-423n4/2021-10-mochi-findings/issues/37,mochi,2021/10,bug;1 (Low Risk);sponsor acknowledged
42,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimization on the Public Function,38,https://github.com/code-423n4/2021-10-mochi-findings/issues/38,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant code - liquidated variable,39,https://github.com/code-423n4/2021-10-mochi-findings/issues/39,mochi,2021/10,bug;duplicate;G (Gas Optimization)
42,gpersoon,gpersoon.eth,3,registerAsset() can overwrite _assetClass value,20,https://github.com/code-423n4/2021-10-mochi-findings/issues/20,mochi,2021/10,bug;3 (High Risk);sponsor confirmed
42,gpersoon,gpersoon.eth,2,griefing attack to block withdraws,21,https://github.com/code-423n4/2021-10-mochi-findings/issues/21,mochi,2021/10,bug;2 (Med Risk);sponsor confirmed
42,gpersoon,gpersoon.eth,1,Link between _id and asset not allways checked,22,https://github.com/code-423n4/2021-10-mochi-findings/issues/22,mochi,2021/10,bug;invalid;1 (Low Risk)
42,gpersoon,gpersoon.eth,1,"State of ""Liquidated"" not used",23,https://github.com/code-423n4/2021-10-mochi-findings/issues/23,mochi,2021/10,bug;duplicate;0 (Non-critical);disagree with severity
42,gpersoon,gpersoon.eth,2,Liquidations might not take place at the optimal moment,24,https://github.com/code-423n4/2021-10-mochi-findings/issues/24,mochi,2021/10,bug;invalid;2 (Med Risk)
42,gpersoon,gpersoon.eth,3,debts calculation is not accurate,25,https://github.com/code-423n4/2021-10-mochi-findings/issues/25,mochi,2021/10,bug;3 (High Risk);sponsor confirmed
42,gpersoon,gpersoon.eth,1,Not all functions of DutchAuctionLiquidator.sol check the auction state,26,https://github.com/code-423n4/2021-10-mochi-findings/issues/26,mochi,2021/10,bug;0 (Non-critical);disagree with severity
42,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Placement of require statements in MochiVault.sol,27,https://github.com/code-423n4/2021-10-mochi-findings/issues/27,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Caching variables,28,https://github.com/code-423n4/2021-10-mochi-findings/issues/28,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Use mapping instead of hardcode ifs,29,https://github.com/code-423n4/2021-10-mochi-findings/issues/29,mochi,2021/10,bug;invalid;G (Gas Optimization)
42,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Struct layout,30,https://github.com/code-423n4/2021-10-mochi-findings/issues/30,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,0,Lack of input validation of arrays,31,https://github.com/code-423n4/2021-10-mochi-findings/issues/31,mochi,2021/10,bug;0 (Non-critical);sponsor acknowledged
42,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,borrow function will borrow max cf when trying to borrow > cf,45,https://github.com/code-423n4/2021-10-mochi-findings/issues/45,mochi,2021/10,bug;2 (Med Risk);sponsor acknowledged
42,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,borrow function will underflow when vault collateral is > cf,46,https://github.com/code-423n4/2021-10-mochi-findings/issues/46,mochi,2021/10,bug;invalid;1 (Low Risk)
42,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Unnecessary _liquidatable check in withdraw function,49,https://github.com/code-423n4/2021-10-mochi-findings/issues/49,mochi,2021/10,bug;invalid;G (Gas Optimization)
42,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,0,Unable to deposit to liquidated vault as specified,50,https://github.com/code-423n4/2021-10-mochi-findings/issues/50,mochi,2021/10,bug;0 (Non-critical);resolved
42,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,0,Vault status is not set to Liquidated after liquidation,51,https://github.com/code-423n4/2021-10-mochi-findings/issues/51,mochi,2021/10,bug;0 (Non-critical);sponsor confirmed
42,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Unused variable in MochiVault.sol,52,https://github.com/code-423n4/2021-10-mochi-findings/issues/52,mochi,2021/10,bug;duplicate;G (Gas Optimization)
42,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Unchecked ERC20 transfer in DutchAuctionLiquidator.sol,53,https://github.com/code-423n4/2021-10-mochi-findings/issues/53,mochi,2021/10,bug;duplicate;2 (Med Risk)
42,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Struct layout in DutchAuctionLiquidator.sol,54,https://github.com/code-423n4/2021-10-mochi-findings/issues/54,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Referrer can drain ReferralFeePoolV0,55,https://github.com/code-423n4/2021-10-mochi-findings/issues/55,mochi,2021/10,bug;3 (High Risk);sponsor confirmed
42,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,borrow function will underflow when total debt > creditCap,56,https://github.com/code-423n4/2021-10-mochi-findings/issues/56,mochi,2021/10,bug;0 (Non-critical);disagree with severity
42,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Incorrect parameter in MochiProfileV0 may lead to instant liquidation,58,https://github.com/code-423n4/2021-10-mochi-findings/issues/58,mochi,2021/10,bug;duplicate;2 (Med Risk)
42,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,Unused storage variable in UsdmMinter.sol,42,https://github.com/code-423n4/2021-10-mochi-findings/issues/42,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,MochiVault.sol asset is not actually immutable,44,https://github.com/code-423n4/2021-10-mochi-findings/issues/44,mochi,2021/10,bug;duplicate;invalid;G (Gas Optimization)
42,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,Replace engine.nft().ownerOf(_id) with msg.sender in withdraw function,47,https://github.com/code-423n4/2021-10-mochi-findings/issues/47,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,Move require statements to top of borrow function,48,https://github.com/code-423n4/2021-10-mochi-findings/issues/48,mochi,2021/10,bug;duplicate;G (Gas Optimization)
42,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,Remove unused liquidated storage variable in MochiVault.sol,57,https://github.com/code-423n4/2021-10-mochi-findings/issues/57,mochi,2021/10,bug;duplicate;G (Gas Optimization)
42,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,liquidate function does not update status,59,https://github.com/code-423n4/2021-10-mochi-findings/issues/59,mochi,2021/10,bug;duplicate;0 (Non-critical)
42,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,3,Liquidation will never work with non-zero discounts,66,https://github.com/code-423n4/2021-10-mochi-findings/issues/66,mochi,2021/10,bug;3 (High Risk);sponsor confirmed
42,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,3,Anyone can extend withdraw wait period by depositing zero collateral,69,https://github.com/code-423n4/2021-10-mochi-findings/issues/69,mochi,2021/10,bug;3 (High Risk);sponsor confirmed
42,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,0,Misspelling: Collaterized should be Collateralized,70,https://github.com/code-423n4/2021-10-mochi-findings/issues/70,mochi,2021/10,bug;0 (Non-critical);sponsor confirmed
42,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,Unnecessary require in settleLiquidation ,71,https://github.com/code-423n4/2021-10-mochi-findings/issues/71,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,Possible to restart liquidation process after liquidation is settled,81,https://github.com/code-423n4/2021-10-mochi-findings/issues/81,mochi,2021/10,bug;invalid;2 (Med Risk)
42,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,"Historic data being requested as a part of MochiVault.withdraw and borrow functions can be outdated, so a user can avoid historic data update with sending old piece of _data",143,https://github.com/code-423n4/2021-10-mochi-findings/issues/143,mochi,2021/10,bug;invalid;2 (Med Risk)
42,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,0,Events on key Vault actions,146,https://github.com/code-423n4/2021-10-mochi-findings/issues/146,mochi,2021/10,bug;duplicate;0 (Non-critical)
42,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,0,"Explicit type setting in MochiCSSRv0 definitions (clearer code, saving type conversion gas)",147,https://github.com/code-423n4/2021-10-mochi-findings/issues/147,mochi,2021/10,bug;invalid;0 (Non-critical)
42,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,"Gas optimizations (code simplification, memory variables addition or removal)",164,https://github.com/code-423n4/2021-10-mochi-findings/issues/164,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Separate CSSR historic data update and user facing operations,166,https://github.com/code-423n4/2021-10-mochi-findings/issues/166,mochi,2021/10,bug;invalid;G (Gas Optimization)
42,jonah1005,0x501eE2A368f1E58C736dd7cE3b494B33c3158c68,3,treasury is vulnerable to sandwich attack,60,https://github.com/code-423n4/2021-10-mochi-findings/issues/60,mochi,2021/10,bug;3 (High Risk);sponsor confirmed
42,jonah1005,0x501eE2A368f1E58C736dd7cE3b494B33c3158c68,3,registerAsset would change asset class of existing asset,61,https://github.com/code-423n4/2021-10-mochi-findings/issues/61,mochi,2021/10,bug;duplicate;3 (High Risk)
42,jonah1005,0x501eE2A368f1E58C736dd7cE3b494B33c3158c68,3,regerralFeePool is vulnerable to MEV searcher,62,https://github.com/code-423n4/2021-10-mochi-findings/issues/62,mochi,2021/10,bug;2 (Med Risk);sponsor confirmed
42,jonah1005,0x501eE2A368f1E58C736dd7cE3b494B33c3158c68,3,Changing NFT contract in the MochiEngine would break the protocol,63,https://github.com/code-423n4/2021-10-mochi-findings/issues/63,mochi,2021/10,bug;3 (High Risk);sponsor confirmed
42,jonah1005,0x501eE2A368f1E58C736dd7cE3b494B33c3158c68,3,feePool is vulnerable to sandwich attack.,65,https://github.com/code-423n4/2021-10-mochi-findings/issues/65,mochi,2021/10,bug;3 (High Risk);sponsor disputed
42,jonah1005,0x501eE2A368f1E58C736dd7cE3b494B33c3158c68,G,multiple inter-contract references in the same function,67,https://github.com/code-423n4/2021-10-mochi-findings/issues/67,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,jonah1005,0x501eE2A368f1E58C736dd7cE3b494B33c3158c68,1,misuse amount as increasing debt in the vault contract,68,https://github.com/code-423n4/2021-10-mochi-findings/issues/68,mochi,2021/10,bug;invalid;1 (Low Risk);sponsor confirmed
42,jonah1005,0x501eE2A368f1E58C736dd7cE3b494B33c3158c68,3,Vault fails to track debt correctly that leads to bad debt,72,https://github.com/code-423n4/2021-10-mochi-findings/issues/72,mochi,2021/10,bug;3 (High Risk)
42,jonah1005,0x501eE2A368f1E58C736dd7cE3b494B33c3158c68,3,One auction at a time would lead to bad debt,73,https://github.com/code-423n4/2021-10-mochi-findings/issues/73,mochi,2021/10,bug;duplicate;2 (Med Risk)
42,jonah1005,0x501eE2A368f1E58C736dd7cE3b494B33c3158c68,2,anyone can create a vault by directly calling the factory,80,https://github.com/code-423n4/2021-10-mochi-findings/issues/80,mochi,2021/10,bug;2 (Med Risk);sponsor confirmed
42,Koustre,0xa360E38cdf57e092218E7A5f4Eb73032eE74A8bD,3,Lack of data validation in update function,141,https://github.com/code-423n4/2021-10-mochi-findings/issues/141,mochi,2021/10,bug;invalid;3 (High Risk)
42,Koustre,0xa360E38cdf57e092218E7A5f4Eb73032eE74A8bD,1,Transfer function is unreliable,142,https://github.com/code-423n4/2021-10-mochi-findings/issues/142,mochi,2021/10,bug;invalid;1 (Low Risk)
42,Koustre,0xa360E38cdf57e092218E7A5f4Eb73032eE74A8bD,2,Owner has unlimited minting capability,144,https://github.com/code-423n4/2021-10-mochi-findings/issues/144,mochi,2021/10,bug;invalid;2 (Med Risk)
42,Koustre,0xa360E38cdf57e092218E7A5f4Eb73032eE74A8bD,2,Avoid Using Block.timestamp in checkClaimable,145,https://github.com/code-423n4/2021-10-mochi-findings/issues/145,mochi,2021/10,bug;invalid;2 (Med Risk)
42,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Chainlink Adapter Missing Validation Of `latestRoundData()` Outputs,148,https://github.com/code-423n4/2021-10-mochi-findings/issues/148,mochi,2021/10,bug;duplicate;2 (Med Risk)
42,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Improper Validation Of `create2` Return Value,155,https://github.com/code-423n4/2021-10-mochi-findings/issues/155,mochi,2021/10,bug;2 (Med Risk);sponsor confirmed
42,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`MochiTreasuryV0.withdrawLock()` Is Callable When Locking Has Been Toggled,161,https://github.com/code-423n4/2021-10-mochi-findings/issues/161,mochi,2021/10,bug;2 (Med Risk);sponsor confirmed
42,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`MochiTreasuryV0.sol` Implements `receive()` Function With No Withdraw Mechanism,162,https://github.com/code-423n4/2021-10-mochi-findings/issues/162,mochi,2021/10,bug;0 (Non-critical);disagree with severity;sponsor confirmed
42,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`MochiTreasuryV0.claimOperationCost()` Writes State Variable After An External Call Is Made,163,https://github.com/code-423n4/2021-10-mochi-findings/issues/163,mochi,2021/10,bug;0 (Non-critical)
42,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Mochi Protocol Is Lacking Extensive Test Coverage,167,https://github.com/code-423n4/2021-10-mochi-findings/issues/167,mochi,2021/10,0 (Non-critical);disagree with severity
42,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`MochiTreasuryV0.sol` Is Unusable In Its Current State,168,https://github.com/code-423n4/2021-10-mochi-findings/issues/168,mochi,2021/10,bug;2 (Med Risk);sponsor confirmed
42,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,`MochiEngine.sol` Does Not Emit Events For State Changing Functions,169,https://github.com/code-423n4/2021-10-mochi-findings/issues/169,mochi,2021/10,bug;duplicate;0 (Non-critical);disagree with severity
42,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`flashLoan()` is Lacking Protections Against Reentrancy,170,https://github.com/code-423n4/2021-10-mochi-findings/issues/170,mochi,2021/10,bug;0 (Non-critical)
42,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`MochiVault.flashFee()` May Truncate Result,171,https://github.com/code-423n4/2021-10-mochi-findings/issues/171,mochi,2021/10,bug;1 (Low Risk)
42,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,`MochiProfileV0.registerAsset()` Can Reset Existing Asset Classes,85,https://github.com/code-423n4/2021-10-mochi-findings/issues/85,mochi,2021/10,bug;duplicate;3 (High Risk)
42,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,`treasuryShare` is Overwritten in `FeePoolV0._shareMochi()`,89,https://github.com/code-423n4/2021-10-mochi-findings/issues/89,mochi,2021/10,bug;3 (High Risk);sponsor confirmed
42,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,`MochiCSSRv0.update()` Does Not Operate Correctly On Bluechip Assets,90,https://github.com/code-423n4/2021-10-mochi-findings/issues/90,mochi,2021/10,bug;invalid;3 (High Risk)
42,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,Tokens Can Be Stolen By Frontrunning `VestedRewardPool.vest()` and `VestedRewardPool.lock()`,92,https://github.com/code-423n4/2021-10-mochi-findings/issues/92,mochi,2021/10,bug;3 (High Risk);sponsor confirmed
42,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,`DutchAuctionLiquidator.settleLiquidation()` Does Not Operate On Non-Standard ERC20 Tokens,93,https://github.com/code-423n4/2021-10-mochi-findings/issues/93,mochi,2021/10,bug;duplicate;2 (Med Risk)
42,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,0,Unlocked pragma version,74,https://github.com/code-423n4/2021-10-mochi-findings/issues/74,mochi,2021/10,bug;0 (Non-critical)
42,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,2,Unchecked ERC20 transfer calls,75,https://github.com/code-423n4/2021-10-mochi-findings/issues/75,mochi,2021/10,bug;2 (Med Risk);sponsor confirmed
42,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,Unchecked low level call,76,https://github.com/code-423n4/2021-10-mochi-findings/issues/76,mochi,2021/10,bug;1 (Low Risk)
42,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,Missing zero-address checks,86,https://github.com/code-423n4/2021-10-mochi-findings/issues/86,mochi,2021/10,bug;0 (Non-critical);sponsor confirmed
42,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Variable `liquidated` in MochiVault is never used,88,https://github.com/code-423n4/2021-10-mochi-findings/issues/88,mochi,2021/10,bug;G (Gas Optimization);sponsor acknowledged
42,nikitastupin,0x84F9079a9A39ae80Cf9DEE65a0E316B1a897684A,G,Calling `sushiCSSR.getLiquidity` two times leads to increased gas cost without benefits,83,https://github.com/code-423n4/2021-10-mochi-findings/issues/83,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,nikitastupin,0x84F9079a9A39ae80Cf9DEE65a0E316B1a897684A,1,Missing events for admin functions at `MochiEngine` contract,84,https://github.com/code-423n4/2021-10-mochi-findings/issues/84,mochi,2021/10,bug;duplicate;0 (Non-critical);disagree with severity
42,nikitastupin,0x84F9079a9A39ae80Cf9DEE65a0E316B1a897684A,2,Chainlink's `latestRoundData` might return stale or incorrect results,87,https://github.com/code-423n4/2021-10-mochi-findings/issues/87,mochi,2021/10,bug;2 (Med Risk);sponsor confirmed
42,nikitastupin,0x84F9079a9A39ae80Cf9DEE65a0E316B1a897684A,3,[`DutchAuctionLiquidator.sol`] The return value of an external `transfer` call is not checked,91,https://github.com/code-423n4/2021-10-mochi-findings/issues/91,mochi,2021/10,bug;duplicate;2 (Med Risk)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Bad error message,1,https://github.com/code-423n4/2021-10-mochi-findings/issues/1,mochi,2021/10,bug;invalid;1 (Low Risk)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,MochiTreasuryV0.withdrawalCRV use unsafe transfer of ERC20,10,https://github.com/code-423n4/2021-10-mochi-findings/issues/10,mochi,2021/10,bug;invalid;3 (High Risk)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,MochiTreasuryV0.sol internal functions can be private,11,https://github.com/code-423n4/2021-10-mochi-findings/issues/11,mochi,2021/10,bug;invalid;G (Gas Optimization)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,MochiTreasuryV0 constructor doesn't verify input addresses aren't 0.,12,https://github.com/code-423n4/2021-10-mochi-findings/issues/12,mochi,2021/10,bug;duplicate;0 (Non-critical)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,DutchAuctionLiquidator internal functions could be set private,13,https://github.com/code-423n4/2021-10-mochi-findings/issues/13,mochi,2021/10,bug;invalid;G (Gas Optimization)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,DutchAuctionLiquidator DURATION state variable can be set private,14,https://github.com/code-423n4/2021-10-mochi-findings/issues/14,mochi,2021/10,bug;invalid;G (Gas Optimization)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,events emits are missing at NoMochiReDURATIONferralFeePool,15,https://github.com/code-423n4/2021-10-mochi-findings/issues/15,mochi,2021/10,bug;duplicate;0 (Non-critical);disagree with severity
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,PaymentSplitter owner cannot disable payees,16,https://github.com/code-423n4/2021-10-mochi-findings/issues/16,mochi,2021/10,bug;invalid;1 (Low Risk)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Governor.sol computing same array length in memory multiple times,17,https://github.com/code-423n4/2021-10-mochi-findings/issues/17,mochi,2021/10,bug;invalid;G (Gas Optimization)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,create array of size x>0 and non of the entries are used,18,https://github.com/code-423n4/2021-10-mochi-findings/issues/18,mochi,2021/10,bug;invalid;G (Gas Optimization)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Require soon as possible to save unnecessary computation and save gas,19,https://github.com/code-423n4/2021-10-mochi-findings/issues/19,mochi,2021/10,bug;invalid;G (Gas Optimization)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,flashFee lack of precision,2,https://github.com/code-423n4/2021-10-mochi-findings/issues/2,mochi,2021/10,bug;0 (Non-critical)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,not cached array length,3,https://github.com/code-423n4/2021-10-mochi-findings/issues/3,mochi,2021/10,bug;invalid;G (Gas Optimization)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,++i is more efficient than i++,4,https://github.com/code-423n4/2021-10-mochi-findings/issues/4,mochi,2021/10,bug;invalid;G (Gas Optimization)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,double access to storage array inside a loop ,5,https://github.com/code-423n4/2021-10-mochi-findings/issues/5,mochi,2021/10,bug;invalid;G (Gas Optimization)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,MochiVault initializer can be frontrun,6,https://github.com/code-423n4/2021-10-mochi-findings/issues/6,mochi,2021/10,bug;duplicate;1 (Low Risk)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,MochiVault state variable can be immutable,7,https://github.com/code-423n4/2021-10-mochi-findings/issues/7,mochi,2021/10,bug;invalid;G (Gas Optimization)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,mint function MochiVault could be external,8,https://github.com/code-423n4/2021-10-mochi-findings/issues/8,mochi,2021/10,bug;invalid;G (Gas Optimization)
42,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,DutchAuctionLiquidator.settleLiquidation - asset.transfer return value is ignored,9,https://github.com/code-423n4/2021-10-mochi-findings/issues/9,mochi,2021/10,bug;duplicate;2 (Med Risk);disagree with severity
42,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,claimRewardAsMochi will produce a runtime error,149,https://github.com/code-423n4/2021-10-mochi-findings/issues/149,mochi,2021/10,bug;duplicate;3 (High Risk)
42,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Improve precision and gas costs in_shareMochi,150,https://github.com/code-423n4/2021-10-mochi-findings/issues/150,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Two-step change of a governance address,151,https://github.com/code-423n4/2021-10-mochi-findings/issues/151,mochi,2021/10,bug;duplicate;1 (Low Risk)
42,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache the results of duplicate external calls,152,https://github.com/code-423n4/2021-10-mochi-findings/issues/152,mochi,2021/10,bug;G (Gas Optimization)
42,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Pack structs tightly,153,https://github.com/code-423n4/2021-10-mochi-findings/issues/153,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Useless imports,154,https://github.com/code-423n4/2021-10-mochi-findings/issues/154,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unchecked math,156,https://github.com/code-423n4/2021-10-mochi-findings/issues/156,mochi,2021/10,bug;G (Gas Optimization)
42,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache duplicate access of storage variables,157,https://github.com/code-423n4/2021-10-mochi-findings/issues/157,mochi,2021/10,bug;duplicate;G (Gas Optimization)
42,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Duplicate math operations,158,https://github.com/code-423n4/2021-10-mochi-findings/issues/158,mochi,2021/10,bug;G (Gas Optimization);sponsor acknowledged
42,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,debts <= _amount,159,https://github.com/code-423n4/2021-10-mochi-findings/issues/159,mochi,2021/10,bug;G (Gas Optimization)
42,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Duplicate check of supported token on flash loan,160,https://github.com/code-423n4/2021-10-mochi-findings/issues/160,mochi,2021/10,bug;G (Gas Optimization);sponsor acknowledged
42,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Validations,165,https://github.com/code-423n4/2021-10-mochi-findings/issues/165,mochi,2021/10,bug;duplicate;1 (Low Risk)
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Initialization of `pair` can be done later to save gas,100,https://github.com/code-423n4/2021-10-mochi-findings/issues/100,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Chainlink price data could be stale,101,https://github.com/code-423n4/2021-10-mochi-findings/issues/101,mochi,2021/10,bug;duplicate;2 (Med Risk)
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`VestedRewardPool.sol#checkClaimable()` Add `vesting[recipient].ends > 0` to the condition can save gas,102,https://github.com/code-423n4/2021-10-mochi-findings/issues/102,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Missing events for critical operations,103,https://github.com/code-423n4/2021-10-mochi-findings/issues/103,mochi,2021/10,bug;duplicate;0 (Non-critical);disagree with severity
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`DutchAuctionLiquidator.sol#triggerLiquidation()` Adding precondition check can save gas,104,https://github.com/code-423n4/2021-10-mochi-findings/issues/104,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Minor precision loss,105,https://github.com/code-423n4/2021-10-mochi-findings/issues/105,mochi,2021/10,bug;1 (Low Risk);sponsor confirmed
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`FeePoolV0.sol` Lack of input validation,106,https://github.com/code-423n4/2021-10-mochi-findings/issues/106,mochi,2021/10,bug;1 (Low Risk);sponsor confirmed
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`Status.Liquidated` is defined but never used,107,https://github.com/code-423n4/2021-10-mochi-findings/issues/107,mochi,2021/10,bug;duplicate;0 (Non-critical)
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Early small positions may not be able to be liquidated,108,https://github.com/code-423n4/2021-10-mochi-findings/issues/108,mochi,2021/10,bug;duplicate;invalid;3 (High Risk)
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused storage variables,109,https://github.com/code-423n4/2021-10-mochi-findings/issues/109,mochi,2021/10,bug;duplicate;G (Gas Optimization)
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"Liquidated positions can potential have non-zero debts, making users who deposit to the positions suffer from unfair debt",110,https://github.com/code-423n4/2021-10-mochi-findings/issues/110,mochi,2021/10,bug;duplicate;3 (High Risk)
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Lack of input validation of arrays,111,https://github.com/code-423n4/2021-10-mochi-findings/issues/111,mochi,2021/10,bug;duplicate;0 (Non-critical);disagree with severity
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary storage read can save gas,112,https://github.com/code-423n4/2021-10-mochi-findings/issues/112,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Typos,113,https://github.com/code-423n4/2021-10-mochi-findings/issues/113,mochi,2021/10,bug;0 (Non-critical);disagree with severity
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"`FeePoolV0.sol#distributeMochi()` will unexpectedly flush `treasuryShare`, causing the protocol fee cannot be properly accounted for and collected",114,https://github.com/code-423n4/2021-10-mochi-findings/issues/114,mochi,2021/10,bug;duplicate;3 (High Risk);sponsor confirmed
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Simplify `sqrt()` can save gas,115,https://github.com/code-423n4/2021-10-mochi-findings/issues/115,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`MochiVault.sol` Potential griefing attack by depositing `0` to target's position,116,https://github.com/code-423n4/2021-10-mochi-findings/issues/116,mochi,2021/10,bug;duplicate;3 (High Risk)
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Declaring unnecessary immutable variables as constant can save gas,117,https://github.com/code-423n4/2021-10-mochi-findings/issues/117,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Float.sol#divide` Wrong `denominator` check,118,https://github.com/code-423n4/2021-10-mochi-findings/issues/118,mochi,2021/10,bug;invalid;1 (Low Risk)
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`MochiVault.sol` Remove redundant check can save gas,119,https://github.com/code-423n4/2021-10-mochi-findings/issues/119,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,A malicious user can potentially escape liquidation by creating a dust amount position and trigger the liquidation by themself,127,https://github.com/code-423n4/2021-10-mochi-findings/issues/127,mochi,2021/10,bug;2 (Med Risk);sponsor confirmed
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,94,https://github.com/code-423n4/2021-10-mochi-findings/issues/94,mochi,2021/10,bug;duplicate;G (Gas Optimization)
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache external call results can save gas,95,https://github.com/code-423n4/2021-10-mochi-findings/issues/95,mochi,2021/10,bug;duplicate;G (Gas Optimization)
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Unhandled return values of transfer,96,https://github.com/code-423n4/2021-10-mochi-findings/issues/96,mochi,2021/10,bug;duplicate;2 (Med Risk)
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`ReferralFeePoolV0.sol#claimRewardAsMochi()` Array out of bound exception,97,https://github.com/code-423n4/2021-10-mochi-findings/issues/97,mochi,2021/10,bug;3 (High Risk);sponsor confirmed
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`MochiVault.sol#borrow()` Checks can be done earlier to save gas,98,https://github.com/code-423n4/2021-10-mochi-findings/issues/98,mochi,2021/10,bug;duplicate;G (Gas Optimization)
42,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,99,https://github.com/code-423n4/2021-10-mochi-findings/issues/99,mochi,2021/10,bug;duplicate;G (Gas Optimization)
42,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Comment typos,138,https://github.com/code-423n4/2021-10-mochi-findings/issues/138,mochi,2021/10,bug;0 (Non-critical);sponsor confirmed
42,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Open TODOs/questions,139,https://github.com/code-423n4/2021-10-mochi-findings/issues/139,mochi,2021/10,bug;0 (Non-critical);sponsor confirmed
42,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Named Return Issues,40,https://github.com/code-423n4/2021-10-mochi-findings/issues/40,mochi,2021/10,bug;invalid;G (Gas Optimization)
42,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Long Revert Strings,41,https://github.com/code-423n4/2021-10-mochi-findings/issues/41,mochi,2021/10,bug;G (Gas Optimization);sponsor acknowledged
42,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Reduce State Variable Use in VestedRewardPool.sol,43,https://github.com/code-423n4/2021-10-mochi-findings/issues/43,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,"Cache Reference To State Variable ""details[_id]"" in MochiVault.sol",77,https://github.com/code-423n4/2021-10-mochi-findings/issues/77,mochi,2021/10,bug;duplicate;G (Gas Optimization)
42,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Remove extra calls in updateReserve (FeePoolV0.sol),79,https://github.com/code-423n4/2021-10-mochi-findings/issues/79,mochi,2021/10,bug;G (Gas Optimization);sponsor confirmed
42,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Save Gas With The Unchecked Keyword (MochiVault.sol),82,https://github.com/code-423n4/2021-10-mochi-findings/issues/82,mochi,2021/10,bug;G (Gas Optimization);sponsor acknowledged;sponsor confirmed
34,AC0611,0x45772aD5a6180aEa127eEa8cF26e192Ae4772c18,1,Summarize your findings for the bug or vulnerability,55,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/55,pooltogether,2021/10,bug;invalid;1 (Low Risk)
34,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Usage of deprecated `safeApprove`,18,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/18,pooltogether,2021/10,bug;1 (Low Risk);sponsor confirmed;resolved
34,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Should `safeApprove(0)` first,19,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/19,pooltogether,2021/10,bug;1 (Low Risk);sponsor acknowledged
34,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Default case of `_calculateTierIndex` can return `0`,20,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/20,pooltogether,2021/10,bug;G (Gas Optimization);sponsor confirmed;resolved
34,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Bitmasks creation can be simplified,21,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/21,pooltogether,2021/10,bug;G (Gas Optimization);sponsor confirmed;resolved
34,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,0,Wrong comment regarding decimal precision of `_calculatePrizeTierFraction`,22,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/22,pooltogether,2021/10,bug;sponsor confirmed;0 (Non-critical);resolved
34,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Number of prizes math is wrong,23,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/23,pooltogether,2021/10,bug;duplicate;sponsor confirmed;3 (High Risk)
34,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Unbounded iteration over picks when `claim`ing draws,24,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/24,pooltogether,2021/10,bug;sponsor acknowledged;0 (Non-critical)
34,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Anyone can claim prizes on behalf of someone,25,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/25,pooltogether,2021/10,bug;invalid;1 (Low Risk);sponsor acknowledged
34,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Reserve does not correctly implement RingBuffer,26,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/26,pooltogether,2021/10,bug;1 (Low Risk);sponsor confirmed;resolved
34,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`RingBufferLib.newestIndex` returns wrong value when no entries,27,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/27,pooltogether,2021/10,bug;invalid;1 (Low Risk);sponsor acknowledged
34,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`PrizePool` uses `ERC20` for `ERC721`,28,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/28,pooltogether,2021/10,bug;1 (Low Risk);sponsor confirmed;resolved
34,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `PrizePool.captureAwardBalance` computation can be simplified,29,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/29,pooltogether,2021/10,bug;G (Gas Optimization);sponsor confirmed;resolved
34,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Deposits don't work with fee-on transfer tokens,30,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/30,pooltogether,2021/10,bug;2 (Med Risk);sponsor acknowledged
34,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`PrizeSplit._distributePrizeSplits` returns wrong value,31,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/31,pooltogether,2021/10,bug;duplicate;1 (Low Risk);sponsor confirmed;resolved
34,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `PrizePool.setPrizeSplits` can be simplified,32,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/32,pooltogether,2021/10,bug;invalid;sponsor disputed
34,gpersoon,gpersoon.eth,G,Gas improvement _transferTwab,16,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/16,pooltogether,2021/10,bug;G (Gas Optimization);sponsor confirmed;resolved
34,gpersoon,gpersoon.eth,1,PrizeSplit uint8 limits,17,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/17,pooltogether,2021/10,bug;1 (Low Risk);sponsor confirmed;resolved
34,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,Miners Can Re-Roll the VRF Output to Game the Protocol,56,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/56,pooltogether,2021/10,bug;sponsor acknowledged;3 (High Risk)
34,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,`YieldSourcePrizePool._canAwardExternal()` Does Not Prevent the Deposit Token From Being Withdrawn,58,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/58,pooltogether,2021/10,bug;sponsor confirmed;0 (Non-critical);resolved
34,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,0,Comment Typos,59,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/59,pooltogether,2021/10,bug;sponsor confirmed;0 (Non-critical);resolved
34,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,G,Unnecessary `SLOAD` Operations,60,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/60,pooltogether,2021/10,invalid;G (Gas Optimization);sponsor disputed
34,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Lack of Pause Mechanism,61,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/61,pooltogether,2021/10,bug;sponsor acknowledged;0 (Non-critical)
34,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`PrizePool.awardExternalERC721()` Erroneously Emits Events,62,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/62,pooltogether,2021/10,bug;2 (Med Risk);sponsor confirmed;resolved
34,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,Inaccurate Revert Message,63,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/63,pooltogether,2021/10,bug;1 (Low Risk);sponsor confirmed;resolved
34,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`PrizeSplitStrategy.distribute()` Potentially Distributes Prize and Emits Wrong Event,64,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/64,pooltogether,2021/10,bug;duplicate;1 (Low Risk)
34,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,PrizePoolHarness._supply -a return without specifying return value,1,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/1,pooltogether,2021/10,bug;sponsor disputed;0 (Non-critical);disagree with severity
34,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,No need to put ReentrnacyGaurd on PrizePool.constructor.,10,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/10,pooltogether,2021/10,bug;G (Gas Optimization);sponsor acknowledged
34,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,double reading from memory inside a for loop.,11,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/11,pooltogether,2021/10,bug;G (Gas Optimization);sponsor confirmed;resolved
34,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,state variables that can be declared as immutable,12,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/12,pooltogether,2021/10,bug;duplicate;G (Gas Optimization)
34,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,No Owner transfer method.,2,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/2,pooltogether,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
34,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,ReentrancyGaurd,3,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/3,pooltogether,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
34,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,verify address isn't address(0) missing,4,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/4,pooltogether,2021/10,bug;1 (Low Risk);sponsor disputed
34,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Lack of precision at TwabLib.sol line 355,5,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/5,pooltogether,2021/10,bug;invalid;1 (Low Risk);sponsor acknowledged
34,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,++i is more gas efficient than i++ for loops.,6,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/6,pooltogether,2021/10,bug;G (Gas Optimization);sponsor acknowledged
34,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,array length can be cached to save gas,7,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/7,pooltogether,2021/10,bug;duplicate;G (Gas Optimization);sponsor disputed
34,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,prizeDistribution.matchCardinality should be cached.,8,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/8,pooltogether,2021/10,bug;invalid;G (Gas Optimization);sponsor disputed
34,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,functions could be private,9,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/9,pooltogether,2021/10,bug;invalid;sponsor acknowledged;0 (Non-critical)
34,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,calculateNextBeaconPeriodStartTime casts timestamp to uint64,44,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/44,pooltogether,2021/10,bug;1 (Low Risk);sponsor confirmed;resolved
34,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,staticcall may return true for an invalid _yieldSource,45,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/45,pooltogether,2021/10,bug;1 (Low Risk);sponsor confirmed;resolved
34,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache values,46,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/46,pooltogether,2021/10,bug;duplicate;invalid;G (Gas Optimization)
34,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Immutable variables,47,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/47,pooltogether,2021/10,bug;G (Gas Optimization);sponsor confirmed;resolved
34,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,function _getPrizeSplitAmount can be refactored,48,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/48,pooltogether,2021/10,bug;G (Gas Optimization);sponsor confirmed;resolved
34,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Less than 256 uints are not efficient,49,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/49,pooltogether,2021/10,bug;G (Gas Optimization);sponsor acknowledged
34,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unnecessary imports,50,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/50,pooltogether,2021/10,bug;sponsor confirmed;0 (Non-critical);disagree with severity;resolved
34,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,unchecked arithmetics,51,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/51,pooltogether,2021/10,bug;G (Gas Optimization);sponsor confirmed;resolved
34,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Style issues,52,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/52,pooltogether,2021/10,bug;sponsor confirmed;0 (Non-critical);resolved
34,tensors,0x45772aD5a6180aEa127eEa8cF26e192Ae4772c18,1,Summarize your findings for the bug or vulnerability.,53,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/53,pooltogether,2021/10,bug;invalid;1 (Low Risk)
34,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,The formula of number of prizes for a degree is wrong,33,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/33,pooltogether,2021/10,bug;sponsor confirmed;3 (High Risk);resolved
34,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`PrizeSplit.sol#_distributePrizeSplits()` The return value is wrong,34,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/34,pooltogether,2021/10,bug;duplicate;1 (Low Risk)
34,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`PrizeSplit.sol#distribute()` The value of the event parameter is wrong,35,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/35,pooltogether,2021/10,bug;1 (Low Risk);sponsor confirmed;resolved
34,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`PrizePool.sol#setTicket()` Remove unnecessary variable can make the code simpler and save some gas,36,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/36,pooltogether,2021/10,bug;G (Gas Optimization);sponsor confirmed;resolved
34,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`PrizePool.sol#_canDeposit()` Remove redundant code can make the code simpler and save some gas,37,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/37,pooltogether,2021/10,bug;G (Gas Optimization);sponsor confirmed;resolved
34,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,38,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/38,pooltogether,2021/10,bug;G (Gas Optimization);sponsor confirmed;resolved
34,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`ControlledToken.sol` Unnecessary storage variable,39,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/39,pooltogether,2021/10,bug;duplicate;G (Gas Optimization)
34,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`PrizeSplit.sol#_totalPrizeSplitPercentageAmount()` Avoid unnecessary copy from storage to memory can save gas,40,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/40,pooltogether,2021/10,bug;G (Gas Optimization);sponsor confirmed;resolved
34,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`PrizeDistributor.sol#claim()` Remove redundant check can save gas,41,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/41,pooltogether,2021/10,bug;G (Gas Optimization);resolved
34,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,42,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/42,pooltogether,2021/10,bug;invalid;G (Gas Optimization);sponsor confirmed;resolved
34,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused named return variables,13,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/13,pooltogether,2021/10,bug;invalid;G (Gas Optimization);sponsor disputed
34,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Gas savings when using ++var instead of var + 1,14,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/14,pooltogether,2021/10,bug;duplicate;G (Gas Optimization)
34,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unnecessary Multiple Return Statements (PrizePool.sol),15,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/15,pooltogether,2021/10,bug;G (Gas Optimization);sponsor confirmed;resolved
34,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unnecessary Addition In Loop (PrizeDistributionBuffer.sol),43,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/43,pooltogether,2021/10,bug;G (Gas Optimization);sponsor acknowledged
34,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unnecessary If Before Require (PrizeDistributor.sol),54,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/54,pooltogether,2021/10,bug;duplicate;G (Gas Optimization)
34,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unnecessary decrement (DrawCalculator.sol),57,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/57,pooltogether,2021/10,bug;G (Gas Optimization)
48,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,No need to save old slingshot variable in ModuleRegistry.setSlingshot(),33,https://github.com/code-423n4/2021-10-slingshot-findings/issues/33,slingshot,2021/10,bug;duplicate;G (Gas Optimization);sponsor acknowledged
48,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Cache length of array to avoid reading it multiple times,34,https://github.com/code-423n4/2021-10-slingshot-findings/issues/34,slingshot,2021/10,bug;duplicate;G (Gas Optimization)
48,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`> 0` can be replaced with ` != 0` for gas optimisation,35,https://github.com/code-423n4/2021-10-slingshot-findings/issues/35,slingshot,2021/10,bug;G (Gas Optimization);sponsor acknowledged
48,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,79,https://github.com/code-423n4/2021-10-slingshot-findings/issues/79,slingshot,2021/10,bug;duplicate;invalid
48,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`Slingshot._sendFunds` function not used and wrong,80,https://github.com/code-423n4/2021-10-slingshot-findings/issues/80,slingshot,2021/10,bug;0 (Non-critical)
48,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`LibERC20Token.approveIfBelow` should approve(0) first,81,https://github.com/code-423n4/2021-10-slingshot-findings/issues/81,slingshot,2021/10,bug;1 (Low Risk);sponsor acknowledged
48,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Left-over tokens can be stolen,82,https://github.com/code-423n4/2021-10-slingshot-findings/issues/82,slingshot,2021/10,bug;1 (Low Risk);sponsor acknowledged
48,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Use a constant instead of `block.timestamp` for the deadline,83,https://github.com/code-423n4/2021-10-slingshot-findings/issues/83,slingshot,2021/10,bug;G (Gas Optimization);sponsor acknowledged
48,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Funds are transferred twice - Financial loss,28,https://github.com/code-423n4/2021-10-slingshot-findings/issues/28,slingshot,2021/10,bug;duplicate;0 (Non-critical);sponsor disputed
48,daejunpark,0x57d392A5302AFB236b5A05345Def9e262bFF5290,2,Incorrect calculation of initialBalance in Slingshot.executeTrades(),23,https://github.com/code-423n4/2021-10-slingshot-findings/issues/23,slingshot,2021/10,bug;duplicate;2 (Med Risk)
48,daejunpark,0x57d392A5302AFB236b5A05345Def9e262bFF5290,0,Flaws in Slingshot._sendFunds(),24,https://github.com/code-423n4/2021-10-slingshot-findings/issues/24,slingshot,2021/10,bug;0 (Non-critical);sponsor acknowledged
48,daejunpark,0x57d392A5302AFB236b5A05345Def9e262bFF5290,0,Unnecessary and risky `payable` annotation in swap() functions,25,https://github.com/code-423n4/2021-10-slingshot-findings/issues/25,slingshot,2021/10,bug;1 (Low Risk)
48,daejunpark,0x57d392A5302AFB236b5A05345Def9e262bFF5290,1,Vulnerability regarding the `tradeAll` parameter of swap(),26,https://github.com/code-423n4/2021-10-slingshot-findings/issues/26,slingshot,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
48,daejunpark,0x57d392A5302AFB236b5A05345Def9e262bFF5290,0,Input validation for msg.value in Slingshot.executeTrades(),29,https://github.com/code-423n4/2021-10-slingshot-findings/issues/29,slingshot,2021/10,bug;duplicate;invalid
48,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant Code Statement,27,https://github.com/code-423n4/2021-10-slingshot-findings/issues/27,slingshot,2021/10,bug;G (Gas Optimization);sponsor confirmed
48,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,3,Privilege Escalation via  Delegate Call,101,https://github.com/code-423n4/2021-10-slingshot-findings/issues/101,slingshot,2021/10,bug;invalid;3 (High Risk);sponsor disputed
48,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,3,Contract Selfdestruct via delegatecall,102,https://github.com/code-423n4/2021-10-slingshot-findings/issues/102,slingshot,2021/10,bug;invalid;3 (High Risk);sponsor disputed
48,gpersoon,gpersoon.eth,3, initialBalance and finalBalance calculated in a different way,18,https://github.com/code-423n4/2021-10-slingshot-findings/issues/18,slingshot,2021/10,bug;duplicate;2 (Med Risk);disagree with severity;sponsor confirmed
48,gpersoon,gpersoon.eth,G, _sendFunds() tries to send the tokens twice & isn't used,19,https://github.com/code-423n4/2021-10-slingshot-findings/issues/19,slingshot,2021/10,bug;duplicate;0 (Non-critical)
48,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Leftover balance in the Executioner contract can be drained,20,https://github.com/code-423n4/2021-10-slingshot-findings/issues/20,slingshot,2021/10,bug;invalid;3 (High Risk);sponsor disputed
48,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,BalancerV2ModuleMatic: Ensure tokenOut is not native token,38,https://github.com/code-423n4/2021-10-slingshot-findings/issues/38,slingshot,2021/10,bug;1 (Low Risk);sponsor confirmed
48,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,CurveModule: Redundant jToken,39,https://github.com/code-423n4/2021-10-slingshot-findings/issues/39,slingshot,2021/10,bug;G (Gas Optimization);sponsor acknowledged
48,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Executioner: Restrict funds receivable to be only from wrapped native token,40,https://github.com/code-423n4/2021-10-slingshot-findings/issues/40,slingshot,2021/10,bug;1 (Low Risk);sponsor confirmed
48,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,ModuleRegistry: Rename modulesIndex → isModule,41,https://github.com/code-423n4/2021-10-slingshot-findings/issues/41,slingshot,2021/10,bug;G (Gas Optimization);sponsor acknowledged
48,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Slingshot: _sendFunds() is unused,42,https://github.com/code-423n4/2021-10-slingshot-findings/issues/42,slingshot,2021/10,bug;duplicate;0 (Non-critical)
48,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Slingshot: Incorrect comment for rescueTokensFromExecutioner(),43,https://github.com/code-423n4/2021-10-slingshot-findings/issues/43,slingshot,2021/10,bug;0 (Non-critical);sponsor acknowledged
48,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,Slingshot: Incorrect initial balance fetched for native token in executeTrades(),44,https://github.com/code-423n4/2021-10-slingshot-findings/issues/44,slingshot,2021/10,bug;duplicate;2 (Med Risk)
48,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Slingshot: Index fromToken and toToken for Trade event,45,https://github.com/code-423n4/2021-10-slingshot-findings/issues/45,slingshot,2021/10,bug;0 (Non-critical);sponsor acknowledged
48,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,Slingshot: Unnecessary receive(),46,https://github.com/code-423n4/2021-10-slingshot-findings/issues/46,slingshot,2021/10,bug;1 (Low Risk);disagree with severity
48,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Admin can abuse grantSlingshot and steal user funds,76,https://github.com/code-423n4/2021-10-slingshot-findings/issues/76,slingshot,2021/10,bug;invalid;3 (High Risk);sponsor disputed
48,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Trades where toToken is feeOnTransferToken might send user less tokens than finalAmountMin,77,https://github.com/code-423n4/2021-10-slingshot-findings/issues/77,slingshot,2021/10,bug;2 (Med Risk);disagree with severity
48,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Inconsistent balance comparison of nativeToken in executeTrades,78,https://github.com/code-423n4/2021-10-slingshot-findings/issues/78,slingshot,2021/10,bug;duplicate;2 (Med Risk);disagree with severity
48,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,Confusing comment on IUniswapModule,84,https://github.com/code-423n4/2021-10-slingshot-findings/issues/84,slingshot,2021/10,bug;1 (Low Risk);disagree with severity
48,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,Confusing comment in CurveModule,85,https://github.com/code-423n4/2021-10-slingshot-findings/issues/85,slingshot,2021/10,bug;1 (Low Risk);disagree with severity
48,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,No tests for protocol,86,https://github.com/code-423n4/2021-10-slingshot-findings/issues/86,slingshot,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
48,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Unused internal _sendFunds function in Slingshot,87,https://github.com/code-423n4/2021-10-slingshot-findings/issues/87,slingshot,2021/10,bug;duplicate;0 (Non-critical)
48,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,ConcatStrings prependNumber is not used,88,https://github.com/code-423n4/2021-10-slingshot-findings/issues/88,slingshot,2021/10,bug;G (Gas Optimization)
48,onewayfunction,0x660f9D529F01DAfF0A7F15213a8fA39F42FCFe62,G,Small gas improvement,90,https://github.com/code-423n4/2021-10-slingshot-findings/issues/90,slingshot,2021/10,bug;G (Gas Optimization);sponsor acknowledged
48,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,constructor doesn't check admin != 0,10,https://github.com/code-423n4/2021-10-slingshot-findings/issues/10,slingshot,2021/10,bug;duplicate;invalid;disagree with severity
48,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,ModuleRegistry doesn't support admin change methodology,11,https://github.com/code-423n4/2021-10-slingshot-findings/issues/11,slingshot,2021/10,bug;duplicate;invalid;disagree with severity
48,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Slingshot doesn't support admin change methodology.,12,https://github.com/code-423n4/2021-10-slingshot-findings/issues/12,slingshot,2021/10,bug;invalid;disagree with severity
48,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,executeTrades is payable and doesn't use msg.value,13,https://github.com/code-423n4/2021-10-slingshot-findings/issues/13,slingshot,2021/10,bug;invalid;2 (Med Risk);sponsor disputed
48,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,payable functions are gas consuming ,14,https://github.com/code-423n4/2021-10-slingshot-findings/issues/14,slingshot,2021/10,bug;invalid;G (Gas Optimization);sponsor disputed
48,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,nonReentrant modifier isn't necessary for executeTrades function,15,https://github.com/code-423n4/2021-10-slingshot-findings/issues/15,slingshot,2021/10,bug;G (Gas Optimization);sponsor acknowledged
48,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,getRouter methods could be set external instead public,16,https://github.com/code-423n4/2021-10-slingshot-findings/issues/16,slingshot,2021/10,bug;G (Gas Optimization);sponsor acknowledged
48,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,trades.length reads from memory multiple times,17,https://github.com/code-423n4/2021-10-slingshot-findings/issues/17,slingshot,2021/10,bug;duplicate;G (Gas Optimization)
48,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,approvalHandler.transferFrom(..) isn't safe,4,https://github.com/code-423n4/2021-10-slingshot-findings/issues/4,slingshot,2021/10,bug;invalid;2 (Med Risk);sponsor disputed
48,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,_transferFromOrWrap could be set private to save gas,5,https://github.com/code-423n4/2021-10-slingshot-findings/issues/5,slingshot,2021/10,bug;G (Gas Optimization);sponsor acknowledged
48,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,The function _getTokenBalance could be set private to save gas,6,https://github.com/code-423n4/2021-10-slingshot-findings/issues/6,slingshot,2021/10,bug;G (Gas Optimization);sponsor acknowledged
48,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,The function _sendFunds could be set private to save gas,7,https://github.com/code-423n4/2021-10-slingshot-findings/issues/7,slingshot,2021/10,bug;question;G (Gas Optimization)
48,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,cache length size in for loops to save gas,8,https://github.com/code-423n4/2021-10-slingshot-findings/issues/8,slingshot,2021/10,bug;duplicate;G (Gas Optimization)
48,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,A more efficient for loop index proceeding,9,https://github.com/code-423n4/2021-10-slingshot-findings/issues/9,slingshot,2021/10,bug;G (Gas Optimization)
48,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Slingshot is ConcatString,100,https://github.com/code-423n4/2021-10-slingshot-findings/issues/100,slingshot,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
48,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Minimum amount front running/sandwich attacks,91,https://github.com/code-423n4/2021-10-slingshot-findings/issues/91,slingshot,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
48,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1, i and j indexes and the iToken and jToken addresses,92,https://github.com/code-423n4/2021-10-slingshot-findings/issues/92,slingshot,2021/10,bug;invalid;disagree with severity;sponsor acknowledged
48,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,payable swap,93,https://github.com/code-423n4/2021-10-slingshot-findings/issues/93,slingshot,2021/10,bug;duplicate;1 (Low Risk);sponsor acknowledged
48,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,receive function,94,https://github.com/code-423n4/2021-10-slingshot-findings/issues/94,slingshot,2021/10,bug;1 (Low Risk);sponsor confirmed
48,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,msg.value should be 0 when input token is not native,95,https://github.com/code-423n4/2021-10-slingshot-findings/issues/95,slingshot,2021/10,bug;invalid;disagree with severity;sponsor confirmed
48,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,rescueTokens validation of the recipient,96,https://github.com/code-423n4/2021-10-slingshot-findings/issues/96,slingshot,2021/10,bug;invalid;disagree with severity;sponsor acknowledged
48,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unchecked maths,97,https://github.com/code-423n4/2021-10-slingshot-findings/issues/97,slingshot,2021/10,bug;duplicate;G (Gas Optimization);sponsor acknowledged
48,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,onlyAdmin batch,98,https://github.com/code-423n4/2021-10-slingshot-findings/issues/98,slingshot,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
48,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,dead code,99,https://github.com/code-423n4/2021-10-slingshot-findings/issues/99,slingshot,2021/10,bug;duplicate;0 (Non-critical);sponsor confirmed
48,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,1,Function documentation incorrect for `ConcatStrings::appendUint`,47,https://github.com/code-423n4/2021-10-slingshot-findings/issues/47,slingshot,2021/10,bug;1 (Low Risk);disagree with severity;sponsor confirmed
48,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,Inconsistent naming for functions in `ConcatStrings.sol`,48,https://github.com/code-423n4/2021-10-slingshot-findings/issues/48,slingshot,2021/10,bug;0 (Non-critical);sponsor acknowledged
48,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,Error messages in `ModuleRegistry.sol` inconsistent to the rest of the project,49,https://github.com/code-423n4/2021-10-slingshot-findings/issues/49,slingshot,2021/10,bug;0 (Non-critical);sponsor acknowledged
48,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,`Adminable::setupAdmin` uses deprecated function,50,https://github.com/code-423n4/2021-10-slingshot-findings/issues/50,slingshot,2021/10,bug;0 (Non-critical);sponsor confirmed
48,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,`CurveModule::swap` declares a parameter that is never used,51,https://github.com/code-423n4/2021-10-slingshot-findings/issues/51,slingshot,2021/10,bug;duplicate;G (Gas Optimization)
48,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,The `Slingshot::_transferFromOrWrap` function should require a `msg.value` of 0 if `fromToken != nativeToken`,52,https://github.com/code-423n4/2021-10-slingshot-findings/issues/52,slingshot,2021/10,bug;duplicate;invalid
48,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,1,Function documentation incorrect for `Slingshot::_transferFromOrWrap`,53,https://github.com/code-423n4/2021-10-slingshot-findings/issues/53,slingshot,2021/10,bug;1 (Low Risk);disagree with severity
48,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,2,DOS attack possible for Token->ETH trades,54,https://github.com/code-423n4/2021-10-slingshot-findings/issues/54,slingshot,2021/10,bug;duplicate;2 (Med Risk)
48,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,0,ModuleRegistry doesn't need to know address of Slingshot.sol,1,https://github.com/code-423n4/2021-10-slingshot-findings/issues/1,slingshot,2021/10,bug;0 (Non-critical);sponsor acknowledged
48,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,0,Malicious governance can abuse approvals to ApprovalHandler,2,https://github.com/code-423n4/2021-10-slingshot-findings/issues/2,slingshot,2021/10,bug;0 (Non-critical);sponsor acknowledged
48,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Use of constant `keccak` variables results in extra hashing (and so gas).,3,https://github.com/code-423n4/2021-10-slingshot-findings/issues/3,slingshot,2021/10,bug;G (Gas Optimization);sponsor confirmed
48,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,0,String concatenation in revert messages results in increased gas costs + code complexity,37,https://github.com/code-423n4/2021-10-slingshot-findings/issues/37,slingshot,2021/10,bug;0 (Non-critical);sponsor confirmed
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Redundant code,55,https://github.com/code-423n4/2021-10-slingshot-findings/issues/55,slingshot,2021/10,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`CurveModule.sol#swap()` Unused parameter,56,https://github.com/code-423n4/2021-10-slingshot-findings/issues/56,slingshot,2021/10,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary code execution can save gas,57,https://github.com/code-423n4/2021-10-slingshot-findings/issues/57,slingshot,2021/10,bug;G (Gas Optimization);sponsor acknowledged
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Wrong implementation of `Slingshot.sol#_sendFunds()`,58,https://github.com/code-423n4/2021-10-slingshot-findings/issues/58,slingshot,2021/10,bug;duplicate;0 (Non-critical)
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`initialBalance` for native token is wrong,59,https://github.com/code-423n4/2021-10-slingshot-findings/issues/59,slingshot,2021/10,bug;2 (Med Risk);disagree with severity
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`require(msg.value == 0)` should be added to prevent fund loss when called with mistaken input data,60,https://github.com/code-423n4/2021-10-slingshot-findings/issues/60,slingshot,2021/10,bug;duplicate;invalid
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`IUniswapModule.sol` use an immutable variable `router` can save gas and simplify implementation,61,https://github.com/code-423n4/2021-10-slingshot-findings/issues/61,slingshot,2021/10,bug;G (Gas Optimization);sponsor acknowledged
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove redundant access control checks can save gas,62,https://github.com/code-423n4/2021-10-slingshot-findings/issues/62,slingshot,2021/10,bug;duplicate;G (Gas Optimization)
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,63,https://github.com/code-423n4/2021-10-slingshot-findings/issues/63,slingshot,2021/10,bug;G (Gas Optimization);sponsor confirmed
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,64,https://github.com/code-423n4/2021-10-slingshot-findings/issues/64,slingshot,2021/10,bug;duplicate;G (Gas Optimization);sponsor acknowledged
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code Style: Abstract contracts should not be prefixed by `I`,65,https://github.com/code-423n4/2021-10-slingshot-findings/issues/65,slingshot,2021/10,bug;0 (Non-critical);sponsor acknowledged
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`SlingshotI` is unnecessary,66,https://github.com/code-423n4/2021-10-slingshot-findings/issues/66,slingshot,2021/10,bug;0 (Non-critical);sponsor acknowledged
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code Style: consistency,67,https://github.com/code-423n4/2021-10-slingshot-findings/issues/67,slingshot,2021/10,bug;0 (Non-critical);sponsor confirmed
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,68,https://github.com/code-423n4/2021-10-slingshot-findings/issues/68,slingshot,2021/10,bug;G (Gas Optimization)
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary storage read can save gas,69,https://github.com/code-423n4/2021-10-slingshot-findings/issues/69,slingshot,2021/10,bug;G (Gas Optimization);sponsor acknowledged
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Outdated compiler version,70,https://github.com/code-423n4/2021-10-slingshot-findings/issues/70,slingshot,2021/10,bug;0 (Non-critical);sponsor acknowledged
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Typos,71,https://github.com/code-423n4/2021-10-slingshot-findings/issues/71,slingshot,2021/10,bug;0 (Non-critical);sponsor confirmed
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Critical changes should use two-step procedure,72,https://github.com/code-423n4/2021-10-slingshot-findings/issues/72,slingshot,2021/10,bug;duplicate;invalid
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Combine external calls into one can save gas,73,https://github.com/code-423n4/2021-10-slingshot-findings/issues/73,slingshot,2021/10,bug;G (Gas Optimization);sponsor confirmed
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Executioner.sol` should not be `payable`,74,https://github.com/code-423n4/2021-10-slingshot-findings/issues/74,slingshot,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
48,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Slingshot.sol` Unused code,75,https://github.com/code-423n4/2021-10-slingshot-findings/issues/75,slingshot,2021/10,bug;duplicate;0 (Non-critical)
48,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Inaccurate comment (rescueTokensFromExecutioner),30,https://github.com/code-423n4/2021-10-slingshot-findings/issues/30,slingshot,2021/10,bug;1 (Low Risk);disagree with severity
48,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused Named Returns (ConcatStrings.sol),31,https://github.com/code-423n4/2021-10-slingshot-findings/issues/31,slingshot,2021/10,bug;G (Gas Optimization);sponsor acknowledged
48,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Long Revert Strings,32,https://github.com/code-423n4/2021-10-slingshot-findings/issues/32,slingshot,2021/10,bug;duplicate;G (Gas Optimization)
48,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Unused function (_sendFunds in Slingshot.sol),36,https://github.com/code-423n4/2021-10-slingshot-findings/issues/36,slingshot,2021/10,bug;duplicate;0 (Non-critical)
48,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,No Input Validation When Setting Up Values For Immutable State Variables (Slingshot.sol),89,https://github.com/code-423n4/2021-10-slingshot-findings/issues/89,slingshot,2021/10,bug;invalid;disagree with severity
48,zer0dot,0xF4F56fA0D045ae0e6Ba8f82e2C32887FE0B152Ea,2,Regular Trades Can Drain Executioner.sol Balance,21,https://github.com/code-423n4/2021-10-slingshot-findings/issues/21,slingshot,2021/10,bug;invalid;2 (Med Risk);sponsor disputed
48,zer0dot,0xF4F56fA0D045ae0e6Ba8f82e2C32887FE0B152Ea,G,Unnecessary Use of _msgSender(),22,https://github.com/code-423n4/2021-10-slingshot-findings/issues/22,slingshot,2021/10,bug;G (Gas Optimization);sponsor acknowledged
44,0xngndev,0xF8cE240B29246FAff3AF7fdE780A4AC6d537f59A,G,Gas Optimization: Remove SafeMath,4,https://github.com/code-423n4/2021-10-tally-findings/issues/4,tally,2021/10,bug;duplicate;G (Gas Optimization)
44,0xngndev,0xF8cE240B29246FAff3AF7fdE780A4AC6d537f59A,G,Gas Optimization: Reduce the size of error messages.,5,https://github.com/code-423n4/2021-10-tally-findings/issues/5,tally,2021/10,bug;G (Gas Optimization)
44,0xngndev,0xF8cE240B29246FAff3AF7fdE780A4AC6d537f59A,0,Add Try/Catch on sweepFees function,6,https://github.com/code-423n4/2021-10-tally-findings/issues/6,tally,2021/10,bug;duplicate;1 (Low Risk)
44,0xngndev,0xF8cE240B29246FAff3AF7fdE780A4AC6d537f59A,G,Gas Optimization: Unnecessary nonReentrant on sweepFees,9,https://github.com/code-423n4/2021-10-tally-findings/issues/9,tally,2021/10,bug;G (Gas Optimization);sponsor disputed
44,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Validate `swapFee`,38,https://github.com/code-423n4/2021-10-tally-findings/issues/38,tally,2021/10,bug;duplicate;1 (Low Risk)
44,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Usage of transfer,39,https://github.com/code-423n4/2021-10-tally-findings/issues/39,tally,2021/10,bug;duplicate;2 (Med Risk)
44,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Contract does not work well with fee-on transfer tokens,40,https://github.com/code-423n4/2021-10-tally-findings/issues/40,tally,2021/10,bug;1 (Low Risk);sponsor acknowledged
44,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: minReceived check can be simplified,41,https://github.com/code-423n4/2021-10-tally-findings/issues/41,tally,2021/10,bug;G (Gas Optimization);sponsor confirmed
44,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: SafeMath is not needed when using Solidity version 0.8,42,https://github.com/code-423n4/2021-10-tally-findings/issues/42,tally,2021/10,bug;G (Gas Optimization);sponsor confirmed
44,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,"Gas: Math library could be ""unchecked""",43,https://github.com/code-423n4/2021-10-tally-findings/issues/43,tally,2021/10,bug;G (Gas Optimization);sponsor confirmed
44,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Unnecessary conditions cause Gas wastage,2,https://github.com/code-423n4/2021-10-tally-findings/issues/2,tally,2021/10,bug;G (Gas Optimization);sponsor disputed
44,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Unnecessary conditions causing Over Gas consumption,3,https://github.com/code-423n4/2021-10-tally-findings/issues/3,tally,2021/10,bug;G (Gas Optimization);sponsor acknowledged
44,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,23,https://github.com/code-423n4/2021-10-tally-findings/issues/23,tally,2021/10,bug;G (Gas Optimization);sponsor acknowledged
44,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimization On the Integer/Overflow Protection,57,https://github.com/code-423n4/2021-10-tally-findings/issues/57,tally,2021/10,bug;duplicate;G (Gas Optimization)
44,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,2,Swap.sol implements potentially dangerous transfer ,20,https://github.com/code-423n4/2021-10-tally-findings/issues/20,tally,2021/10,bug;2 (Med Risk);sponsor acknowledged
44,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,1,Goveranance does not implement transferOwnership,24,https://github.com/code-423n4/2021-10-tally-findings/issues/24,tally,2021/10,bug;duplicate;1 (Low Risk)
44,gpersoon,gpersoon.eth,3,frontrun swapByQuote or abuse high allowance,1,https://github.com/code-423n4/2021-10-tally-findings/issues/1,tally,2021/10,bug;duplicate;0 (Non-critical);disagree with severity
44,gpersoon,gpersoon.eth,2,frontrun swapByQuote or abuse high allowance - replacement,17,https://github.com/code-423n4/2021-10-tally-findings/issues/17,tally,2021/10,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
44,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,Remove duplicate reads of storage variables,18,https://github.com/code-423n4/2021-10-tally-findings/issues/18,tally,2021/10,bug;G (Gas Optimization);sponsor acknowledged
44,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,Emit feeRecipient_ (memory) instead of feeRecipient (storage),19,https://github.com/code-423n4/2021-10-tally-findings/issues/19,tally,2021/10,bug;G (Gas Optimization);sponsor acknowledged
44,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,1,Incorrect FeesSwept amount being emitted in sweepFees function,21,https://github.com/code-423n4/2021-10-tally-findings/issues/21,tally,2021/10,bug;1 (Low Risk);sponsor confirmed
44,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,1,Events not indexed,22,https://github.com/code-423n4/2021-10-tally-findings/issues/22,tally,2021/10,bug;1 (Low Risk);sponsor acknowledged
44,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,fillZrxQuote doesn't return correct values when zrxSellTokenAddress == zrxBuyTokenAddress,77,https://github.com/code-423n4/2021-10-tally-findings/issues/77,tally,2021/10,bug;duplicate;3 (High Risk)
44,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,use of transfer() instead of call() to send eth,44,https://github.com/code-423n4/2021-10-tally-findings/issues/44,tally,2021/10,bug;duplicate;2 (Med Risk)
44,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Lack of input validationn for address array,45,https://github.com/code-423n4/2021-10-tally-findings/issues/45,tally,2021/10,bug;duplicate;1 (Low Risk)
44,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,use of floating pragma,46,https://github.com/code-423n4/2021-10-tally-findings/issues/46,tally,2021/10,bug;0 (Non-critical);sponsor acknowledged
44,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,Lack of input validtion of function perimeter while setting swapfee() and feeRecipient(),47,https://github.com/code-423n4/2021-10-tally-findings/issues/47,tally,2021/10,bug;1 (Low Risk);sponsor disputed
44,Koustre,0xa360E38cdf57e092218E7A5f4Eb73032eE74A8bD,1,Transfer function is unreliable,69,https://github.com/code-423n4/2021-10-tally-findings/issues/69,tally,2021/10,bug;duplicate;2 (Med Risk)
44,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,`Ownable` Contract Does Not Implement Two-Step Transfer Ownership Pattern,78,https://github.com/code-423n4/2021-10-tally-findings/issues/78,tally,2021/10,bug;1 (Low Risk);sponsor confirmed
44,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,Lack of Input Validation,79,https://github.com/code-423n4/2021-10-tally-findings/issues/79,tally,2021/10,bug;duplicate;1 (Low Risk)
44,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,`sweepFees()` `tokens.length` Can Overflow,80,https://github.com/code-423n4/2021-10-tally-findings/issues/80,tally,2021/10,bug;1 (Low Risk);sponsor disputed
44,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Token Can Deny Execution of `sweepFees()` Function,81,https://github.com/code-423n4/2021-10-tally-findings/issues/81,tally,2021/10,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,local variable declaration inside a loop,11,https://github.com/code-423n4/2021-10-tally-findings/issues/11,tally,2021/10,bug;duplicate;G (Gas Optimization);sponsor acknowledged
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,++i instead i++,12,https://github.com/code-423n4/2021-10-tally-findings/issues/12,tally,2021/10,bug;duplicate;G (Gas Optimization);sponsor acknowledged
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,double reading calldata variable inside a loop ,13,https://github.com/code-423n4/2021-10-tally-findings/issues/13,tally,2021/10,bug;G (Gas Optimization);sponsor acknowledged
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,All internal functions could be set private,14,https://github.com/code-423n4/2021-10-tally-findings/issues/14,tally,2021/10,bug;duplicate;G (Gas Optimization);sponsor acknowledged
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,caching array length,15,https://github.com/code-423n4/2021-10-tally-findings/issues/15,tally,2021/10,bug;duplicate;G (Gas Optimization);sponsor acknowledged
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,can swap fake tokens,16,https://github.com/code-423n4/2021-10-tally-findings/issues/16,tally,2021/10,bug;invalid;sponsor acknowledged
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary `SLOAD`s in `Swap`'s constructor,58,https://github.com/code-423n4/2021-10-tally-findings/issues/58,tally,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,The initial `swapFee` can be greater than or equal to `SWAP_FEE_DIVISOR`,59,https://github.com/code-423n4/2021-10-tally-findings/issues/59,tally,2021/10,bug;duplicate;1 (Low Risk)
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`SafeMath` is unnecessary in Solidity 0.8.0 or higher,60,https://github.com/code-423n4/2021-10-tally-findings/issues/60,tally,2021/10,bug;duplicate;G (Gas Optimization)
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary `SLOAD`s in `EmergencyGovernable.onlyTimelockOrEmergencyGovernance()`,61,https://github.com/code-423n4/2021-10-tally-findings/issues/61,tally,2021/10,bug;G (Gas Optimization);sponsor acknowledged
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary require statement in `Swap`'s constructor,62,https://github.com/code-423n4/2021-10-tally-findings/issues/62,tally,2021/10,bug;G (Gas Optimization);sponsor acknowledged
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary `SLOAD` in `Swap.setSwapFee()`,63,https://github.com/code-423n4/2021-10-tally-findings/issues/63,tally,2021/10,bug;G (Gas Optimization);sponsor confirmed
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary `SLOAD` in `Swap.setFeeRecipient()`,65,https://github.com/code-423n4/2021-10-tally-findings/issues/65,tally,2021/10,bug;duplicate;G (Gas Optimization)
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`Swap.setSwapFee()` emits a `NewSwapFee` when the swap fee hasn't changed,66,https://github.com/code-423n4/2021-10-tally-findings/issues/66,tally,2021/10,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`Swap.setFeeRecipient()` emits a `NewFeeRecipient` when the fee recipient hasn't changed,67,https://github.com/code-423n4/2021-10-tally-findings/issues/67,tally,2021/10,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,Users can avoid paying fees for ETH swaps,68,https://github.com/code-423n4/2021-10-tally-findings/issues/68,tally,2021/10,bug;2 (Med Risk);sponsor acknowledged
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`internal` functions can be `private`,70,https://github.com/code-423n4/2021-10-tally-findings/issues/70,tally,2021/10,bug;G (Gas Optimization);sponsor acknowledged
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Prefix increaments are cheaper than postfix increaments,71,https://github.com/code-423n4/2021-10-tally-findings/issues/71,tally,2021/10,bug;G (Gas Optimization);sponsor acknowledged
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary array boundaries check when loading an array element twice,72,https://github.com/code-423n4/2021-10-tally-findings/issues/72,tally,2021/10,bug;G (Gas Optimization);sponsor acknowledged
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary checked arithmetic in for loops,73,https://github.com/code-423n4/2021-10-tally-findings/issues/73,tally,2021/10,bug;G (Gas Optimization);sponsor disputed
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary `CALLDATALOAD`s in for-each loops,74,https://github.com/code-423n4/2021-10-tally-findings/issues/74,tally,2021/10,bug;G (Gas Optimization)
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Open TODOs,75,https://github.com/code-423n4/2021-10-tally-findings/issues/75,tally,2021/10,bug;1 (Low Risk);sponsor acknowledged
44,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary `SLOAD`s in `Swap.sweepFees()`,76,https://github.com/code-423n4/2021-10-tally-findings/issues/76,tally,2021/10,bug;duplicate;G (Gas Optimization)
44,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Inclusive check,49,https://github.com/code-423n4/2021-10-tally-findings/issues/49,tally,2021/10,bug;0 (Non-critical);sponsor acknowledged
44,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,timelocked governance can grief with the fees,50,https://github.com/code-423n4/2021-10-tally-findings/issues/50,tally,2021/10,bug;duplicate;1 (Low Risk);sponsor acknowledged
44,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,.transfer is used for transferring ether,51,https://github.com/code-423n4/2021-10-tally-findings/issues/51,tally,2021/10,bug;duplicate;2 (Med Risk)
44,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,FeesSwept will emit 0 amounts for ETH,52,https://github.com/code-423n4/2021-10-tally-findings/issues/52,tally,2021/10,bug;duplicate;1 (Low Risk)
44,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,msg.value should be 0 when token is not ETH,53,https://github.com/code-423n4/2021-10-tally-findings/issues/53,tally,2021/10,bug;1 (Low Risk);sponsor disputed
44,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Lower than uint256 types are not more efficient,54,https://github.com/code-423n4/2021-10-tally-findings/issues/54,tally,2021/10,bug;duplicate;G (Gas Optimization)
44,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Do the external call only when the amount is not 0,55,https://github.com/code-423n4/2021-10-tally-findings/issues/55,tally,2021/10,bug;duplicate;G (Gas Optimization)
44,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,1,Swap fee can be set to 100%,10,https://github.com/code-423n4/2021-10-tally-findings/issues/10,tally,2021/10,bug;1 (Low Risk);sponsor acknowledged
44,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Use of uint8 for counter in for loop increases gas costs,7,https://github.com/code-423n4/2021-10-tally-findings/issues/7,tally,2021/10,bug;G (Gas Optimization);sponsor acknowledged
44,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Inefficient logic statement results in checking signifiesETHOrZero(zrxBuyTokenAddress) twice ,8,https://github.com/code-423n4/2021-10-tally-findings/issues/8,tally,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
44,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Insufficient input validation,25,https://github.com/code-423n4/2021-10-tally-findings/issues/25,tally,2021/10,bug;1 (Low Risk);sponsor confirmed
44,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,26,https://github.com/code-423n4/2021-10-tally-findings/issues/26,tally,2021/10,bug;duplicate;G (Gas Optimization)
44,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Wrong value for `FeesSwept` event parameter,27,https://github.com/code-423n4/2021-10-tally-findings/issues/27,tally,2021/10,bug;duplicate;1 (Low Risk)
44,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Wrong value for `SwappedTokens` event parameter,28,https://github.com/code-423n4/2021-10-tally-findings/issues/28,tally,2021/10,bug;1 (Low Risk);sponsor confirmed
44,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Unnecessary third party libraries,29,https://github.com/code-423n4/2021-10-tally-findings/issues/29,tally,2021/10,bug;duplicate;G (Gas Optimization)
44,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,30,https://github.com/code-423n4/2021-10-tally-findings/issues/30,tally,2021/10,bug;duplicate;G (Gas Optimization)
44,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Check if `boughtETHAmount > 0` can save gas,31,https://github.com/code-423n4/2021-10-tally-findings/issues/31,tally,2021/10,bug;G (Gas Optimization);sponsor acknowledged
44,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`transfer()` is not recommended for sending ETH,32,https://github.com/code-423n4/2021-10-tally-findings/issues/32,tally,2021/10,bug;duplicate;2 (Med Risk)
44,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Change `require` conditions can prevent fund loss when called with mistaken input data,33,https://github.com/code-423n4/2021-10-tally-findings/issues/33,tally,2021/10,bug;3 (High Risk);sponsor disputed
44,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Wrong calculation of `erc20Delta` and `ethDelta`,34,https://github.com/code-423n4/2021-10-tally-findings/issues/34,tally,2021/10,bug;3 (High Risk);disagree with severity;sponsor confirmed
44,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Consider removing `Math.sol`,35,https://github.com/code-423n4/2021-10-tally-findings/issues/35,tally,2021/10,bug;0 (Non-critical);sponsor acknowledged
44,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Unused ERC20 tokens are not refunded,36,https://github.com/code-423n4/2021-10-tally-findings/issues/36,tally,2021/10,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
44,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Arbitrary contract call allows attackers to steal ERC20 from users' wallets,37,https://github.com/code-423n4/2021-10-tally-findings/issues/37,tally,2021/10,bug;3 (High Risk);sponsor confirmed
44,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Long Revert Strings,48,https://github.com/code-423n4/2021-10-tally-findings/issues/48,tally,2021/10,bug;duplicate;G (Gas Optimization)
44,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Function sweepFees Can Be Made More Efficient (Swap.sol),56,https://github.com/code-423n4/2021-10-tally-findings/issues/56,tally,2021/10,bug;duplicate;G (Gas Optimization)
44,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,"Cache or use existing memory versions of state variables (feeRecipient, swapFee)",64,https://github.com/code-423n4/2021-10-tally-findings/issues/64,tally,2021/10,bug;G (Gas Optimization);sponsor acknowledged
37,0xMesaj,0xC54779aD18af826b94258338a406A88c17758948,2,Manipulating updateInterestRate() in Tempus Pools to mint more Principal and Yield Tokens Than They Should,8,https://github.com/code-423n4/2021-10-tempus-findings/issues/8,tempus,2021/10,bug;sponsor disputed;0 (Non-critical)
37,chenyu,0x94e0c714FaD746AC9e220E1B9396771C1FA7A236,1,Scaling factors for token 0/1 might swap in TempusAMM constructor.,7,https://github.com/code-423n4/2021-10-tempus-findings/issues/7,tempus,2021/10,bug;sponsor confirmed;1 (Low Risk);resolved
37,chenyu,0x94e0c714FaD746AC9e220E1B9396771C1FA7A236,1,PermanentlyOwnable does not prevent transferring ownership to a dead address.,9,https://github.com/code-423n4/2021-10-tempus-findings/issues/9,tempus,2021/10,bug;sponsor confirmed;1 (Low Risk);resolved
37,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,19,https://github.com/code-423n4/2021-10-tempus-findings/issues/19,tempus,2021/10,bug;invalid;question;disagree with severity;1 (Low Risk)
37,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`depositAndFix` can be made to fail,20,https://github.com/code-423n4/2021-10-tempus-findings/issues/20,tempus,2021/10,bug;sponsor confirmed;2 (Med Risk);resolved
37,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`exitTempusAMM` can be made to fail,21,https://github.com/code-423n4/2021-10-tempus-findings/issues/21,tempus,2021/10,bug;sponsor confirmed;2 (Med Risk);resolved
37,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`exitTempusAMMAndRedeem` redeems to the wrong account,22,https://github.com/code-423n4/2021-10-tempus-findings/issues/22,tempus,2021/10,bug;sponsor disputed;2 (Med Risk)
37,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,No `swap` slippage checks,23,https://github.com/code-423n4/2021-10-tempus-findings/issues/23,tempus,2021/10,bug;sponsor confirmed;1 (Low Risk);resolved
37,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`transferFees` may not be the contract itself,24,https://github.com/code-423n4/2021-10-tempus-findings/issues/24,tempus,2021/10,bug;sponsor acknowledged;disagree with severity;0 (Non-critical)
37,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`_setAmplificationData` should clear upper bits of values,25,https://github.com/code-423n4/2021-10-tempus-findings/issues/25,tempus,2021/10,bug;sponsor disputed;0 (Non-critical)
37,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Don't store cToken twice,26,https://github.com/code-423n4/2021-10-tempus-findings/issues/26,tempus,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
37,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `ERC20OwnerMintableToken.burn` should use caller,27,https://github.com/code-423n4/2021-10-tempus-findings/issues/27,tempus,2021/10,bug;sponsor disputed;G (Gas Optimization)
37,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Improper Access Control,5,https://github.com/code-423n4/2021-10-tempus-findings/issues/5,tempus,2021/10,bug;sponsor disputed;disagree with severity;0 (Non-critical)
37,gpersoon,gpersoon.eth,3,Steal tokens from TempusController,10,https://github.com/code-423n4/2021-10-tempus-findings/issues/10,tempus,2021/10,bug;sponsor confirmed;disagree with severity;3 (High Risk);resolved
37,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,0,getAMMOrderedAmounts and _exitTempusAmmAndRedeem functions use explicit token comparison for ordering instead of relying on Balancer's PoolTokens,37,https://github.com/code-423n4/2021-10-tempus-findings/issues/37,tempus,2021/10,bug;sponsor confirmed;0 (Non-critical);resolved
37,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,TempusController's _exitTempusAmmAndRedeem function performs swap without minimum required price,49,https://github.com/code-423n4/2021-10-tempus-findings/issues/49,tempus,2021/10,bug;duplicate;1 (Low Risk)
37,Koustre,0xa360E38cdf57e092218E7A5f4Eb73032eE74A8bD,2,Lack of validation for Maturity Date,32,https://github.com/code-423n4/2021-10-tempus-findings/issues/32,tempus,2021/10,bug;sponsor disputed;disagree with severity;0 (Non-critical)
37,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,No zero address check for controller in TempusPool,6,https://github.com/code-423n4/2021-10-tempus-findings/issues/6,tempus,2021/10,bug;sponsor confirmed;disagree with severity;0 (Non-critical);resolved
37,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Open TODOs,39,https://github.com/code-423n4/2021-10-tempus-findings/issues/39,tempus,2021/10,bug;sponsor confirmed;1 (Low Risk);resolved
37,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Prefix increaments are cheaper than postfix increaments,40,https://github.com/code-423n4/2021-10-tempus-findings/issues/40,tempus,2021/10,bug;sponsor acknowledged;G (Gas Optimization)
37,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary checked arithmetic in for loops,41,https://github.com/code-423n4/2021-10-tempus-findings/issues/41,tempus,2021/10,bug;invalid;sponsor disputed;G (Gas Optimization)
37,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary `MLOAD`s in for-each loops,42,https://github.com/code-423n4/2021-10-tempus-findings/issues/42,tempus,2021/10,bug;duplicate;G (Gas Optimization)
37,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Local variables initialization inside a for loop,43,https://github.com/code-423n4/2021-10-tempus-findings/issues/43,tempus,2021/10,bug;sponsor disputed;G (Gas Optimization)
37,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary array boundaries check when loading an array element twice,44,https://github.com/code-423n4/2021-10-tempus-findings/issues/44,tempus,2021/10,bug;sponsor disputed;G (Gas Optimization)
37,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`public` functions can be `external`,45,https://github.com/code-423n4/2021-10-tempus-findings/issues/45,tempus,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
37,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`internal` functions can be `private`,46,https://github.com/code-423n4/2021-10-tempus-findings/issues/46,tempus,2021/10,bug;sponsor disputed;0 (Non-critical)
37,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,State variables could be set private,47,https://github.com/code-423n4/2021-10-tempus-findings/issues/47,tempus,2021/10,bug;invalid;sponsor disputed;G (Gas Optimization)
37,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,depositYieldBearing didn't check address != 0,48,https://github.com/code-423n4/2021-10-tempus-findings/issues/48,tempus,2021/10,bug;sponsor confirmed;disagree with severity;0 (Non-critical);resolved
37,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused imports,33,https://github.com/code-423n4/2021-10-tempus-findings/issues/33,tempus,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
37,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Lower than uint256 storage variables,34,https://github.com/code-423n4/2021-10-tempus-findings/issues/34,tempus,2021/10,bug;duplicate;G (Gas Optimization)
37,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,unchecked operations,35,https://github.com/code-423n4/2021-10-tempus-findings/issues/35,tempus,2021/10,bug;duplicate;sponsor confirmed;G (Gas Optimization);resolved
37,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,for loop with _TOTAL_TOKENS,36,https://github.com/code-423n4/2021-10-tempus-findings/issues/36,tempus,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
37,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,Make `protocolName` variables in protocol pools constant,11,https://github.com/code-423n4/2021-10-tempus-findings/issues/11,tempus,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
37,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,1,Param `initInterestRate` in `TempusPool::constructor` should not be 0,12,https://github.com/code-423n4/2021-10-tempus-findings/issues/12,tempus,2021/10,bug;sponsor confirmed;1 (Low Risk);resolved
37,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,2,cToken funds are locked if Compound's exchange rate is 0,13,https://github.com/code-423n4/2021-10-tempus-findings/issues/13,tempus,2021/10,bug;sponsor disputed;0 (Non-critical)
37,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,0,Aave/Compound pools result in liquidity mining returns being lost,14,https://github.com/code-423n4/2021-10-tempus-findings/issues/14,tempus,2021/10,bug;0 (Non-critical)
37,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Use of `matured` storage variable is unnecessary,15,https://github.com/code-423n4/2021-10-tempus-findings/issues/15,tempus,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
37,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Repeated token transfers on deposits are unnecessary,16,https://github.com/code-423n4/2021-10-tempus-findings/issues/16,tempus,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
37,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,0,Inheritance from BaseGeneralPool is unused,17,https://github.com/code-423n4/2021-10-tempus-findings/issues/17,tempus,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
37,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,TempusAMM freezing all actions except proportional exit on maturity seems unnecessary,18,https://github.com/code-423n4/2021-10-tempus-findings/issues/18,tempus,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
37,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Use of uint8 for counter in for loop increases gas costs,38,https://github.com/code-423n4/2021-10-tempus-findings/issues/38,tempus,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
37,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Typos,29,https://github.com/code-423n4/2021-10-tempus-findings/issues/29,tempus,2021/10,bug;sponsor confirmed;0 (Non-critical);resolved
37,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,30,https://github.com/code-423n4/2021-10-tempus-findings/issues/30,tempus,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
37,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,31,https://github.com/code-423n4/2021-10-tempus-findings/issues/31,tempus,2021/10,bug;sponsor acknowledged;G (Gas Optimization)
37,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Long Revert Strings,28,https://github.com/code-423n4/2021-10-tempus-findings/issues/28,tempus,2021/10,bug;sponsor acknowledged;G (Gas Optimization)
37,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Named Return Issues,4,https://github.com/code-423n4/2021-10-tempus-findings/issues/4,tempus,2021/10,bug;sponsor confirmed;G (Gas Optimization);resolved
40,AC0611,0x45772aD5a6180aEa127eEa8cF26e192Ae4772c18,1,Summarize your findings for the bug or vulnerability.,41,https://github.com/code-423n4/2021-10-tracer-findings/issues/41,tracer,2021/10,bug;invalid;1 (Low Risk)
40,AC0611,0x45772aD5a6180aEa127eEa8cF26e192Ae4772c18,2,Summarize your findings for the bug or vulnerability,42,https://github.com/code-423n4/2021-10-tracer-findings/issues/42,tracer,2021/10,bug;invalid;2 (Med Risk)
40,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,11,https://github.com/code-423n4/2021-10-tracer-findings/issues/11,tracer,2021/10,bug;duplicate;0 (Non-critical);sponsor confirmed;disagree with severity
40,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: shadow pools are only required for burn types,12,https://github.com/code-423n4/2021-10-tracer-findings/issues/12,tracer,2021/10,bug;G (Gas Optimization);sponsor confirmed
40,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Revert in `poolUpkeep`,13,https://github.com/code-423n4/2021-10-tracer-findings/issues/13,tracer,2021/10,bug;sponsor disputed;1 (Low Risk)
40,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unsafe `int256` casts in `executePriceChange`,14,https://github.com/code-423n4/2021-10-tracer-findings/issues/14,tracer,2021/10,bug;0 (Non-critical);sponsor acknowledged;disagree with severity
40,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Use `isToken0` boolean instead of `uint256 token`,15,https://github.com/code-423n4/2021-10-tracer-findings/issues/15,tracer,2021/10,bug;invalid;G (Gas Optimization);sponsor confirmed
40,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `transferGovernance` can save an sload,16,https://github.com/code-423n4/2021-10-tracer-findings/issues/16,tracer,2021/10,bug;G (Gas Optimization);sponsor confirmed
40,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Deposits don't work with fee-on transfer tokens,17,https://github.com/code-423n4/2021-10-tracer-findings/issues/17,tracer,2021/10,bug;sponsor disputed;2 (Med Risk)
40,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`commit` burn yields wrong `amountOut` computation,18,https://github.com/code-423n4/2021-10-tracer-findings/issues/18,tracer,2021/10,bug;invalid;sponsor disputed;2 (Med Risk)
40,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`uncommit` sends tokens to the wrong user,19,https://github.com/code-423n4/2021-10-tracer-findings/issues/19,tracer,2021/10,bug;2 (Med Risk);disagree with severity
40,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,No ERC20 `safeApprove` versions called,20,https://github.com/code-423n4/2021-10-tracer-findings/issues/20,tracer,2021/10,bug;sponsor disputed;1 (Low Risk)
40,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Validate max fee,21,https://github.com/code-423n4/2021-10-tracer-findings/issues/21,tracer,2021/10,bug;0 (Non-critical);sponsor confirmed;disagree with severity
40,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Inefficient modulo computation,22,https://github.com/code-423n4/2021-10-tracer-findings/issues/22,tracer,2021/10,bug;G (Gas Optimization);sponsor confirmed
40,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Wrong keeper reward computation,23,https://github.com/code-423n4/2021-10-tracer-findings/issues/23,tracer,2021/10,bug;sponsor confirmed;2 (Med Risk)
40,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,LeveragedPool has require statements which are also checked in library,10,https://github.com/code-423n4/2021-10-tracer-findings/issues/10,tracer,2021/10,bug;G (Gas Optimization);sponsor confirmed
40,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,Contradiction in comment/require statement,7,https://github.com/code-423n4/2021-10-tracer-findings/issues/7,tracer,2021/10,bug;sponsor confirmed;1 (Low Risk)
40,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,PoolFactory constructor doesn't check whether _feeReceiver is zero address,8,https://github.com/code-423n4/2021-10-tracer-findings/issues/8,tracer,2021/10,bug;duplicate;0 (Non-critical)
40,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,0,"PoolKeeper _gasPrice description says in ETH, but is calculated in wei",9,https://github.com/code-423n4/2021-10-tracer-findings/issues/9,tracer,2021/10,bug;0 (Non-critical);sponsor confirmed
40,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Inclusive check of frontRunning > updateInterval,29,https://github.com/code-423n4/2021-10-tracer-findings/issues/29,tracer,2021/10,bug;0 (Non-critical);sponsor confirmed
40,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,BLOCK_TIME of Arbitrum is less than 13 seconds,30,https://github.com/code-423n4/2021-10-tracer-findings/issues/30,tracer,2021/10,bug;0 (Non-critical);sponsor confirmed;disagree with severity
40,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused state variables,31,https://github.com/code-423n4/2021-10-tracer-findings/issues/31,tracer,2021/10,bug;G (Gas Optimization);sponsor confirmed
40,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Immutable state variables,32,https://github.com/code-423n4/2021-10-tracer-findings/issues/32,tracer,2021/10,bug;G (Gas Optimization);sponsor confirmed
40,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused imports,33,https://github.com/code-423n4/2021-10-tracer-findings/issues/33,tracer,2021/10,bug;0 (Non-critical);sponsor confirmed
40,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unchecked operations,34,https://github.com/code-423n4/2021-10-tracer-findings/issues/34,tracer,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
40,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Checking non-zero transfer value can avoid an external call,35,https://github.com/code-423n4/2021-10-tracer-findings/issues/35,tracer,2021/10,bug;invalid;G (Gas Optimization);sponsor disputed
40,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Useless multiplication by 1,36,https://github.com/code-423n4/2021-10-tracer-findings/issues/36,tracer,2021/10,bug;G (Gas Optimization);sponsor confirmed
40,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,token out of range check can be simplified,37,https://github.com/code-423n4/2021-10-tracer-findings/issues/37,tracer,2021/10,bug;G (Gas Optimization);sponsor confirmed
40,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Style issues,38,https://github.com/code-423n4/2021-10-tracer-findings/issues/38,tracer,2021/10,bug;0 (Non-critical);sponsor confirmed
40,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`PoolCommitter.sol#._uncommit()` Tokens are not returned to the commit owner,24,https://github.com/code-423n4/2021-10-tracer-findings/issues/24,tracer,2021/10,bug;duplicate;2 (Med Risk)
40,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`PoolCommitter.sol#commit()` Calculation of `amountOut` is wrong,25,https://github.com/code-423n4/2021-10-tracer-findings/issues/25,tracer,2021/10,bug;duplicate;invalid;2 (Med Risk)
40,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`PoolKeeper.sol#performUpkeepSinglePool()` Wrong implementation allows attacker to interfere the upkeep of pools,26,https://github.com/code-423n4/2021-10-tracer-findings/issues/26,tracer,2021/10,bug;1 (Low Risk);disagree with severity
40,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,27,https://github.com/code-423n4/2021-10-tracer-findings/issues/27,tracer,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
40,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,28,https://github.com/code-423n4/2021-10-tracer-findings/issues/28,tracer,2021/10,bug;duplicate;invalid;G (Gas Optimization);sponsor confirmed
40,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Array's length value is used directly in a for loop,1,https://github.com/code-423n4/2021-10-tracer-findings/issues/1,tracer,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
40,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Unused local variable in  _latestRoundData (ChainlinkOracleWrapper.sol),2,https://github.com/code-423n4/2021-10-tracer-findings/issues/2,tracer,2021/10,bug;0 (Non-critical);sponsor confirmed
40,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Minimize Storage Slots (LeveragedPool.sol),3,https://github.com/code-423n4/2021-10-tracer-findings/issues/3,tracer,2021/10,bug;G (Gas Optimization);sponsor confirmed
40,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,"Unused modifer ""onlyFeeReceiver"" in LeveragedPool.sol",4,https://github.com/code-423n4/2021-10-tracer-findings/issues/4,tracer,2021/10,bug;0 (Non-critical);sponsor confirmed
40,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,No constant for maximum tip (PoolKeeper.sol),5,https://github.com/code-423n4/2021-10-tracer-findings/issues/5,tracer,2021/10,bug;0 (Non-critical);sponsor confirmed
40,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused Named Returns Can Be Removed,6,https://github.com/code-423n4/2021-10-tracer-findings/issues/6,tracer,2021/10,bug;G (Gas Optimization);sponsor confirmed
45,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`withdrawSeq` might not be set,62,https://github.com/code-423n4/2021-10-union-findings/issues/62,union,2021/10,bug;1 (Low Risk);sponsor confirmed
45,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Rebalance will fail if a market has high utilization,63,https://github.com/code-423n4/2021-10-union-findings/issues/63,union,2021/10,bug;2 (Med Risk);sponsor acknowledged
45,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Rebalance will fail due to low precision of percentages,64,https://github.com/code-423n4/2021-10-union-findings/issues/64,union,2021/10,bug;2 (Med Risk);sponsor confirmed
45,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unbounded iteration in `deleteMarket`,65,https://github.com/code-423n4/2021-10-union-findings/issues/65,union,2021/10,bug;1 (Low Risk);sponsor confirmed
45,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`borrow` must `accrueInterest` first,66,https://github.com/code-423n4/2021-10-union-findings/issues/66,union,2021/10,bug;3 (High Risk);sponsor confirmed
45,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`repayBorrowWithPermit` is missing `nonReentrant`,67,https://github.com/code-423n4/2021-10-union-findings/issues/67,union,2021/10,bug;1 (Low Risk);sponsor confirmed
45,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`withdrawRewards` should send remaining balance,68,https://github.com/code-423n4/2021-10-union-findings/issues/68,union,2021/10,bug;1 (Low Risk);sponsor acknowledged
45,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`UnionToken` should check whitelist on `from`?,69,https://github.com/code-423n4/2021-10-union-findings/issues/69,union,2021/10,bug;2 (Med Risk);sponsor confirmed
45,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `AssetManager.deposit` cam be simplified,70,https://github.com/code-423n4/2021-10-union-findings/issues/70,union,2021/10,bug;duplicate;G (Gas Optimization)
45,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `AssetManager.rebalance` cache last market,71,https://github.com/code-423n4/2021-10-union-findings/issues/71,union,2021/10,bug;G (Gas Optimization)
45,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `AssetManager.getMoneyMarket` use assignment,72,https://github.com/code-423n4/2021-10-union-findings/issues/72,union,2021/10,bug;G (Gas Optimization)
45,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `CompoundAdapter` should approve `cToken` addresses once,73,https://github.com/code-423n4/2021-10-union-findings/issues/73,union,2021/10,bug;invalid;G (Gas Optimization);sponsor confirmed
45,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Explicit overflow checks even though solidity 0.8 is used (1),74,https://github.com/code-423n4/2021-10-union-findings/issues/74,union,2021/10,bug;G (Gas Optimization);sponsor confirmed
45,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Explicit overflow checks even though solidity 0.8 is used (2),75,https://github.com/code-423n4/2021-10-union-findings/issues/75,union,2021/10,bug;G (Gas Optimization);sponsor confirmed
45,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Winning proposal is marked lost,1,https://github.com/code-423n4/2021-10-union-findings/issues/1,union,2021/10,bug;invalid
45,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,User funds are lost in case of non supported market token deposit,10,https://github.com/code-423n4/2021-10-union-findings/issues/10,union,2021/10,bug;duplicate;invalid;3 (High Risk)
45,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,rebalance function will fail due to invalid condition,11,https://github.com/code-423n4/2021-10-union-findings/issues/11,union,2021/10,bug;invalid;2 (Med Risk)
45,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas wastage while finding staker and borrower,12,https://github.com/code-423n4/2021-10-union-findings/issues/12,union,2021/10,bug;duplicate;G (Gas Optimization)
45,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Governor contract is not matching Contract source,2,https://github.com/code-423n4/2021-10-union-findings/issues/2,union,2021/10,bug;1 (Low Risk);disagree with severity
45,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Inefficient bubble sort algorithm leads to gas overusage,4,https://github.com/code-423n4/2021-10-union-findings/issues/4,union,2021/10,bug;duplicate;G (Gas Optimization);sponsor confirmed
45,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Overusage of gas due to non needed loop,7,https://github.com/code-423n4/2021-10-union-findings/issues/7,union,2021/10,bug;G (Gas Optimization)
45,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Duplicate utoken and usermanager can be added which cannot be deleted,8,https://github.com/code-423n4/2021-10-union-findings/issues/8,union,2021/10,bug;2 (Med Risk)
45,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,User Fund loss in case of Unsupported Market token deposit,9,https://github.com/code-423n4/2021-10-union-findings/issues/9,union,2021/10,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
45,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Improper Upper Bound Definition on the New Member Fee ,13,https://github.com/code-423n4/2021-10-union-findings/issues/13,union,2021/10,bug;1 (Low Risk);sponsor disputed
45,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing events for owner only functions that change critical parameters,14,https://github.com/code-423n4/2021-10-union-findings/issues/14,union,2021/10,bug;0 (Non-critical);sponsor confirmed
45,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Zero-address checks are missing,3,https://github.com/code-423n4/2021-10-union-findings/issues/3,union,2021/10,bug;1 (Low Risk);sponsor confirmed
45,gpersoon,gpersoon.eth,2,MAX_TRUST_LIMIT might be too high,5,https://github.com/code-423n4/2021-10-union-findings/issues/5,union,2021/10,bug;2 (Med Risk);sponsor acknowledged
45,gpersoon,gpersoon.eth,1,setHalfDecayPoint check allowed values,6,https://github.com/code-423n4/2021-10-union-findings/issues/6,union,2021/10,bug;1 (Low Risk);sponsor confirmed
45,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,AssetManager's rebalance function can fail if the last moneyMarket doesn't support a token and the balance gathered is odd,104,https://github.com/code-423n4/2021-10-union-findings/issues/104,union,2021/10,bug;duplicate;2 (Med Risk);sponsor confirmed
45,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,G,Gas efficiency suggestions,105,https://github.com/code-423n4/2021-10-union-findings/issues/105,union,2021/10,bug;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,AssetManager: Deposit() function has redundant continue statement.,29,https://github.com/code-423n4/2021-10-union-findings/issues/29,union,2021/10,bug;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,AssetManager: rebalance() function can optimized further.,30,https://github.com/code-423n4/2021-10-union-findings/issues/30,union,2021/10,bug;invalid;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,UToken: _repayBorrowFresh() function can be optimized further,31,https://github.com/code-423n4/2021-10-union-findings/issues/31,union,2021/10,bug;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,UToken: Allowance check in mint() can be removed,32,https://github.com/code-423n4/2021-10-union-findings/issues/32,union,2021/10,bug;invalid;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,UToken: revert on over/underflow checks in addReserve() and removeReserve() are unnecessary,33,https://github.com/code-423n4/2021-10-union-findings/issues/33,union,2021/10,bug;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,CreditLimitByMedian: getLockedAmount() can be optimized further.,34,https://github.com/code-423n4/2021-10-union-findings/issues/34,union,2021/10,bug;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,UserManager: getBorrowerAsset() can be optimized further,35,https://github.com/code-423n4/2021-10-union-findings/issues/35,union,2021/10,bug;invalid;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,UserManager: getTotalLockedStake() redundant assignment,36,https://github.com/code-423n4/2021-10-union-findings/issues/36,union,2021/10,bug;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,UserManager: getCreditLimit() can be optimized further,37,https://github.com/code-423n4/2021-10-union-findings/issues/37,union,2021/10,bug;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,UserManager: addMember() contains redundant require check,38,https://github.com/code-423n4/2021-10-union-findings/issues/38,union,2021/10,bug;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,UserManager: use mapping to avoid iteration,39,https://github.com/code-423n4/2021-10-union-findings/issues/39,union,2021/10,bug;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,UserManager: cancelVouch() should break from loop when address is found.,40,https://github.com/code-423n4/2021-10-union-findings/issues/40,union,2021/10,bug;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,UserManager: registerMember() can be optimized further,41,https://github.com/code-423n4/2021-10-union-findings/issues/41,union,2021/10,bug;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,UserManager: allowance check in stake() function is not required,42,https://github.com/code-423n4/2021-10-union-findings/issues/42,union,2021/10,bug;invalid;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,UserManager: _updateTotalFrozen can be optimized further,43,https://github.com/code-423n4/2021-10-union-findings/issues/43,union,2021/10,bug;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,UserManager: debtWriteOff() doesn't need if borrower has sufficient assets frozen before subtracting,44,https://github.com/code-423n4/2021-10-union-findings/issues/44,union,2021/10,bug;G (Gas Optimization)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,0,AssetManager: getLoanableAmount() can be made more readable,45,https://github.com/code-423n4/2021-10-union-findings/issues/45,union,2021/10,bug;0 (Non-critical)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,0,UserManager: _getFrozenCoinAge is not used,46,https://github.com/code-423n4/2021-10-union-findings/issues/46,union,2021/10,bug;0 (Non-critical)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,2,UserManager: totalStaked ≥ totalFrozen should be checked before and after totalFrozen is updated,47,https://github.com/code-423n4/2021-10-union-findings/issues/47,union,2021/10,bug;2 (Med Risk);sponsor confirmed
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,2,UserManager: debtWriteOff() function doesn't update state in comptroller,48,https://github.com/code-423n4/2021-10-union-findings/issues/48,union,2021/10,bug;duplicate;2 (Med Risk)
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,3,UserManager: updateLockedData() locks more amount than required.,49,https://github.com/code-423n4/2021-10-union-findings/issues/49,union,2021/10,bug;duplicate;2 (Med Risk);sponsor disputed
45,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,3,UserManager: updateLockedData() doesn't check that the amount is actually locked.,50,https://github.com/code-423n4/2021-10-union-findings/issues/50,union,2021/10,bug;invalid;3 (High Risk);sponsor disputed
45,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,"debtWriteOff updates totalFrozen immaturely, thereby losing staker rewards",28,https://github.com/code-423n4/2021-10-union-findings/issues/28,union,2021/10,bug;2 (Med Risk);sponsor acknowledged
45,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Comptroller rewards can be artificially inflated and drained by manipulating [totalStaked - totalFrozen] (or: wrong rewards calculation),78,https://github.com/code-423n4/2021-10-union-findings/issues/78,union,2021/10,bug;2 (Med Risk);sponsor confirmed
45,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,0,Lock pragma compiler version,15,https://github.com/code-423n4/2021-10-union-findings/issues/15,union,2021/10,bug;invalid;0 (Non-critical)
45,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Tautologies in require statements,16,https://github.com/code-423n4/2021-10-union-findings/issues/16,union,2021/10,bug;G (Gas Optimization)
45,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,"stake function in UserManager checks for allowance, which is also done in ERC20 transferFrom",24,https://github.com/code-423n4/2021-10-union-findings/issues/24,union,2021/10,bug;G (Gas Optimization)
45,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,UserManager stake function sets assetManager allowance to 0 right before setting allowance to amount,25,https://github.com/code-423n4/2021-10-union-findings/issues/25,union,2021/10,bug;invalid;G (Gas Optimization)
45,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,More efficient loops,100,https://github.com/code-423n4/2021-10-union-findings/issues/100,union,2021/10,bug;G (Gas Optimization);sponsor acknowledged
45,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,"At some places, array length is not cached. ",101,https://github.com/code-423n4/2021-10-union-findings/issues/101,union,2021/10,bug;duplicate;G (Gas Optimization)
45,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,--j is more gas efficient than j--.,102,https://github.com/code-423n4/2021-10-union-findings/issues/102,union,2021/10,bug;G (Gas Optimization);sponsor acknowledged
45,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,double reading from memory inside a for loop.,103,https://github.com/code-423n4/2021-10-union-findings/issues/103,union,2021/10,bug;G (Gas Optimization);sponsor confirmed
45,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,caching multiple used variables,106,https://github.com/code-423n4/2021-10-union-findings/issues/106,union,2021/10,bug;G (Gas Optimization);sponsor confirmed
45,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Treasury setAdmin function,107,https://github.com/code-423n4/2021-10-union-findings/issues/107,union,2021/10,bug;duplicate;1 (Low Risk)
45,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Admin has too much power,108,https://github.com/code-423n4/2021-10-union-findings/issues/108,union,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
45,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Lack of precision in wadDiv ,109,https://github.com/code-423n4/2021-10-union-findings/issues/109,union,2021/10,bug;1 (Low Risk);sponsor acknowledged
45,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,0,WadRayMath state variables,110,https://github.com/code-423n4/2021-10-union-findings/issues/110,union,2021/10,bug;0 (Non-critical);sponsor confirmed
45,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Open TODOs in `Treasury.sol`,94,https://github.com/code-423n4/2021-10-union-findings/issues/94,union,2021/10,bug;0 (Non-critical);sponsor confirmed
45,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,UToken.sol _redeemFresh could be set private instead internal,95,https://github.com/code-423n4/2021-10-union-findings/issues/95,union,2021/10,bug;G (Gas Optimization);sponsor confirmed
45,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Lack of address input verification - UToken.repayBorrowWithPermit,96,https://github.com/code-423n4/2021-10-union-findings/issues/96,union,2021/10,bug;duplicate;1 (Low Risk)
45,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,UToken.__UToken_init can be frontrun,97,https://github.com/code-423n4/2021-10-union-findings/issues/97,union,2021/10,bug;1 (Low Risk);sponsor confirmed
45,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,UToken.uErc20 field could be immutable ,98,https://github.com/code-423n4/2021-10-union-findings/issues/98,union,2021/10,bug;G (Gas Optimization)
45,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,UToken ERC20 function is inherited and not override ,99,https://github.com/code-423n4/2021-10-union-findings/issues/99,union,2021/10,bug;invalid;question;1 (Low Risk)
45,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Validation in addSchedule,82,https://github.com/code-423n4/2021-10-union-findings/issues/82,union,2021/10,bug;duplicate;1 (Low Risk)
45,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,deposit onlyAssetManager,83,https://github.com/code-423n4/2021-10-union-findings/issues/83,union,2021/10,bug;0 (Non-critical);sponsor acknowledged
45,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Two-step change of a critical parameter,84,https://github.com/code-423n4/2021-10-union-findings/issues/84,union,2021/10,bug;1 (Low Risk);sponsor confirmed
45,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,Unbounded loops,85,https://github.com/code-423n4/2021-10-union-findings/issues/85,union,2021/10,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
45,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,getSupply and getSupplyView are identical,86,https://github.com/code-423n4/2021-10-union-findings/issues/86,union,2021/10,bug;G (Gas Optimization)
45,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Immutable variables,87,https://github.com/code-423n4/2021-10-union-findings/issues/87,union,2021/10,bug;G (Gas Optimization)
45,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Struct with only 1 element,88,https://github.com/code-423n4/2021-10-union-findings/issues/88,union,2021/10,bug;G (Gas Optimization);sponsor confirmed
45,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,list of _admins,89,https://github.com/code-423n4/2021-10-union-findings/issues/89,union,2021/10,bug;0 (Non-critical)
45,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Pre-calculate known values,90,https://github.com/code-423n4/2021-10-union-findings/issues/90,union,2021/10,bug;G (Gas Optimization);sponsor confirmed
45,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Zero transfers,91,https://github.com/code-423n4/2021-10-union-findings/issues/91,union,2021/10,bug;G (Gas Optimization);sponsor acknowledged
45,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,.length in a loop,92,https://github.com/code-423n4/2021-10-union-findings/issues/92,union,2021/10,bug;G (Gas Optimization);sponsor confirmed
45,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unchecked math operations,93,https://github.com/code-423n4/2021-10-union-findings/issues/93,union,2021/10,bug;G (Gas Optimization)
45,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,Inconsistent use of `UToken::getBorrowed()`,19,https://github.com/code-423n4/2021-10-union-findings/issues/19,union,2021/10,bug;0 (Non-critical)
45,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,Inconsistent use of `UToken::getLastRepay()`,20,https://github.com/code-423n4/2021-10-union-findings/issues/20,union,2021/10,bug;0 (Non-critical)
45,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,2,Change in interest rate can disable repay of loan,21,https://github.com/code-423n4/2021-10-union-findings/issues/21,union,2021/10,bug;2 (Med Risk);sponsor confirmed
45,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short circuiting can save gas,51,https://github.com/code-423n4/2021-10-union-findings/issues/51,union,2021/10,bug;G (Gas Optimization)
45,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code Style: consistency,52,https://github.com/code-423n4/2021-10-union-findings/issues/52,union,2021/10,bug;0 (Non-critical)
45,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Exit loop can save some gas,53,https://github.com/code-423n4/2021-10-union-findings/issues/53,union,2021/10,bug;duplicate;G (Gas Optimization)
45,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code Style: public/external function names should not be prefixed with `__`,54,https://github.com/code-423n4/2021-10-union-findings/issues/54,union,2021/10,bug;invalid;0 (Non-critical)
45,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Unused imports,55,https://github.com/code-423n4/2021-10-union-findings/issues/55,union,2021/10,bug;0 (Non-critical)
45,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary code execution can save some gas in edge cases,56,https://github.com/code-423n4/2021-10-union-findings/issues/56,union,2021/10,bug;G (Gas Optimization)
45,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache and read storage variables from the stack can save gas,57,https://github.com/code-423n4/2021-10-union-findings/issues/57,union,2021/10,bug;G (Gas Optimization)
45,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,58,https://github.com/code-423n4/2021-10-union-findings/issues/58,union,2021/10,bug;G (Gas Optimization)
45,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache and read storage variables from the stack can save gas,59,https://github.com/code-423n4/2021-10-union-findings/issues/59,union,2021/10,bug;duplicate;invalid;G (Gas Optimization)
45,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,60,https://github.com/code-423n4/2021-10-union-findings/issues/60,union,2021/10,bug;G (Gas Optimization)
45,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code Style: constants should be named in all caps,61,https://github.com/code-423n4/2021-10-union-findings/issues/61,union,2021/10,bug;0 (Non-critical)
45,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Controller.sol#__Controller_init()` Inappropriate function visibility,76,https://github.com/code-423n4/2021-10-union-findings/issues/76,union,2021/10,bug;invalid;1 (Low Risk);sponsor disputed
45,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`UToken.sol` should inherits and complies with `IUToken.sol`,77,https://github.com/code-423n4/2021-10-union-findings/issues/77,union,2021/10,bug;1 (Low Risk);sponsor confirmed
45,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Wrong calculation of `FrozenCoinAge`,79,https://github.com/code-423n4/2021-10-union-findings/issues/79,union,2021/10,bug;invalid;3 (High Risk);0 (Non-critical);disagree with severity
45,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Wrong implementation of `CreditLimitByMedian.sol#getLockedAmount()` makes it unable to unlock `lockedAmount` in `CreditLimitByMedian` model,80,https://github.com/code-423n4/2021-10-union-findings/issues/80,union,2021/10,bug;3 (High Risk);sponsor acknowledged
45,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Wrong implementation of `CreditLimitByMedian.sol#getLockedAmount()` will lock a much bigger total amount of staked tokens than expected,81,https://github.com/code-423n4/2021-10-union-findings/issues/81,union,2021/10,bug;2 (Med Risk)
45,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Long Revert Strings,17,https://github.com/code-423n4/2021-10-union-findings/issues/17,union,2021/10,bug;G (Gas Optimization);sponsor acknowledged
45,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unneeded Named Returns (UToken.sol),18,https://github.com/code-423n4/2021-10-union-findings/issues/18,union,2021/10,bug;0 (Non-critical)
45,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Functions TotalSupplyView/TotalSupply Can Be Made More Efficient (AssetManager.sol),22,https://github.com/code-423n4/2021-10-union-findings/issues/22,union,2021/10,bug;G (Gas Optimization)
45,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Function checkIsOverDue Can Be Made More Efficient (UToken.sol),23,https://github.com/code-423n4/2021-10-union-findings/issues/23,union,2021/10,bug;G (Gas Optimization)
45,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Function getFrozenCoinAge Can Be Made More Efficient (UserManager.sol),26,https://github.com/code-423n4/2021-10-union-findings/issues/26,union,2021/10,bug;G (Gas Optimization);sponsor acknowledged
45,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,For Loops Need Break Statements (UserManager.sol),27,https://github.com/code-423n4/2021-10-union-findings/issues/27,union,2021/10,bug;G (Gas Optimization);sponsor confirmed
57,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,"`SettToRenIbbtcZap.sol#setGuardian` doesn't set the guardian, but governance",10,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/10,badgerzaps,2021/11,bug;duplicate;3 (High Risk);sponsor confirmed
57,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,Missing events for guardian and governance at `IbbtcVaultZap.sol`,11,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/11,badgerzaps,2021/11,bug;duplicate;invalid;0 (Non-critical)
57,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,"`IbbtcVaultZap.sol#setGuardian` doesn't set the guardian, but governance",12,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/12,badgerzaps,2021/11,bug;duplicate;invalid;3 (High Risk)
57,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,Wrong comment on `SettToRenIbbtcZap.sol` and `IbbtcVaultZap.sol`,16,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/16,badgerzaps,2021/11,bug;disagree with severity;1 (Low Risk)
57,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,`Zap.sol` no events for governance,17,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/17,badgerzaps,2021/11,bug;duplicate;disagree with severity;sponsor disputed;0 (Non-critical)
57,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For `uint` use ` != 0` instead of ` > 0`,18,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/18,badgerzaps,2021/11,bug;G (Gas Optimization)
57,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,Missing events  for guardian and governance at `SettToRenIbbtcZap.sol`,9,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/9,badgerzaps,2021/11,bug;duplicate;disagree with severity;sponsor disputed;0 (Non-critical)
57,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,setGovernor should be two step process,19,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/19,badgerzaps,2021/11,bug;duplicate;0 (Non-critical)
57,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,69,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/69,badgerzaps,2021/11,bug;invalid;disagree with severity;sponsor disputed;G (Gas Optimization)
57,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing events for owner/governor only functions that change critical parameters,7,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/7,badgerzaps,2021/11,bug;duplicate;sponsor confirmed;0 (Non-critical);resolved
57,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,The Contracts Should safeApprove(0) first,70,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/70,badgerzaps,2021/11,bug;invalid;disagree with severity;sponsor disputed;1 (Low Risk)
57,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimization on the Public Function,79,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/79,badgerzaps,2021/11,bug;G (Gas Optimization)
57,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,8,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/8,badgerzaps,2021/11,bug;sponsor acknowledged;1 (Low Risk)
57,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,3,setGaurdian is changing Governance instead of Gaurdian,24,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/24,badgerzaps,2021/11,bug;duplicate;3 (High Risk);sponsor confirmed
57,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,3,setGaurdian is setting Governance instead of governance in SettToRenIbbtcZap.sol,25,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/25,badgerzaps,2021/11,bug;invalid;3 (High Risk);sponsor confirmed
57,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,0,Modifier should be used instead of functions to write modifier in ibBTC VaultZap.sol,26,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/26,badgerzaps,2021/11,bug;sponsor acknowledged;0 (Non-critical)
57,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,0,use modifier keyword to write modifier not function In SettToRenIbbtcZap.sol line no - 105 and 109,27,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/27,badgerzaps,2021/11,bug;sponsor acknowledged;0 (Non-critical)
57,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,1,Open TODO,5,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/5,badgerzaps,2021/11,bug;duplicate;0 (Non-critical)
57,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,0,Remove unused variables,6,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/6,badgerzaps,2021/11,bug;duplicate;sponsor confirmed;G (Gas Optimization)
57,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,No slippage control on `deposit` of IbbtcVaultZap.sol,71,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/71,badgerzaps,2021/11,bug;2 (Med Risk)
57,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,`calcMint` always return poolId=0 and idx=0,72,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/72,badgerzaps,2021/11,bug;2 (Med Risk)
57,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,`redeem` may return less than `minOut`,73,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/73,badgerzaps,2021/11,bug;duplicate;2 (Med Risk)
57,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,`setGuardian` incorrectly set governance in IbbtcVaultZap.sol,74,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/74,badgerzaps,2021/11,bug;invalid;3 (High Risk)
57,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,`setGuardian` incorrectly set governance in SettToRenIbbtcZap.sol,75,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/75,badgerzaps,2021/11,bug;duplicate;3 (High Risk)
57,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Use else if for mutually exclusive conditions,76,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/76,badgerzaps,2021/11,bug;G (Gas Optimization)
57,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Unreachable code in Zap.sol,77,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/77,badgerzaps,2021/11,bug;G (Gas Optimization)
57,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Unnecessary ops,78,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/78,badgerzaps,2021/11,bug;G (Gas Optimization)
57,ksk2345,0xc343235Ec8143EAB788d706165D50082833FF137,2,Access control : wrongly setting the new guardian address to governance address,46,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/46,badgerzaps,2021/11,bug;duplicate;3 (High Risk);sponsor confirmed
57,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,SLOAD pools.length for Every Loop is Waste of Gas ,28,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/28,badgerzaps,2021/11,bug;G (Gas Optimization)
57,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Avoiding Initialization of Loop Index If It Is 0,29,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/29,badgerzaps,2021/11,bug;G (Gas Optimization)
57,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,TODOs List May Leak Important Info & Errors,30,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/30,badgerzaps,2021/11,bug;duplicate;sponsor confirmed;0 (Non-critical)
57,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,setGuardian() Privilage Escalation Causing Governance Lose Control of The Contract,31,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/31,badgerzaps,2021/11,bug;duplicate;3 (High Risk);sponsor confirmed
57,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,MAX_FEE Is Not Correct,32,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/32,badgerzaps,2021/11,bug;invalid;sponsor disputed;1 (Low Risk)
57,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,2,mint() Input Variable minOut Does Not Pass Value to interface ICurveFi add_liquidity() ,33,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/33,badgerzaps,2021/11,bug;invalid;disagree with severity;sponsor disputed;2 (Med Risk)
57,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Calculate balance of twice as part of an important function,57,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/57,badgerzaps,2021/11,bug;invalid;sponsor disputed;G (Gas Optimization)
57,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G, Unnecessary `SLOAD`s / `MLOAD`s / `CALLDATALOAD`s in for-each loops,58,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/58,badgerzaps,2021/11,bug;G (Gas Optimization)
57,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,named return issue - Zap.sol calcMint,59,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/59,badgerzaps,2021/11,bug;disagree with severity;sponsor disputed;0 (Non-critical)
57,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Zap.sol init for loop - uint default value is 0,60,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/60,badgerzaps,2021/11,bug;G (Gas Optimization)
57,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,public function that could be set external instead,61,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/61,badgerzaps,2021/11,bug;G (Gas Optimization)
57,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,safeApprove of openZeppelin is deprecated,62,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/62,badgerzaps,2021/11,bug;invalid;sponsor disputed;1 (Low Risk)
57,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,You don't emit events,63,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/63,badgerzaps,2021/11,bug;duplicate;sponsor disputed;0 (Non-critical)
57,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Double reading of memory array index inside a loop,64,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/64,badgerzaps,2021/11,bug;invalid;disagree with severity;sponsor disputed;G (Gas Optimization)
57,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary array boundaries check when loading an array element twice,65,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/65,badgerzaps,2021/11,bug;invalid;disagree with severity;sponsor disputed;G (Gas Optimization)
57,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary checked arithmetic in for loops,66,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/66,badgerzaps,2021/11,bug;invalid;disagree with severity;sponsor disputed;G (Gas Optimization)
57,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Open TODOs,67,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/67,badgerzaps,2021/11,bug;0 (Non-critical)
57,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Require statements without messages,68,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/68,badgerzaps,2021/11,bug;invalid;disagree with severity;sponsor disputed;1 (Low Risk)
57,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,2,Missing overflow protection,13,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/13,badgerzaps,2021/11,bug;sponsor confirmed;1 (Low Risk)
57,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,Don't use deprecated library functions,14,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/14,badgerzaps,2021/11,bug;invalid;0 (Non-critical)
57,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Remove unused variables in `Zap.sol`,15,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/15,badgerzaps,2021/11,bug;duplicate;G (Gas Optimization)
57,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,3,Zap contract's mint() allows minting ibbtc tokens for free,1,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/1,badgerzaps,2021/11,bug;disagree with severity;sponsor disputed;1 (Low Risk)
57,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,2,Zap contract's redeem() function doesn't check which token the user wants to receive,2,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/2,badgerzaps,2021/11,bug;2 (Med Risk)
57,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,2,Zap contract's redeem() function might transfer more tokens than the user should be able to receive,3,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/3,badgerzaps,2021/11,bug;invalid;disagree with severity;2 (Med Risk)
57,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Zap.sol declares unused variable `_ren` in `calcRedeemInRen` among other functions,4,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/4,badgerzaps,2021/11,bug;sponsor confirmed;G (Gas Optimization);resolved
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding `recipient` parameter to mint functions can help avoid unnecessary token transfers and save gas,34,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/34,badgerzaps,2021/11,bug;G (Gas Optimization)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Zap.sol#mint()` Validation of `poolId` can be done earlier to save gas,35,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/35,badgerzaps,2021/11,bug;G (Gas Optimization)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary read of array length in for loops can save gas,36,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/36,badgerzaps,2021/11,bug;G (Gas Optimization)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Zap.sol#redeem()` Lack of input validation,37,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/37,badgerzaps,2021/11,bug;1 (Low Risk)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Missing error messages in require statements,38,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/38,badgerzaps,2021/11,bug;invalid;0 (Non-critical)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused local variables,39,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/39,badgerzaps,2021/11,bug;sponsor confirmed;G (Gas Optimization)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use else if can save gas,40,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/40,badgerzaps,2021/11,bug;duplicate;G (Gas Optimization)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary code execution can save gas,41,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/41,badgerzaps,2021/11,bug;G (Gas Optimization)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Redundant type casting,42,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/42,badgerzaps,2021/11,bug;0 (Non-critical)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`initializer` functions can be front run,43,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/43,badgerzaps,2021/11,bug;invalid;sponsor disputed;0 (Non-critical)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Arithmetic operations without using SafeMath may over/underflow,44,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/44,badgerzaps,2021/11,bug;1 (Low Risk)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary arithmetic operations can save gas,45,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/45,badgerzaps,2021/11,bug;G (Gas Optimization)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Improper implementation of slippage check,47,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/47,badgerzaps,2021/11,bug;2 (Med Risk)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`IbbtcVaultZap.sol#deposit()` can be front run,48,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/48,badgerzaps,2021/11,bug;duplicate;2 (Med Risk)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Zap.sol#mint()` Check `blockLock` earlier can save gas,49,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/49,badgerzaps,2021/11,bug;G (Gas Optimization)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Excessive `require` makes the transaction fail unexpectedly,50,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/50,badgerzaps,2021/11,bug;sponsor confirmed;2 (Med Risk)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`setGuardian()` Wrong implementation,51,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/51,badgerzaps,2021/11,bug;3 (High Risk)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`blockLock` of `RENCRV_SETT` makes transactions likely to fail as only 1 transaction is allowed in 1 block,52,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/52,badgerzaps,2021/11,bug;disagree with severity;1 (Low Risk)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Missing `_token.approve()` to `curvePool` in `setZapConfig`,53,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/53,badgerzaps,2021/11,bug;sponsor confirmed;2 (Med Risk)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Use immutable variables for settings that will be configured at deploy time,54,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/54,badgerzaps,2021/11,bug;invalid;sponsor disputed;1 (Low Risk)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Missing events for critical operations,55,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/55,badgerzaps,2021/11,bug;disagree with severity;sponsor confirmed;0 (Non-critical)
57,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Critical changes should use two-step procedure,56,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/56,badgerzaps,2021/11,bug;sponsor acknowledged;0 (Non-critical)
57,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,"Issues with unused named return variables and local variables (calcMint..., calcRedeem...)",20,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/20,badgerzaps,2021/11,bug;duplicate;G (Gas Optimization)
57,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,ibbtcCurveLP can be simplified,21,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/21,badgerzaps,2021/11,bug;sponsor confirmed;G (Gas Optimization);resolved
57,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused Named Returns,22,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/22,badgerzaps,2021/11,bug;invalid;G (Gas Optimization)
57,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Open TODOs,23,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/23,badgerzaps,2021/11,bug;duplicate;sponsor acknowledged;0 (Non-critical)
51,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,Unchecked transfer,144,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/144,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,Unchecked low-level calls,145,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/145,bootfinance,2021/11,bug;2 (Med Risk);sponsor confirmed
51,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,1,Missing Zero-check,146,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/146,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,0,block timestamp,147,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/147,bootfinance,2021/11,bug;0 (Non-critical);sponsor acknowledged
51,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,1,Reentrancy,148,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/148,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,uint256 is always >= 0,133,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/133,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Not needed requiere statement in Swap.sol,134,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/134,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,# Missing parameter validation,209,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/209,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`BasicSale` has unused ERC20 code,210,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/210,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`BasicSale` uses inaccurate `secondsPerDay` value,211,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/211,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,ERC20 return values not checked,212,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/212,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Vestings' revoke status can be set by anyone,213,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/213,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unbounded iteration in `validate`,214,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/214,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,can withdraw shares on behalf of anyone,215,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/215,bootfinance,2021/11,bug;1 (Low Risk);sponsor acknowledged
51,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Swaps are not split when trade crosses target price,216,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/216,bootfinance,2021/11,bug;3 (High Risk);sponsor confirmed
51,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Unnecessary length check in `Swap.constructor`,217,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/217,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Unnecessary msg.sender != 0 check,218,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/218,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Unnecessary check in `_updateEmission`,219,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/219,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Adding unchecked directive can save gas,261,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/261,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Potential Reentrancy when burning tokens,262,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/262,bootfinance,2021/11,bug;duplicate;1 (Low Risk)
51,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimization on the Public Function,263,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/263,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,29,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/29,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant Safe Math Library Usage,30,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/30,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Lack of maximum and minimum vesting amount check on the vesting function,32,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/32,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,33,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/33,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,No Transfer Ownership Pattern,35,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/35,bootfinance,2021/11,bug;2 (Med Risk);sponsor confirmed
51,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas optimization on the address array,36,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/36,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Inconsistency On The Investor Check,86,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/86,bootfinance,2021/11,bug;duplicate;1 (Low Risk)
51,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,3,Double Spend in AirDropDistribution.sol,199,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/199,bootfinance,2021/11,bug;duplicate;3 (High Risk)
51,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,2,InvestorDistribution uses setAdmin anti-pattern,206,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/206,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,2,Main Swap.sol does not implement transfer-accept ownership pattern,289,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/289,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,fr0zn,0xBCF9Bb3A514535Db963Df6A21C50299760F22993,2,Invalid or missing validity check,100,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/100,bootfinance,2021/11,bug;duplicate;3 (High Risk)
51,fr0zn,0xBCF9Bb3A514535Db963Df6A21C50299760F22993,3,Invalid validity check,101,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/101,bootfinance,2021/11,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
51,fr0zn,0xBCF9Bb3A514535Db963Df6A21C50299760F22993,1,Invalid return value when calculating claimable amount ,92,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/92,bootfinance,2021/11,bug;0 (Non-critical);sponsor disputed
51,fr0zn,0xBCF9Bb3A514535Db963Df6A21C50299760F22993,G,Gas optimization on Vesting.sol ,93,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/93,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,fr0zn,0xBCF9Bb3A514535Db963Df6A21C50299760F22993,G,Gas optimization on InvestorDistribution.sol,94,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/94,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,fr0zn,0xBCF9Bb3A514535Db963Df6A21C50299760F22993,G,Redundant check on updateEmission (gas optimization),95,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/95,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,fr0zn,0xBCF9Bb3A514535Db963Df6A21C50299760F22993,G,Duplicated code and usage of assert,96,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/96,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,fr0zn,0xBCF9Bb3A514535Db963Df6A21C50299760F22993,G,Redundant check on claim,97,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/97,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,fr0zn,0xBCF9Bb3A514535Db963Df6A21C50299760F22993,0,Discrepancy between claim and claimExact checks,98,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/98,bootfinance,2021/11,bug;duplicate;1 (Low Risk)
51,fr0zn,0xBCF9Bb3A514535Db963Df6A21C50299760F22993,1,Airdrop Supply differs,99,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/99,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,gpersoon,gpersoon.eth,3,Claim airdrop repeatedly,129,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/129,bootfinance,2021/11,bug;3 (High Risk);resolved;sponsor confirmed
51,gpersoon,gpersoon.eth,3,Can't claim last part of airdrop,130,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/130,bootfinance,2021/11,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
51,gpersoon,gpersoon.eth,3,Investor can't claim the last tokens (via claim() ),131,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/131,bootfinance,2021/11,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
51,gpersoon,gpersoon.eth,2,Overwrite benRevocable,132,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/132,bootfinance,2021/11,bug;2 (Med Risk);sponsor confirmed
51,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unnecessary require statement,265,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/265,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Swap does not provide best rate,266,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/266,bootfinance,2021/11,bug;duplicate;3 (High Risk)
51,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,"Vesting.benVested storage variable can be simplified, while _claimableAmount's ""s <= benTotal[_addr]"" check is redundant and to be removed",186,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/186,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,AirdropDistribution's public functions can be made external,187,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/187,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,InvestorDistribution's public functions can be made external,188,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/188,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,SwapUtils's getD function reads xp[] from storage twice and can be simplified,189,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/189,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,'From' and 'to' tokens are read from storage multiple times in SwapUtils's swap function,190,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/190,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Multiple double storage reading _xp(self) function calls,191,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/191,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Double storage reading for lptoken,192,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/192,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,SwapUtils.getVirtualPrice double calling to storage reading function _xp(self),193,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/193,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,SwapUtils's addLiquidity does multiple LP token total supply calls,197,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/197,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,SwapUtils's functions do multiple storage array length reads,198,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/198,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,SwapUtils.calculateTokenAmount does repetitive checks of static condition,200,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/200,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,"SwapUtils's getD, getY, getYD functions do repetitive calculations of contant expression within the cycles",207,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/207,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,Vesting benRevocable flag can be switched on and off by anyone and doesn't provide any additional control,251,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/251,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,Declaring the variable  to immutable ,3,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/3,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,Unused Variables ,4,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/4,bootfinance,2021/11,bug;invalid;G (Gas Optimization);sponsor disputed
51,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,No need to initialize variables with default values,5,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/5,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,"No checking of admin_fee, wether it is <= max_admin_fee ",127,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/127,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,No event was emitted while setting fees and admin_fees in constructor,128,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/128,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,"wrong operator used in checking the fees, adminfee, withdrawfee",254,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/254,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,0,use of floating pragma,257,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/257,bootfinance,2021/11,bug;0 (Non-critical)
51,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,Packing of state variable ,258,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/258,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,require() that can be removed,259,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/259,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Can not update target price,143,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/143,bootfinance,2021/11,bug;3 (High Risk);sponsor confirmed
51,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Ideal balance is not calculated correctly when providing imbalanced liquidity,150,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/150,bootfinance,2021/11,bug;3 (High Risk);sponsor confirmed
51,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,`customPrecisionMultipliers` would be rounded to zero and break the pool,183,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/183,bootfinance,2021/11,bug;3 (High Risk);sponsor confirmed
51,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Get virtual price is not monotonically increasing ,185,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/185,bootfinance,2021/11,bug;2 (Med Risk);sponsor confirmed
51,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Stop ramp target price would create huge arbitrage space.,208,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/208,bootfinance,2021/11,bug;2 (Med Risk);sponsor confirmed
51,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,Users Can DOS Vesting Distributions,302,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/302,bootfinance,2021/11,bug;duplicate;3 (High Risk)
51,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Users Can Frontrun `revoke()` By Calling `vest()`,303,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/303,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,Improper Use of `assert` Keyword,304,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/304,bootfinance,2021/11,bug;duplicate;1 (Low Risk)
51,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,G,Functions Can Be Made External,305,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/305,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,Incorrect `require` Statement in `Vesting.claim()`,306,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/306,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,G,`Timelock` Struct Packing in `Vesting.sol`,307,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/307,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,Commented code left in codebase,151,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/151,bootfinance,2021/11,bug;duplicate;1 (Low Risk)
51,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Redundant require statement in Swap constructor,152,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/152,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Tautologies in require statement in Swap constructor,153,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/153,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,safeERC20 library imported but not used,154,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/154,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Unnecessary use of SafeMath in version 0.8.x contracts,155,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/155,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,Not possible to set maximum fee in Swap.sol,156,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/156,bootfinance,2021/11,bug;duplicate;1 (Low Risk);sponsor confirmed
51,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,2,Unchecked `transferFrom` call in Vesting,157,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/157,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,0,Unlocked pragma,158,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/158,bootfinance,2021/11,bug;duplicate;0 (Non-critical)
51,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,claimExact() Missing Validation As In claim(),194,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/194,bootfinance,2021/11,bug;0 (Non-critical);sponsor acknowledged
51,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,validate() to Verify Airdrop Address On Chain is Unnecessary,195,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/195,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,2,dev_rugpull() May be Misuse To Obtain Investors' Tokens That Does Not Belong To Admin ,196,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/196,bootfinance,2021/11,bug;invalid;2 (Med Risk);sponsor disputed
51,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,addInvestor() Does Not Check Availability of investors_supply,201,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/201,bootfinance,2021/11,bug;3 (High Risk);sponsor acknowledged
51,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,revoke() Does Not Check Zero Address for _addr,202,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/202,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,"Remove ""= 0"" to Save Gas",203,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/203,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,0,revoke(): Move emit TokenClaimed After vestingToken.safeTransfer,204,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/204,bootfinance,2021/11,bug;invalid;sponsor confirmed
51,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Repeat Check Cannot withdraw more than total vested amount,205,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/205,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Usage of deprecated safeApprove,166,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/166,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use unchecked where overflow isn't an option to save GAS.,167,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/167,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Missing revert message,168,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/168,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,double reading from memory inside a for loop.,169,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/169,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,unnecessary variable y in getYD ,170,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/170,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,setAdmin function use one-phase owner transfership instead of two-phases safer ownership transfer,171,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/171,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use calldata instead of memory for function parameters,172,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/172,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,3,Unable to claim vesting due to unbounded timelock loop,120,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/120,bootfinance,2021/11,bug;3 (High Risk);sponsor confirmed
51,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,G,Public functions can be external,121,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/121,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,G,Variables can be made constant,122,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/122,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,G,initTime can be made immutable,123,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/123,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,G,Redundant _available_supply() function,124,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/124,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,0,Renaming variables for clarity,125,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/125,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,1,claimExact does not check claimable amount,126,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/126,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,InvestorDistribution addInvestor function can be used unlimited times and cause DOS attack,10,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/10,bootfinance,2021/11,bug;invalid;sponsor acknowledged
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,State variable could be set immutable,102,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/102,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,admin can override investor and stuck its funds in the system ,11,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/11,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,optimizing for loops by using unchecked{++i} over i++ ,12,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/12,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,double reading of memory inside a loop without caching,13,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/13,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Rearrange state variables,138,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/138,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Rearrange state variables,139,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/139,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,optimizing for loops by caching array length,14,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/14,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,USDPoolDelegator state variable A could be set immutable,15,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/15,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,Line 86 0xA5407eAE9Ba41422680e2e00537571bcC53efBfD curve address is hardcoded,16,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/16,bootfinance,2021/11,bug;invalid;question;sponsor acknowledged
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,some of USDPoolDelegator public function could be set external to save gas,17,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/17,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Redundant hardhat console import ,173,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/173,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Avoiding initialization of loop index,174,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/174,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Use of uint8 for counter in for loop increases gas costs,175,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/175,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Use bytes32 instead of string when possible,176,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/176,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Consider having short revert strings,177,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/177,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Redundant named return,178,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/178,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Prefix increaments are cheaper than postfix increaments,179,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/179,bootfinance,2021/11,bug;invalid;G (Gas Optimization);sponsor disputed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,internal functions could be set private,18,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/18,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Use unchecked keyword for loop index increment,180,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/180,bootfinance,2021/11,bug;invalid;G (Gas Optimization);sponsor disputed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary index initialization in for loops. ,182,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/182,bootfinance,2021/11,bug;invalid;G (Gas Optimization);sponsor disputed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,unnecessary safe math ,184,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/184,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Array out-of-bounds errors in `BTCPoolDelegator`,37,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/37,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Array out-of-bounds errors in `ETHPoolDelegator`,38,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/38,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Array out-of-bounds errors in `USDPoolDelegator`,39,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/39,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unused state variables in `BTCPoolDelegator`,40,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/40,bootfinance,2021/11,bug;duplicate;invalid;sponsor disputed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unused state variables in `ETHPoolDelegator`,41,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/41,bootfinance,2021/11,bug;duplicate;invalid;sponsor disputed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unused state variables in `USDPoolDelegator`,42,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/42,bootfinance,2021/11,bug;duplicate;invalid;sponsor disputed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`Token.transfer()` and `Token.transferFrom()` emit `Transfer` events when the transferred amount is zero,43,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/43,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`Token.transferFrom()` emits `Transfer` events when `_from` equals `_to`,44,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/44,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,`Token.transferFrom()` requires `msg.sender` to have allowence even if it equals `_from`,45,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/45,bootfinance,2021/11,bug;invalid;sponsor disputed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`Token.approve()` emits `Approval` events when the allowence hasn't changed,46,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/46,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`PoolGauge.withdraw()` can be optimized when `_value` equals zero,47,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/47,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`PoolGauge.deposit()` emits `Deposit` events when the deposited amount is zero,48,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/48,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`PoolGauge.withdraw()` emits `Withdraw` events when the withdrawn amount is zero,49,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/49,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,`Minter.mint_for()` requires `msg.sender` to have allowence even if it equals `_for`,50,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/50,bootfinance,2021/11,bug;invalid;2 (Med Risk);sponsor disputed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`MainToken.transfer()` and `MainToken.transferFrom()` emit `Transfer` events when the transferred amount is zero,51,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/51,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`MainToken.transferFrom()` emits `Transfer` events when `_from` equals `_to`,52,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/52,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,`MainToken.transferFrom()` requires `msg.sender` to have allowance even if it equals `_from`,53,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/53,bootfinance,2021/11,bug;invalid;sponsor disputed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`MainToken.approve()` emits `Approval` events when the allowance hasn't changed,54,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/54,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`MainToken.transfer()` can be optimized when `_value` equals zero,55,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/55,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`MainToken.transferFrom()` can be optimized when `_value` equals zero,56,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/56,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`MainToken.mint()` can be optimized when `_value` equals zero,57,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/57,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`MainToken.mint_dev()` can be optimized when `_value` equals zero,58,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/58,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`MainToken.burn()` can be optimized when `_value` equals zero,59,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/59,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`MainToken.mint()` and `MainToken.mint_dev()` emit `Transfer` events when the minted amount is zero,60,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/60,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`MainToken.burn()` emits `Transfer` events when the burned amount is zero,61,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/61,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`MainToken.set_minter()` emits `SetMinter` events when the minter hasn't changed,62,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/62,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`MainToken.set_admin()` emits `SetAdmin` events when the admin hasn't changed,63,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/63,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`MainToken.set_mint_multisig()` emits `SetMintMultisig` events when `minting_multisig` hasn't changed,64,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/64,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,`MainToken.set_admin()` doesn't check that `_admin` doesn't equal zero,65,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/65,bootfinance,2021/11,bug;duplicate;2 (Med Risk);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,`MainToken.set_mint_multisig()` doesn't check that `_minting_multisig` doesn't equal zero,66,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/66,bootfinance,2021/11,bug;2 (Med Risk);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`MainToken.__init__()` emits `Transfer` events when the amount minted for `msg.sender` is zero (and it is always the case),67,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/67,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`LPToken.__init__()` emits `Transfer` events when the amount minted for `msg.sender` is zero,68,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/68,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,`LPToken.set_minter()` doesn't check that `_minter` doesn't equal zero,69,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/69,bootfinance,2021/11,bug;2 (Med Risk);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary use of safeMath,7,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/7,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`LPToken.transfer()` and `LPToken.transferFrom()` emit `Transfer` events when the transferred amount is zero,70,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/70,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`LPToken.transferFrom()` emits `Transfer` events when `_from` equals `_to`,71,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/71,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,`LPToken.transferFrom()` requires `msg.sender` to have allowance even if it equals `_from`,72,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/72,bootfinance,2021/11,bug;invalid;2 (Med Risk);sponsor acknowledged
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`LPToken.approve()` emits `Approval` events when the allowance hasn't changed,73,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/73,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`LPToken.transfer()` can be optimized when `_value` equals zero,74,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/74,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`LPToken.transferFrom()` can be optimized when `_value` equals zero,75,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/75,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`LPToken.mint()` can be optimized when `_value` equals zero,76,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/76,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`LPToken.burn()` can be optimized when `_value` equals zero,77,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/77,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Missing emit of initial `SetAdmin` event in `MainToken.__init__()`,78,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/78,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Missing emit of initial `ApplyOwnership` event in `GaugeController.__init__()`,79,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/79,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,too many bits to describe small quantities ,8,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/8,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`GaugeController.apply_transfer_ownership()` emits `ApplyOwnership` events when the admin hasn't changed,80,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/80,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`GaugeController.commit_transfer_ownership()` emits `CommitOwnership` events when the future admin hasn't changed,81,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/81,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,multiple reading of state variables without caching,9,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/9,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,unixYear is not precise,267,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/267,bootfinance,2021/11,bug;duplicate;1 (Low Risk);sponsor confirmed
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,claimExact does not check it user is validated,268,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/268,bootfinance,2021/11,bug;duplicate;0 (Non-critical)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Two-step change of an admin address,269,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/269,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,safe erc20,270,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/270,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,Anyone can DDOS vesting contract,271,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/271,bootfinance,2021/11,bug;duplicate;3 (High Risk)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,_isRevocable is tied to the address and can be set by anyone,272,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/272,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,payable vest,273,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/273,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,_recordBurn does not handle 0 _eth appropriately,274,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/274,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,burnAddress is not actually meant to burn anything,275,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/275,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,NFT flashloans can bypass sale constraints,276,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/276,bootfinance,2021/11,bug;2 (Med Risk);sponsor acknowledged
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,airdrop_supply is not the actual sum of airdropBalances,277,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/277,bootfinance,2021/11,bug;duplicate;1 (Low Risk);sponsor confirmed
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,User can validate and claim the airdrop multiple times,278,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/278,bootfinance,2021/11,bug;duplicate;3 (High Risk)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Usage of assert,279,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/279,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Useless check of an empty address,280,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/280,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,modifyInvestor does not need to check if _investor is not empty,281,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/281,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,benRevocable default values,282,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/282,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,function claim optimizations,283,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/283,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,.length in a loop,284,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/284,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Itteration over all the timelocks when revoking the user,285,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/285,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,immutable variables,286,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/286,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache storage reads,287,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/287,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused variables,288,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/288,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Optimize structs,290,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/290,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,validate iterates over all the users,291,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/291,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,available_supply() and _available_supply() are identical,292,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/292,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Useless nonReentrant,293,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/293,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unchecked math,294,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/294,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Redundant SafeMath,295,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/295,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,loop index initialization,296,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/296,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G, sub-types of uint256,297,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/297,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,_pooledTokens and decimals length is always 2,298,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/298,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,uint can never be negative,299,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/299,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,_recordBurn _payer,300,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/300,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Validations,301,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/301,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,"Variables should be marked as `constant`, if possible",159,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/159,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,"Variables should be marked as `immutable`, if possible",160,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/160,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Remove unused variables,161,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/161,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,Events should be written in CapWords,162,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/162,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,Functions should be written in mixedCase,163,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/163,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,Contract `Vesting` should inherit from interface `IVesting`,164,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/164,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,0,Constants should be written in UPPER_CASE,165,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/165,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,PranavG,0xFcBA1fEad1fab64228ae26dd3049fd6685a00030,G,State Variables could be declared immutable,87,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/87,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,PranavG,0xFcBA1fEad1fab64228ae26dd3049fd6685a00030,G,State variables could be declared constant,88,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/88,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,PranavG,0xFcBA1fEad1fab64228ae26dd3049fd6685a00030,0,Unnecessary imports,91,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/91,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,No need to initialize uint256 i variable to 0 in for loops,103,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/103,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,Using ++i consumes less gas than i++,104,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/104,bootfinance,2021/11,bug;G (Gas Optimization)
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,1,Incorrect event parameter used in emit,105,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/105,bootfinance,2021/11,bug;1 (Low Risk);sponsor acknowledged
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,1,Tokens not recoverable,108,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/108,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,1,No transfer ownership pattern,110,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/110,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,1,No transfer ownership pattern,111,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/111,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,Use of uint256 parameter instead of bool,112,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/112,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,Use of SafeMath with pragma ^0.8.0,113,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/113,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,State variables missing immutable and constant keywords,114,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/114,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,1,Unnecessary require statement in vesting.claim(),115,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/115,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,1,Vesting.revoke is missing a require statement,116,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/116,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,3,"Contract BasicSale is missing an approve(address(vestLock), 2**256-1) call",135,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/135,bootfinance,2021/11,bug;3 (High Risk);sponsor confirmed
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,1,Require statement missing in fallback and burnEtherForMember() functions,137,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/137,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,1,Missing zero address check in BasicSale constructor,149,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/149,bootfinance,2021/11,bug;duplicate;1 (Low Risk)
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,SafeMath import is not needed in the library MathUtils,181,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/181,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,Several public functions can be declared as external,253,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/253,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,Unused state variables,255,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/255,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,2,Unchecked low level calls,256,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/256,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,Use of uint8 for counter in for loop increases gas costs,260,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/260,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,Tautology expressions,264,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/264,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,2,Unchecked transfers,31,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/31,bootfinance,2021/11,bug;2 (Med Risk);sponsor confirmed
51,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,If statement in _updateEmission() can be removed,34,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/34,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,1,"Missing check on tokenindexfrom and tokenindexto, in the swap function",141,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/141,bootfinance,2021/11,bug;duplicate;1 (Low Risk)
51,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,2, Wrong assumption when updating token balance,142,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/142,bootfinance,2021/11,bug;invalid;2 (Med Risk);sponsor disputed
51,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,gas optimization by removing msg.sender check,24,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/24,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,0,Unnecessary usage of SafeMath in `vesting` contracts,107,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/107,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,1,Check ERC20 token `approve()` function return value,109,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/109,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,3,Using transfer instead of safeTransfer when working with ERC20 tokens,83,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/83,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,G,Removing redundant require() can save gas,84,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/84,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,G,Cache state variables and external calls to save gas,85,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/85,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,2,Don't allow swapping the same token,89,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/89,bootfinance,2021/11,bug;1 (Low Risk);sponsor acknowledged
51,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,2,Critical address changes should be a two step process,90,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/90,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,No usage of immutable keyword leaves free gas savings on the table,1,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/1,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Use of SafeMath in solidity 0.8.0 wastes gas,106,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/106,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,1,Vesting contract locks tokens for less time than expected,82,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/82,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Redundant check,2,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/2,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Numerous gas optimizations in SwapUtils.sol,6,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/6,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`Vesting.sol#vest()` Anyone can make other users' vestings `revokable`,220,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/220,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Tokens with decimals larger than 18 are not supported,221,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/221,bootfinance,2021/11,bug;1 (Low Risk);sponsor acknowledged
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache and read storage variables from the stack can save gas,222,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/222,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unnecessary variables can save some gas,223,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/223,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Unused imports,224,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/224,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove redundant check can save gas,225,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/225,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,226,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/226,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Redundant checks for `uint256` >= 0,227,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/227,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code Style: consistency,228,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/228,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Unused named returns,229,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/229,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Typos,230,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/230,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Wrong implementation of `SwapUtils.sol#rampTargetPrice()` makes it impossible to change the target price,231,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/231,bootfinance,2021/11,bug;duplicate;3 (High Risk)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Unsafe token transfer,232,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/232,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`SwapUtils.sol#getYD()` Remove redundant code can save gas,233,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/233,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,234,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/234,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use local variables rather than storage variables can save gas,235,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/235,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,External call can be done later to save gas,236,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/236,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`SwapUtils.sol` Inconsistent parameter value of `lpTokenSupply` among `Liquidity` related events,237,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/237,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`SwapUtils.sol#getD()` Remove unnecessary variable and internal call can make the code simpler and save some gas,238,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/238,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`_vestLock` contract is not approved to transfer `mainToken` from `PublicSale.sol` contract,239,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/239,bootfinance,2021/11,bug;duplicate;3 (High Risk)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Unbounded for loops allows an attacker to freeze users' funds,240,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/240,bootfinance,2021/11,bug;duplicate;3 (High Risk)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use literal `2` instead of read from storage for `pooledTokens.length` can save gas,241,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/241,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache external call results can save gas,242,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/242,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Change unnecessary storage variables to constants can save gas,243,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/243,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Redundant check of `msg.sender != address(0)`,244,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/244,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Use `safeTransferFrom` instead of `transferFrom` can improve safety and consistency,245,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/245,bootfinance,2021/11,bug;duplicate;2 (Med Risk)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Vesting.sol#_claimableAmount()` Remove unnecessary storage variables can save gas,246,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/246,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Missing error messages in require statements,247,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/247,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Vesting.sol#calcClaimableAmount()` Claimed amount should be excluded in claimable amount,248,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/248,bootfinance,2021/11,bug;0 (Non-critical);sponsor disputed
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unnecessary storage variables can be changed to `immutable` to save gas,249,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/249,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Setting `uint256` variables to `0` is redundant,250,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/250,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`SwapUtils.sol` Wrong implementation,252,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/252,bootfinance,2021/11,bug;3 (High Risk);sponsor confirmed
51,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,"Cache Reference To State Variables ""currentDay, currentEra, emission"" in _updateEmission (PublicSale.sol)",117,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/117,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Function _getDayEmission can be simplified (PublicSale.sol),118,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/118,bootfinance,2021/11,bug;0 (Non-critical);sponsor confirmed
51,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Assignment Of Variables To Default (PublicSale.sol),119,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/119,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,"""unixYear"" can be constant (Vesting.sol)",136,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/136,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Unclear Commented Out Code,140,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/140,bootfinance,2021/11,bug;1 (Low Risk);sponsor confirmed
51,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,"MAX_SWAP_FEE, MAX_ADMIN_FEE, MAX_WITHDRAW_FEE used inconsistently",19,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/19,bootfinance,2021/11,bug;duplicate;1 (Low Risk);sponsor confirmed
51,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,"""require"" condition will never be false (Swap.sol)",20,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/20,bootfinance,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
51,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Assignment Of Variables To Default (Swap.sol),21,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/21,bootfinance,2021/11,bug;duplicate;G (Gas Optimization)
51,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,"Unnecessary ""else if"" in function vest (Vesting.sol)",22,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/22,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Long Revert Strings,23,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/23,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused Named Returns (PublicSale.sol),25,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/25,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,_withdrawShare Can Be Rewritten To Be More Efficient (PublicSale.sol),26,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/26,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,_processWithdrawal Can Be Rewritten To Be More Efficient (PublicSale.sol),27,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/27,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
51,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,getEmissionShare Can Be Rewritten To Be More Efficient (PublicSale.sol),28,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/28,bootfinance,2021/11,bug;G (Gas Optimization);sponsor confirmed
50,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`!= 0` costs less gass compared to ` > 0` for unsigned integer,77,https://github.com/code-423n4/2021-11-fairside-findings/issues/77,fairside,2021/11,bug;G (Gas Optimization);sponsor acknowledged
50,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Calling require on a tautology,78,https://github.com/code-423n4/2021-11-fairside-findings/issues/78,fairside,2021/11,bug;G (Gas Optimization);sponsor confirmed
50,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`_calculateDeltaOfFSD(ABC.sol)` can be optimized,79,https://github.com/code-423n4/2021-11-fairside-findings/issues/79,fairside,2021/11,bug;G (Gas Optimization);sponsor acknowledged
50,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,"`votes.length` is loaded repeadetly, although it is a constant",80,https://github.com/code-423n4/2021-11-fairside-findings/issues/80,fairside,2021/11,bug;duplicate;invalid
50,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,The function `propose(FairSideDAO.sol)` can be optimized,81,https://github.com/code-423n4/2021-11-fairside-findings/issues/81,fairside,2021/11,bug;G (Gas Optimization);sponsor acknowledged
50,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,Funding amount shouldn't checked by controlling balance at funding pool wallet,82,https://github.com/code-423n4/2021-11-fairside-findings/issues/82,fairside,2021/11,bug;duplicate;1 (Low Risk);sponsor disputed
50,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,67,https://github.com/code-423n4/2021-11-fairside-findings/issues/67,fairside,2021/11,bug;0 (Non-critical);sponsor acknowledged
50,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`FairSideDAO.SECS_PER_BLOCK` is inaccurate,68,https://github.com/code-423n4/2021-11-fairside-findings/issues/68,fairside,2021/11,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
50,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,ERC20ConvictionScore._writeCheckpoint` does not write to storage on same block,69,https://github.com/code-423n4/2021-11-fairside-findings/issues/69,fairside,2021/11,bug;3 (High Risk);sponsor confirmed
50,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Underflow in `ERC20ConvictionScore._writeCheckpoint`,70,https://github.com/code-423n4/2021-11-fairside-findings/issues/70,fairside,2021/11,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
50,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing SafeMath & SafeCasts,71,https://github.com/code-423n4/2021-11-fairside-findings/issues/71,fairside,2021/11,bug;1 (Low Risk);sponsor acknowledged
50,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Vested NFT not always minted,72,https://github.com/code-423n4/2021-11-fairside-findings/issues/72,fairside,2021/11,bug;duplicate;3 (High Risk)
50,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Missing access restriction on `Vesting.updateVestedTokens`,73,https://github.com/code-423n4/2021-11-fairside-findings/issues/73,fairside,2021/11,bug;duplicate;3 (High Risk)
50,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Wrong check in `updateVestedTokens`?,74,https://github.com/code-423n4/2021-11-fairside-findings/issues/74,fairside,2021/11,bug;invalid;sponsor disputed
50,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Unnecessary storage assignment in `purchaseMembership`,75,https://github.com/code-423n4/2021-11-fairside-findings/issues/75,fairside,2021/11,bug;duplicate;G (Gas Optimization)
50,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Reorder conditions in `claimGovernanceTribute`,76,https://github.com/code-423n4/2021-11-fairside-findings/issues/76,fairside,2021/11,bug;G (Gas Optimization);sponsor confirmed
50,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,G,Excessive require string length used,46,https://github.com/code-423n4/2021-11-fairside-findings/issues/46,fairside,2021/11,bug;duplicate;G (Gas Optimization)
50,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,2,FSD.sol does not implement transfer-accept ownership pattern,47,https://github.com/code-423n4/2021-11-fairside-findings/issues/47,fairside,2021/11,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
50,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,`setMembershipWallets` unclear behavior ,91,https://github.com/code-423n4/2021-11-fairside-findings/issues/91,fairside,2021/11,bug;invalid;sponsor disputed
50,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Unnecessary require statement in `setMembershipWallets`,92,https://github.com/code-423n4/2021-11-fairside-findings/issues/92,fairside,2021/11,bug;duplicate;G (Gas Optimization);sponsor disputed
50,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Mixed up max and min in `_getMaximumBenefitPerUser`,93,https://github.com/code-423n4/2021-11-fairside-findings/issues/93,fairside,2021/11,bug;duplicate;1 (Low Risk);disagree with severity
50,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Possible DOS by 1 of 3 assessors by replay attack,94,https://github.com/code-423n4/2021-11-fairside-findings/issues/94,fairside,2021/11,bug;1 (Low Risk);sponsor acknowledged;sponsor disputed
50,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,FSDVesting: Claiming tributes should call FSD token's corresponding functions,28,https://github.com/code-423n4/2021-11-fairside-findings/issues/28,fairside,2021/11,bug;3 (High Risk);sponsor confirmed
50,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,FSDVesting: Constants can be made internal / private,29,https://github.com/code-423n4/2021-11-fairside-findings/issues/29,fairside,2021/11,bug;G (Gas Optimization);sponsor confirmed
50,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,FSDVesting: Define new constant LINEAR_VEST_AFTER_CLIFF,30,https://github.com/code-423n4/2021-11-fairside-findings/issues/30,fairside,2021/11,bug;G (Gas Optimization);sponsor confirmed
50,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,FSDVesting: Optimise updateVestedTokens(),31,https://github.com/code-423n4/2021-11-fairside-findings/issues/31,fairside,2021/11,bug;G (Gas Optimization);sponsor confirmed
50,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,FSDVesting: Restrict updateVestedTokens() calls to only FSD token contract,32,https://github.com/code-423n4/2021-11-fairside-findings/issues/32,fairside,2021/11,bug;duplicate;3 (High Risk)
50,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,FSDVesting: Redundant _start input parameter in initiateVesting(),33,https://github.com/code-423n4/2021-11-fairside-findings/issues/33,fairside,2021/11,bug;G (Gas Optimization);sponsor confirmed
50,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,FSDVesting.updateVestedTokens doesn't have any control modifiers and anyone can increase vested amount for a beneficiary,100,https://github.com/code-423n4/2021-11-fairside-findings/issues/100,fairside,2021/11,bug;duplicate;3 (High Risk)
50,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,0,FSD.mintBeta function has potentially blocking condition unrelated with documented logic,96,https://github.com/code-423n4/2021-11-fairside-findings/issues/96,fairside,2021/11,bug;1 (Low Risk);sponsor confirmed
50,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,"FairSideFormula.f(), g() can be made external",97,https://github.com/code-423n4/2021-11-fairside-findings/issues/97,fairside,2021/11,bug;duplicate;G (Gas Optimization)
50,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,specs not according to the comment ,83,https://github.com/code-423n4/2021-11-fairside-findings/issues/83,fairside,2021/11,bug;duplicate;1 (Low Risk);disagree with severity
50,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,Member can be denied for opening of csr,84,https://github.com/code-423n4/2021-11-fairside-findings/issues/84,fairside,2021/11,bug;invalid;sponsor disputed
50,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,proposal get defeated even if forVotes == againstVotes in DAO,85,https://github.com/code-423n4/2021-11-fairside-findings/issues/85,fairside,2021/11,bug;invalid;sponsor disputed
50,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,1,does not check the existence of address while using it in low level call,86,https://github.com/code-423n4/2021-11-fairside-findings/issues/86,fairside,2021/11,bug;0 (Non-critical);sponsor acknowledged;sponsor disputed
50,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,Anyone Can Arbitrarily Call `FSDVesting.updateVestedTokens()`,101,https://github.com/code-423n4/2021-11-fairside-findings/issues/101,fairside,2021/11,bug;3 (High Risk);sponsor confirmed
50,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,`FSDVesting.claimTribute()` Breaks Contract,102,https://github.com/code-423n4/2021-11-fairside-findings/issues/102,fairside,2021/11,bug;duplicate;3 (High Risk)
50,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,`FSDVesting.claimGovernanceTribute()` Breaks Contract,103,https://github.com/code-423n4/2021-11-fairside-findings/issues/103,fairside,2021/11,bug;duplicate;invalid
50,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,`TributeAccrual.availableTribute()` & `TributeAccrual.availableGovernanceTribute()` Distributes Tributes Unfairly,104,https://github.com/code-423n4/2021-11-fairside-findings/issues/104,fairside,2021/11,bug;2 (Med Risk);disagree with severity;sponsor acknowledged;sponsor disputed
50,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`FSDNetwork.getFSDPrice()` Is Vulnerable To Flash Loan Attacks,105,https://github.com/code-423n4/2021-11-fairside-findings/issues/105,fairside,2021/11,bug;1 (Low Risk);sponsor acknowledged;sponsor disputed
50,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Improper Validation Of Chainlink `latestRoundData()` Function,106,https://github.com/code-423n4/2021-11-fairside-findings/issues/106,fairside,2021/11,bug;0 (Non-critical);sponsor acknowledged;sponsor disputed
50,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,G,Efficient Storage Access,107,https://github.com/code-423n4/2021-11-fairside-findings/issues/107,fairside,2021/11,bug;invalid;sponsor disputed
50,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,Potential Misuse Of `initiateVesting()` Function,108,https://github.com/code-423n4/2021-11-fairside-findings/issues/108,fairside,2021/11,bug;invalid;sponsor disputed
50,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,Inaccurate Proposal State Specification,109,https://github.com/code-423n4/2021-11-fairside-findings/issues/109,fairside,2021/11,bug;duplicate;1 (Low Risk);disagree with severity
50,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,unnecessary usage of safe math ,27,https://github.com/code-423n4/2021-11-fairside-findings/issues/27,fairside,2021/11,bug;invalid;sponsor disputed
50,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,1,Disallow transfer after mint in _beforeTokenTransfer logic incorrect,1,https://github.com/code-423n4/2021-11-fairside-findings/issues/1,fairside,2021/11,bug;invalid;sponsor disputed
50,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,G,Redundant _user parameter in updateVestedTokens function,2,https://github.com/code-423n4/2021-11-fairside-findings/issues/2,fairside,2021/11,bug;duplicate;G (Gas Optimization)
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Double reading of calldata inside a loop,10,https://github.com/code-423n4/2021-11-fairside-findings/issues/10,fairside,2021/11,bug;invalid;sponsor confirmed
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary `SLOAD`s / `MLOAD`s / `CALLDATALOAD`s in for-each loops,11,https://github.com/code-423n4/2021-11-fairside-findings/issues/11,fairside,2021/11,bug;invalid;sponsor confirmed
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,"Instead of constantly writing to a state variable in a for loop, write it once at the end.",12,https://github.com/code-423n4/2021-11-fairside-findings/issues/12,fairside,2021/11,bug;invalid;sponsor disputed
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,external to internal,13,https://github.com/code-423n4/2021-11-fairside-findings/issues/13,fairside,2021/11,bug;invalid;sponsor disputed
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Open TODOs,14,https://github.com/code-423n4/2021-11-fairside-findings/issues/14,fairside,2021/11,bug;duplicate;1 (Low Risk)
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Shorten require strings,15,https://github.com/code-423n4/2021-11-fairside-findings/issues/15,fairside,2021/11,bug;duplicate;G (Gas Optimization)
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,safeApprove is deprecated.,16,https://github.com/code-423n4/2021-11-fairside-findings/issues/16,fairside,2021/11,bug;0 (Non-critical);sponsor acknowledged;sponsor disputed
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Doesn't validate address != 0 for important input addresses,17,https://github.com/code-423n4/2021-11-fairside-findings/issues/17,fairside,2021/11,bug;duplicate;0 (Non-critical);disagree with severity
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,doesn't check from != to,18,https://github.com/code-423n4/2021-11-fairside-findings/issues/18,fairside,2021/11,bug;duplicate;invalid;disagree with severity;sponsor disputed
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Multiple access to storage variable without caching,19,https://github.com/code-423n4/2021-11-fairside-findings/issues/19,fairside,2021/11,bug;invalid;sponsor confirmed
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,mint / burn doesn't check the account identity,20,https://github.com/code-423n4/2021-11-fairside-findings/issues/20,fairside,2021/11,bug;invalid;sponsor disputed
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,redundant named return issue,21,https://github.com/code-423n4/2021-11-fairside-findings/issues/21,fairside,2021/11,bug;G (Gas Optimization);sponsor acknowledged
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Double reading of calldata array index inside a loop,22,https://github.com/code-423n4/2021-11-fairside-findings/issues/22,fairside,2021/11,bug;duplicate;invalid
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,++i is more gas efficient then i++,23,https://github.com/code-423n4/2021-11-fairside-findings/issues/23,fairside,2021/11,bug;duplicate;G (Gas Optimization)
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,use unchecked{i++} to increase uint256 index of 'for' loops ,24,https://github.com/code-423n4/2021-11-fairside-findings/issues/24,fairside,2021/11,bug;invalid;sponsor disputed
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,uint256 is more efficient then uint8,25,https://github.com/code-423n4/2021-11-fairside-findings/issues/25,fairside,2021/11,bug;invalid;sponsor disputed
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary index initialization in for loops,26,https://github.com/code-423n4/2021-11-fairside-findings/issues/26,fairside,2021/11,bug;invalid;sponsor disputed
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,public to external,8,https://github.com/code-423n4/2021-11-fairside-findings/issues/8,fairside,2021/11,bug;duplicate;G (Gas Optimization)
50,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,constructor doesn't need to be public,9,https://github.com/code-423n4/2021-11-fairside-findings/issues/9,fairside,2021/11,bug;invalid;sponsor disputed
50,pmerkleplant,0xbBf165d63a703B839BAdDF62e0AEa5aa230A4A05,0,`FSDVesting::initiateVesting()` should emit an Event,50,https://github.com/code-423n4/2021-11-fairside-findings/issues/50,fairside,2021/11,bug;invalid;sponsor disputed
50,pmerkleplant,0xbBf165d63a703B839BAdDF62e0AEa5aa230A4A05,0,`FSDNetwork::setSlippageTolerance()` should emit an Event,51,https://github.com/code-423n4/2021-11-fairside-findings/issues/51,fairside,2021/11,bug;duplicate;0 (Non-critical)
50,pmerkleplant,0xbBf165d63a703B839BAdDF62e0AEa5aa230A4A05,0,`FSDNetwork` should inherit from interface `IFSDNetwork`,52,https://github.com/code-423n4/2021-11-fairside-findings/issues/52,fairside,2021/11,bug;0 (Non-critical);sponsor acknowledged
50,pmerkleplant,0xbBf165d63a703B839BAdDF62e0AEa5aa230A4A05,0,Add zero-address check to `token/FSD::_createVesting`,53,https://github.com/code-423n4/2021-11-fairside-findings/issues/53,fairside,2021/11,bug;duplicate;0 (Non-critical);sponsor disputed
50,pmerkleplant,0xbBf165d63a703B839BAdDF62e0AEa5aa230A4A05,1,Faulty comments in `dao/FairSideDAO.sol` ,54,https://github.com/code-423n4/2021-11-fairside-findings/issues/54,fairside,2021/11,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
50,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,1,Use of transfer function for transferring NFTs,48,https://github.com/code-423n4/2021-11-fairside-findings/issues/48,fairside,2021/11,bug;0 (Non-critical);sponsor acknowledged;sponsor disputed
50,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,1,Missing zero address check in all the constructors,49,https://github.com/code-423n4/2021-11-fairside-findings/issues/49,fairside,2021/11,bug;duplicate;0 (Non-critical)
50,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,2,Guardian role is not recoverable once lost in FairSideDAO contract,7,https://github.com/code-423n4/2021-11-fairside-findings/issues/7,fairside,2021/11,bug;invalid;sponsor disputed
50,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,Several public functions can be declared as external,88,https://github.com/code-423n4/2021-11-fairside-findings/issues/88,fairside,2021/11,bug;G (Gas Optimization);sponsor acknowledged
50,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,Using ++i consumes less gas than i++,89,https://github.com/code-423n4/2021-11-fairside-findings/issues/89,fairside,2021/11,bug;G (Gas Optimization);sponsor acknowledged
50,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,No need to initialize uint256 i variable to 0 in for loops,90,https://github.com/code-423n4/2021-11-fairside-findings/issues/90,fairside,2021/11,bug;duplicate;invalid
50,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Double update on storage pointer can lead to massive gas consumption,34,https://github.com/code-423n4/2021-11-fairside-findings/issues/34,fairside,2021/11,bug;G (Gas Optimization);sponsor confirmed
50,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Insufficient check on updateVestedTokens function,35,https://github.com/code-423n4/2021-11-fairside-findings/issues/35,fairside,2021/11,bug;duplicate;3 (High Risk)
50,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,3,Missing Underflow check on mint function,37,https://github.com/code-423n4/2021-11-fairside-findings/issues/37,fairside,2021/11,bug;duplicate;invalid
50,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,3,Missing Underflow check on mintBeta function,38,https://github.com/code-423n4/2021-11-fairside-findings/issues/38,fairside,2021/11,bug;duplicate;1 (Low Risk)
50,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,2,self transfer can lead to user reset their conviction score,39,https://github.com/code-423n4/2021-11-fairside-findings/issues/39,fairside,2021/11,bug;invalid;sponsor disputed
50,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,2,"FSD.sol `mint()`, `mintHatch()`, `mintBeta()`, and `burn()` are susceptible to integer underflows",36,https://github.com/code-423n4/2021-11-fairside-findings/issues/36,fairside,2021/11,bug;duplicate;1 (Low Risk);sponsor disputed
50,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Usage of _mint instead of _safeMint,5,https://github.com/code-423n4/2021-11-fairside-findings/issues/5,fairside,2021/11,bug;duplicate;0 (Non-critical);sponsor disputed
50,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,1,Offchain voting can't be renabled in DAO,6,https://github.com/code-423n4/2021-11-fairside-findings/issues/6,fairside,2021/11,bug;1 (Low Risk);sponsor confirmed
50,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Assigning keccak operations to constant variables results in extra gas costs,3,https://github.com/code-423n4/2021-11-fairside-findings/issues/3,fairside,2021/11,bug;G (Gas Optimization);sponsor confirmed
50,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Assigning keccak(string) to a constant results in extra gas costs,4,https://github.com/code-423n4/2021-11-fairside-findings/issues/4,fairside,2021/11,bug;duplicate;invalid;G (Gas Optimization)
50,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary external calls can save gas,55,https://github.com/code-423n4/2021-11-fairside-findings/issues/55,fairside,2021/11,bug;G (Gas Optimization);sponsor confirmed
50,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove redundant check can save gas,56,https://github.com/code-423n4/2021-11-fairside-findings/issues/56,fairside,2021/11,bug;G (Gas Optimization);sponsor confirmed
50,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Missing events for critical operations,57,https://github.com/code-423n4/2021-11-fairside-findings/issues/57,fairside,2021/11,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
50,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`FSD.sol` Unsafe type casting may allow the attacker to break the protocol,58,https://github.com/code-423n4/2021-11-fairside-findings/issues/58,fairside,2021/11,bug;invalid;sponsor disputed
50,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Using fixed length array as parameter type can avoid checks to save gas and improve consistency,59,https://github.com/code-423n4/2021-11-fairside-findings/issues/59,fairside,2021/11,bug;G (Gas Optimization);sponsor confirmed
50,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use `else if` in for loops can save gas and simplify code,60,https://github.com/code-423n4/2021-11-fairside-findings/issues/60,fairside,2021/11,bug;G (Gas Optimization);sponsor confirmed
50,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`user.creation` is updated incorrectly when the user tries to extend membership,61,https://github.com/code-423n4/2021-11-fairside-findings/issues/61,fairside,2021/11,bug;2 (Med Risk);disagree with severity;sponsor confirmed
50,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"Beneficiary cant get `fairSideConviction` NFT unless they only claim once, and only after it's fully vested",62,https://github.com/code-423n4/2021-11-fairside-findings/issues/62,fairside,2021/11,bug;3 (High Risk);disagree with severity;sponsor confirmed
50,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Funds in `FSDVesting.sol` can be frozen by the attacker,63,https://github.com/code-423n4/2021-11-fairside-findings/issues/63,fairside,2021/11,bug;duplicate;3 (High Risk)
50,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,64,https://github.com/code-423n4/2021-11-fairside-findings/issues/64,fairside,2021/11,bug;duplicate;G (Gas Optimization)
50,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache and read storage variables from the stack can save gas,65,https://github.com/code-423n4/2021-11-fairside-findings/issues/65,fairside,2021/11,bug;duplicate;invalid
50,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary storage reads in for loops can save gas,66,https://github.com/code-423n4/2021-11-fairside-findings/issues/66,fairside,2021/11,bug;G (Gas Optimization);sponsor confirmed
50,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused Named Returns,40,https://github.com/code-423n4/2021-11-fairside-findings/issues/40,fairside,2021/11,bug;duplicate;G (Gas Optimization)
50,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Open TODOs,41,https://github.com/code-423n4/2021-11-fairside-findings/issues/41,fairside,2021/11,bug;1 (Low Risk);disagree with severity;sponsor confirmed
50,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Possible integer underflow in _processCostShareRequest (FSDNetwork.sol),42,https://github.com/code-423n4/2021-11-fairside-findings/issues/42,fairside,2021/11,bug;duplicate;1 (Low Risk);sponsor disputed
50,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Long revert strings,43,https://github.com/code-423n4/2021-11-fairside-findings/issues/43,fairside,2021/11,bug;G (Gas Optimization);sponsor acknowledged
50,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Use existing memory version of state variables (Timelock.sol),44,https://github.com/code-423n4/2021-11-fairside-findings/issues/44,fairside,2021/11,bug;G (Gas Optimization);sponsor acknowledged
50,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,No zero-address checks in constructors,45,https://github.com/code-423n4/2021-11-fairside-findings/issues/45,fairside,2021/11,bug;duplicate;0 (Non-critical)
50,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,"No event emission for ""guardian"" changes (FairSideDAO.sol)",87,https://github.com/code-423n4/2021-11-fairside-findings/issues/87,fairside,2021/11,bug;duplicate;0 (Non-critical)
50,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Missing zero address check in functions setFairSideConviction and setFairSideNetwork (FSD.sol),95,https://github.com/code-423n4/2021-11-fairside-findings/issues/95,fairside,2021/11,bug;duplicate;invalid
50,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Incorrect comment in function rmul (DSMath.sol),98,https://github.com/code-423n4/2021-11-fairside-findings/issues/98,fairside,2021/11,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
50,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Various typos,99,https://github.com/code-423n4/2021-11-fairside-findings/issues/99,fairside,2021/11,bug;0 (Non-critical);sponsor confirmed
63,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,There is no need to assign default values to variables,129,https://github.com/code-423n4/2021-11-fei-findings/issues/129,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,"In TRIBERagequit.sol, users can get frontrunned ",131,https://github.com/code-423n4/2021-11-fei-findings/issues/131,fei,2021/11,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
63,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Some public functions can be defined as external to save gas,132,https://github.com/code-423n4/2021-11-fei-findings/issues/132,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For uint `> 0` can be replaced with ` != 0` for gas optimization,133,https://github.com/code-423n4/2021-11-fei-findings/issues/133,fei,2021/11,bug;invalid;sponsor acknowledged
63,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Loops can be implemented more efficiently,134,https://github.com/code-423n4/2021-11-fei-findings/issues/134,fei,2021/11,bug;G (Gas Optimization);sponsor acknowledged
63,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,Wrong comments about key in TRIBERagequit,135,https://github.com/code-423n4/2021-11-fei-findings/issues/135,fei,2021/11,bug;0 (Non-critical);sponsor acknowledged
63,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,TRIBERagequit.sol#recalculate should be internal,136,https://github.com/code-423n4/2021-11-fei-findings/issues/136,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Make merkleRoot immutable,137,https://github.com/code-423n4/2021-11-fei-findings/issues/137,fei,2021/11,bug;duplicate;G (Gas Optimization);sponsor acknowledged
63,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Not used return value at recalculate and requery in TRIBERagequit.sol,138,https://github.com/code-423n4/2021-11-fei-findings/issues/138,fei,2021/11,bug;G (Gas Optimization)
63,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Use negate(!) rather than == false,140,https://github.com/code-423n4/2021-11-fei-findings/issues/140,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,== true has no effect,141,https://github.com/code-423n4/2021-11-fei-findings/issues/141,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,Add events for party accepts,142,https://github.com/code-423n4/2021-11-fei-findings/issues/142,fei,2021/11,bug;duplicate;0 (Non-critical);sponsor disputed
63,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Don't cache bool `check`,143,https://github.com/code-423n4/2021-11-fei-findings/issues/143,fei,2021/11,bug;G (Gas Optimization)
63,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,No restriction for expiration block in TRIBERagequit.sol,144,https://github.com/code-423n4/2021-11-fei-findings/issues/144,fei,2021/11,bug;duplicate;0 (Non-critical);disagree with severity;sponsor acknowledged
63,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,No restriction for expiration block in PegExchange.sol,145,https://github.com/code-423n4/2021-11-fei-findings/issues/145,fei,2021/11,bug;invalid;disagree with severity;sponsor acknowledged
63,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas optimization,16,https://github.com/code-423n4/2021-11-fei-findings/issues/16,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas optimization II,17,https://github.com/code-423n4/2021-11-fei-findings/issues/17,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas optimization III,18,https://github.com/code-423n4/2021-11-fei-findings/issues/18,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas optimization IV,19,https://github.com/code-423n4/2021-11-fei-findings/issues/19,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimization V,20,https://github.com/code-423n4/2021-11-fei-findings/issues/20,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimization VI,21,https://github.com/code-423n4/2021-11-fei-findings/issues/21,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimization VII,22,https://github.com/code-423n4/2021-11-fei-findings/issues/22,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,0x1f8b,"Calle del Pilar, 35, 3A",3,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,49,https://github.com/code-423n4/2021-11-fei-findings/issues/49,fei,2021/11,bug;invalid;sponsor disputed
63,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Validate constructor inputs,50,https://github.com/code-423n4/2021-11-fei-findings/issues/50,fei,2021/11,bug;duplicate;0 (Non-critical)
63,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,[Fix eth address],51,https://github.com/code-423n4/2021-11-fei-findings/issues/51,fei,2021/11,bug;duplicate;invalid;sponsor acknowledged
63,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Blocks used in `MIN_EXPIRY_WINDOW` can fluctuate,109,https://github.com/code-423n4/2021-11-fei-findings/issues/109,fei,2021/11,bug;duplicate;0 (Non-critical)
63,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Tribe liquidity must be ensured in `PegExchanger`,110,https://github.com/code-423n4/2021-11-fei-findings/issues/110,fei,2021/11,bug;invalid;sponsor disputed
63,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,PegExchanger's fixed price leads to arbitrage,111,https://github.com/code-423n4/2021-11-fei-findings/issues/111,fei,2021/11,bug;invalid;sponsor disputed
63,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Wrong `preMergeCirculatingTribe` value,112,https://github.com/code-423n4/2021-11-fei-findings/issues/112,fei,2021/11,bug;1 (Low Risk);sponsor acknowledged
63,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Ragequit has missing min return amount checks,113,https://github.com/code-423n4/2021-11-fei-findings/issues/113,fei,2021/11,bug;duplicate;1 (Low Risk)
63,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`recalculate` does not need to be public,115,https://github.com/code-423n4/2021-11-fei-findings/issues/115,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `balanceStrings` computed twice,116,https://github.com/code-423n4/2021-11-fei-findings/issues/116,fei,2021/11,bug;invalid;G (Gas Optimization);sponsor acknowledged
63,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,An unchanging variable not declared constant,117,https://github.com/code-423n4/2021-11-fei-findings/issues/117,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Functions unused internally marked public,118,https://github.com/code-423n4/2021-11-fei-findings/issues/118,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,0,Boolean equality,156,https://github.com/code-423n4/2021-11-fei-findings/issues/156,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,0,Unnatural interface,57,https://github.com/code-423n4/2021-11-fei-findings/issues/57,fei,2021/11,bug;0 (Non-critical);sponsor disputed
63,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Unneeded check,58,https://github.com/code-423n4/2021-11-fei-findings/issues/58,fei,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
63,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Possible gas saving,59,https://github.com/code-423n4/2021-11-fei-findings/issues/59,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Possible gas saving on variable initialisation,60,https://github.com/code-423n4/2021-11-fei-findings/issues/60,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,2,Expiration time shift,61,https://github.com/code-423n4/2021-11-fei-findings/issues/61,fei,2021/11,bug;0 (Non-critical);sponsor acknowledged
63,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,1,Contract might not expire in reasonable time,62,https://github.com/code-423n4/2021-11-fei-findings/issues/62,fei,2021/11,bug;duplicate;0 (Non-critical)
63,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,2,Postponing the ExpirationBlock,63,https://github.com/code-423n4/2021-11-fei-findings/issues/63,fei,2021/11,bug;invalid;0 (Non-critical);sponsor acknowledged
63,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,1,False information given to the user,64,https://github.com/code-423n4/2021-11-fei-findings/issues/64,fei,2021/11,bug;0 (Non-critical);sponsor confirmed
63,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Unneeded declared variables,65,https://github.com/code-423n4/2021-11-fei-findings/issues/65,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,Czar102,0x08Aa113ED946B57B35510063439Dc6436FC07552,0,Coding style,92,https://github.com/code-423n4/2021-11-fei-findings/issues/92,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,denial of service,150,https://github.com/code-423n4/2021-11-fei-findings/issues/150,fei,2021/11,bug;1 (Low Risk);disagree with severity;sponsor confirmed
63,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,unsafe cast,151,https://github.com/code-423n4/2021-11-fei-findings/issues/151,fei,2021/11,bug;1 (Low Risk);sponsor confirmed
63,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,G,change transferFrom to transfer for gas saving,52,https://github.com/code-423n4/2021-11-fei-findings/issues/52,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,timelock can't setExpirationBlock to 0 (no expiration block),55,https://github.com/code-423n4/2021-11-fei-findings/issues/55,fei,2021/11,bug;invalid;sponsor disputed
63,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimization On The 2^256-1,100,https://github.com/code-423n4/2021-11-fei-findings/issues/100,fei,2021/11,bug;G (Gas Optimization);sponsor acknowledged
63,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimization On The Internal Code Statement,101,https://github.com/code-423n4/2021-11-fei-findings/issues/101,fei,2021/11,bug;duplicate;G (Gas Optimization);sponsor acknowledged
63,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use `calldata` instead of `memory` for function parameters,102,https://github.com/code-423n4/2021-11-fei-findings/issues/102,fei,2021/11,bug;G (Gas Optimization);sponsor confirmed
63,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,During the claim minProtocolEquity is not updated,103,https://github.com/code-423n4/2021-11-fei-findings/issues/103,fei,2021/11,bug;duplicate;1 (Low Risk);sponsor confirmed
63,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant Check On The Contract check,127,https://github.com/code-423n4/2021-11-fei-findings/issues/127,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Missing Allowance Check ,128,https://github.com/code-423n4/2021-11-fei-findings/issues/128,fei,2021/11,bug;invalid;sponsor disputed
63,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimization on the Public Functions,72,https://github.com/code-423n4/2021-11-fei-findings/issues/72,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,`> 0` can be replaced with `!= 0` for gas optimization,93,https://github.com/code-423n4/2021-11-fei-findings/issues/93,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Adding unchecked directive can save gas,95,https://github.com/code-423n4/2021-11-fei-findings/issues/95,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,++i is more gas efficient than i++ in loops forwarding,96,https://github.com/code-423n4/2021-11-fei-findings/issues/96,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,egjlmn1,0xf8911c3CFff41861943AaeFA95Fc882477B49Fb7,G,storage variable is accessed twice instead of saving in memory,53,https://github.com/code-423n4/2021-11-fei-findings/issues/53,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,3,TRIBE timelock is FEI timelock,37,https://github.com/code-423n4/2021-11-fei-findings/issues/37,fei,2021/11,bug;invalid;disagree with severity;sponsor disputed
63,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,G,make recalculate() internal to save gas,38,https://github.com/code-423n4/2021-11-fei-findings/issues/38,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,G,(TRIBERagequit.sol) remove unused requery return to save gas,39,https://github.com/code-423n4/2021-11-fei-findings/issues/39,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,G,(TRIBERagequit.sol) Remove unused recalculate return to save gas,40,https://github.com/code-423n4/2021-11-fei-findings/issues/40,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,G,Remove unused oracle variables,41,https://github.com/code-423n4/2021-11-fei-findings/issues/41,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,gpersoon,gpersoon.eth,2,Oracle validity not checked in requery() / TRIBERagequit.sol,114,https://github.com/code-423n4/2021-11-fei-findings/issues/114,fei,2021/11,bug;duplicate;invalid;sponsor disputed
63,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Inline checking in PegExchanger.sol,119,https://github.com/code-423n4/2021-11-fei-findings/issues/119,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Inline transfer in PegExchanger.sol,120,https://github.com/code-423n4/2021-11-fei-findings/issues/120,fei,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
63,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unchecked safe logic in PegExchanger.sol,121,https://github.com/code-423n4/2021-11-fei-findings/issues/121,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization);sponsor acknowledged
63,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,Inaccurate revert reason in TRIBERagequit.sol,122,https://github.com/code-423n4/2021-11-fei-findings/issues/122,fei,2021/11,bug;0 (Non-critical);sponsor confirmed
63,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Inline transfer in TRIBERagequit.sol,123,https://github.com/code-423n4/2021-11-fei-findings/issues/123,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unchecked safe logic in TRIBERagequit.sol,124,https://github.com/code-423n4/2021-11-fei-findings/issues/124,fei,2021/11,bug;G (Gas Optimization);sponsor acknowledged
63,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unused return variables in TRIBERagequit.sol,125,https://github.com/code-423n4/2021-11-fei-findings/issues/125,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Value of token1OutBase might became stale in TRIBERagequit.sol,126,https://github.com/code-423n4/2021-11-fei-findings/issues/126,fei,2021/11,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
63,hagrid,0x3A46FeD37cAcd52a6DACc4a49f520AdaD0e51D61,1,Open TODOs,56,https://github.com/code-423n4/2021-11-fei-findings/issues/56,fei,2021/11,bug;duplicate;0 (Non-critical)
63,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,PegExchanger#giveTo(): Use transfer() method instead of transferFrom(),104,https://github.com/code-423n4/2021-11-fei-findings/issues/104,fei,2021/11,bug;G (Gas Optimization);sponsor confirmed
63,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,TRIBERagequit#requery(): Ensure validity of oracle,105,https://github.com/code-423n4/2021-11-fei-findings/issues/105,fei,2021/11,bug;invalid;sponsor disputed
63,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,TRIBERagequit: Make scalar private,106,https://github.com/code-423n4/2021-11-fei-findings/issues/106,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,TRIBERagequit: Make verifyClaim() public,107,https://github.com/code-423n4/2021-11-fei-findings/issues/107,fei,2021/11,bug;0 (Non-critical);sponsor confirmed
63,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,TRIBERageQuit: Redundant oracleAddress variable,108,https://github.com/code-423n4/2021-11-fei-findings/issues/108,fei,2021/11,bug;G (Gas Optimization);sponsor confirmed
63,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,1,"PegExchanger : After proposal enabled, users allowed  to exchange even if the expirationBlock is not set.",152,https://github.com/code-423n4/2021-11-fei-findings/issues/152,fei,2021/11,bug;invalid;sponsor disputed
63,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,1,PegExchanger : Its possible to extend the Redemption Period again by the tribe (party1) timelock,153,https://github.com/code-423n4/2021-11-fei-findings/issues/153,fei,2021/11,bug;invalid;sponsor disputed
63,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,1,Both contracts PegExchanger & TribeRagequit emit events with same name 'Exchange',154,https://github.com/code-423n4/2021-11-fei-findings/issues/154,fei,2021/11,bug;invalid;sponsor disputed
63,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,1,TribeRagequit : the value of token1OutBase will always have a decreasing trend,155,https://github.com/code-423n4/2021-11-fei-findings/issues/155,fei,2021/11,bug;invalid;sponsor disputed
63,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,0,party1Accept() function should be external ,10,https://github.com/code-423n4/2021-11-fei-findings/issues/10,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,0,setExpirationBlock should be marked as external ,11,https://github.com/code-423n4/2021-11-fei-findings/issues/11,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,G,constructor should be removed if not used,12,https://github.com/code-423n4/2021-11-fei-findings/issues/12,fei,2021/11,bug;G (Gas Optimization);sponsor acknowledged
63,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,takeFrom uses transferFrom instead of safeTransferFrom,32,https://github.com/code-423n4/2021-11-fei-findings/issues/32,fei,2021/11,bug;invalid;sponsor disputed
63,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Check that the msg.sender is not the contract itself ,33,https://github.com/code-423n4/2021-11-fei-findings/issues/33,fei,2021/11,bug;invalid;sponsor acknowledged
63,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Using transferFrom instead of safeTransferFrom,6,https://github.com/code-423n4/2021-11-fei-findings/issues/6,fei,2021/11,bug;duplicate;invalid;sponsor disputed
63,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,transferFrom used without calling approve(),7,https://github.com/code-423n4/2021-11-fei-findings/issues/7,fei,2021/11,bug;duplicate;invalid;sponsor disputed
63,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,giveTo() function does not call approve before transfer ,8,https://github.com/code-423n4/2021-11-fei-findings/issues/8,fei,2021/11,bug;duplicate;invalid
63,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,0,party0Accept() function should be external ,9,https://github.com/code-423n4/2021-11-fei-findings/issues/9,fei,2021/11,bug;duplicate;invalid;0 (Non-critical)
63,jierlich,0x08c6CAB5Bf0ae77833C5CBf8d2dd934a9253CD7B,G,PegExchanger.sol:exchange - Gas Optimization,34,https://github.com/code-423n4/2021-11-fei-findings/issues/34,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,jierlich,0x08c6CAB5Bf0ae77833C5CBf8d2dd934a9253CD7B,G,PegExchanger.sol:takeFrom - Gas Optimization,35,https://github.com/code-423n4/2021-11-fei-findings/issues/35,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,jierlich,0x08c6CAB5Bf0ae77833C5CBf8d2dd934a9253CD7B,G,PegExchanger.giveTo - Gas Optimization,36,https://github.com/code-423n4/2021-11-fei-findings/issues/36,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Boolean comparisons in require statements,130,https://github.com/code-423n4/2021-11-fei-findings/issues/130,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Some functions could be declared external rather than public,139,https://github.com/code-423n4/2021-11-fei-findings/issues/139,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,`transferFrom` external call can be done inside require statement,146,https://github.com/code-423n4/2021-11-fei-findings/issues/146,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,`preMergeCirculatingTribe` can be constant,147,https://github.com/code-423n4/2021-11-fei-findings/issues/147,fei,2021/11,bug;G (Gas Optimization);sponsor confirmed
63,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,`requery()` has unused local variables,148,https://github.com/code-423n4/2021-11-fei-findings/issues/148,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,PegExchanger expiry block must be set to at least `MIN_EXPIRY_WINDOW + 1` into the future,149,https://github.com/code-423n4/2021-11-fei-findings/issues/149,fei,2021/11,bug;1 (Low Risk);sponsor acknowledged
63,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Avoiding Initialization of Loop Index If It Is 0,42,https://github.com/code-423n4/2021-11-fei-findings/issues/42,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,Previous TRIBE holders May Lock Their TRIBE Permanently into Contract Before Receive FEI,43,https://github.com/code-423n4/2021-11-fei-findings/issues/43,fei,2021/11,bug;invalid;sponsor disputed
63,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Long Revert Strings are Waste of Gas,44,https://github.com/code-423n4/2021-11-fei-findings/issues/44,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Avoid On Chain Computation That Have Known Answer to Save Gas,45,https://github.com/code-423n4/2021-11-fei-findings/issues/45,fei,2021/11,bug;G (Gas Optimization);sponsor acknowledged
63,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,TODOs List May Leak Important Info & Errors,46,https://github.com/code-423n4/2021-11-fei-findings/issues/46,fei,2021/11,bug;duplicate;0 (Non-critical)
63,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,2,Ragequit function ngmi() Will Fail Even If Follow All Steps in Simulations,47,https://github.com/code-423n4/2021-11-fei-findings/issues/47,fei,2021/11,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
63,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,The Protocol Equity Number Is Not Updated On Each Ragequit and FEI May Over Mint,48,https://github.com/code-423n4/2021-11-fei-findings/issues/48,fei,2021/11,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
63,robee,itaiperetz59@gmail.com,G,Unused state variables,23,https://github.com/code-423n4/2021-11-fei-findings/issues/23,fei,2021/11,bug;invalid;G (Gas Optimization)
63,robee,itaiperetz59@gmail.com,G,Unused declared local variables,24,https://github.com/code-423n4/2021-11-fei-findings/issues/24,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,robee,itaiperetz59@gmail.com,G,Storage double reading. Could save SLOAD,25,https://github.com/code-423n4/2021-11-fei-findings/issues/25,fei,2021/11,bug;G (Gas Optimization);sponsor acknowledged
63,robee,itaiperetz59@gmail.com,G,Internal functions to private,26,https://github.com/code-423n4/2021-11-fei-findings/issues/26,fei,2021/11,bug;G (Gas Optimization);sponsor confirmed
63,robee,itaiperetz59@gmail.com,G,Public functions to external,27,https://github.com/code-423n4/2021-11-fei-findings/issues/27,fei,2021/11,bug;G (Gas Optimization);sponsor confirmed
63,robee,itaiperetz59@gmail.com,G,State variables that could be set immutable,28,https://github.com/code-423n4/2021-11-fei-findings/issues/28,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,robee,itaiperetz59@gmail.com,1,Require with not comprehensive message,29,https://github.com/code-423n4/2021-11-fei-findings/issues/29,fei,2021/11,bug;0 (Non-critical);sponsor acknowledged
63,robee,itaiperetz59@gmail.com,1,Must approve 0 first,30,https://github.com/code-423n4/2021-11-fei-findings/issues/30,fei,2021/11,bug;invalid;sponsor disputed
63,robee,itaiperetz59@gmail.com,1,Open TODOs,31,https://github.com/code-423n4/2021-11-fei-findings/issues/31,fei,2021/11,bug;0 (Non-critical)
63,sabtikw,0xDA062abA66ECCD16f293D7fa22335b9AF335cAE0,G,small gas usage improvement reducing deployment gas,54,https://github.com/code-423n4/2021-11-fei-findings/issues/54,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,`init` storage variable can be removed or replaced with view function,1,https://github.com/code-423n4/2021-11-fei-findings/issues/1,fei,2021/11,bug;invalid;G (Gas Optimization);sponsor confirmed
63,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Explicit zero initialisation waste gas on deployment,2,https://github.com/code-423n4/2021-11-fei-findings/issues/2,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Testing for initial condition on oracle query last saves gas.,3,https://github.com/code-423n4/2021-11-fei-findings/issues/3,fei,2021/11,bug;G (Gas Optimization);sponsor acknowledged
63,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,"Gas saving in ngmi(uint256,uint256,bytes32[])",13,https://github.com/code-423n4/2021-11-fei-findings/issues/13,fei,2021/11,bug;G (Gas Optimization);sponsor confirmed
63,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Gas saving by reorganizing variables in TRIBERagequit.sol,14,https://github.com/code-423n4/2021-11-fei-findings/issues/14,fei,2021/11,bug;invalid;G (Gas Optimization);sponsor acknowledged
63,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Gas saving by modifying variable type in PegExchanger.sol,15,https://github.com/code-423n4/2021-11-fei-findings/issues/15,fei,2021/11,bug;invalid;sponsor acknowledged
63,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Public functions can be external,4,https://github.com/code-423n4/2021-11-fei-findings/issues/4,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Public functions can be external,5,https://github.com/code-423n4/2021-11-fei-findings/issues/5,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Outdated compiler version,66,https://github.com/code-423n4/2021-11-fei-findings/issues/66,fei,2021/11,bug;0 (Non-critical);sponsor acknowledged
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Check if a bool value equal to `true` is redundant,67,https://github.com/code-423n4/2021-11-fei-findings/issues/67,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Missing events for critical operations,68,https://github.com/code-423n4/2021-11-fei-findings/issues/68,fei,2021/11,bug;0 (Non-critical);sponsor disputed
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Setting `uint256` variables to `0` is redundant,69,https://github.com/code-423n4/2021-11-fei-findings/issues/69,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Setting `bool` variables to `false` is redundant,70,https://github.com/code-423n4/2021-11-fei-findings/issues/70,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`PegExchanger.sol#exchange()` Redundant code,71,https://github.com/code-423n4/2021-11-fei-findings/issues/71,fei,2021/11,bug;G (Gas Optimization);sponsor acknowledged
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use `transfer` instead of `transferFrom` can save gas,73,https://github.com/code-423n4/2021-11-fei-findings/issues/73,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use else if can save gas,74,https://github.com/code-423n4/2021-11-fei-findings/issues/74,fei,2021/11,bug;G (Gas Optimization);sponsor acknowledged
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Consider making `recalculate()` private to save gas,75,https://github.com/code-423n4/2021-11-fei-findings/issues/75,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache and read storage variables from the stack can save gas,76,https://github.com/code-423n4/2021-11-fei-findings/issues/76,fei,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,77,https://github.com/code-423n4/2021-11-fei-findings/issues/77,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,78,https://github.com/code-423n4/2021-11-fei-findings/issues/78,fei,2021/11,bug;G (Gas Optimization);sponsor confirmed
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code Style: constants should be named in all caps,79,https://github.com/code-423n4/2021-11-fei-findings/issues/79,fei,2021/11,bug;0 (Non-critical);sponsor disputed
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code Style: functions used only by current contract should be private,80,https://github.com/code-423n4/2021-11-fei-findings/issues/80,fei,2021/11,bug;duplicate;G (Gas Optimization);sponsor acknowledged
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use immutable variable can save gas,81,https://github.com/code-423n4/2021-11-fei-findings/issues/81,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Change unnecessary storage variables to constants can save gas,82,https://github.com/code-423n4/2021-11-fei-findings/issues/82,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Consider change some constants into immutable variables for settings that can be configured at deploy time,83,https://github.com/code-423n4/2021-11-fei-findings/issues/83,fei,2021/11,bug;0 (Non-critical);sponsor acknowledged
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Improve readability of constants,84,https://github.com/code-423n4/2021-11-fei-findings/issues/84,fei,2021/11,bug;0 (Non-critical);sponsor disputed
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code Style: public functions not used by current contract should be external,85,https://github.com/code-423n4/2021-11-fei-findings/issues/85,fei,2021/11,bug;duplicate;invalid;G (Gas Optimization)
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`6400 * 3` can be simpler and save some gas,86,https://github.com/code-423n4/2021-11-fei-findings/issues/86,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`PegExchanger.sol` unused tribe tokens can be frozen in the contract,87,https://github.com/code-423n4/2021-11-fei-findings/issues/87,fei,2021/11,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unnecessary function can make the code simpler and save some gas,88,https://github.com/code-423n4/2021-11-fei-findings/issues/88,fei,2021/11,bug;G (Gas Optimization)
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use `type(uint256).max` instead of `2**256 - 1` can save some gas,89,https://github.com/code-423n4/2021-11-fei-findings/issues/89,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,90,https://github.com/code-423n4/2021-11-fei-findings/issues/90,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`PegExchanger.sol` rgt tokens received should be burned,91,https://github.com/code-423n4/2021-11-fei-findings/issues/91,fei,2021/11,bug;invalid;sponsor disputed
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1, `TribeRagequit.sol` minter role to FEI is unnecessary,94,https://github.com/code-423n4/2021-11-fei-findings/issues/94,fei,2021/11,bug;1 (Low Risk);sponsor acknowledged
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary storage read can save gas,97,https://github.com/code-423n4/2021-11-fei-findings/issues/97,fei,2021/11,bug;duplicate;G (Gas Optimization);sponsor acknowledged
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`++i` is more efficient than `i++`,98,https://github.com/code-423n4/2021-11-fei-findings/issues/98,fei,2021/11,bug;G (Gas Optimization);sponsor acknowledged
63,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unnecessary variables can make the code simpler and save some gas,99,https://github.com/code-423n4/2021-11-fei-findings/issues/99,fei,2021/11,bug;G (Gas Optimization);sponsor acknowledged
63,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Assignment Of State Variables To Default ,157,https://github.com/code-423n4/2021-11-fei-findings/issues/157,fei,2021/11,bug;G (Gas Optimization);sponsor acknowledged
63,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,preMergeCirculatingTribe can be constant (TRIBERagequit.sol),158,https://github.com/code-423n4/2021-11-fei-findings/issues/158,fei,2021/11,bug;duplicate;G (Gas Optimization)
63,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused local variables in requery (TRIBERagequit.sol),159,https://github.com/code-423n4/2021-11-fei-findings/issues/159,fei,2021/11,bug;G (Gas Optimization);sponsor acknowledged
63,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Comparison with literal boolean values,160,https://github.com/code-423n4/2021-11-fei-findings/issues/160,fei,2021/11,bug;G (Gas Optimization);sponsor acknowledged
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,Timelock delay can be changed by without any delay,262,https://github.com/code-423n4/2021-11-malt-findings/issues/262,malt,2021/11,bug;duplicate;3 (High Risk)
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,Wrong comment in `Timelock.sol#setDelay`,264,https://github.com/code-423n4/2021-11-malt-findings/issues/264,malt,2021/11,bug;duplicate;0 (Non-critical)
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Loops can be implemented more efficiently,266,https://github.com/code-423n4/2021-11-malt-findings/issues/266,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,_calculateMaltRequiredForExit makes wrong calculations,267,https://github.com/code-423n4/2021-11-malt-findings/issues/267,malt,2021/11,bug;invalid;3 (High Risk);needs additional sponsor input
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,AuctionEschapeHatch.sol#exitEarly updates state of the auction wrongly,268,https://github.com/code-423n4/2021-11-malt-findings/issues/268,malt,2021/11,bug;3 (High Risk);sponsor confirmed
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,At variable declaration default value is assigned again,270,https://github.com/code-423n4/2021-11-malt-findings/issues/270,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For uint `> 0` can be replaced with ` != 0` for gas optimisation,271,https://github.com/code-423n4/2021-11-malt-findings/issues/271,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,uint is always ≥ 0,272,https://github.com/code-423n4/2021-11-malt-findings/issues/272,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,Solidity 0.6.6 is old,275,https://github.com/code-423n4/2021-11-malt-findings/issues/275,malt,2021/11,bug;duplicate;0 (Non-critical)
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,swapExactTokensForTokens in is used with `amountOutMin = 0`,277,https://github.com/code-423n4/2021-11-malt-findings/issues/277,malt,2021/11,bug;duplicate;2 (Med Risk)
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,Insecure usage of DexHandler and no events for setters in Bonding.sol,279,https://github.com/code-423n4/2021-11-malt-findings/issues/279,malt,2021/11,bug;duplicate;0 (Non-critical);sponsor acknowledged
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,No timelock and events for setters in AuctionEscapeHatch.sol,282,https://github.com/code-423n4/2021-11-malt-findings/issues/282,malt,2021/11,bug;duplicate;0 (Non-critical);disagree with severity
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,AbstractRewardMine.sol#withdrawAll can be `external`,283,https://github.com/code-423n4/2021-11-malt-findings/issues/283,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,AbstractRewardMine.sol#_removeFromStakePadding can be implemented more efficiently,284,https://github.com/code-423n4/2021-11-malt-findings/issues/284,malt,2021/11,bug;G (Gas Optimization);sponsor acknowledged
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,AbstractRewardMine.sol#setRewardToken is dangerous,285,https://github.com/code-423n4/2021-11-malt-findings/issues/285,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,"Dont calculate progressionBps, when not needed",288,https://github.com/code-423n4/2021-11-malt-findings/issues/288,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Custom size uint is not more efficient than uint256,289,https://github.com/code-423n4/2021-11-malt-findings/issues/289,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,Permissions.sol#_swapRole is named wrongly,290,https://github.com/code-423n4/2021-11-malt-findings/issues/290,malt,2021/11,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
59,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,Split contracts in folders,291,https://github.com/code-423n4/2021-11-malt-findings/issues/291,malt,2021/11,bug;invalid;1 (Low Risk);sponsor disputed
59,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Drain RewardTokens from UniswapHandler,126,https://github.com/code-423n4/2021-11-malt-findings/issues/126,malt,2021/11,bug;duplicate;1 (Low Risk)
59,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Lack of input validation,237,https://github.com/code-423n4/2021-11-malt-findings/issues/237,malt,2021/11,bug;duplicate;1 (Low Risk)
59,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Minter Injection by FrontRunning,35,https://github.com/code-423n4/2021-11-malt-findings/issues/35,malt,2021/11,bug;duplicate;1 (Low Risk)
59,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Dao Owner can Mint infinite tokens,36,https://github.com/code-423n4/2021-11-malt-findings/issues/36,malt,2021/11,bug;duplicate;2 (Med Risk)
59,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Possible Denial of Service,37,https://github.com/code-423n4/2021-11-malt-findings/issues/37,malt,2021/11,bug;invalid;2 (Med Risk);sponsor confirmed
59,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Storage Optimization,38,https://github.com/code-423n4/2021-11-malt-findings/issues/38,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,3,Missing zero address check which will put forfeited rewards at risk(ForefeitHandler.sol) ,216,https://github.com/code-423n4/2021-11-malt-findings/issues/216,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,3,Missing event on critical functions and inadequate zero address check (Permissions.sol) ,217,https://github.com/code-423n4/2021-11-malt-findings/issues/217,malt,2021/11,bug;duplicate;1 (Low Risk)
59,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,3, _addTostakepadding() will return 0 for users who already had a stakepadding but would like to add on top of their previous stake with 'newStakePadding' on line 186-190(AbstractRewardMine.sol),321,https://github.com/code-423n4/2021-11-malt-findings/issues/321,malt,2021/11,bug;invalid;3 (High Risk);sponsor disputed
59,ad3sh_,0x1aA0F8feFbfCC63C6B0FcB0c3aBF89B483b5349d,3,Unauthenticated remove liquidty function ,99,https://github.com/code-423n4/2021-11-malt-findings/issues/99,malt,2021/11,bug;duplicate;invalid;3 (High Risk)
59,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,Multiple Zero address transfer functions on contract Permissions,64,https://github.com/code-423n4/2021-11-malt-findings/issues/64,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,1,Zero address not checked on function reassignGlobalAdmin(),65,https://github.com/code-423n4/2021-11-malt-findings/issues/65,malt,2021/11,bug;duplicate;1 (Low Risk)
59,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,Unused functions on Contract Permissions,66,https://github.com/code-423n4/2021-11-malt-findings/issues/66,malt,2021/11,bug;invalid;0 (Non-critical);sponsor disputed
59,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,No zero address check on function setTreasury() of Contract StabilizerNode,68,https://github.com/code-423n4/2021-11-malt-findings/issues/68,malt,2021/11,bug;duplicate;1 (Low Risk)
59,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,Unused event or missed emit on SetAnnualYield(),69,https://github.com/code-423n4/2021-11-malt-findings/issues/69,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,Old Solidity version,70,https://github.com/code-423n4/2021-11-malt-findings/issues/70,malt,2021/11,bug;duplicate;0 (Non-critical)
59,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,functions visibility on contract Timelock.sol,91,https://github.com/code-423n4/2021-11-malt-findings/issues/91,malt,2021/11,bug;0 (Non-critical);sponsor disputed
59,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,functions visibility on contract AuctionEscapeHatch,97,https://github.com/code-423n4/2021-11-malt-findings/issues/97,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,No message in require statements.,98,https://github.com/code-423n4/2021-11-malt-findings/issues/98,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,244,https://github.com/code-423n4/2021-11-malt-findings/issues/244,malt,2021/11,bug;duplicate;1 (Low Risk)
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`initialize` functions can be frontrun,245,https://github.com/code-423n4/2021-11-malt-findings/issues/245,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`totalDeclaredReward >= totalReleasedReward` not true in `AbstractRewardMine`,246,https://github.com/code-423n4/2021-11-malt-findings/issues/246,malt,2021/11,bug;1 (Low Risk);sponsor acknowledged
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`approve` return values not checked & unsafe,247,https://github.com/code-423n4/2021-11-malt-findings/issues/247,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unbounded iteration in `function`,248,https://github.com/code-423n4/2021-11-malt-findings/issues/248,malt,2021/11,bug;invalid;1 (Low Risk);sponsor disputed
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Initial `SetTransferService` event not emitted,249,https://github.com/code-423n4/2021-11-malt-findings/issues/249,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Wrong permissions on `reassignGlobalAdmin`,250,https://github.com/code-423n4/2021-11-malt-findings/issues/250,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Bonding doesn't work with fee-on transfer tokens,251,https://github.com/code-423n4/2021-11-malt-findings/issues/251,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`_getFirstSample` returns wrong sample if count < sampleMemory,252,https://github.com/code-423n4/2021-11-malt-findings/issues/252,malt,2021/11,bug;2 (Med Risk);disagree with severity;sponsor confirmed
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`splitReinvest` does not provide liquidity at optimal ratio,253,https://github.com/code-423n4/2021-11-malt-findings/issues/253,malt,2021/11,bug;1 (Low Risk);sponsor acknowledged
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`_shouldAdjustSupply` thresholds have wrong precision,254,https://github.com/code-423n4/2021-11-malt-findings/issues/254,malt,2021/11,bug;duplicate;1 (Low Risk)
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`UniswapHandler.maltMarketPrice` returns wrong decimals,255,https://github.com/code-423n4/2021-11-malt-findings/issues/255,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Missing slippage/min-return check in `UniswapHandler`,256,https://github.com/code-423n4/2021-11-malt-findings/issues/256,malt,2021/11,bug;duplicate;2 (Med Risk)
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Slippage checks when adding liquidity are too strict,257,https://github.com/code-423n4/2021-11-malt-findings/issues/257,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Wrong comment in `removeLiquidity`,258,https://github.com/code-423n4/2021-11-malt-findings/issues/258,malt,2021/11,bug;0 (Non-critical);sponsor disputed
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Remove liquidity never ends up with left-over LP tokens,259,https://github.com/code-423n4/2021-11-malt-findings/issues/259,malt,2021/11,bug;1 (Low Risk);sponsor acknowledged
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: unnecessary safe math in `addLiquidity` 1,260,https://github.com/code-423n4/2021-11-malt-findings/issues/260,malt,2021/11,bug;duplicate;invalid;G (Gas Optimization)
59,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: unnecessary safe math in `addLiquidity` 2,261,https://github.com/code-423n4/2021-11-malt-findings/issues/261,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,theft of system profit,56,https://github.com/code-423n4/2021-11-malt-findings/issues/56,malt,2021/11,bug;2 (Med Risk);needs additional sponsor input
59,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,++i is more gas efficient than i++ in loops forwarding,14,https://github.com/code-423n4/2021-11-malt-findings/issues/14,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Less than 256 uints are not gas efficient,15,https://github.com/code-423n4/2021-11-malt-findings/issues/15,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,`> 0 can be replaced with != 0 for gas optimization`,16,https://github.com/code-423n4/2021-11-malt-findings/issues/16,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use of constant keccak variables results in extra hashing (and so gas),17,https://github.com/code-423n4/2021-11-malt-findings/issues/17,malt,2021/11,bug;duplicate;invalid;G (Gas Optimization)
59,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Deprecated Function Usage,18,https://github.com/code-423n4/2021-11-malt-findings/issues/18,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing Overflow Protection On the DeployedCapital,238,https://github.com/code-423n4/2021-11-malt-findings/issues/238,malt,2021/11,bug;1 (Low Risk);sponsor acknowledged
59,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Front-runnable Initializers ,39,https://github.com/code-423n4/2021-11-malt-findings/issues/39,malt,2021/11,bug;duplicate;1 (Low Risk)
59,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,ERC20 approve method missing return value check ,40,https://github.com/code-423n4/2021-11-malt-findings/issues/40,malt,2021/11,bug;duplicate;1 (Low Risk)
59,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,The Contract Should safeApprove(0) first,41,https://github.com/code-423n4/2021-11-malt-findings/issues/41,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing slippage/min-return check in the `UniswapHandler` contract,53,https://github.com/code-423n4/2021-11-malt-findings/issues/53,malt,2021/11,bug;duplicate;2 (Med Risk)
59,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1, Missing events for admin only functions that change critical parameters,58,https://github.com/code-423n4/2021-11-malt-findings/issues/58,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,SafeMath library is not always used in the contracts,60,https://github.com/code-423n4/2021-11-malt-findings/issues/60,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Delete - ABI Coder V2 For Gas Optimization,61,https://github.com/code-423n4/2021-11-malt-findings/issues/61,malt,2021/11,bug;invalid;G (Gas Optimization);sponsor acknowledged
59,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant Import,62,https://github.com/code-423n4/2021-11-malt-findings/issues/62,malt,2021/11,bug;duplicate;0 (Non-critical)
59,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Lack Of Return Value Check On the Dex Handler Malt Price Calculation,75,https://github.com/code-423n4/2021-11-malt-findings/issues/75,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,8,https://github.com/code-423n4/2021-11-malt-findings/issues/8,malt,2021/11,bug;duplicate;invalid;G (Gas Optimization)
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Limit revert strings to 32 bytes to save gas,132,https://github.com/code-423n4/2021-11-malt-findings/issues/132,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Use immutable instead of constant for role names,134,https://github.com/code-423n4/2021-11-malt-findings/issues/134,malt,2021/11,bug;duplicate;invalid;G (Gas Optimization)
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,UniswapHandler cache storage array length ,136,https://github.com/code-423n4/2021-11-malt-findings/issues/136,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Don't need to 0-initialize variables that are by default 0,138,https://github.com/code-423n4/2021-11-malt-findings/issues/138,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,RewardDistributor:_getActiveFocal() cache focalID ,139,https://github.com/code-423n4/2021-11-malt-findings/issues/139,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,RewardDistributor:_forfeit no underflow check needed,140,https://github.com/code-423n4/2021-11-malt-findings/issues/140,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,RewardDistributor:_resetFocalPoint cache storage variable focalLength,141,https://github.com/code-423n4/2021-11-malt-findings/issues/141,malt,2021/11,bug;duplicate;invalid;G (Gas Optimization)
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,RewardDistributor:_incrementFocalPoint() save storage read,142,https://github.com/code-423n4/2021-11-malt-findings/issues/142,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,RewardDistributor:decrementRewards no underflow check needed,143,https://github.com/code-423n4/2021-11-malt-findings/issues/143,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,RewardThrottle:handleReward gas optimizations,144,https://github.com/code-423n4/2021-11-malt-findings/issues/144,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,RewardThrottle:_fillInEpochGaps cadhe storage variable,145,https://github.com/code-423n4/2021-11-malt-findings/issues/145,malt,2021/11,bug;duplicate;invalid;G (Gas Optimization)
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Auction:purchaseArbitrageTokens cache storage variable,146,https://github.com/code-423n4/2021-11-malt-findings/issues/146,malt,2021/11,bug;duplicate;invalid;G (Gas Optimization)
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Auction:purchaseArbitrageTokens gas optimization,147,https://github.com/code-423n4/2021-11-malt-findings/issues/147,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Auction:claimArbitrage no underflow checks needed,149,https://github.com/code-423n4/2021-11-malt-findings/issues/149,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Auction:_checkAuctionFinalization cache storage variable,150,https://github.com/code-423n4/2021-11-malt-findings/issues/150,malt,2021/11,bug;duplicate;invalid;G (Gas Optimization)
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Auction:amendAccountParticipation no underflow check needed,151,https://github.com/code-423n4/2021-11-malt-findings/issues/151,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,AuctionBurnReserveSkew:getRealBurnBudget no underflow check needed,152,https://github.com/code-423n4/2021-11-malt-findings/issues/152,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,AuctionBurnReserveSkew:addAbovePegObservation gas optimization,153,https://github.com/code-423n4/2021-11-malt-findings/issues/153,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Bonding:_updateEpochState cache storage variable,154,https://github.com/code-423n4/2021-11-malt-findings/issues/154,malt,2021/11,bug;duplicate;invalid;G (Gas Optimization)
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,MiningService: cache mines.length,156,https://github.com/code-423n4/2021-11-malt-findings/issues/156,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,MovingAverage:initialize reuse argument variable instead storage variable in the loop condition,209,https://github.com/code-423n4/2021-11-malt-findings/issues/209,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,MovingAverage:getValue move the declaration/initialization of sampleDiff to save gas in the case of an early return,210,https://github.com/code-423n4/2021-11-malt-findings/issues/210,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,MovingAverage:getValueWithLookback move sampleDiff  to save gas,212,https://github.com/code-423n4/2021-11-malt-findings/issues/212,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,MovingAverage:update introduce local variables to save storage write/read,213,https://github.com/code-423n4/2021-11-malt-findings/issues/213,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Timelock reuse function argument as argument for the event emit,214,https://github.com/code-423n4/2021-11-malt-findings/issues/214,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,gpersoon,gpersoon.eth,1,Wrong onlyRole error messages in Permissions.sol ,186,https://github.com/code-423n4/2021-11-malt-findings/issues/186,malt,2021/11,bug;duplicate;0 (Non-critical)
59,gpersoon,gpersoon.eth,1,governor or timelock,187,https://github.com/code-423n4/2021-11-malt-findings/issues/187,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,gpersoon,gpersoon.eth,2,No max for defaultIncentive ,189,https://github.com/code-423n4/2021-11-malt-findings/issues/189,malt,2021/11,bug;duplicate;invalid;2 (Med Risk)
59,gpersoon,gpersoon.eth,2,No max for advanceIncentive,190,https://github.com/code-423n4/2021-11-malt-findings/issues/190,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,gpersoon,gpersoon.eth,1,Max value of upperStabilityThreshold and lowerStabilityThreshold not checked,192,https://github.com/code-423n4/2021-11-malt-findings/issues/192,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,gpersoon,gpersoon.eth,1,setSampleMemory counter set to right value?,193,https://github.com/code-423n4/2021-11-malt-findings/issues/193,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,gpersoon,gpersoon.eth,1,Adapt count in setAuctionAverageLookback?,194,https://github.com/code-423n4/2021-11-malt-findings/issues/194,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,gpersoon,gpersoon.eth,1,_notSameBlock() can be circumvented in bondToAccount() ,195,https://github.com/code-423n4/2021-11-malt-findings/issues/195,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Unable to remove liquidity in Recovery Mode,323,https://github.com/code-423n4/2021-11-malt-findings/issues/323,malt,2021/11,bug;3 (High Risk);sponsor confirmed
59,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,User can bypass Recovery Mode via UniswapHandler to buy Malt ,325,https://github.com/code-423n4/2021-11-malt-findings/issues/325,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Struct layout,327,https://github.com/code-423n4/2021-11-malt-findings/issues/327,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Wrong decimals returned by maltMarketPrice(),344,https://github.com/code-423n4/2021-11-malt-findings/issues/344,malt,2021/11,bug;duplicate;2 (Med Risk)
59,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Dutch auction can be manipulated,375,https://github.com/code-423n4/2021-11-malt-findings/issues/375,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Excessive privilege for Timelock governor,381,https://github.com/code-423n4/2021-11-malt-findings/issues/381,malt,2021/11,bug;duplicate;3 (High Risk)
59,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Gas optimization: uint256 always >= 0,384,https://github.com/code-423n4/2021-11-malt-findings/issues/384,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Unnecessary return string,385,https://github.com/code-423n4/2021-11-malt-findings/issues/385,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,hagrid,0x3A46FeD37cAcd52a6DACc4a49f520AdaD0e51D61,1,Reward Token should be approved for address `0` for USDT-kind tokens.,1,https://github.com/code-423n4/2021-11-malt-findings/issues/1,malt,2021/11,bug;duplicate;1 (Low Risk)
59,hagrid,0x3A46FeD37cAcd52a6DACc4a49f520AdaD0e51D61,G,Invalid equation check on `require`,2,https://github.com/code-423n4/2021-11-malt-findings/issues/2,malt,2021/11,bug;G (Gas Optimization);sponsor disputed
59,hagrid,0x3A46FeD37cAcd52a6DACc4a49f520AdaD0e51D61,2,Attackers can gain unlimited `MALT` ,3,https://github.com/code-423n4/2021-11-malt-findings/issues/3,malt,2021/11,bug;invalid;sponsor disputed
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,AbstractRewardMine.sol: setRewardToken should distribute rewards for old token first,221,https://github.com/code-423n4/2021-11-malt-findings/issues/221,malt,2021/11,bug;duplicate;2 (Med Risk)
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,AbstractRewardMine.sol: setRewardToken should zero out _globalWithdrawn and _userWithdrawn amounts,222,https://github.com/code-423n4/2021-11-malt-findings/issues/222,malt,2021/11,bug;duplicate;invalid;2 (Med Risk)
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,Auction collateralToken won't work if token is fee-on-transfer token ,227,https://github.com/code-423n4/2021-11-malt-findings/issues/227,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,"Critical Admin functions do not emit events, so users can't react to big changes",233,https://github.com/code-423n4/2021-11-malt-findings/issues/233,malt,2021/11,bug;duplicate;0 (Non-critical)
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,Bonding.sol _unbondAndBreak does not account for edge case where no tokens are returned,234,https://github.com/code-423n4/2021-11-malt-findings/issues/234,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,Auction.sol amendAccountParticipation has no zero division check,235,https://github.com/code-423n4/2021-11-malt-findings/issues/235,malt,2021/11,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,Unncessary statement in UniswapHandler.sol removeBuyer,377,https://github.com/code-423n4/2021-11-malt-findings/issues/377,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,Auction.sol: currentAuctionId should be cached in functions using it frequently,378,https://github.com/code-423n4/2021-11-malt-findings/issues/378,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,Can remove treasuryRewardCut from ForfeitHandler.sol,379,https://github.com/code-423n4/2021-11-malt-findings/issues/379,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,1,Incorrect require message in AuctionEscapeHatch.sol setCooloffPeriod,383,https://github.com/code-423n4/2021-11-malt-findings/issues/383,malt,2021/11,bug;duplicate;invalid;1 (Low Risk)
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,AuctionParticipant.sol: `replenishingIndex` incrementing should be improved,85,https://github.com/code-423n4/2021-11-malt-findings/issues/85,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,AuctionParticipant.sol: `purchaseArbitrageTokens` should not push duplicate auctions,87,https://github.com/code-423n4/2021-11-malt-findings/issues/87,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,3,AuctionParticipant.sol: `setReplenishingIndex` mistake could freeze unclaimed tokens,88,https://github.com/code-423n4/2021-11-malt-findings/issues/88,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,Sandwich attacks on buyMalt and sellMalt,93,https://github.com/code-423n4/2021-11-malt-findings/issues/93,malt,2021/11,bug;duplicate;2 (Med Risk)
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,1,Incorrect require message in Timelock.sol setDelay,94,https://github.com/code-423n4/2021-11-malt-findings/issues/94,malt,2021/11,bug;duplicate;0 (Non-critical)
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,1,Incorrect require message in PoolTransferVerification.sol setPool,95,https://github.com/code-423n4/2021-11-malt-findings/issues/95,malt,2021/11,bug;invalid;1 (Low Risk);sponsor confirmed
59,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,1,Incorrect require message in AuctionEscapeHatch.sol setCooloffPeriod,96,https://github.com/code-423n4/2021-11-malt-findings/issues/96,malt,2021/11,bug;invalid;1 (Low Risk);sponsor confirmed
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,AbstractRewardMine.getRewardOwnershipFraction shouldn't be used internally,114,https://github.com/code-423n4/2021-11-malt-findings/issues/114,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,AbstractRewardMine and RewardDistributor allow changing Reward token,127,https://github.com/code-423n4/2021-11-malt-findings/issues/127,malt,2021/11,bug;duplicate;2 (Med Risk)
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G, AbstractRewardMine._handleStakePadding calls totalDeclaredReward and this way balanceOf function twice,128,https://github.com/code-423n4/2021-11-malt-findings/issues/128,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,AbstractRewardMine._handleStakePadding logic cases can be separated and function simplified,131,https://github.com/code-423n4/2021-11-malt-findings/issues/131,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Bonding.unbond and unbondAndBreak will force full withdraw when used with LP tokens with low decimals,155,https://github.com/code-423n4/2021-11-malt-findings/issues/155,malt,2021/11,bug;invalid;1 (Low Risk);sponsor acknowledged
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Malt decimals inconsistency: StabilizerNode and DAO contracts use 18 as hard coded Malt decimals,175,https://github.com/code-423n4/2021-11-malt-findings/issues/175,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,UniswapHandler.buyMalt and sellMalt are vulnerable to sandwich attacks,239,https://github.com/code-423n4/2021-11-malt-findings/issues/239,malt,2021/11,bug;duplicate;2 (Med Risk)
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,RewardReinvestor.provideReinvest and splitReinvest are vulnerable to sandwich attacks as market price isn't checked,342,https://github.com/code-423n4/2021-11-malt-findings/issues/342,malt,2021/11,bug;duplicate;invalid;2 (Med Risk)
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,AddLiquidity allows sandwich attacks on direct use within hard coded 5% slippage tolerance,345,https://github.com/code-423n4/2021-11-malt-findings/issues/345,malt,2021/11,bug;duplicate;2 (Med Risk)
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,"Auction.claimArbitrage: if calculated claimable amount is too big, the remaining committed amount cannot be retrieved",353,https://github.com/code-423n4/2021-11-malt-findings/issues/353,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,MiningService _withdrawMultiple will fail most of the times,361,https://github.com/code-423n4/2021-11-malt-findings/issues/361,malt,2021/11,bug;invalid;2 (Med Risk);sponsor disputed
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,MiningService.setBonding should use BONDING role instead of REINVESTOR one,370,https://github.com/code-423n4/2021-11-malt-findings/issues/370,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Save Malt and Reward tokens decimals to the corresponding storage variables instead of running the function,46,https://github.com/code-423n4/2021-11-malt-findings/issues/46,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Auction.amendAccountParticipation repeatedly access same storage variables,47,https://github.com/code-423n4/2021-11-malt-findings/issues/47,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Auction.purchaseArbitrageTokens repeatedly reads same storage variables,48,https://github.com/code-423n4/2021-11-malt-findings/issues/48,malt,2021/11,bug;duplicate;invalid;G (Gas Optimization)
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Auction.userClaimableArbTokens nonzero auction.finalPrice check is redundant,49,https://github.com/code-423n4/2021-11-malt-findings/issues/49,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Auction.userClaimableArbTokens claimablePerc calculations can be simplified,50,https://github.com/code-423n4/2021-11-malt-findings/issues/50,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Unlocked pragma is used in most contracts,51,https://github.com/code-423n4/2021-11-malt-findings/issues/51,malt,2021/11,bug;duplicate;0 (Non-critical)
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,TransferService.removeVerifier and MiningService.removeRewardMine will delete the last list item if the address isn't found,52,https://github.com/code-423n4/2021-11-malt-findings/issues/52,malt,2021/11,bug;invalid;sponsor disputed
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Auction.userClaimableArbTokens amountOut calculations can be simplified,67,https://github.com/code-423n4/2021-11-malt-findings/issues/67,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Token variables that aren't supposed to be changed should be immutable,71,https://github.com/code-423n4/2021-11-malt-findings/issues/71,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,SwingTrader: sellMalt and costBasis functions can be simplified,72,https://github.com/code-423n4/2021-11-malt-findings/issues/72,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,SwingTrader.costBasis function should have internal version that uses Malt balance from sellMalt,73,https://github.com/code-423n4/2021-11-malt-findings/issues/73,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Missing zero-address checks on contract initialization,74,https://github.com/code-423n4/2021-11-malt-findings/issues/74,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,No check that contract exits ,10,https://github.com/code-423n4/2021-11-malt-findings/issues/10,malt,2021/11,bug;invalid;2 (Med Risk);sponsor disputed
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,There is no check on the commitment amount ,11,https://github.com/code-423n4/2021-11-malt-findings/issues/11,malt,2021/11,bug;duplicate;1 (Low Risk)
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Purchased Malt and Auction Data Can Be Manipulated/Thrown Off ,12,https://github.com/code-423n4/2021-11-malt-findings/issues/12,malt,2021/11,bug;invalid;3 (High Risk);disagree with severity;sponsor confirmed
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Initilaize functions should check for address(0),129,https://github.com/code-423n4/2021-11-malt-findings/issues/129,malt,2021/11,bug;duplicate;1 (Low Risk)
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,G,nextCommitmentId addition can be done cleaner ,13,https://github.com/code-423n4/2021-11-malt-findings/issues/13,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,setupParticipant() function does not check for zero address,130,https://github.com/code-423n4/2021-11-malt-findings/issues/130,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,G,Update currentAuctionId more efficiently ,19,https://github.com/code-423n4/2021-11-malt-findings/issues/19,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Require check may be inaccurately calculated ,20,https://github.com/code-423n4/2021-11-malt-findings/issues/20,malt,2021/11,bug;invalid;2 (Med Risk);sponsor disputed
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,SafeMath Not Used Nearly At All In MovingAverage.sol,21,https://github.com/code-423n4/2021-11-malt-findings/issues/21,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,G,Incrementing by one can be done more efficiently ,22,https://github.com/code-423n4/2021-11-malt-findings/issues/22,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,AuctionParticipant function can be called by an attacker first ,28,https://github.com/code-423n4/2021-11-malt-findings/issues/28,malt,2021/11,bug;duplicate;1 (Low Risk)
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Function may not be implemented ,55,https://github.com/code-423n4/2021-11-malt-findings/issues/55,malt,2021/11,bug;invalid;3 (High Risk);sponsor disputed
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,getAuctionCore function returns wrong values out of order,63,https://github.com/code-423n4/2021-11-malt-findings/issues/63,malt,2021/11,bug;3 (High Risk);sponsor confirmed
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,G,Should make use of the plus one operator,81,https://github.com/code-423n4/2021-11-malt-findings/issues/81,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,SellMalt() is open to frontrunning ,82,https://github.com/code-423n4/2021-11-malt-findings/issues/82,malt,2021/11,bug;invalid
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Anyone can claim rewards by calling sellMalt(),83,https://github.com/code-423n4/2021-11-malt-findings/issues/83,malt,2021/11,bug;invalid;sponsor disputed
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,addLiquidity() can be frontrun and user funds stolen,84,https://github.com/code-423n4/2021-11-malt-findings/issues/84,malt,2021/11,bug;duplicate;invalid
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Anyone can remove liquidity ,86,https://github.com/code-423n4/2021-11-malt-findings/issues/86,malt,2021/11,bug;duplicate;invalid;3 (High Risk)
59,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Should include non-existing contract check,9,https://github.com/code-423n4/2021-11-malt-findings/issues/9,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,3,Usage of an incorrect version of ERC20Permit contract can give unknown token with 0 decimals after upgrade.,133,https://github.com/code-423n4/2021-11-malt-findings/issues/133,malt,2021/11,bug;invalid;3 (High Risk);sponsor disputed
59,Jujic,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,theft of system profit,26,https://github.com/code-423n4/2021-11-malt-findings/issues/26,malt,2021/11,invalid
59,Jujic,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,theft of system profit (already submitted but I want to make things more clear),27,https://github.com/code-423n4/2021-11-malt-findings/issues/27,malt,2021/11,invalid
59,Koustre,0xa360E38cdf57e092218E7A5f4Eb73032eE74A8bD,1,UniswapHandler vulnerable to sandwich bots,322,https://github.com/code-423n4/2021-11-malt-findings/issues/322,malt,2021/11,bug;duplicate;2 (Med Risk)
59,Koustre,0xa360E38cdf57e092218E7A5f4Eb73032eE74A8bD,1,Unused  variable in trackPoolReserves,324,https://github.com/code-423n4/2021-11-malt-findings/issues/324,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,Koustre,0xa360E38cdf57e092218E7A5f4Eb73032eE74A8bD,1,Unused variable in removeBuyer in UniswapHandler,340,https://github.com/code-423n4/2021-11-malt-findings/issues/340,malt,2021/11,bug;duplicate;invalid;1 (Low Risk)
59,Koustre,0xa360E38cdf57e092218E7A5f4Eb73032eE74A8bD,3,DOS with unbounded loop,380,https://github.com/code-423n4/2021-11-malt-findings/issues/380,malt,2021/11,bug;1 (Low Risk);disagree with severity;sponsor confirmed
59,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`LiquidityExtension` Is Vulnerable To Sandwich Attacks,181,https://github.com/code-423n4/2021-11-malt-findings/issues/181,malt,2021/11,bug;duplicate;2 (Med Risk)
59,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,3,Insecure Deployment Of Contracts,184,https://github.com/code-423n4/2021-11-malt-findings/issues/184,malt,2021/11,bug;duplicate;1 (Low Risk)
59,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,3,Outdated Solidity Version Provides No Protections Against Arithmetic Underflows And Overflows,185,https://github.com/code-423n4/2021-11-malt-findings/issues/185,malt,2021/11,bug;0 (Non-critical);disagree with severity;sponsor confirmed
59,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,Users Can Contribute To An Auction Without Directly Committing Collateral Tokens,188,https://github.com/code-423n4/2021-11-malt-findings/issues/188,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`StabilizerNode` Will Mint An Incentive For Triggering An Auction Even If An Auction Exists Already,191,https://github.com/code-423n4/2021-11-malt-findings/issues/191,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`_calculateMaltRequiredForExit` Uses Spot Price To Calculate Malt Quantity In `exitEarly`,215,https://github.com/code-423n4/2021-11-malt-findings/issues/215,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,3,`StabilizerNode` Is Vulnerable To Sandwich Attacks,223,https://github.com/code-423n4/2021-11-malt-findings/issues/223,malt,2021/11,bug;duplicate;2 (Med Risk)
59,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`RewardReinvestor` Is Vulnerable To Sandwich Attacks,224,https://github.com/code-423n4/2021-11-malt-findings/issues/224,malt,2021/11,bug;duplicate;2 (Med Risk)
59,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`notSameBlock` Modifier Can Be Easily Bypassed,225,https://github.com/code-423n4/2021-11-malt-findings/issues/225,malt,2021/11,bug;duplicate;2 (Med Risk)
59,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`_unbondAndBreak` Does Not Refund LP Tokens If Call To Uniswap Router Failed,226,https://github.com/code-423n4/2021-11-malt-findings/issues/226,malt,2021/11,bug;invalid;2 (Med Risk);sponsor confirmed
59,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`addLiquidity` Does Not Reset Approval If Not All Tokens Were Added To Liquidity Pool,228,https://github.com/code-423n4/2021-11-malt-findings/issues/228,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`_distributeRewards` Does Not Reset Approval If Not All Tokens Were Allocated,229,https://github.com/code-423n4/2021-11-malt-findings/issues/229,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`permit` Double Emits An `Approval` Event,230,https://github.com/code-423n4/2021-11-malt-findings/issues/230,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`provideReinvest` Can Be Manipulated Via A Sandwich Attacking To Extract More Malt Tokens From `msg.sender`,236,https://github.com/code-423n4/2021-11-malt-findings/issues/236,malt,2021/11,bug;duplicate;2 (Med Risk)
59,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,3,Malt Protocol Uses Stale Results From `MaltDataLab` Which Can Be Abused By Users,373,https://github.com/code-423n4/2021-11-malt-findings/issues/373,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,1,`block.chainId` May Change Due To Hardfork,374,https://github.com/code-423n4/2021-11-malt-findings/issues/374,malt,2021/11,bug;duplicate;1 (Low Risk)
59,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Redundant require statements in `Auction:purchaseArbitrageTokens`,108,https://github.com/code-423n4/2021-11-malt-findings/issues/108,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Redundant require in `Bonding:unbond()` and `Bonding:unbondAndBreak()`,109,https://github.com/code-423n4/2021-11-malt-findings/issues/109,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,2,function initialize() Can Be Front Runned to Block The Correct Deployment,110,https://github.com/code-423n4/2021-11-malt-findings/issues/110,malt,2021/11,bug;duplicate;1 (Low Risk)
59,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Unused Imports Increase the size of Deployment and Waste Gas,111,https://github.com/code-423n4/2021-11-malt-findings/issues/111,malt,2021/11,bug;duplicate;0 (Non-critical)
59,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,reassignGlobalAdmin() Have No Transfer Ownership Pattern,112,https://github.com/code-423n4/2021-11-malt-findings/issues/112,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,reassignGlobalAdmin() Lack of Zero Address Check ,113,https://github.com/code-423n4/2021-11-malt-findings/issues/113,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,_setupRole() Deprecated and Not Using With Constructor Effectively Circumventing the Admin System,115,https://github.com/code-423n4/2021-11-malt-findings/issues/115,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Avoiding Initialization of Loop Index If It Is 0,116,https://github.com/code-423n4/2021-11-malt-findings/issues/116,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,removeVerifier() Repeat SLOAD During Loop Is Waste of Gas,117,https://github.com/code-423n4/2021-11-malt-findings/issues/117,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,TODOs List May Leak Important Info & Errors,118,https://github.com/code-423n4/2021-11-malt-findings/issues/118,malt,2021/11,bug;duplicate;0 (Non-critical)
59,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,buyMalt() and sellMalt() Uniswap Slippage Set to 100% Allow Sandwich Bot Attack Until Fund Become 0,119,https://github.com/code-423n4/2021-11-malt-findings/issues/119,malt,2021/11,bug;duplicate;2 (Med Risk)
59,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,"sellMalt(), addLiquidity() and removeLiquidity() Allow Non Privileged Users Withdraw Fund",120,https://github.com/code-423n4/2021-11-malt-findings/issues/120,malt,2021/11,bug;1 (Low Risk);disagree with severity;sponsor confirmed
59,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,2,Require Different Roles in Same Function May Lead to Privilege Escalation or Fail Transaction,121,https://github.com/code-423n4/2021-11-malt-findings/issues/121,malt,2021/11,bug;invalid;2 (Med Risk);sponsor disputed
59,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,RewardOverflowPool.sol: Unused Internal function _handleRewardDistribution Is Waste of Gas,122,https://github.com/code-423n4/2021-11-malt-findings/issues/122,malt,2021/11,bug;invalid;G (Gas Optimization);sponsor disputed
59,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Long Revert Strings are Waste of Gas,123,https://github.com/code-423n4/2021-11-malt-findings/issues/123,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,The Power Structure is Too Centralized And Protocol May Break If Anything Happen to Admin,124,https://github.com/code-423n4/2021-11-malt-findings/issues/124,malt,2021/11,bug;2 (Med Risk);sponsor disputed
59,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,TIMELOCK_ROLE Has Absolute Power to Withdraw All FUND May Raise Red Flags for Investors,125,https://github.com/code-423n4/2021-11-malt-findings/issues/125,malt,2021/11,bug;duplicate;2 (Med Risk)
59,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,G,Redundant `require` checks in Auction.sol,177,https://github.com/code-423n4/2021-11-malt-findings/issues/177,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,G,Duplicated code in `unbond` and `unbondAndBreak` functions,178,https://github.com/code-423n4/2021-11-malt-findings/issues/178,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,G,Similar code in `getCollateralValueInMalt` and `totalUsefulCollateral` functions ,180,https://github.com/code-423n4/2021-11-malt-findings/issues/180,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,1,SWC-104 Unchecked low level call in `emergencyWithdrawGas` functions,182,https://github.com/code-423n4/2021-11-malt-findings/issues/182,malt,2021/11,bug;duplicate;2 (Med Risk)
59,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,0,`setupParticipant` function should be internal,183,https://github.com/code-423n4/2021-11-malt-findings/issues/183,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Open TODOs,57,https://github.com/code-423n4/2021-11-malt-findings/issues/57,malt,2021/11,bug;invalid;1 (Low Risk);sponsor disputed
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Inaccurate revert messages,343,https://github.com/code-423n4/2021-11-malt-findings/issues/343,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Open TODOs in Codebase,346,https://github.com/code-423n4/2021-11-malt-findings/issues/346,malt,2021/11,bug;duplicate;0 (Non-critical)
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,frontrun advance(),347,https://github.com/code-423n4/2021-11-malt-findings/issues/347,malt,2021/11,bug;invalid;1 (Low Risk);sponsor acknowledged
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Create2Deployer,348,https://github.com/code-423n4/2021-11-malt-findings/issues/348,malt,2021/11,bug;0 (Non-critical);sponsor acknowledged
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,DOMAIN_SEPARATOR can change,349,https://github.com/code-423n4/2021-11-malt-findings/issues/349,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Validation of 'to' in transferAndCall and transferWithPermit,350,https://github.com/code-423n4/2021-11-malt-findings/issues/350,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,_setupRole deprecated,351,https://github.com/code-423n4/2021-11-malt-findings/issues/351,malt,2021/11,bug;duplicate;1 (Low Risk)
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Inconsistencies when checking if the auction is active,352,https://github.com/code-423n4/2021-11-malt-findings/issues/352,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,receive in MaltDAO,354,https://github.com/code-423n4/2021-11-malt-findings/issues/354,malt,2021/11,bug;invalid;1 (Low Risk);sponsor disputed
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Slippage protection,355,https://github.com/code-423n4/2021-11-malt-findings/issues/355,malt,2021/11,bug;duplicate;2 (Med Risk)
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Inclusive checks,356,https://github.com/code-423n4/2021-11-malt-findings/issues/356,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,maxAmount and balance,357,https://github.com/code-423n4/2021-11-malt-findings/issues/357,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Unbounded loops,358,https://github.com/code-423n4/2021-11-malt-findings/issues/358,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,purchaseArbitrageTokens 0 amount,359,https://github.com/code-423n4/2021-11-malt-findings/issues/359,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,i = i + 1,360,https://github.com/code-423n4/2021-11-malt-findings/issues/360,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Negative uint is not possible,362,https://github.com/code-423n4/2021-11-malt-findings/issues/362,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Storage variables in events,363,https://github.com/code-423n4/2021-11-malt-findings/issues/363,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,ERC20 import,364,https://github.com/code-423n4/2021-11-malt-findings/issues/364,malt,2021/11,bug;G (Gas Optimization)
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Assigned operations to constant variables,365,https://github.com/code-423n4/2021-11-malt-findings/issues/365,malt,2021/11,bug;duplicate;invalid;G (Gas Optimization)
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,.length in a loop,366,https://github.com/code-423n4/2021-11-malt-findings/issues/366,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,if auction is active is checked twice,367,https://github.com/code-423n4/2021-11-malt-findings/issues/367,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unnecessary SafeMath,368,https://github.com/code-423n4/2021-11-malt-findings/issues/368,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,(10000 - thresholdBps) can be pre-calculated,369,https://github.com/code-423n4/2021-11-malt-findings/issues/369,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache decimals,371,https://github.com/code-423n4/2021-11-malt-findings/issues/371,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,2,Missing slippage/min-return check in `UniswapHandler`,100,https://github.com/code-423n4/2021-11-malt-findings/issues/100,malt,2021/11,bug;duplicate;2 (Med Risk)
59,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Don't try bonding zero liquidity in `RewardReinvestor`,101,https://github.com/code-423n4/2021-11-malt-findings/issues/101,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Remove unnecessary variable `StabilizerNode::treasuryRewardCut`,102,https://github.com/code-423n4/2021-11-malt-findings/issues/102,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,1,Incorrect error messages in `StabilizerNode.sol`,103,https://github.com/code-423n4/2021-11-malt-findings/issues/103,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Use `!= 0` instead of `> 0` for unsigned integer types,104,https://github.com/code-423n4/2021-11-malt-findings/issues/104,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Declare `keccak` variables as `immutable`,105,https://github.com/code-423n4/2021-11-malt-findings/issues/105,malt,2021/11,bug;invalid;G (Gas Optimization);sponsor confirmed
59,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Cache array length in `for` loops,106,https://github.com/code-423n4/2021-11-malt-findings/issues/106,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused imports,157,https://github.com/code-423n4/2021-11-malt-findings/issues/157,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused declared local variables,158,https://github.com/code-423n4/2021-11-malt-findings/issues/158,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Struct packing,159,https://github.com/code-423n4/2021-11-malt-findings/issues/159,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Short the following require messages,160,https://github.com/code-423n4/2021-11-malt-findings/issues/160,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,161,https://github.com/code-423n4/2021-11-malt-findings/issues/161,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Internal functions to private,162,https://github.com/code-423n4/2021-11-malt-findings/issues/162,malt,2021/11,bug;invalid;G (Gas Optimization);sponsor confirmed
59,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,163,https://github.com/code-423n4/2021-11-malt-findings/issues/163,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,164,https://github.com/code-423n4/2021-11-malt-findings/issues/164,malt,2021/11,bug;G (Gas Optimization)
59,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary array boundaries check when loading an array element twice,165,https://github.com/code-423n4/2021-11-malt-findings/issues/165,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with empty message,166,https://github.com/code-423n4/2021-11-malt-findings/issues/166,malt,2021/11,bug;duplicate;0 (Non-critical)
59,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with not comprehensive message,167,https://github.com/code-423n4/2021-11-malt-findings/issues/167,malt,2021/11,bug;duplicate;0 (Non-critical);sponsor acknowledged
59,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Lack of precision,168,https://github.com/code-423n4/2021-11-malt-findings/issues/168,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Must approve 0 first,169,https://github.com/code-423n4/2021-11-malt-findings/issues/169,malt,2021/11,bug;duplicate;1 (Low Risk)
59,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove of openZeppelin is deprecated,170,https://github.com/code-423n4/2021-11-malt-findings/issues/170,malt,2021/11,bug;duplicate;0 (Non-critical)
59,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Open TODOs,171,https://github.com/code-423n4/2021-11-malt-findings/issues/171,malt,2021/11,bug;duplicate;0 (Non-critical)
59,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Solidity compiler versions mismatch,172,https://github.com/code-423n4/2021-11-malt-findings/issues/172,malt,2021/11,bug;duplicate;invalid
59,sabtikw,0xDA062abA66ECCD16f293D7fa22335b9AF335cAE0,0,Floating Pragma,42,https://github.com/code-423n4/2021-11-malt-findings/issues/42,malt,2021/11,bug;duplicate;0 (Non-critical)
59,sabtikw,0xDA062abA66ECCD16f293D7fa22335b9AF335cAE0,1,monitoring critical activity events,43,https://github.com/code-423n4/2021-11-malt-findings/issues/43,malt,2021/11,bug;duplicate;0 (Non-critical)
59,sabtikw,0xDA062abA66ECCD16f293D7fa22335b9AF335cAE0,3,input handling,44,https://github.com/code-423n4/2021-11-malt-findings/issues/44,malt,2021/11,bug;duplicate;1 (Low Risk)
59,sabtikw,0xDA062abA66ECCD16f293D7fa22335b9AF335cAE0,G,initialized storage variables are set again in the initializer function ,45,https://github.com/code-423n4/2021-11-malt-findings/issues/45,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,ScopeLift,scopelift.eth,G,AuctionBurnReserveSkew - remove `for` loop from initializer,326,https://github.com/code-423n4/2021-11-malt-findings/issues/326,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,ScopeLift,scopelift.eth,0,Permissions - incorrect revert strings,328,https://github.com/code-423n4/2021-11-malt-findings/issues/328,malt,2021/11,bug;duplicate;0 (Non-critical)
59,ScopeLift,scopelift.eth,2,Permissions - return values not checked when sending ETH,329,https://github.com/code-423n4/2021-11-malt-findings/issues/329,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,ScopeLift,scopelift.eth,G,Various contracts - stricter function mutability for gas savings,330,https://github.com/code-423n4/2021-11-malt-findings/issues/330,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,ScopeLift,scopelift.eth,G,Various contracts - remove unused function parameters to save gas ,331,https://github.com/code-423n4/2021-11-malt-findings/issues/331,malt,2021/11,bug;G (Gas Optimization);sponsor acknowledged
59,ScopeLift,scopelift.eth,3,Permissions - `notSameBlock` is insufficient for reentrancy protection,332,https://github.com/code-423n4/2021-11-malt-findings/issues/332,malt,2021/11,bug;duplicate;2 (Med Risk)
59,ScopeLift,scopelift.eth,3,AbstractRewardMine - Re-entrancy attack during withdrawal,333,https://github.com/code-423n4/2021-11-malt-findings/issues/333,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,ScopeLift,scopelift.eth,G,Bonding - safeTransfer used unnecessarily on Malt token,334,https://github.com/code-423n4/2021-11-malt-findings/issues/334,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,ScopeLift,scopelift.eth,G,SwingTrader - safeTransfer used unnecessarily on Malt token,335,https://github.com/code-423n4/2021-11-malt-findings/issues/335,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,ScopeLift,scopelift.eth,0,Timelock - incorrect revert strings,336,https://github.com/code-423n4/2021-11-malt-findings/issues/336,malt,2021/11,bug;duplicate;0 (Non-critical)
59,ScopeLift,scopelift.eth,G,UniswapHandler - safeTransfer used unnecessarily on Malt token,337,https://github.com/code-423n4/2021-11-malt-findings/issues/337,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,ScopeLift,scopelift.eth,G,UniswapHandler - Unneccessary safe math usage,338,https://github.com/code-423n4/2021-11-malt-findings/issues/338,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,ScopeLift,scopelift.eth,G,RewardReinvestor - safeTransfer used unnecessarily on Malt token,339,https://github.com/code-423n4/2021-11-malt-findings/issues/339,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,ScopeLift,scopelift.eth,3,Permissions - `notSameBlock` is insufficient for reentrancy protection ,341,https://github.com/code-423n4/2021-11-malt-findings/issues/341,malt,2021/11,bug;duplicate;invalid;2 (Med Risk)
59,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,0,Unreachable code,232,https://github.com/code-423n4/2021-11-malt-findings/issues/232,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,stonesandtrees,0xcbAE7C6a5e9b4d73A6b7212A01c510cD68223bc8,3,Admin setup in initializer can be frontrun to allow attacker to be admin,211,https://github.com/code-423n4/2021-11-malt-findings/issues/211,malt,2021/11,bug;duplicate;1 (Low Risk)
59,stonesandtrees,0xcbAE7C6a5e9b4d73A6b7212A01c510cD68223bc8,3,AMM pool can be drained using a flashloan and calling `stabilize`,372,https://github.com/code-423n4/2021-11-malt-findings/issues/372,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,tabish,0xa59cF3a1aE09F2c1970537167CCBDdaE13a54aA7,G,Making variables immutable saves gas ,29,https://github.com/code-423n4/2021-11-malt-findings/issues/29,malt,2021/11,bug;duplicate;invalid;G (Gas Optimization)
59,tabish,0xa59cF3a1aE09F2c1970537167CCBDdaE13a54aA7,0,Use bps uniformly,30,https://github.com/code-423n4/2021-11-malt-findings/issues/30,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,tabish,0xa59cF3a1aE09F2c1970537167CCBDdaE13a54aA7,0,Index address of events for better filtering,31,https://github.com/code-423n4/2021-11-malt-findings/issues/31,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,tabish,0xa59cF3a1aE09F2c1970537167CCBDdaE13a54aA7,G,Better packing of struct AuctionData to save gas,32,https://github.com/code-423n4/2021-11-malt-findings/issues/32,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,tabish,0xa59cF3a1aE09F2c1970537167CCBDdaE13a54aA7,1,ADD ZERO ADDRESS VALIDATION IN CONSTRUCTOR AND INITIALIZER,33,https://github.com/code-423n4/2021-11-malt-findings/issues/33,malt,2021/11,bug;duplicate;1 (Low Risk)
59,tabish,0xa59cF3a1aE09F2c1970537167CCBDdaE13a54aA7,2,MISSING SLIPPAGE/MIN-RETURN CHECK,34,https://github.com/code-423n4/2021-11-malt-findings/issues/34,malt,2021/11,bug;duplicate;2 (Med Risk)
59,thank_you,0x22f2A6BE015A3951cf75d4883167B9F79699CD4B,2,Broken ACL in Uniswap#buyMalt,218,https://github.com/code-423n4/2021-11-malt-findings/issues/218,malt,2021/11,bug;invalid;2 (Med Risk);sponsor disputed
59,thank_you,0x22f2A6BE015A3951cf75d4883167B9F79699CD4B,2,Frontrunning in UniswapHandler calls to UniswapV2Router,219,https://github.com/code-423n4/2021-11-malt-findings/issues/219,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,2,Reducing the epoch length results in leaking value from advancement incentives,4,https://github.com/code-423n4/2021-11-malt-findings/issues/4,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Unnecessary event fields,5,https://github.com/code-423n4/2021-11-malt-findings/issues/5,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Remove unnecessary proxying of contracts,6,https://github.com/code-423n4/2021-11-malt-findings/issues/6,malt,2021/11,bug;invalid;G (Gas Optimization);sponsor disputed
59,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,0,_getNextFocalStart is misleading,7,https://github.com/code-423n4/2021-11-malt-findings/issues/7,malt,2021/11,bug;invalid;sponsor disputed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`initializer` functions can be front run,240,https://github.com/code-423n4/2021-11-malt-findings/issues/240,malt,2021/11,bug;duplicate;1 (Low Risk)
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Outdated compiler version,241,https://github.com/code-423n4/2021-11-malt-findings/issues/241,malt,2021/11,bug;duplicate;0 (Non-critical)
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Implementations should inherit their interface,242,https://github.com/code-423n4/2021-11-malt-findings/issues/242,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache storage variables in the stack can save gas,243,https://github.com/code-423n4/2021-11-malt-findings/issues/243,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Timelock can be bypassed,263,https://github.com/code-423n4/2021-11-malt-findings/issues/263,malt,2021/11,bug;3 (High Risk);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code Style: private/internal function names should be prefixed with `_`,265,https://github.com/code-423n4/2021-11-malt-findings/issues/265,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`MovingAverage.sol` Use inline expression can save gas,269,https://github.com/code-423n4/2021-11-malt-findings/issues/269,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`uint64(block.timestamp % 2**64)` can be simpler and save some gas,273,https://github.com/code-423n4/2021-11-malt-findings/issues/273,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache external call results can save gas,274,https://github.com/code-423n4/2021-11-malt-findings/issues/274,malt,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Race condition on ERC20 approval,276,https://github.com/code-423n4/2021-11-malt-findings/issues/276,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Unchecked return value for `ERC20.approve` call,278,https://github.com/code-423n4/2021-11-malt-findings/issues/278,malt,2021/11,bug;duplicate;1 (Low Risk)
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use immutable variable can save gas,280,https://github.com/code-423n4/2021-11-malt-findings/issues/280,malt,2021/11,bug;G (Gas Optimization)
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused imports,281,https://github.com/code-423n4/2021-11-malt-findings/issues/281,malt,2021/11,bug;duplicate;0 (Non-critical)
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Misleading error message,286,https://github.com/code-423n4/2021-11-malt-findings/issues/286,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused storage variables,287,https://github.com/code-423n4/2021-11-malt-findings/issues/287,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,The value of `reward` parameter of the `ProvideReinvest` event can be wrong,292,https://github.com/code-423n4/2021-11-malt-findings/issues/292,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`StabilizerNode.sol` The current implementation is misconfiguration-prone for rewardToken with non-18 decimals,293,https://github.com/code-423n4/2021-11-malt-findings/issues/293,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`AuctionBurnReserveSkew.getPegDeltaFrequency()` Wrong implementation can result in an improper amount of excess Liquidity Extension balance to be used at the end of an auction ,294,https://github.com/code-423n4/2021-11-malt-findings/issues/294,malt,2021/11,bug;3 (High Risk);disagree with severity;sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`++i` is more gas efficient than `i++`,295,https://github.com/code-423n4/2021-11-malt-findings/issues/295,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unnecessary internal function calls,296,https://github.com/code-423n4/2021-11-malt-findings/issues/296,malt,2021/11,bug;G (Gas Optimization);sponsor acknowledged
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Missing events for critical operations,297,https://github.com/code-423n4/2021-11-malt-findings/issues/297,malt,2021/11,bug;duplicate;0 (Non-critical)
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`purchaseArbitrageTokens()` can be front run,298,https://github.com/code-423n4/2021-11-malt-findings/issues/298,malt,2021/11,bug;invalid;3 (High Risk);sponsor disputed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Insufficient input validation,299,https://github.com/code-423n4/2021-11-malt-findings/issues/299,malt,2021/11,bug;duplicate;1 (Low Risk);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache external call results can save gas,300,https://github.com/code-423n4/2021-11-malt-findings/issues/300,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`AuctionBurnReserveSkew.sol#getPegDeltaFrequency()` Implementation can be simpler and save some gas,301,https://github.com/code-423n4/2021-11-malt-findings/issues/301,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Misleading variable names,302,https://github.com/code-423n4/2021-11-malt-findings/issues/302,malt,2021/11,bug;0 (Non-critical);sponsor acknowledged
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Setting `uint256` variables to `0` is redundant,303,https://github.com/code-423n4/2021-11-malt-findings/issues/303,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Returning the named returns is redundant,304,https://github.com/code-423n4/2021-11-malt-findings/issues/304,malt,2021/11,bug;G (Gas Optimization);sponsor acknowledged
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Users may lose a small portion of promised returns due to precision loss,305,https://github.com/code-423n4/2021-11-malt-findings/issues/305,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`AuctionBurnReserveSkew.sol#getRealBurnBudget()` Implementation can be simpler and save some gas,306,https://github.com/code-423n4/2021-11-malt-findings/issues/306,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Only use `SafeMath` when necessary can save gas,307,https://github.com/code-423n4/2021-11-malt-findings/issues/307,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`MovingAverage.sol#_getFirstSample()` Implementation can be simpler and save some gas,308,https://github.com/code-423n4/2021-11-malt-findings/issues/308,malt,2021/11,bug;G (Gas Optimization);sponsor acknowledged
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Checking `uint256` variables `>= 0` is redundant,309,https://github.com/code-423n4/2021-11-malt-findings/issues/309,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Checking if `lpProfitCut > 0` can save gas,310,https://github.com/code-423n4/2021-11-malt-findings/issues/310,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`stabilize()` is vulnerable to flashloan sandwich attack,311,https://github.com/code-423n4/2021-11-malt-findings/issues/311,malt,2021/11,bug;duplicate;2 (Med Risk)
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`splitReinvest()` can be front run,312,https://github.com/code-423n4/2021-11-malt-findings/issues/312,malt,2021/11,bug;duplicate;2 (Med Risk)
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"`MovingAverage.setSampleMemory()` may broke MovingAverage, making the value of `exchangeRate` in `StabilizerNode.stabilize()` being extremely wrong",313,https://github.com/code-423n4/2021-11-malt-findings/issues/313,malt,2021/11,bug;2 (Med Risk);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`AuctionBurnReserveSkew.setAuctionAverageLookback()` can malfunction `getPegDeltaFrequency()`,314,https://github.com/code-423n4/2021-11-malt-findings/issues/314,malt,2021/11,bug;duplicate;1 (Low Risk)
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Outdated versions of OpenZeppelin library,315,https://github.com/code-423n4/2021-11-malt-findings/issues/315,malt,2021/11,bug;0 (Non-critical);sponsor acknowledged
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Redundant checks,316,https://github.com/code-423n4/2021-11-malt-findings/issues/316,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,317,https://github.com/code-423n4/2021-11-malt-findings/issues/317,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Use of assert() instead of require(),318,https://github.com/code-423n4/2021-11-malt-findings/issues/318,malt,2021/11,bug;invalid;sponsor acknowledged
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,319,https://github.com/code-423n4/2021-11-malt-findings/issues/319,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Missing `maltDataLab.trackReserveRatio()` in some cases after `swingTrader.sellMalt()`,320,https://github.com/code-423n4/2021-11-malt-findings/issues/320,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,Use interface instead of whole code base of external contract to reduce contract size Gas,196,https://github.com/code-423n4/2021-11-malt-findings/issues/196,malt,2021/11,bug;duplicate;0 (Non-critical)
59,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,Use ‘external` keyword for external functions to reduce gas,197,https://github.com/code-423n4/2021-11-malt-findings/issues/197,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,1,Revert transaction if it is unable to change data,198,https://github.com/code-423n4/2021-11-malt-findings/issues/198,malt,2021/11,bug;1 (Low Risk);sponsor confirmed
59,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,"In TransactionService, store index of source to avoid loop when removing verifier",199,https://github.com/code-423n4/2021-11-malt-findings/issues/199,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,0,deployedCapital variable is internal,200,https://github.com/code-423n4/2021-11-malt-findings/issues/200,malt,2021/11,bug;0 (Non-critical);sponsor acknowledged
59,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,1,Add slippage to buy Malt and sell Malt,201,https://github.com/code-423n4/2021-11-malt-findings/issues/201,malt,2021/11,bug;duplicate;2 (Med Risk)
59,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,Store collateral token and malt token’s decimals in initializer function to reduce gas in further functions.,202,https://github.com/code-423n4/2021-11-malt-findings/issues/202,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,Unnecessary if conditions in costBasis() function,203,https://github.com/code-423n4/2021-11-malt-findings/issues/203,malt,2021/11,bug;invalid;G (Gas Optimization);sponsor disputed
59,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,Checking greater than 0 is not necessary.,204,https://github.com/code-423n4/2021-11-malt-findings/issues/204,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,decimals return of costBasis is not used.,205,https://github.com/code-423n4/2021-11-malt-findings/issues/205,malt,2021/11,bug;G (Gas Optimization);sponsor acknowledged
59,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,2,Incorrect deployedCapital decrease in sellMalt function,206,https://github.com/code-423n4/2021-11-malt-findings/issues/206,malt,2021/11,bug;duplicate;1 (Low Risk)
59,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,Unused imports,207,https://github.com/code-423n4/2021-11-malt-findings/issues/207,malt,2021/11,bug;duplicate;0 (Non-critical)
59,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,Reduce external calls,208,https://github.com/code-423n4/2021-11-malt-findings/issues/208,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,"Code does not match comments in ""_finalizeAuction"" (Auction.sol)",135,https://github.com/code-423n4/2021-11-malt-findings/issues/135,malt,2021/11,bug;1 (Low Risk);sponsor acknowledged
59,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,"Unneeded variables (Auction.sol, StabilizerNode.sol)",137,https://github.com/code-423n4/2021-11-malt-findings/issues/137,malt,2021/11,bug;G (Gas Optimization);sponsor acknowledged
59,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused Named Returns,23,https://github.com/code-423n4/2021-11-malt-findings/issues/23,malt,2021/11,bug;duplicate;invalid;G (Gas Optimization)
59,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Underutilized Named Returns,24,https://github.com/code-423n4/2021-11-malt-findings/issues/24,malt,2021/11,bug;duplicate;invalid;G (Gas Optimization)
59,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,"""> 0"" is less efficient than ""!= 0"" for unsigned integers",376,https://github.com/code-423n4/2021-11-malt-findings/issues/376,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G, Unnecessary intermediate variables (MovingAverage.sol),382,https://github.com/code-423n4/2021-11-malt-findings/issues/382,malt,2021/11,bug;G (Gas Optimization);sponsor acknowledged
59,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Underutilized Named Returns,54,https://github.com/code-423n4/2021-11-malt-findings/issues/54,malt,2021/11,bug;duplicate;invalid;G (Gas Optimization)
59,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Use existing memory version of state variables,59,https://github.com/code-423n4/2021-11-malt-findings/issues/59,malt,2021/11,bug;duplicate;invalid;G (Gas Optimization)
59,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused Named Returns,76,https://github.com/code-423n4/2021-11-malt-findings/issues/76,malt,2021/11,bug;G (Gas Optimization)
59,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Underutilized Named Returns,77,https://github.com/code-423n4/2021-11-malt-findings/issues/77,malt,2021/11,bug;G (Gas Optimization);sponsor acknowledged
59,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Use existing memory version of state variables,78,https://github.com/code-423n4/2021-11-malt-findings/issues/78,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Open TODOs,79,https://github.com/code-423n4/2021-11-malt-findings/issues/79,malt,2021/11,bug;0 (Non-critical);sponsor confirmed
59,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Assignment Of Variables To Default ,80,https://github.com/code-423n4/2021-11-malt-findings/issues/80,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G," Cache Reference To State Variable ""currentAuctionID"" in _checkAuctionFinalization (Auction.sol)",89,https://github.com/code-423n4/2021-11-malt-findings/issues/89,malt,2021/11,bug;G (Gas Optimization);sponsor confirmed
59,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Array's length value is used directly in loop (removeRewardMine/MiningService.sol),90,https://github.com/code-423n4/2021-11-malt-findings/issues/90,malt,2021/11,bug;duplicate;G (Gas Optimization)
59,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Long Revert Strings,92,https://github.com/code-423n4/2021-11-malt-findings/issues/92,malt,2021/11,bug;duplicate;G (Gas Optimization)
53,0v3rf10w,0x76874fd0Ef5EB94Dd9376E031208a59ab35f2dea,0,no,228,https://github.com/code-423n4/2021-11-nested-findings/issues/228,nested,2021/11,bug;invalid;sponsor disputed
53,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`updateShareholder` in `FeeSplitter.sol` can be implemented more efficiently,11,https://github.com/code-423n4/2021-11-nested-findings/issues/11,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,Missing event and timelock for FeeSplitter,12,https://github.com/code-423n4/2021-11-nested-findings/issues/12,nested,2021/11,bug;duplicate;0 (Non-critical);sponsor disputed
53,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Save gas by caching array length used in for loops,7,https://github.com/code-423n4/2021-11-nested-findings/issues/7,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For `uint` replace `> 0` with `!= 0`,8,https://github.com/code-423n4/2021-11-nested-findings/issues/8,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,Incompatibility with Deflationary Tokens ,9,https://github.com/code-423n4/2021-11-nested-findings/issues/9,nested,2021/11,bug;invalid;sponsor confirmed
53,0xngndev,0xF8cE240B29246FAff3AF7fdE780A4AC6d537f59A,G,Reduce require messages length to save contract size,14,https://github.com/code-423n4/2021-11-nested-findings/issues/14,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,0xngndev,0xF8cE240B29246FAff3AF7fdE780A4AC6d537f59A,G,Small refactor for functions to save some gas,193,https://github.com/code-423n4/2021-11-nested-findings/issues/193,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,0xngndev,0xF8cE240B29246FAff3AF7fdE780A4AC6d537f59A,0,Typo,37,https://github.com/code-423n4/2021-11-nested-findings/issues/37,nested,2021/11,bug;0 (Non-critical);sponsor confirmed
53,0xngndev,0xF8cE240B29246FAff3AF7fdE780A4AC6d537f59A,G,Adding an if check to avoid unnecessary call,38,https://github.com/code-423n4/2021-11-nested-findings/issues/38,nested,2021/11,bug;G (Gas Optimization);sponsor acknowledged
53,0xngndev,0xF8cE240B29246FAff3AF7fdE780A4AC6d537f59A,1,claimFees may end up locking user funds,39,https://github.com/code-423n4/2021-11-nested-findings/issues/39,nested,2021/11,bug;1 (Low Risk);disagree with severity
53,0xngndev,0xF8cE240B29246FAff3AF7fdE780A4AC6d537f59A,0,Indexing parameters of your events,40,https://github.com/code-423n4/2021-11-nested-findings/issues/40,nested,2021/11,bug;0 (Non-critical);sponsor acknowledged
53,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,178,https://github.com/code-423n4/2021-11-nested-findings/issues/178,nested,2021/11,bug;1 (Low Risk);sponsor confirmed
53,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Cannot change `tokenUri`,179,https://github.com/code-423n4/2021-11-nested-findings/issues/179,nested,2021/11,bug;1 (Low Risk);sponsor disputed
53,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Can add duplicate operators,180,https://github.com/code-423n4/2021-11-nested-findings/issues/180,nested,2021/11,bug;1 (Low Risk);sponsor confirmed
53,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,No ERC20 safe* versions called,181,https://github.com/code-423n4/2021-11-nested-findings/issues/181,nested,2021/11,bug;duplicate;1 (Low Risk)
53,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Function using `msg.value` called in loop,182,https://github.com/code-423n4/2021-11-nested-findings/issues/182,nested,2021/11,bug;1 (Low Risk);sponsor acknowledged
53,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`_handleUnderSpending` reverts if condition is false,183,https://github.com/code-423n4/2021-11-nested-findings/issues/183,nested,2021/11,bug;1 (Low Risk);sponsor confirmed
53,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Unnecessary `balanceOf` call,184,https://github.com/code-423n4/2021-11-nested-findings/issues/184,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,transferOwnership should be two step process,101,https://github.com/code-423n4/2021-11-nested-findings/issues/101,nested,2021/11,bug;1 (Low Risk);sponsor acknowledged
53,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Adding unchecked directive can save gas,177,https://github.com/code-423n4/2021-11-nested-findings/issues/177,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Unnecessary Use of _msgSender(),185,https://github.com/code-423n4/2021-11-nested-findings/issues/185,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Cache array length in for loops can save gas,186,https://github.com/code-423n4/2021-11-nested-findings/issues/186,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,nonReentrant modifier isn't necessary for releaseToken function ,187,https://github.com/code-423n4/2021-11-nested-findings/issues/187,nested,2021/11,bug;invalid;sponsor disputed
53,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Restrict funds receivable to be only from wrapped native token,188,https://github.com/code-423n4/2021-11-nested-findings/issues/188,nested,2021/11,bug;invalid;sponsor disputed
53,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimization on the Public Functions,189,https://github.com/code-423n4/2021-11-nested-findings/issues/189,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,`> 0 can be replaced with != 0 for gas optimisation`,190,https://github.com/code-423n4/2021-11-nested-findings/issues/190,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Tokens can get stuck in _submitOutOrders,191,https://github.com/code-423n4/2021-11-nested-findings/issues/191,nested,2021/11,bug;invalid;sponsor disputed
53,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,ERC1155Supply vulnerability in OpenZeppelin Contracts,87,https://github.com/code-423n4/2021-11-nested-findings/issues/87,nested,2021/11,bug;invalid;sponsor disputed
53,elprofesor,0x3779a5Fee209e8E2d397b3ab357446899fcDd4ac,1,Missing Events in `NestedFactory.sol`,75,https://github.com/code-423n4/2021-11-nested-findings/issues/75,nested,2021/11,bug;duplicate;0 (Non-critical)
53,elprofesor,0x3779a5Fee209e8E2d397b3ab357446899fcDd4ac,1,`NestedFactory.unlockTokens` fails to use safe transfer,78,https://github.com/code-423n4/2021-11-nested-findings/issues/78,nested,2021/11,bug;1 (Low Risk);sponsor confirmed
53,elprofesor,0x3779a5Fee209e8E2d397b3ab357446899fcDd4ac,1,NestedFactory cannot remove 0th operator from `operators` array,79,https://github.com/code-423n4/2021-11-nested-findings/issues/79,nested,2021/11,bug;duplicate;1 (Low Risk)
53,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,G,change assert to require in ZeroExOperator.sol line number 42,15,https://github.com/code-423n4/2021-11-nested-findings/issues/15,nested,2021/11,bug;duplicate;invalid
53,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,G,"change assert with require in contracts/operators/ZeroEx/ZeroExOperator.sol  , Line Number 43- ",16,https://github.com/code-423n4/2021-11-nested-findings/issues/16,nested,2021/11,bug;duplicate;invalid
53,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,G,change assert with require in NestedFactory.sol line number - 341,17,https://github.com/code-423n4/2021-11-nested-findings/issues/17,nested,2021/11,bug;duplicate;invalid
53,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,G,change assert with require in NestedFactory.sol line number - 299,18,https://github.com/code-423n4/2021-11-nested-findings/issues/18,nested,2021/11,bug;duplicate;1 (Low Risk)
53,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,0,Unlocked pragma in contracts/mocks/MockERC20.sol Line Number - 2,19,https://github.com/code-423n4/2021-11-nested-findings/issues/19,nested,2021/11,bug;invalid;sponsor disputed
53,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,0,Unlocked pragma in contracts/mocks/DummyRouter.sol line number - 2,20,https://github.com/code-423n4/2021-11-nested-findings/issues/20,nested,2021/11,bug;invalid;sponsor disputed
53,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,0,Unlocked Pragma in contracts/mocks/WETHMock.sol line number - 21,21,https://github.com/code-423n4/2021-11-nested-findings/issues/21,nested,2021/11,bug;invalid;sponsor disputed
53,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,0,Multiple Solidity pragma,22,https://github.com/code-423n4/2021-11-nested-findings/issues/22,nested,2021/11,bug;0 (Non-critical);sponsor disputed
53,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,0,Multiple Solidity pragma in contracts/mocks/DummyRouter.sol ,23,https://github.com/code-423n4/2021-11-nested-findings/issues/23,nested,2021/11,bug;invalid;sponsor disputed
53,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,0,Multiple Solidity pragma in contracts/mocks/WETHMock.sol,24,https://github.com/code-423n4/2021-11-nested-findings/issues/24,nested,2021/11,bug;invalid;sponsor disputed
53,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,1,Use SafeERC20 instead of IERC20 in contracts/mocks/DummyRouter.sol ,41,https://github.com/code-423n4/2021-11-nested-findings/issues/41,nested,2021/11,bug;1 (Low Risk);sponsor disputed
53,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,2,Array index out of bounds can go in function removeOperator in NestedFactory.sol ,88,https://github.com/code-423n4/2021-11-nested-findings/issues/88,nested,2021/11,bug;duplicate;1 (Low Risk)
53,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,2,The require condition is not correct in function removeOperator in NestedFactory.sol,89,https://github.com/code-423n4/2021-11-nested-findings/issues/89,nested,2021/11,bug;duplicate;1 (Low Risk)
53,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,unchecked { ++i }  is more gas efficient than i++ for loops,25,https://github.com/code-423n4/2021-11-nested-findings/issues/25,nested,2021/11,bug;G (Gas Optimization);sponsor acknowledged
53,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,More gas efficient calculation of weights,28,https://github.com/code-423n4/2021-11-nested-findings/issues/28,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Mix of external and public function visibility with the same access modifier,29,https://github.com/code-423n4/2021-11-nested-findings/issues/29,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Require reasons strings can be shortened,31,https://github.com/code-423n4/2021-11-nested-findings/issues/31,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,1,Missing events for critical privileged functions,42,https://github.com/code-423n4/2021-11-nested-findings/issues/42,nested,2021/11,bug;0 (Non-critical);sponsor confirmed
53,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,0,FeeSplitter: totalWeights can be set to 0 by onlyOwner,43,https://github.com/code-423n4/2021-11-nested-findings/issues/43,nested,2021/11,bug;1 (Low Risk);sponsor confirmed
53,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,0,"Comment for PaymentReceived event should state ""received"" instead of ""released""",44,https://github.com/code-423n4/2021-11-nested-findings/issues/44,nested,2021/11,bug;0 (Non-critical);sponsor confirmed
53,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,0,Different coding style for same pattern: x += y and sometimes x = x + y,45,https://github.com/code-423n4/2021-11-nested-findings/issues/45,nested,2021/11,bug;0 (Non-critical);sponsor confirmed
53,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Subtraction from totalWeights can be done unchecked to save gas,46,https://github.com/code-423n4/2021-11-nested-findings/issues/46,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,0,Remove empty file OwnableOperator.so,47,https://github.com/code-423n4/2021-11-nested-findings/issues/47,nested,2021/11,bug;0 (Non-critical);sponsor confirmed
53,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,0,OperatorHelpers.sol: function decodeDataAndRequire state mutability can be restricted to pure,48,https://github.com/code-423n4/2021-11-nested-findings/issues/48,nested,2021/11,bug;0 (Non-critical);sponsor confirmed
53,gpersoon,gpersoon.eth,2,removeOperator doesn't work as expected,148,https://github.com/code-423n4/2021-11-nested-findings/issues/148,nested,2021/11,bug;duplicate;1 (Low Risk)
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,OperatorResolver: importOperators() function redeclares local variable multiple times,119,https://github.com/code-423n4/2021-11-nested-findings/issues/119,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,NestedRecords: Use a mapping to avoid looping,120,https://github.com/code-423n4/2021-11-nested-findings/issues/120,nested,2021/11,bug;invalid;sponsor disputed
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,NestedRecords: Unnecessary variable in the Holding struct,121,https://github.com/code-423n4/2021-11-nested-findings/issues/121,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,MixinOperatorResolver: variables are declared multiple times in rebuildCache(),122,https://github.com/code-423n4/2021-11-nested-findings/issues/122,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,NestedReserve: Redundant valid token address checks,123,https://github.com/code-423n4/2021-11-nested-findings/issues/123,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,NestedRecords: createRecord() can be made internal,124,https://github.com/code-423n4/2021-11-nested-findings/issues/124,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,NestedRecords: createRecord()'s isActive check is redundant,125,https://github.com/code-423n4/2021-11-nested-findings/issues/125,nested,2021/11,bug;G (Gas Optimization)
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,NestedRecords: createRecord() can have modifier check removed,126,https://github.com/code-423n4/2021-11-nested-findings/issues/126,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,FeeSplitter: Optimize accountIndex check,127,https://github.com/code-423n4/2021-11-nested-findings/issues/127,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,G,NestedFactory: _fromReserve param in _submitOutOrders() is redundant,128,https://github.com/code-423n4/2021-11-nested-findings/issues/128,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,0,NestedReserve: Have sanity check in constructor,129,https://github.com/code-423n4/2021-11-nested-findings/issues/129,nested,2021/11,bug;duplicate;1 (Low Risk)
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,0,NestedBuyBacker: Incorrect spelling,130,https://github.com/code-423n4/2021-11-nested-findings/issues/130,nested,2021/11,bug;duplicate;0 (Non-critical)
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,1,NestedFactory: addOperator doesn't check that operator already exists.,131,https://github.com/code-423n4/2021-11-nested-findings/issues/131,nested,2021/11,bug;duplicate;1 (Low Risk)
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,1,NestedRecords: Incorrect comparison for maxHoldingsCount,132,https://github.com/code-423n4/2021-11-nested-findings/issues/132,nested,2021/11,bug;invalid;sponsor disputed
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,1,FeeSplitter: No sanity check to ensure that tokens released is always less than shares of the account,133,https://github.com/code-423n4/2021-11-nested-findings/issues/133,nested,2021/11,bug;invalid;sponsor disputed
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,1,FeeSplitter: ETH_ADDR isn't supported,134,https://github.com/code-423n4/2021-11-nested-findings/issues/134,nested,2021/11,bug;1 (Low Risk);disagree with severity
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,2,FeeSplitter: No sanity check to prevent shareholder from being added twice.,135,https://github.com/code-423n4/2021-11-nested-findings/issues/135,nested,2021/11,bug;2 (Med Risk)
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,2,NestedFactory: Ensure zero msg.value if transferring from user and inputToken is not ETH ,136,https://github.com/code-423n4/2021-11-nested-findings/issues/136,nested,2021/11,bug;2 (Med Risk);sponsor confirmed
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,2,FeeSplitter: Unbounded number of shareholders can cause DOS,137,https://github.com/code-423n4/2021-11-nested-findings/issues/137,nested,2021/11,bug;2 (Med Risk);sponsor acknowledged
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,2,FeeSplitter: Unbounded shareholder weights can cause DOS,138,https://github.com/code-423n4/2021-11-nested-findings/issues/138,nested,2021/11,bug;invalid;sponsor disputed
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,2,isResolverCached() will always return false after removing operator,139,https://github.com/code-423n4/2021-11-nested-findings/issues/139,nested,2021/11,bug;2 (Med Risk)
53,GreyArt,0x1c95a25459edd226aCF8061D40C7FB03716371F7,2,Ensure on-chain that cache is synced,217,https://github.com/code-423n4/2021-11-nested-findings/issues/217,nested,2021/11,bug;2 (Med Risk)
53,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Long Revert Strings,140,https://github.com/code-423n4/2021-11-nested-findings/issues/140,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,Duplicated entries can be added into operators array,141,https://github.com/code-423n4/2021-11-nested-findings/issues/141,nested,2021/11,bug;duplicate;1 (Low Risk)
53,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Unable to remove operator at index 0,142,https://github.com/code-423n4/2021-11-nested-findings/issues/142,nested,2021/11,bug;duplicate;1 (Low Risk)
53,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Owner of `NestedReserve` can drain all fund,143,https://github.com/code-423n4/2021-11-nested-findings/issues/143,nested,2021/11,bug;invalid;disagree with severity
53,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,Hardcoded fee,144,https://github.com/code-423n4/2021-11-nested-findings/issues/144,nested,2021/11,bug;duplicate;invalid
53,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use memory instead of storage,145,https://github.com/code-423n4/2021-11-nested-findings/issues/145,nested,2021/11,bug;duplicate;invalid;G (Gas Optimization)
53,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Pack struct in FeeSplitter.sol,146,https://github.com/code-423n4/2021-11-nested-findings/issues/146,nested,2021/11,bug;G (Gas Optimization);sponsor disputed
53,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Cache length to use in for loop,147,https://github.com/code-423n4/2021-11-nested-findings/issues/147,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Unexpected transfer can lead to DOS in `FeeSplitter` ,149,https://github.com/code-423n4/2021-11-nested-findings/issues/149,nested,2021/11,bug;invalid;sponsor disputed
53,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Set allowance only when needed,151,https://github.com/code-423n4/2021-11-nested-findings/issues/151,nested,2021/11,bug;G (Gas Optimization);sponsor disputed
53,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,`safeApprove` is deprecated,152,https://github.com/code-423n4/2021-11-nested-findings/issues/152,nested,2021/11,bug;duplicate;1 (Low Risk)
53,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,2,nonReentrant modifier causing DOS for releaseTokens,229,https://github.com/code-423n4/2021-11-nested-findings/issues/229,nested,2021/11,bug;invalid;sponsor disputed
53,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,change variable location to memory from storage in getAmountsDue (view function),230,https://github.com/code-423n4/2021-11-nested-findings/issues/230,nested,2021/11,bug;invalid;G (Gas Optimization);sponsor disputed
53,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,Does not check uniqueness of ShareHolder,231,https://github.com/code-423n4/2021-11-nested-findings/issues/231,nested,2021/11,bug;duplicate;2 (Med Risk);sponsor confirmed
53,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,"Unused variable ""tokens""",232,https://github.com/code-423n4/2021-11-nested-findings/issues/232,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,`_calculateFess` takes user argument as address but unused and can be marked pure,233,https://github.com/code-423n4/2021-11-nested-findings/issues/233,nested,2021/11,bug;duplicate;1 (Low Risk)
53,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,FeeSplitter _sendFees may not properly account for fee-on-transfer tokens,118,https://github.com/code-423n4/2021-11-nested-findings/issues/118,nested,2021/11,bug;duplicate;invalid
53,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,ExchangeHelpers.sol setMaxAllowance does not mitigate race condition as described,70,https://github.com/code-423n4/2021-11-nested-findings/issues/70,nested,2021/11,bug;duplicate;1 (Low Risk)
53,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,1,Event needs to be emitted in the Operator module ,192,https://github.com/code-423n4/2021-11-nested-findings/issues/192,nested,2021/11,bug;invalid;sponsor disputed
53,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Function NestedFactory._submitOutOrders doesn't check amounts returned from market executing of user's orders,196,https://github.com/code-423n4/2021-11-nested-findings/issues/196,nested,2021/11,bug;duplicate;invalid
53,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Function NestedFactory.destroy doesn't check amounts returned after executing user's market order to sell a portfolio,197,https://github.com/code-423n4/2021-11-nested-findings/issues/197,nested,2021/11,bug;invalid;sponsor disputed
53,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Check condition before calling NestedFactory._handleUnderSpending,198,https://github.com/code-423n4/2021-11-nested-findings/issues/198,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,NestedFactory.addTokens and withdraw functions require NFT reserve check,199,https://github.com/code-423n4/2021-11-nested-findings/issues/199,nested,2021/11,bug;1 (Low Risk);sponsor confirmed
53,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,NestedFactory._calculateFees should be pure to save on call costs,201,https://github.com/code-423n4/2021-11-nested-findings/issues/201,nested,2021/11,bug;duplicate;1 (Low Risk)
53,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,0,NestedAsset.setFactory should be named addFactory,204,https://github.com/code-423n4/2021-11-nested-findings/issues/204,nested,2021/11,bug;0 (Non-critical);sponsor confirmed
53,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,0,OperatorResolver.areAddressesImported doesn't check lengths of argument arrays,210,https://github.com/code-423n4/2021-11-nested-findings/issues/210,nested,2021/11,bug;0 (Non-critical);sponsor confirmed
53,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,NestedReserve.updateFactory function can be used for stealing all contract funds (rug),218,https://github.com/code-423n4/2021-11-nested-findings/issues/218,nested,2021/11,bug;invalid;sponsor disputed
53,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,NestedFactory.FeeSplitter can be immediatly changed with current and future fees lost to a malicious Owner,219,https://github.com/code-423n4/2021-11-nested-findings/issues/219,nested,2021/11,bug;invalid;sponsor disputed
53,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,NestedFactory.removeOperator code doesn't correspond to it's logic,220,https://github.com/code-423n4/2021-11-nested-findings/issues/220,nested,2021/11,bug;1 (Low Risk)
53,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,0,NestedFactory._decreaseHoldingAmount needs explicit amount control for spending reserve,223,https://github.com/code-423n4/2021-11-nested-findings/issues/223,nested,2021/11,bug;0 (Non-critical);sponsor disputed
53,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Save storage NestedRecords.records.reserve address variable to memory,225,https://github.com/code-423n4/2021-11-nested-findings/issues/225,nested,2021/11,bug;invalid;sponsor disputed
53,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,Passing multiple ETH deposits in orders array will use the same msg.value many times,226,https://github.com/code-423n4/2021-11-nested-findings/issues/226,nested,2021/11,bug;2 (Med Risk);disagree with severity
53,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,"NestedFactory inherits from OpenZeppelin Multicall, which multicall function allows reusage of msg.value within ETH depositing",227,https://github.com/code-423n4/2021-11-nested-findings/issues/227,nested,2021/11,bug;invalid
53,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Multicall.sol batch calls don't update msg.value,13,https://github.com/code-423n4/2021-11-nested-findings/issues/13,nested,2021/11,bug;duplicate;2 (Med Risk)
53,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Copy your own portfolio to keep earning royalties ,30,https://github.com/code-423n4/2021-11-nested-findings/issues/30,nested,2021/11,bug;3 (High Risk);disagree with severity
53,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,2,Impossible to remove the operator at index 0 of `operators` array,58,https://github.com/code-423n4/2021-11-nested-findings/issues/58,nested,2021/11,bug;duplicate;1 (Low Risk);sponsor confirmed
53,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,If `removeOperator` is called with non-existant operator the while loop keeps going until gas limit is hit,59,https://github.com/code-423n4/2021-11-nested-findings/issues/59,nested,2021/11,bug;duplicate;1 (Low Risk)
53,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,Make sure `reserve` is set in functions that depend on it,60,https://github.com/code-423n4/2021-11-nested-findings/issues/60,nested,2021/11,bug;duplicate;1 (Low Risk)
53,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,`unlockTokens` makes use of the normal `transfer` rather than `safeTransfer`,61,https://github.com/code-423n4/2021-11-nested-findings/issues/61,nested,2021/11,bug;duplicate;1 (Low Risk)
53,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,The `_user` parameter of `_calculateFees` is not used,62,https://github.com/code-423n4/2021-11-nested-findings/issues/62,nested,2021/11,bug;duplicate;1 (Low Risk)
53,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,`removeFactory` has `==true` comparison in require statement,63,https://github.com/code-423n4/2021-11-nested-findings/issues/63,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,MaCree,0x8835d7dEAAB3B049F9e73FddE52b18a8d8F8E82a,2, NestedFactory could not remove the last  Operator,64,https://github.com/code-423n4/2021-11-nested-findings/issues/64,nested,2021/11,bug;duplicate;1 (Low Risk)
53,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,swapTokenForTokens() Does Not Check Token Balance In NFT for _sellTokenAmount ,51,https://github.com/code-423n4/2021-11-nested-findings/issues/51,nested,2021/11,bug;invalid;sponsor disputed
53,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,0,Improve Error Message for require(assetTokensLength > 1) in function withdraw(),52,https://github.com/code-423n4/2021-11-nested-findings/issues/52,nested,2021/11,bug;invalid;sponsor disputed
53,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,Wrong Error Message in _transferInputTokens(),53,https://github.com/code-423n4/2021-11-nested-findings/issues/53,nested,2021/11,bug;0 (Non-critical)
53,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Avoiding Initialization of Loop Index If It Is 0,54,https://github.com/code-423n4/2021-11-nested-findings/issues/54,nested,2021/11,bug;invalid;sponsor disputed
53,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,function mintWithMetadata() Unused,55,https://github.com/code-423n4/2021-11-nested-findings/issues/55,nested,2021/11,bug;G (Gas Optimization);sponsor acknowledged
53,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,decodeDataAndRequire() Does Not Check Minimum Receive Amounts and May Cause Users Financial Lose,56,https://github.com/code-423n4/2021-11-nested-findings/issues/56,nested,2021/11,bug;duplicate;invalid
53,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,_sendFees() Repeat SLOAD shareholders In Loop,57,https://github.com/code-423n4/2021-11-nested-findings/issues/57,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,G,Unused balance variable in triggerForToken function,150,https://github.com/code-423n4/2021-11-nested-findings/issues/150,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,0,Redundant comparison with a Boolean constant,71,https://github.com/code-423n4/2021-11-nested-findings/issues/71,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,G,Public functions can be declared external,72,https://github.com/code-423n4/2021-11-nested-findings/issues/72,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,G,Unused variable in triggerForToken(),73,https://github.com/code-423n4/2021-11-nested-findings/issues/73,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,G,Unused function parameter,74,https://github.com/code-423n4/2021-11-nested-findings/issues/74,nested,2021/11,bug;duplicate;1 (Low Risk)
53,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,1,Unchecked return value in triggerForToken(),76,https://github.com/code-423n4/2021-11-nested-findings/issues/76,nested,2021/11,bug;1 (Low Risk);sponsor confirmed
53,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,1,Incorrect logic in removeOperator(),77,https://github.com/code-423n4/2021-11-nested-findings/issues/77,nested,2021/11,bug;duplicate;1 (Low Risk)
53,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,0,Unsafe transfer() in unlockTokens(),80,https://github.com/code-423n4/2021-11-nested-findings/issues/80,nested,2021/11,bug;duplicate;1 (Low Risk)
53,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,G,Gas-consuming way to add shareholders,81,https://github.com/code-423n4/2021-11-nested-findings/issues/81,nested,2021/11,bug;G (Gas Optimization);sponsor acknowledged
53,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,2,setReserve() can be front-run,82,https://github.com/code-423n4/2021-11-nested-findings/issues/82,nested,2021/11,bug;duplicate;2 (Med Risk)
53,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,1,Missing zero-address check in setters,83,https://github.com/code-423n4/2021-11-nested-findings/issues/83,nested,2021/11,bug;duplicate;1 (Low Risk);sponsor confirmed
53,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,0,Missing events on changes,84,https://github.com/code-423n4/2021-11-nested-findings/issues/84,nested,2021/11,bug;0 (Non-critical);sponsor confirmed
53,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,G,decodeDataAndRequire() can be declared pure,85,https://github.com/code-423n4/2021-11-nested-findings/issues/85,nested,2021/11,bug;duplicate;0 (Non-critical)
53,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,2,Missing slippage protection during swap,86,https://github.com/code-423n4/2021-11-nested-findings/issues/86,nested,2021/11,bug;invalid;sponsor disputed
53,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G, Unnecessary checked arithmetic in for loops,100,https://github.com/code-423n4/2021-11-nested-findings/issues/100,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,WETHMock withdraw function unnecessary safe math,90,https://github.com/code-423n4/2021-11-nested-findings/issues/90,nested,2021/11,bug;G (Gas Optimization);sponsor disputed
53,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Doesn't emit updateShareholder in FeeSplitter.updateShareholder.,91,https://github.com/code-423n4/2021-11-nested-findings/issues/91,nested,2021/11,bug;duplicate;0 (Non-critical)
53,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,DummyRouter.sol .transfer isn't safe,92,https://github.com/code-423n4/2021-11-nested-findings/issues/92,nested,2021/11,bug;1 (Low Risk);sponsor disputed
53,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,safeApprove is deprecated,93,https://github.com/code-423n4/2021-11-nested-findings/issues/93,nested,2021/11,bug;duplicate;1 (Low Risk)
53,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,use unchecked to save gas,94,https://github.com/code-423n4/2021-11-nested-findings/issues/94,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,named return issue,95,https://github.com/code-423n4/2021-11-nested-findings/issues/95,nested,2021/11,bug;duplicate;0 (Non-critical)
53,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,reordering struct fields,96,https://github.com/code-423n4/2021-11-nested-findings/issues/96,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,calldata vs memory,97,https://github.com/code-423n4/2021-11-nested-findings/issues/97,nested,2021/11,bug;invalid;sponsor disputed
53,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,double reading of state variable inside a loop,98,https://github.com/code-423n4/2021-11-nested-findings/issues/98,nested,2021/11,bug;question;G (Gas Optimization);sponsor confirmed
53,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,caching array length,99,https://github.com/code-423n4/2021-11-nested-findings/issues/99,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Cant remove the first operator,200,https://github.com/code-423n4/2021-11-nested-findings/issues/200,nested,2021/11,bug;duplicate;1 (Low Risk)
53,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,safeTransfer of tokens,202,https://github.com/code-423n4/2021-11-nested-findings/issues/202,nested,2021/11,bug;duplicate;1 (Low Risk)
53,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Can't revoke factory in NestedRecrods,203,https://github.com/code-423n4/2021-11-nested-findings/issues/203,nested,2021/11,bug;1 (Low Risk);sponsor confirmed
53,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Division by 0 totalWeights,205,https://github.com/code-423n4/2021-11-nested-findings/issues/205,nested,2021/11,bug;duplicate;1 (Low Risk)
53,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,INestedToken interface,206,https://github.com/code-423n4/2021-11-nested-findings/issues/206,nested,2021/11,bug;0 (Non-critical);sponsor confirmed
53,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,index + 1 can be simplified,207,https://github.com/code-423n4/2021-11-nested-findings/issues/207,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,_burnNST,208,https://github.com/code-423n4/2021-11-nested-findings/issues/208,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Shorter revert messages,209,https://github.com/code-423n4/2021-11-nested-findings/issues/209,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Accessing the same storage value multiple times,211,https://github.com/code-423n4/2021-11-nested-findings/issues/211,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,.length in a loop,212,https://github.com/code-423n4/2021-11-nested-findings/issues/212,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,mintWithMetadata onlyFactory ,213,https://github.com/code-423n4/2021-11-nested-findings/issues/213,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unchecked operations,214,https://github.com/code-423n4/2021-11-nested-findings/issues/214,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,setMaxAllowance,215,https://github.com/code-423n4/2021-11-nested-findings/issues/215,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,fillQuote returned value,222,https://github.com/code-423n4/2021-11-nested-findings/issues/222,nested,2021/11,bug;duplicate;1 (Low Risk)
53,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Validations of parameters,224,https://github.com/code-423n4/2021-11-nested-findings/issues/224,nested,2021/11,bug;duplicate;1 (Low Risk)
53,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,0,NestedFactory: _calculateFees has unused parameter _user,10,https://github.com/code-423n4/2021-11-nested-findings/issues/10,nested,2021/11,bug;duplicate;1 (Low Risk)
53,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,1,NestedFactory: setReserve should check for address zero,2,https://github.com/code-423n4/2021-11-nested-findings/issues/2,nested,2021/11,bug;duplicate;1 (Low Risk)
53,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,G,"NestedFactory: in deleteAsset and freeToken, tokens should only be declared once ",49,https://github.com/code-423n4/2021-11-nested-findings/issues/49,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,G,NestedFactory: _transferToReserveAndStore can be simplified to save on gas,5,https://github.com/code-423n4/2021-11-nested-findings/issues/5,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,1,"ExchangeHelpers: in setMaxAllowance, safeApprove shouldn't be used",50,https://github.com/code-423n4/2021-11-nested-findings/issues/50,nested,2021/11,bug;1 (Low Risk);sponsor confirmed
53,PierrickGT,0xd70804463bb2760c3384fc87bbe779e3d91bab3a,G,NestedFactory: _submitOrder one mload can be avoided,6,https://github.com/code-423n4/2021-11-nested-findings/issues/6,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Remove unnecessary `balanceOf` call in `NestedBuybacker::triggerForToken`,65,https://github.com/code-423n4/2021-11-nested-findings/issues/65,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Remove uneccessary variable `tokens` in `NestedFactory::_submitOrder`,66,https://github.com/code-423n4/2021-11-nested-findings/issues/66,nested,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
53,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Remove uneccessary variable `tokens` in `NestedFactory::_safeSubmitOrder`,67,https://github.com/code-423n4/2021-11-nested-findings/issues/67,nested,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
53,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Refactor `FeeSplitter::getAmountDue` to save one variable slot,68,https://github.com/code-423n4/2021-11-nested-findings/issues/68,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,2,Function `NestedFactory::removeOperator` forbids removing first operator,69,https://github.com/code-423n4/2021-11-nested-findings/issues/69,nested,2021/11,bug;duplicate;1 (Low Risk)
53,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,use msg.sender rather than _msgSender() in FeeSplitter.receive,1,https://github.com/code-423n4/2021-11-nested-findings/issues/1,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,FlatOperator can be inlined into NestedFactory to save gas,26,https://github.com/code-423n4/2021-11-nested-findings/issues/26,nested,2021/11,bug;G (Gas Optimization);sponsor acknowledged
53,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,`NestedReserve.transferFromFactory` function increases deployment gas costs unnecessarily,27,https://github.com/code-423n4/2021-11-nested-findings/issues/27,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,0,ZeroExOperator,3,https://github.com/code-423n4/2021-11-nested-findings/issues/3,nested,2021/11,bug;0 (Non-critical);sponsor confirmed
53,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,1,1:1 linkage between factory and reserve prevents desired upgradability path.,32,https://github.com/code-423n4/2021-11-nested-findings/issues/32,nested,2021/11,bug;1 (Low Risk);sponsor confirmed
53,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,1,NestedBuybacker sends NST to NestedReserve with no proper way to retrieve it.,33,https://github.com/code-423n4/2021-11-nested-findings/issues/33,nested,2021/11,bug;0 (Non-critical);sponsor disputed
53,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Move from a pull to a push pattern for sending fees to the FeeSplitter,34,https://github.com/code-423n4/2021-11-nested-findings/issues/34,nested,2021/11,bug;G (Gas Optimization);sponsor acknowledged
53,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Store hash of `type(ZeroExStorage).creationCode` rather than recalculating it on each call,35,https://github.com/code-423n4/2021-11-nested-findings/issues/35,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,0,NestedFactory fees aren't configurable without a redeploy,36,https://github.com/code-423n4/2021-11-nested-findings/issues/36,nested,2021/11,bug;invalid;sponsor disputed
53,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,0,Weak guarantees on ZeroExOperator using correct create2 salt to recompute storage address,4,https://github.com/code-423n4/2021-11-nested-findings/issues/4,nested,2021/11,bug;0 (Non-critical);sponsor confirmed
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused local variables,153,https://github.com/code-423n4/2021-11-nested-findings/issues/153,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused function parameters,154,https://github.com/code-423n4/2021-11-nested-findings/issues/154,nested,2021/11,bug;duplicate;1 (Low Risk)
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Function state mutability can be restricted to pure,155,https://github.com/code-423n4/2021-11-nested-findings/issues/155,nested,2021/11,bug;duplicate;0 (Non-critical)
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Empty files,156,https://github.com/code-423n4/2021-11-nested-findings/issues/156,nested,2021/11,bug;duplicate;0 (Non-critical)
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`importOperators()` should be run atomically with `rebuildCaches()` to make sure `addressCache` is up-to-date with the new `operators`,157,https://github.com/code-423n4/2021-11-nested-findings/issues/157,nested,2021/11,bug;duplicate;2 (Med Risk)
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`removeOperator()` Wrong implementation,158,https://github.com/code-423n4/2021-11-nested-findings/issues/158,nested,2021/11,bug;duplicate;1 (Low Risk)
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`MixinOperatorResolver.sol#isResolverCached()` become malfunctioning when an `operator` is removed,159,https://github.com/code-423n4/2021-11-nested-findings/issues/159,nested,2021/11,bug;duplicate;2 (Med Risk)
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`NestedFactory.sol#_submitInOrders()` Wrong implementation cause users to be overcharged,160,https://github.com/code-423n4/2021-11-nested-findings/issues/160,nested,2021/11,bug;2 (Med Risk);sponsor disputed
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Misleading error message,161,https://github.com/code-423n4/2021-11-nested-findings/issues/161,nested,2021/11,bug;0 (Non-critical);sponsor confirmed
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary storage writes can save gas,162,https://github.com/code-423n4/2021-11-nested-findings/issues/162,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary external calls can save gas,163,https://github.com/code-423n4/2021-11-nested-findings/issues/163,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,164,https://github.com/code-423n4/2021-11-nested-findings/issues/164,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Missing events for critical operations,165,https://github.com/code-423n4/2021-11-nested-findings/issues/165,nested,2021/11,bug;duplicate;0 (Non-critical)
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Use of assert() instead of require(),166,https://github.com/code-423n4/2021-11-nested-findings/issues/166,nested,2021/11,bug;1 (Low Risk)
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Consider making `_calculateFees` inline to save gas,167,https://github.com/code-423n4/2021-11-nested-findings/issues/167,nested,2021/11,bug;1 (Low Risk);sponsor confirmed
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Use of deprecated `safeApprove`,168,https://github.com/code-423n4/2021-11-nested-findings/issues/168,nested,2021/11,bug;duplicate;1 (Low Risk)
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Inconsistent use of `_msgSender()`,169,https://github.com/code-423n4/2021-11-nested-findings/issues/169,nested,2021/11,bug;invalid;sponsor disputed
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`NestedFactory#removeOperator()` Avoid empty items can save gas,170,https://github.com/code-423n4/2021-11-nested-findings/issues/170,nested,2021/11,bug;G (Gas Optimization)
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,171,https://github.com/code-423n4/2021-11-nested-findings/issues/171,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Unsafe token transfer,172,https://github.com/code-423n4/2021-11-nested-findings/issues/172,nested,2021/11,bug;duplicate;1 (Low Risk)
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,173,https://github.com/code-423n4/2021-11-nested-findings/issues/173,nested,2021/11,bug;G (Gas Optimization);sponsor acknowledged
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`FeeSplitter.sol#setRoyaltiesWeight()` Two storage writes can be combined into one,174,https://github.com/code-423n4/2021-11-nested-findings/issues/174,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache and read storage variables from the stack can save gas,175,https://github.com/code-423n4/2021-11-nested-findings/issues/175,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`FeeSplitter.sol#sendFees()` Use inline expression can save gas,176,https://github.com/code-423n4/2021-11-nested-findings/issues/176,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,1.	Cache length of array before loop to optimize gas,106,https://github.com/code-423n4/2021-11-nested-findings/issues/106,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,Use `calldata` keyword instead of `memory` keyword in function arguments,107,https://github.com/code-423n4/2021-11-nested-findings/issues/107,nested,2021/11,bug;G (Gas Optimization);sponsor confirmed
53,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,0,Add zero-address checkers,108,https://github.com/code-423n4/2021-11-nested-findings/issues/108,nested,2021/11,bug;1 (Low Risk)
53,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,2,Could delete previous share holder data,109,https://github.com/code-423n4/2021-11-nested-findings/issues/109,nested,2021/11,bug;invalid;sponsor disputed
53,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,No need to have _owner function arguments,110,https://github.com/code-423n4/2021-11-nested-findings/issues/110,nested,2021/11,bug;invalid;sponsor disputed
53,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,0,Unnecessary `payable` keyword,111,https://github.com/code-423n4/2021-11-nested-findings/issues/111,nested,2021/11,bug;invalid;sponsor disputed
53,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,Change `public` to `external` keyword,112,https://github.com/code-423n4/2021-11-nested-findings/issues/112,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,Use `unchecked` keyword,113,https://github.com/code-423n4/2021-11-nested-findings/issues/113,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,0,No used library added,114,https://github.com/code-423n4/2021-11-nested-findings/issues/114,nested,2021/11,bug;0 (Non-critical);sponsor confirmed
53,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,Add index param to remove in function argument to reduce gas.,115,https://github.com/code-423n4/2021-11-nested-findings/issues/115,nested,2021/11,bug;duplicate;G (Gas Optimization)
53,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,1,Does not remove operator completely,116,https://github.com/code-423n4/2021-11-nested-findings/issues/116,nested,2021/11,bug;duplicate;1 (Low Risk)
53,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,2,Check if token has transfer fee,117,https://github.com/code-423n4/2021-11-nested-findings/issues/117,nested,2021/11,bug;duplicate;invalid
53,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Use existing memory version of state variables,102,https://github.com/code-423n4/2021-11-nested-findings/issues/102,nested,2021/11,bug;G (Gas Optimization);sponsor disputed
53,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Missing input validation on array lengths ,103,https://github.com/code-423n4/2021-11-nested-findings/issues/103,nested,2021/11,bug;1 (Low Risk);sponsor confirmed
53,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,removeOperator reverts unexpectedly with a non-existent operator (NestedFactory.sol),104,https://github.com/code-423n4/2021-11-nested-findings/issues/104,nested,2021/11,bug;duplicate;1 (Low Risk)
53,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused Named Return,105,https://github.com/code-423n4/2021-11-nested-findings/issues/105,nested,2021/11,bug;0 (Non-critical);sponsor confirmed
53,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,calculateFees Issues (NestedFactory.sol) ,194,https://github.com/code-423n4/2021-11-nested-findings/issues/194,nested,2021/11,bug;duplicate;1 (Low Risk)
53,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Unused local variables ,195,https://github.com/code-423n4/2021-11-nested-findings/issues/195,nested,2021/11,bug;G (Gas Optimization)
53,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,msg.sender used in ZeroExOperator.sol,216,https://github.com/code-423n4/2021-11-nested-findings/issues/216,nested,2021/11,bug;duplicate;invalid
53,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Long Revert Strings,221,https://github.com/code-423n4/2021-11-nested-findings/issues/221,nested,2021/11,bug;duplicate;G (Gas Optimization)
49,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,"At `OverlayV1Comptroller.sol`, `_roller.time` shouldn't be cached",105,https://github.com/code-423n4/2021-11-overlay-findings/issues/105,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Optimize `OverlayV10l#_oi`,16,https://github.com/code-423n4/2021-11-overlay-findings/issues/16,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`_fundingFactor` at `OverlayV1Ol#computeFunding` can be calculated cheaper,17,https://github.com/code-423n4/2021-11-overlay-findings/issues/17,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`OverlayV1PricePoint.sol#pricePoints` can be implemented more efficiently,18,https://github.com/code-423n4/2021-11-overlay-findings/issues/18,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,`OverlayV1Mothership` doesn't emit events,19,https://github.com/code-423n4/2021-11-overlay-findings/issues/19,overlay,2021/11,bug;duplicate;0 (Non-critical)
49,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Save gas at `OverlayV1Comptroller.sol#roll`,20,https://github.com/code-423n4/2021-11-overlay-findings/issues/20,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`FixedPoint.sol` implements require statements already included in Solidity 0.8.*,7,https://github.com/code-423n4/2021-11-overlay-findings/issues/7,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Cache length of array when looping,8,https://github.com/code-423n4/2021-11-overlay-findings/issues/8,overlay,2021/11,bug;invalid;sponsor disputed
49,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`OverlayV1UniswapV3Market` assumes one of the tokens is ETH,79,https://github.com/code-423n4/2021-11-overlay-findings/issues/79,overlay,2021/11,bug;1 (Low Risk);sponsor confirmed
49,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing `macroWindow > microWindow` check,80,https://github.com/code-423n4/2021-11-overlay-findings/issues/80,overlay,2021/11,bug;1 (Low Risk);sponsor confirmed
49,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Fees can be more than 100%,81,https://github.com/code-423n4/2021-11-overlay-findings/issues/81,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`_totalSupply` not updated on `transferMint/Burn`,82,https://github.com/code-423n4/2021-11-overlay-findings/issues/82,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`OverlayV1UniswapV3Market` computes wrong market liquidity,83,https://github.com/code-423n4/2021-11-overlay-findings/issues/83,overlay,2021/11,bug;3 (High Risk);sponsor confirmed
49,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,++i is more gas efficient than i++ in loops forwarding,108,https://github.com/code-423n4/2021-11-overlay-findings/issues/108,overlay,2021/11,bug;invalid;sponsor disputed
49,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Change unchanged storage variables to constants can save gas,109,https://github.com/code-423n4/2021-11-overlay-findings/issues/109,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Changing function visibility from public to external can save gas,110,https://github.com/code-423n4/2021-11-overlay-findings/issues/110,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use of constant keccak variables results in extra hashing (and so gas).,111,https://github.com/code-423n4/2021-11-overlay-findings/issues/111,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,`> 0` can be replaced with `!= 0` for gas optimization,113,https://github.com/code-423n4/2021-11-overlay-findings/issues/113,overlay,2021/11,bug;G (Gas Optimization);sponsor disputed
49,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant SafeMath Library Import,114,https://github.com/code-423n4/2021-11-overlay-findings/issues/114,overlay,2021/11,bug;invalid;sponsor disputed
49,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Less than 256 uints are not gas efficient,115,https://github.com/code-423n4/2021-11-overlay-findings/issues/115,overlay,2021/11,bug;invalid;sponsor disputed
49,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,130,https://github.com/code-423n4/2021-11-overlay-findings/issues/130,overlay,2021/11,bug;invalid;sponsor disputed
49,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing events for owner only functions that change critical parameters,15,https://github.com/code-423n4/2021-11-overlay-findings/issues/15,overlay,2021/11,bug;duplicate;0 (Non-critical)
49,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Unused Access Control Mechanism,39,https://github.com/code-423n4/2021-11-overlay-findings/issues/39,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,OVL Token is not set on the constructor,40,https://github.com/code-423n4/2021-11-overlay-findings/issues/40,overlay,2021/11,bug;invalid;sponsor disputed
49,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Adding unchecked directive can save gas,41,https://github.com/code-423n4/2021-11-overlay-findings/issues/41,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Total Supply Does Not Change During the Burn/Mint,42,https://github.com/code-423n4/2021-11-overlay-findings/issues/42,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Improper Upper Bound Definition on the Fee,77,https://github.com/code-423n4/2021-11-overlay-findings/issues/77,overlay,2021/11,bug;2 (Med Risk);sponsor confirmed
49,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,ERC1155Supply vulnerability in OpenZeppelin Contracts,9,https://github.com/code-423n4/2021-11-overlay-findings/issues/9,overlay,2021/11,bug;duplicate;3 (High Risk)
49,gpersoon,gpersoon.eth,2,pow() is missing check on input parameters with 0 value,54,https://github.com/code-423n4/2021-11-overlay-findings/issues/54,overlay,2021/11,bug;2 (Med Risk);sponsor disputed
49,gpersoon,gpersoon.eth,2,Can't enableCollateral after a disableCollateral ,55,https://github.com/code-423n4/2021-11-overlay-findings/issues/55,overlay,2021/11,bug;2 (Med Risk);sponsor confirmed
49,gpersoon,gpersoon.eth,2,_totalSupply not updated in _transferMint() and _transferBurn() ,59,https://github.com/code-423n4/2021-11-overlay-findings/issues/59,overlay,2021/11,bug;question;2 (Med Risk);sponsor confirmed
49,gpersoon,gpersoon.eth,1,contract OverlayV1OI isn't abstract,62,https://github.com/code-423n4/2021-11-overlay-findings/issues/62,overlay,2021/11,bug;1 (Low Risk);sponsor acknowledged
49,gpersoon,gpersoon.eth,2,Result of value() of OverlayV1OVLCollateral.sol might be outdated,67,https://github.com/code-423n4/2021-11-overlay-findings/issues/67,overlay,2021/11,bug;invalid;sponsor disputed
49,gpersoon,gpersoon.eth,G,Simplify function roll(),68,https://github.com/code-423n4/2021-11-overlay-findings/issues/68,overlay,2021/11,bug;G (Gas Optimization);sponsor confirmed
49,gpersoon,gpersoon.eth,G,Use _brrrrdExpected everywhere in oiCap() ,69,https://github.com/code-423n4/2021-11-overlay-findings/issues/69,overlay,2021/11,bug;G (Gas Optimization);sponsor confirmed
49,gpersoon,gpersoon.eth,1,No user friendly error message when _leverage==0,71,https://github.com/code-423n4/2021-11-overlay-findings/issues/71,overlay,2021/11,bug;1 (Low Risk);sponsor confirmed
49,gpersoon,gpersoon.eth,G,Check for liquidation in value() ,76,https://github.com/code-423n4/2021-11-overlay-findings/issues/76,overlay,2021/11,bug;G (Gas Optimization);sponsor confirmed
49,gpersoon,gpersoon.eth,G,Use _userOiShares everywhere in unwind(),78,https://github.com/code-423n4/2021-11-overlay-findings/issues/78,overlay,2021/11,bug;G (Gas Optimization);sponsor confirmed
49,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,No bound on marginRewardRate,100,https://github.com/code-423n4/2021-11-overlay-findings/issues/100,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Unbounded feeBurnRate and marginBurnRate,101,https://github.com/code-423n4/2021-11-overlay-findings/issues/101,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Unbounded fee ,102,https://github.com/code-423n4/2021-11-overlay-findings/issues/102,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Unbounded marginMaintenance,104,https://github.com/code-423n4/2021-11-overlay-findings/issues/104,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Struct layout,107,https://github.com/code-423n4/2021-11-overlay-findings/issues/107,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Unused variable in OverlayV1Mothership.sol,112,https://github.com/code-423n4/2021-11-overlay-findings/issues/112,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,Missing events for onlyGovernor functions,10,https://github.com/code-423n4/2021-11-overlay-findings/issues/10,overlay,2021/11,bug;duplicate;0 (Non-critical)
49,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,Make OverlayV1Mothership.sol marginBurnRate immutable,11,https://github.com/code-423n4/2021-11-overlay-findings/issues/11,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,3,_transferBurn does not actually burn tokens (decrease supply),12,https://github.com/code-423n4/2021-11-overlay-findings/issues/12,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,3,_transferMint does not actually mint tokens (increase supply),13,https://github.com/code-423n4/2021-11-overlay-findings/issues/13,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,Can wrap line 66 of OverlayV1Market.sol in unchecked {} to save gas,14,https://github.com/code-423n4/2021-11-overlay-findings/issues/14,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,All overflow/underflow checks are automatic in Solidity 0.8,48,https://github.com/code-423n4/2021-11-overlay-findings/issues/48,overlay,2021/11,bug;G (Gas Optimization);sponsor disputed
49,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,Consider adding payoff caps on short positions as well,52,https://github.com/code-423n4/2021-11-overlay-findings/issues/52,overlay,2021/11,bug;invalid;sponsor disputed
49,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,3,isUnderwater returns opposite boolean for short positions,53,https://github.com/code-423n4/2021-11-overlay-findings/issues/53,overlay,2021/11,bug;2 (Med Risk);disagree with severity;sponsor confirmed
49,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,3,Wrong value of OI used during liquidation in OverlayV1OVLCollateral.sol,103,https://github.com/code-423n4/2021-11-overlay-findings/issues/103,overlay,2021/11,bug;invalid;sponsor disputed
49,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,Mismatch in value of OI added in build compared to value removed in unwind,106,https://github.com/code-423n4/2021-11-overlay-findings/issues/106,overlay,2021/11,bug;invalid;sponsor disputed
49,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,Using/Importing ERC1155Supply.sol from openzeppelin version 4.3.2,97,https://github.com/code-423n4/2021-11-overlay-findings/issues/97,overlay,2021/11,bug;duplicate;3 (High Risk)
49,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,3,_transferMint not incrementing totalSupply of OVL after minting,98,https://github.com/code-423n4/2021-11-overlay-findings/issues/98,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,3,_transferBurn not decrementing totalSupply of OVL after burn,99,https://github.com/code-423n4/2021-11-overlay-findings/issues/99,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,0,OverlayV1Governance and OverlayV1OVLCollateral constructors don't check for zero _mothership and OVL addresses,128,https://github.com/code-423n4/2021-11-overlay-findings/issues/128,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,0,UniswapV3Listener constructor don't check for zero _uniV3Pool and token addresses,131,https://github.com/code-423n4/2021-11-overlay-findings/issues/131,overlay,2021/11,bug;invalid;sponsor disputed
49,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,OverlayV1UniswapV3Market constructor doesn’t check immutable variables to be set,132,https://github.com/code-423n4/2021-11-overlay-findings/issues/132,overlay,2021/11,bug;duplicate;G (Gas Optimization);sponsor disputed
49,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,Fee double counting for underwater positions,134,https://github.com/code-423n4/2021-11-overlay-findings/issues/134,overlay,2021/11,bug;2 (Med Risk);sponsor confirmed
49,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,"OVL token shouldn't be available for substitution, needs to be set only once",135,https://github.com/code-423n4/2021-11-overlay-findings/issues/135,overlay,2021/11,bug;1 (Low Risk);sponsor disputed
49,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,OverlayV1OVLCollateral.getCurrentBlockPositionId does excessive storage mapping read,136,https://github.com/code-423n4/2021-11-overlay-findings/issues/136,overlay,2021/11,bug;invalid;sponsor disputed
49,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,OverlayV1OVLCollateral.getCurrentBlockPositionId does excessive storage structure read,137,https://github.com/code-423n4/2021-11-overlay-findings/issues/137,overlay,2021/11,bug;duplicate;invalid
49,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,"OverlayV1OVLCollateral.liquidate storage pos.market variable is read up to three times, can be saved to memory",138,https://github.com/code-423n4/2021-11-overlay-findings/issues/138,overlay,2021/11,bug;G (Gas Optimization);sponsor confirmed
49,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,"OverlayV1OVLCollateral.liquidate storage pos.cost variable is accessed two times, can be saved to memory",139,https://github.com/code-423n4/2021-11-overlay-findings/issues/139,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,UniswapV3Listener.listen has debug gas check left,140,https://github.com/code-423n4/2021-11-overlay-findings/issues/140,overlay,2021/11,bug;invalid;sponsor disputed
49,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,OverlayV1Governance.setEverything does unnecessary function calls,141,https://github.com/code-423n4/2021-11-overlay-findings/issues/141,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,Uniswap pool can be manipulated to exploit OverlayV1OVLCollateral's unwind and liquidate functions,142,https://github.com/code-423n4/2021-11-overlay-findings/issues/142,overlay,2021/11,bug;invalid;sponsor disputed
49,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,update function equality check should be more secure,2,https://github.com/code-423n4/2021-11-overlay-findings/issues/2,overlay,2021/11,bug;invalid;sponsor disputed
49,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Should add reentrancy guard modifiers ,3,https://github.com/code-423n4/2021-11-overlay-findings/issues/3,overlay,2021/11,bug;1 (Low Risk);sponsor acknowledged
49,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Constructor Does Not Check for Zero Addresses,32,https://github.com/code-423n4/2021-11-overlay-findings/issues/32,overlay,2021/11,bug;G (Gas Optimization);sponsor disputed
49,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,Constructor Lack of Input Validation for _compoundingPeriod,33,https://github.com/code-423n4/2021-11-overlay-findings/issues/33,overlay,2021/11,bug;1 (Low Risk);sponsor disputed
49,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,TODOs List May Leak Important Info & Errors,34,https://github.com/code-423n4/2021-11-overlay-findings/issues/34,overlay,2021/11,bug;duplicate;1 (Low Risk)
49,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Remove No Effect/Do Nothing Functions to Save Gas,35,https://github.com/code-423n4/2021-11-overlay-findings/issues/35,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,function liquidate() Multiple SLOAD storage pos Is Waste of Gas,36,https://github.com/code-423n4/2021-11-overlay-findings/issues/36,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,Trader Can Open Risk Free Position By Ensuring Liquidator Unprofitable,37,https://github.com/code-423n4/2021-11-overlay-findings/issues/37,overlay,2021/11,bug;invalid;sponsor disputed
49,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Use msg.sender Rather Than _msgSender() to Save Gas,38,https://github.com/code-423n4/2021-11-overlay-findings/issues/38,overlay,2021/11,bug;G (Gas Optimization)
49,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,3,Privileged Governor account can liquidate and steal all position funds.,4,https://github.com/code-423n4/2021-11-overlay-findings/issues/4,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,1,No restriction on Fee boundary (min and max values),5,https://github.com/code-423n4/2021-11-overlay-findings/issues/5,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,G,Public functions can be made external visibility,6,https://github.com/code-423n4/2021-11-overlay-findings/issues/6,overlay,2021/11,bug;invalid;sponsor disputed
49,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1, Open TODOs,89,https://github.com/code-423n4/2021-11-overlay-findings/issues/89,overlay,2021/11,bug;duplicate;1 (Low Risk)
49,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3, not checking the return value of IOverlayTokenNew ,90,https://github.com/code-423n4/2021-11-overlay-findings/issues/90,overlay,2021/11,bug;invalid;sponsor disputed
49,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary castings in `OverlayV1UniswapV3Market.fetchPricePoint()`,91,https://github.com/code-423n4/2021-11-overlay-findings/issues/91,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G, `public` functions can be `external`,92,https://github.com/code-423n4/2021-11-overlay-findings/issues/92,overlay,2021/11,bug;duplicate;invalid
49,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G, require should come first,93,https://github.com/code-423n4/2021-11-overlay-findings/issues/93,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3, approve function is vulnerable,94,https://github.com/code-423n4/2021-11-overlay-findings/issues/94,overlay,2021/11,bug;0 (Non-critical);sponsor disputed
49,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,State variables can be `immutable`s,95,https://github.com/code-423n4/2021-11-overlay-findings/issues/95,overlay,2021/11,bug;G (Gas Optimization);sponsor disputed
49,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G, Require statements messages too long,96,https://github.com/code-423n4/2021-11-overlay-findings/issues/96,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Open TODOs in Codebase,116,https://github.com/code-423n4/2021-11-overlay-findings/issues/116,overlay,2021/11,bug;1 (Low Risk);sponsor confirmed
49,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Fee boundaries are not validated,117,https://github.com/code-423n4/2021-11-overlay-findings/issues/117,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Context and msg.sender,118,https://github.com/code-423n4/2021-11-overlay-findings/issues/118,overlay,2021/11,bug;0 (Non-critical);sponsor confirmed
49,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Discrepancies between the interface and implementation,119,https://github.com/code-423n4/2021-11-overlay-findings/issues/119,overlay,2021/11,bug;1 (Low Risk);sponsor acknowledged
49,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Timelock and events for governor functions,120,https://github.com/code-423n4/2021-11-overlay-findings/issues/120,overlay,2021/11,bug;2 (Med Risk)
49,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Operations in constant variables,121,https://github.com/code-423n4/2021-11-overlay-findings/issues/121,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Dead code,122,https://github.com/code-423n4/2021-11-overlay-findings/issues/122,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache storage access,123,https://github.com/code-423n4/2021-11-overlay-findings/issues/123,overlay,2021/11,bug;G (Gas Optimization);sponsor disputed
49,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Eliminate duplicate math operations,124,https://github.com/code-423n4/2021-11-overlay-findings/issues/124,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Eliminate subtraction,125,https://github.com/code-423n4/2021-11-overlay-findings/issues/125,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Pack structs tightly,126,https://github.com/code-423n4/2021-11-overlay-findings/issues/126,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,OZ ERC1155Supply vulnerability,127,https://github.com/code-423n4/2021-11-overlay-findings/issues/127,overlay,2021/11,bug;3 (High Risk);sponsor confirmed
49,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Cached version of ovl may be outdated,129,https://github.com/code-423n4/2021-11-overlay-findings/issues/129,overlay,2021/11,bug;2 (Med Risk);disagree with severity;sponsor confirmed
49,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,_rewardsTo not empty,133,https://github.com/code-423n4/2021-11-overlay-findings/issues/133,overlay,2021/11,bug;0 (Non-critical);sponsor disputed
49,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,0,Emit event when fees are changed in Mothership contract,31,https://github.com/code-423n4/2021-11-overlay-findings/issues/31,overlay,2021/11,bug;duplicate;0 (Non-critical)
49,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Errors.sol is unnecessary,1,https://github.com/code-423n4/2021-11-overlay-findings/issues/1,overlay,2021/11,bug;invalid;sponsor disputed
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,56,https://github.com/code-423n4/2021-11-overlay-findings/issues/56,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused events,57,https://github.com/code-423n4/2021-11-overlay-findings/issues/57,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Race condition on ERC20 approval,58,https://github.com/code-423n4/2021-11-overlay-findings/issues/58,overlay,2021/11,bug;duplicate;0 (Non-critical);sponsor acknowledged
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Redundant code,60,https://github.com/code-423n4/2021-11-overlay-findings/issues/60,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use `transferBurn` can save gas,61,https://github.com/code-423n4/2021-11-overlay-findings/issues/61,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code Style: public/external function names should not be prefixed with `_`,63,https://github.com/code-423n4/2021-11-overlay-findings/issues/63,overlay,2021/11,bug;duplicate;0 (Non-critical)
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Missing events for critical operations,64,https://github.com/code-423n4/2021-11-overlay-findings/issues/64,overlay,2021/11,bug;0 (Non-critical);disagree with severity;sponsor confirmed
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,65,https://github.com/code-423n4/2021-11-overlay-findings/issues/65,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`OverlayToken.sol` Check of allowance can be done earlier to save gas,66,https://github.com/code-423n4/2021-11-overlay-findings/issues/66,overlay,2021/11,bug;G (Gas Optimization);sponsor confirmed
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`_transferBurn` should reduce totalSupply,70,https://github.com/code-423n4/2021-11-overlay-findings/issues/70,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Inconsistent use of `_msgSender()`,72,https://github.com/code-423n4/2021-11-overlay-findings/issues/72,overlay,2021/11,bug;duplicate;0 (Non-critical)
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`OverlayToken.sol` Insufficient input validation,73,https://github.com/code-423n4/2021-11-overlay-findings/issues/73,overlay,2021/11,bug;1 (Low Risk);sponsor acknowledged
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoiding external calls can save gas,74,https://github.com/code-423n4/2021-11-overlay-findings/issues/74,overlay,2021/11,bug;G (Gas Optimization);sponsor confirmed
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`OverlayV1Mothership.sol` Incomplete implementation,75,https://github.com/code-423n4/2021-11-overlay-findings/issues/75,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Missing setter function for `OverlayV1Mothership#marginBurnRate`,84,https://github.com/code-423n4/2021-11-overlay-findings/issues/84,overlay,2021/11,bug;1 (Low Risk);sponsor confirmed
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Change unnecessary storage variables to constants can save gas,85,https://github.com/code-423n4/2021-11-overlay-findings/issues/85,overlay,2021/11,bug;G (Gas Optimization);sponsor confirmed
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"`OverlayV1Market.sol#lock()` Switching between 1, 2 instead of 0, 1 is more gas efficient",86,https://github.com/code-423n4/2021-11-overlay-findings/issues/86,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"`_transferMint` does not increase `_totalSupply`, which can malfunction `burn()`",87,https://github.com/code-423n4/2021-11-overlay-findings/issues/87,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache storage variables in the stack can save gas,88,https://github.com/code-423n4/2021-11-overlay-findings/issues/88,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,3,transferMint and transferBurn don’t update totalSupply,21,https://github.com/code-423n4/2021-11-overlay-findings/issues/21,overlay,2021/11,bug;duplicate;2 (Med Risk)
49,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,2,OverlayToken.burn function could burn tokens of any user,22,https://github.com/code-423n4/2021-11-overlay-findings/issues/22,overlay,2021/11,bug;2 (Med Risk);sponsor acknowledged
49,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,_beforeTokenTransfer and _afterTokenTransfer functions are empty,23,https://github.com/code-423n4/2021-11-overlay-findings/issues/23,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,1,Check zero address,24,https://github.com/code-423n4/2021-11-overlay-findings/issues/24,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,Use `external` keyword instead of `public` for some functions,25,https://github.com/code-423n4/2021-11-overlay-findings/issues/25,overlay,2021/11,bug;G (Gas Optimization)
49,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,0,Incorrect naming issue,26,https://github.com/code-423n4/2021-11-overlay-findings/issues/26,overlay,2021/11,bug;0 (Non-critical);sponsor confirmed
49,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,FixedPoint.sol still has SafeMath functionality,27,https://github.com/code-423n4/2021-11-overlay-findings/issues/27,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,3,Incorrect position indexing,28,https://github.com/code-423n4/2021-11-overlay-findings/issues/28,overlay,2021/11,bug;1 (Low Risk);sponsor disputed
49,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,0,No events emited after change configuration of contracts.,29,https://github.com/code-423n4/2021-11-overlay-findings/issues/29,overlay,2021/11,bug;duplicate;0 (Non-critical)
49,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,2,OverlayV1Market.update function is public function,30,https://github.com/code-423n4/2021-11-overlay-findings/issues/30,overlay,2021/11,bug;1 (Low Risk);sponsor disputed
49,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused Named Returns,43,https://github.com/code-423n4/2021-11-overlay-findings/issues/43,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unneeded variable and code in enterOI (OverlayV1Market.sol),44,https://github.com/code-423n4/2021-11-overlay-findings/issues/44,overlay,2021/11,bug;G (Gas Optimization);sponsor acknowledged
49,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Save Gas With The Unchecked Keyword (OverlayV1Market.sol),45,https://github.com/code-423n4/2021-11-overlay-findings/issues/45,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Open TODOs,46,https://github.com/code-423n4/2021-11-overlay-findings/issues/46,overlay,2021/11,bug;duplicate;1 (Low Risk)
49,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Long Revert Strings,47,https://github.com/code-423n4/2021-11-overlay-findings/issues/47,overlay,2021/11,bug;duplicate;G (Gas Optimization)
49,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Incorrect comments ,49,https://github.com/code-423n4/2021-11-overlay-findings/issues/49,overlay,2021/11,bug;1 (Low Risk);sponsor confirmed
49,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Typos ,50,https://github.com/code-423n4/2021-11-overlay-findings/issues/50,overlay,2021/11,bug;0 (Non-critical);sponsor acknowledged
49,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Commented out code (no explanation) ,51,https://github.com/code-423n4/2021-11-overlay-findings/issues/51,overlay,2021/11,bug;0 (Non-critical);sponsor confirmed
62,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,Deposit token flash loan fees can be stolen by streamCreator,182,https://github.com/code-423n4/2021-11-streaming-findings/issues/182,streaming,2021/11,bug;duplicate;3 (High Risk)
62,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,depositToken has to be not equal rewardToken,184,https://github.com/code-423n4/2021-11-streaming-findings/issues/184,streaming,2021/11,bug;duplicate;3 (High Risk)
62,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,No need to check fee inside factories constructor,185,https://github.com/code-423n4/2021-11-streaming-findings/issues/185,streaming,2021/11,bug;G (Gas Optimization)
62,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,fundStream can be implemented more efficiently,186,https://github.com/code-423n4/2021-11-streaming-findings/issues/186,streaming,2021/11,bug;G (Gas Optimization)
62,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,"When exit is called, updateStream is called twice",187,https://github.com/code-423n4/2021-11-streaming-findings/issues/187,streaming,2021/11,bug;G (Gas Optimization)
62,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Directly calculate fee in flash loan,188,https://github.com/code-423n4/2021-11-streaming-findings/issues/188,streaming,2021/11,bug;G (Gas Optimization)
62,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Not needed lastApplicableTime call in claimReward,189,https://github.com/code-423n4/2021-11-streaming-findings/issues/189,streaming,2021/11,bug;G (Gas Optimization)
62,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,"In claimReward, reward can be cached more efficiently.",190,https://github.com/code-423n4/2021-11-streaming-findings/issues/190,streaming,2021/11,bug;G (Gas Optimization)
62,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Don't cache `b1` and `temp` in toString,191,https://github.com/code-423n4/2021-11-streaming-findings/issues/191,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,This protocol doesn't support all fee on transfer tokens,192,https://github.com/code-423n4/2021-11-streaming-findings/issues/192,streaming,2021/11,bug;2 (Med Risk);sponsor acknowledged
62,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For uint `> 0` can be replaced with ` != 0` for gas optimization,194,https://github.com/code-423n4/2021-11-streaming-findings/issues/194,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,Extra fees paid for flash loans are unassigned,195,https://github.com/code-423n4/2021-11-streaming-findings/issues/195,streaming,2021/11,bug;duplicate;3 (High Risk)
62,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Use inmutable keyword,31,https://github.com/code-423n4/2021-11-streaming-findings/issues/31,streaming,2021/11,bug;G (Gas Optimization)
62,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Use const instead of storage,33,https://github.com/code-423n4/2021-11-streaming-findings/issues/33,streaming,2021/11,bug;G (Gas Optimization);sponsor acknowledged
62,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Lack of input validation,34,https://github.com/code-423n4/2021-11-streaming-findings/issues/34,streaming,2021/11,bug;invalid;sponsor disputed
62,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Dead code,36,https://github.com/code-423n4/2021-11-streaming-findings/issues/36,streaming,2021/11,bug;G (Gas Optimization);sponsor acknowledged
62,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Use right type,52,https://github.com/code-423n4/2021-11-streaming-findings/issues/52,streaming,2021/11,bug;invalid;sponsor disputed
62,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Lack of inputs validation,53,https://github.com/code-423n4/2021-11-streaming-findings/issues/53,streaming,2021/11,bug;duplicate;1 (Low Risk)
62,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Avoid multiple cast,54,https://github.com/code-423n4/2021-11-streaming-findings/issues/54,streaming,2021/11,bug;G (Gas Optimization)
62,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Avoid multiple cast II,56,https://github.com/code-423n4/2021-11-streaming-findings/issues/56,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Remove dead code,57,https://github.com/code-423n4/2021-11-streaming-findings/issues/57,streaming,2021/11,bug;G (Gas Optimization)
62,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Delete unnecessary variable,58,https://github.com/code-423n4/2021-11-streaming-findings/issues/58,streaming,2021/11,bug;G (Gas Optimization);sponsor confirmed
62,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Use _notSameBlock,62,https://github.com/code-423n4/2021-11-streaming-findings/issues/62,streaming,2021/11,bug;0 (Non-critical);sponsor disputed
62,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Wrong flash loan check,63,https://github.com/code-423n4/2021-11-streaming-findings/issues/63,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Remove constant maths,64,https://github.com/code-423n4/2021-11-streaming-findings/issues/64,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Deny of service because integer overflow,65,https://github.com/code-423n4/2021-11-streaming-findings/issues/65,streaming,2021/11,bug;0 (Non-critical);sponsor disputed
62,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Free flashloan for governance,66,https://github.com/code-423n4/2021-11-streaming-findings/issues/66,streaming,2021/11,bug;1 (Low Risk);sponsor acknowledged
62,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,2,Not tracking tokens claimed minus deposit tokens (Locke.sol),272,https://github.com/code-423n4/2021-11-streaming-findings/issues/272,streaming,2021/11,bug;invalid;sponsor disputed
62,bitbopper,0xe15f11FF2364311E0b7250AaA51A2bB4D7FBA37F,3,Creating rewardTokens without streaming depositTokens,166,https://github.com/code-423n4/2021-11-streaming-findings/issues/166,streaming,2021/11,bug;3 (High Risk);sponsor confirmed
62,bitbopper,0xe15f11FF2364311E0b7250AaA51A2bB4D7FBA37F,G,`updateStreamInternal` does not need msg.sender,167,https://github.com/code-423n4/2021-11-streaming-findings/issues/167,streaming,2021/11,bug;duplicate;1 (Low Risk)
62,bitbopper,0xe15f11FF2364311E0b7250AaA51A2bB4D7FBA37F,G,`arbitraryCall` does not need to check returned byte,168,https://github.com/code-423n4/2021-11-streaming-findings/issues/168,streaming,2021/11,bug;G (Gas Optimization)
62,bitbopper,0xe15f11FF2364311E0b7250AaA51A2bB4D7FBA37F,3,`arbitraryCall` enables `streamCreator` to remove incentive tokens before `endStream`,174,https://github.com/code-423n4/2021-11-streaming-findings/issues/174,streaming,2021/11,bug;duplicate;3 (High Risk)
62,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Inaccurate comment in `recoverTokens`,213,https://github.com/code-423n4/2021-11-streaming-findings/issues/213,streaming,2021/11,bug;1 (Low Risk);sponsor confirmed
62,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Reward token not correctly recovered,214,https://github.com/code-423n4/2021-11-streaming-findings/issues/214,streaming,2021/11,bug;3 (High Risk);sponsor confirmed
62,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Tokens can be stolen when `depositToken == rewardToken`,215,https://github.com/code-423n4/2021-11-streaming-findings/issues/215,streaming,2021/11,bug;3 (High Risk);sponsor confirmed
62,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `unstreamed` not needed,216,https://github.com/code-423n4/2021-11-streaming-findings/issues/216,streaming,2021/11,bug;G (Gas Optimization)
62,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Check `_feePercent` instead,217,https://github.com/code-423n4/2021-11-streaming-findings/issues/217,streaming,2021/11,bug;G (Gas Optimization)
62,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Unnecessary scaling,218,https://github.com/code-423n4/2021-11-streaming-findings/issues/218,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Batch transfer in `claimFees`,219,https://github.com/code-423n4/2021-11-streaming-findings/issues/219,streaming,2021/11,bug;invalid;G (Gas Optimization)
62,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Flashloan only needs to check pre/post balance for `token`,220,https://github.com/code-423n4/2021-11-streaming-findings/issues/220,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas wastage :: feePercent value checked twice,222,https://github.com/code-423n4/2021-11-streaming-findings/issues/222,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,unstreamed variable is not updated in withdraw function,224,https://github.com/code-423n4/2021-11-streaming-findings/issues/224,streaming,2021/11,bug;duplicate;2 (Med Risk)
62,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Incorrect rewards are given to users,225,https://github.com/code-423n4/2021-11-streaming-findings/issues/225,streaming,2021/11,bug;invalid;sponsor disputed
62,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,0,Emergency gov is never used,226,https://github.com/code-423n4/2021-11-streaming-findings/issues/226,streaming,2021/11,bug;0 (Non-critical)
62,cyberboy,0xdc3442769DB7D34e6468Ded0b9B2a1baa4630C99,G,Structs can be rearranged to save gas,131,https://github.com/code-423n4/2021-11-streaming-findings/issues/131,streaming,2021/11,bug;G (Gas Optimization)
62,cyberboy,0xdc3442769DB7D34e6468Ded0b9B2a1baa4630C99,3,Business logic bug in __abdicate() function - 2 Bugs,132,https://github.com/code-423n4/2021-11-streaming-findings/issues/132,streaming,2021/11,bug;3 (High Risk);disagree with severity;sponsor confirmed
62,cyberboy,0xdc3442769DB7D34e6468Ded0b9B2a1baa4630C99,2,Missing two step acceptance in emergency gov,134,https://github.com/code-423n4/2021-11-streaming-findings/issues/134,streaming,2021/11,bug;invalid;sponsor disputed
62,cyberboy,0xdc3442769DB7D34e6468Ded0b9B2a1baa4630C99,0,Uses of floating pragmas,18,https://github.com/code-423n4/2021-11-streaming-findings/issues/18,streaming,2021/11,bug;duplicate;1 (Low Risk)
62,cyberboy,0xdc3442769DB7D34e6468Ded0b9B2a1baa4630C99,0,Floating Pragma is set.,19,https://github.com/code-423n4/2021-11-streaming-findings/issues/19,streaming,2021/11,bug;1 (Low Risk)
62,cyberboy,0xdc3442769DB7D34e6468Ded0b9B2a1baa4630C99,2,Missing zero Address check ,26,https://github.com/code-423n4/2021-11-streaming-findings/issues/26,streaming,2021/11,bug;1 (Low Risk);disagree with severity
62,cyberboy,0xdc3442769DB7D34e6468Ded0b9B2a1baa4630C99,1,Division before multiple can lead to precision errors,28,https://github.com/code-423n4/2021-11-streaming-findings/issues/28,streaming,2021/11,bug;1 (Low Risk);sponsor confirmed
62,cyberboy,0xdc3442769DB7D34e6468Ded0b9B2a1baa4630C99,0,Missing NatSpec comments,32,https://github.com/code-423n4/2021-11-streaming-findings/issues/32,streaming,2021/11,bug;0 (Non-critical);sponsor acknowledged
62,cyberboy,0xdc3442769DB7D34e6468Ded0b9B2a1baa4630C99,0,Missing Emit in critical function,35,https://github.com/code-423n4/2021-11-streaming-findings/issues/35,streaming,2021/11,bug;0 (Non-critical);sponsor confirmed
62,cyberboy,0xdc3442769DB7D34e6468Ded0b9B2a1baa4630C99,G,Function can external instead of public to save gas,37,https://github.com/code-423n4/2021-11-streaming-findings/issues/37,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,cyberboy,0xdc3442769DB7D34e6468Ded0b9B2a1baa4630C99,G,Public functions can be marked as external in Stream Contract ,38,https://github.com/code-423n4/2021-11-streaming-findings/issues/38,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,cyberboy,0xdc3442769DB7D34e6468Ded0b9B2a1baa4630C99,G,Public function can be external in StreamFactory contracts,39,https://github.com/code-423n4/2021-11-streaming-findings/issues/39,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,cyberboy,0xdc3442769DB7D34e6468Ded0b9B2a1baa4630C99,G,Public function can be external in LockeERC20 contract functions.,40,https://github.com/code-423n4/2021-11-streaming-findings/issues/40,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,G,unnecessary multiplication and division,1,https://github.com/code-423n4/2021-11-streaming-findings/issues/1,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,wrong calculation at dilutedBalance,82,https://github.com/code-423n4/2021-11-streaming-findings/issues/82,streaming,2021/11,bug;invalid;sponsor disputed
62,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,113,https://github.com/code-423n4/2021-11-streaming-findings/issues/113,streaming,2021/11,bug;duplicate;1 (Low Risk)
62,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,flashLoan does not have a return statement,114,https://github.com/code-423n4/2021-11-streaming-findings/issues/114,streaming,2021/11,bug;1 (Low Risk)
62,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Unsecure Uniqueness,115,https://github.com/code-423n4/2021-11-streaming-findings/issues/115,streaming,2021/11,bug;invalid;sponsor disputed
62,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Less than 256 uints are not gas efficient,116,https://github.com/code-423n4/2021-11-streaming-findings/issues/116,streaming,2021/11,bug;invalid;G (Gas Optimization);sponsor disputed
62,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use of ecrecover is susceptible to signature malleability,117,https://github.com/code-423n4/2021-11-streaming-findings/issues/117,streaming,2021/11,bug;1 (Low Risk)
62,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Adding unchecked directive can save gas,244,https://github.com/code-423n4/2021-11-streaming-findings/issues/244,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimization on the Public Functions,247,https://github.com/code-423n4/2021-11-streaming-findings/issues/247,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Incompatibility With Rebasing/Deflationary/Inflationary tokens,252,https://github.com/code-423n4/2021-11-streaming-findings/issues/252,streaming,2021/11,bug;1 (Low Risk);sponsor acknowledged
62,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimization On The 2^256-1,255,https://github.com/code-423n4/2021-11-streaming-findings/issues/255,streaming,2021/11,bug;G (Gas Optimization)
62,egjlmn1,0x2700753985E7a922a1F9B24CFaAd9E6D0C4CE4DD,3,LockeERC20 is vulnerable to frontrun attack,55,https://github.com/code-423n4/2021-11-streaming-findings/issues/55,streaming,2021/11,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
62,egjlmn1,0x2700753985E7a922a1F9B24CFaAd9E6D0C4CE4DD,3,"An attacker can frontrun and deny user from getting his rewards,",59,https://github.com/code-423n4/2021-11-streaming-findings/issues/59,streaming,2021/11,bug;invalid;sponsor disputed
62,egjlmn1,0x2700753985E7a922a1F9B24CFaAd9E6D0C4CE4DD,3,An attacker can DOS and deny all users from rewards,60,https://github.com/code-423n4/2021-11-streaming-findings/issues/60,streaming,2021/11,bug;invalid;sponsor disputed
62,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,3,rewardTokenAmount isn't being updated.,85,https://github.com/code-423n4/2021-11-streaming-findings/issues/85,streaming,2021/11,bug;duplicate;3 (High Risk);sponsor confirmed
62,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,G,Remove redundant math to save gas in dilutedBalance(),89,https://github.com/code-423n4/2021-11-streaming-findings/issues/89,streaming,2021/11,bug;G (Gas Optimization)
62,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,G,Remove unneeded variables in fundStream to save gas,90,https://github.com/code-423n4/2021-11-streaming-findings/issues/90,streaming,2021/11,bug;invalid;G (Gas Optimization)
62,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,G,Remove unneeded code in stake() to save gas,91,https://github.com/code-423n4/2021-11-streaming-findings/issues/91,streaming,2021/11,bug;invalid;G (Gas Optimization)
62,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,G,Remove unneeded code in createIncentive() to improve gas cost,92,https://github.com/code-423n4/2021-11-streaming-findings/issues/92,streaming,2021/11,bug;invalid;G (Gas Optimization)
62,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,G,Remove unneeded variable in creatorClaimSoldTokens() to save gas,93,https://github.com/code-423n4/2021-11-streaming-findings/issues/93,streaming,2021/11,bug;G (Gas Optimization)
62,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,1,Inaccuate comment about claimFees(),94,https://github.com/code-423n4/2021-11-streaming-findings/issues/94,streaming,2021/11,bug;1 (Low Risk)
62,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,G,Change math in flashloan() optimize gas,95,https://github.com/code-423n4/2021-11-streaming-findings/issues/95,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,1,depositTokens need to have a decimals() function,41,https://github.com/code-423n4/2021-11-streaming-findings/issues/41,streaming,2021/11,bug;1 (Low Risk);sponsor confirmed
62,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Struct TokenStream remove unused variable merkleAccess,42,https://github.com/code-423n4/2021-11-streaming-findings/issues/42,streaming,2021/11,bug;G (Gas Optimization);sponsor confirmed
62,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,"Remove unused modifier/function argument ""who""",43,https://github.com/code-423n4/2021-11-streaming-findings/issues/43,streaming,2021/11,bug;duplicate;1 (Low Risk);sponsor confirmed
62,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Cache the return value from rewardPerToken(),44,https://github.com/code-423n4/2021-11-streaming-findings/issues/44,streaming,2021/11,bug;G (Gas Optimization);sponsor confirmed
62,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Stream constructor reuse the function arguments instead storage variables,45,https://github.com/code-423n4/2021-11-streaming-findings/issues/45,streaming,2021/11,bug;G (Gas Optimization)
62,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Subtraction can be done unchecked because the require statement checks for underflow,46,https://github.com/code-423n4/2021-11-streaming-findings/issues/46,streaming,2021/11,bug;G (Gas Optimization)
62,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,2,arbitraryCall() can get blocked by an attacker,47,https://github.com/code-423n4/2021-11-streaming-findings/issues/47,streaming,2021/11,bug;2 (Med Risk);sponsor acknowledged
62,gpersoon,gpersoon.eth,1,What if depositToken == rewardToken,105,https://github.com/code-423n4/2021-11-streaming-findings/issues/105,streaming,2021/11,bug;duplicate;3 (High Risk)
62,gpersoon,gpersoon.eth,3,ts.tokens sometimes calculated incorrectly,123,https://github.com/code-423n4/2021-11-streaming-findings/issues/123,streaming,2021/11,bug;3 (High Risk);sponsor confirmed
62,gpersoon,gpersoon.eth,1,prevent rounding error,124,https://github.com/code-423n4/2021-11-streaming-findings/issues/124,streaming,2021/11,bug;1 (Low Risk)
62,gpersoon,gpersoon.eth,G,"parameter ""who"" not used",125,https://github.com/code-423n4/2021-11-streaming-findings/issues/125,streaming,2021/11,bug;1 (Low Risk)
62,gpersoon,gpersoon.eth,2,unstreamed not updated in withdraw(),126,https://github.com/code-423n4/2021-11-streaming-findings/issues/126,streaming,2021/11,bug;duplicate;2 (Med Risk)
62,gpersoon,gpersoon.eth,G,Use local variable in fundStream(),127,https://github.com/code-423n4/2021-11-streaming-findings/issues/127,streaming,2021/11,bug;G (Gas Optimization)
62,gpersoon,gpersoon.eth,3,Can't claim last flashloan fees,128,https://github.com/code-423n4/2021-11-streaming-findings/issues/128,streaming,2021/11,bug;duplicate;3 (High Risk)
62,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Move common logic out of if block,181,https://github.com/code-423n4/2021-11-streaming-findings/issues/181,streaming,2021/11,bug;G (Gas Optimization)
62,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use minimal proxy,183,https://github.com/code-423n4/2021-11-streaming-findings/issues/183,streaming,2021/11,bug;G (Gas Optimization)
62,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unnecessary flashloan checks,197,https://github.com/code-423n4/2021-11-streaming-findings/issues/197,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,`arbitraryCall` allow inherited governance to steal incentives,200,https://github.com/code-423n4/2021-11-streaming-findings/issues/200,streaming,2021/11,bug;duplicate;3 (High Risk)
62,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Incentives paid to creator instead of depositor,201,https://github.com/code-423n4/2021-11-streaming-findings/issues/201,streaming,2021/11,bug;0 (Non-critical);disagree with severity;sponsor confirmed
62,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Empty else block,202,https://github.com/code-423n4/2021-11-streaming-findings/issues/202,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Empty else block in `withdraw`,203,https://github.com/code-423n4/2021-11-streaming-findings/issues/203,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Token owner cannot claim rewardToken if they are not the original depositor,204,https://github.com/code-423n4/2021-11-streaming-findings/issues/204,streaming,2021/11,bug;1 (Low Risk);disagree with severity;sponsor confirmed
62,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,`recoverTokens` did not consider depositTokenFlashloanFeeAmount,206,https://github.com/code-423n4/2021-11-streaming-findings/issues/206,streaming,2021/11,bug;duplicate;3 (High Risk)
62,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Broken logic if rewardToken == depositToken,208,https://github.com/code-423n4/2021-11-streaming-findings/issues/208,streaming,2021/11,bug;duplicate;3 (High Risk)
62,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,2,Loss of precision causing incorrect flashloan & creator fee calculation,221,https://github.com/code-423n4/2021-11-streaming-findings/issues/221,streaming,2021/11,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
62,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,check for deposit token and reward token are not same,223,https://github.com/code-423n4/2021-11-streaming-findings/issues/223,streaming,2021/11,bug;duplicate;3 (High Risk)
62,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,Unused modifier parameter,227,https://github.com/code-423n4/2021-11-streaming-findings/issues/227,streaming,2021/11,bug;duplicate;1 (Low Risk)
62,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,3,DOS while dealing with erc20 when value(i.e amount*decimals)  is high but less than type(uint112).max,228,https://github.com/code-423n4/2021-11-streaming-findings/issues/228,streaming,2021/11,bug;3 (High Risk);sponsor confirmed
62,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,3,governor can steal funds of user from all created streams using `arbitraryCall`,229,https://github.com/code-423n4/2021-11-streaming-findings/issues/229,streaming,2021/11,bug;duplicate;3 (High Risk)
62,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,Storage variable unstreamed can be artificially inflated,118,https://github.com/code-423n4/2021-11-streaming-findings/issues/118,streaming,2021/11,bug;2 (Med Risk);sponsor confirmed
62,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,G,claimReward unnessary logic,119,https://github.com/code-423n4/2021-11-streaming-findings/issues/119,streaming,2021/11,bug;G (Gas Optimization)
62,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,3,recoverTokens doesn't account for depositTokenFlashloanFeeAmount,120,https://github.com/code-423n4/2021-11-streaming-findings/issues/120,streaming,2021/11,bug;duplicate;3 (High Risk);sponsor confirmed
62,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,recoverTokens doesn't work when isSale is true,121,https://github.com/code-423n4/2021-11-streaming-findings/issues/121,streaming,2021/11,bug;3 (High Risk)
62,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,recoverTokens doesn't accommodate two different users that need saved tokens,122,https://github.com/code-423n4/2021-11-streaming-findings/issues/122,streaming,2021/11,bug;invalid;sponsor disputed
62,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,1,In-consistency in feePercent check in StreamFactory.updateFeeParams() and Stream.constructor(),269,https://github.com/code-423n4/2021-11-streaming-findings/issues/269,streaming,2021/11,bug;duplicate;1 (Low Risk)
62,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,global unstreamed value is not updated after stream depositor withdraws an amount,270,https://github.com/code-423n4/2021-11-streaming-findings/issues/270,streaming,2021/11,bug;duplicate;2 (Med Risk);sponsor confirmed
62,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,1,balance(dust) rewardsTokens may be unclaimable after endRewardLock,271,https://github.com/code-423n4/2021-11-streaming-findings/issues/271,streaming,2021/11,bug;1 (Low Risk);sponsor acknowledged
62,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Flash loan mechanics do not implement any standard,130,https://github.com/code-423n4/2021-11-streaming-findings/issues/130,streaming,2021/11,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
62,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,Stream.recoverTokens doesn't account for sale case,133,https://github.com/code-423n4/2021-11-streaming-findings/issues/133,streaming,2021/11,bug;duplicate;3 (High Risk)
62,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,"depositTokenFlashloanFeeAmount can be stolen, freezing deposit funds",149,https://github.com/code-423n4/2021-11-streaming-findings/issues/149,streaming,2021/11,bug;duplicate;3 (High Risk);sponsor confirmed
62,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,Any arbitraryCall gathered airdrop can be stolen with recoverTokens,162,https://github.com/code-423n4/2021-11-streaming-findings/issues/162,streaming,2021/11,bug;2 (Med Risk);sponsor disputed
62,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,Fund freezing is possible as claimed reward tokens aren't accounted for by recoverTokens,165,https://github.com/code-423n4/2021-11-streaming-findings/issues/165,streaming,2021/11,bug;duplicate;3 (High Risk)
62,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Unlocked pragma is used in LockeERC20,61,https://github.com/code-423n4/2021-11-streaming-findings/issues/61,streaming,2021/11,bug;duplicate;1 (Low Risk)
62,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Stream.updateStreamInternal performs extra storage reads,67,https://github.com/code-423n4/2021-11-streaming-findings/issues/67,streaming,2021/11,bug;G (Gas Optimization)
62,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Missing zero-address checks on LockeERC20 and Stream construction,68,https://github.com/code-423n4/2021-11-streaming-findings/issues/68,streaming,2021/11,bug;1 (Low Risk)
62,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Stream.withdraw amount subtraction can be unchecked,69,https://github.com/code-423n4/2021-11-streaming-findings/issues/69,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Stream.claimReward can be simplified,70,https://github.com/code-423n4/2021-11-streaming-findings/issues/70,streaming,2021/11,bug;G (Gas Optimization)
62,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,2,Governed.sol: setPendingGov() should use the emergency_governed modifier.,72,https://github.com/code-423n4/2021-11-streaming-findings/issues/72,streaming,2021/11,bug;0 (Non-critical);2 (Med Risk);sponsor disputed
62,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,2,Stream.sol: possible tx.origin attack vector via recoverTokens(),73,https://github.com/code-423n4/2021-11-streaming-findings/issues/73,streaming,2021/11,bug;1 (Low Risk);sponsor disputed
62,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,2,LockeERC20.sol: Frontrun attack on approve(),74,https://github.com/code-423n4/2021-11-streaming-findings/issues/74,streaming,2021/11,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
62,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,constructor should guard against zero addresses,20,https://github.com/code-423n4/2021-11-streaming-findings/issues/20,streaming,2021/11,bug;1 (Low Risk);disagree with severity
62,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Guard against 0 as the steamId in constructor ,21,https://github.com/code-423n4/2021-11-streaming-findings/issues/21,streaming,2021/11,bug;invalid;sponsor disputed
62,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,"Transfer doesn't check if msg.sender is not the same as the ""to"" address",22,https://github.com/code-423n4/2021-11-streaming-findings/issues/22,streaming,2021/11,bug;invalid;3 (High Risk);sponsor disputed
62,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,"transferFrom function doesn't check if ""from"" and ""to"" are the same address",23,https://github.com/code-423n4/2021-11-streaming-findings/issues/23,streaming,2021/11,bug;invalid;sponsor disputed
62,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,_mint() function doesn't mint any erc20 tokens ,24,https://github.com/code-423n4/2021-11-streaming-findings/issues/24,streaming,2021/11,bug;invalid;sponsor disputed
62,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,The _burn function doesn't actually burn any tokens ,25,https://github.com/code-423n4/2021-11-streaming-findings/issues/25,streaming,2021/11,bug;invalid;sponsor disputed
62,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,stream creator can steal flashloan fee by calling `recoverTokens`,129,https://github.com/code-423n4/2021-11-streaming-findings/issues/129,streaming,2021/11,bug;duplicate;3 (High Risk)
62,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,inconsistency between `ts.amount` and `ts.virtualBalance` stop users withdrawing full amount after startTime.,146,https://github.com/code-423n4/2021-11-streaming-findings/issues/146,streaming,2021/11,bug;invalid;sponsor disputed
62,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,`rewardPerToken()` reverts before start time.,147,https://github.com/code-423n4/2021-11-streaming-findings/issues/147,streaming,2021/11,bug;1 (Low Risk);sponsor confirmed
62,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Upgrade pragma to at least 0.8.4,103,https://github.com/code-423n4/2021-11-streaming-findings/issues/103,streaming,2021/11,bug;duplicate;1 (Low Risk);sponsor disputed
62,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Caching variables,104,https://github.com/code-423n4/2021-11-streaming-findings/issues/104,streaming,2021/11,bug;G (Gas Optimization)
62,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Avoid fee ,145,https://github.com/code-423n4/2021-11-streaming-findings/issues/145,streaming,2021/11,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
62,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Avoid fee on flashloan,148,https://github.com/code-423n4/2021-11-streaming-findings/issues/148,streaming,2021/11,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
62,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Gov can remove himself,163,https://github.com/code-423n4/2021-11-streaming-findings/issues/163,streaming,2021/11,bug;invalid;sponsor disputed
62,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Variable  is never used,164,https://github.com/code-423n4/2021-11-streaming-findings/issues/164,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,3,ArbitraryCall() allows attackers to steal ERC20 tokens from users  wallets,242,https://github.com/code-423n4/2021-11-streaming-findings/issues/242,streaming,2021/11,bug;duplicate;3 (High Risk)
62,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Stream methods could be set external instead public,83,https://github.com/code-423n4/2021-11-streaming-findings/issues/83,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Use one require instead of  several,96,https://github.com/code-423n4/2021-11-streaming-findings/issues/96,streaming,2021/11,bug;G (Gas Optimization);sponsor acknowledged
62,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,> 0 can be replaced with != 0 for gas optimisation,97,https://github.com/code-423n4/2021-11-streaming-findings/issues/97,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Unnecessary call to lastApplicableTime() in claimReward(),100,https://github.com/code-423n4/2021-11-streaming-findings/issues/100,streaming,2021/11,bug;G (Gas Optimization);sponsor confirmed
62,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Duplicate modifier on exit function,101,https://github.com/code-423n4/2021-11-streaming-findings/issues/101,streaming,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
62,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,Wrong comment in claimReward,102,https://github.com/code-423n4/2021-11-streaming-findings/issues/102,streaming,2021/11,bug;1 (Low Risk)
62,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Emergency Governed is not actually used and can be removed,240,https://github.com/code-423n4/2021-11-streaming-findings/issues/240,streaming,2021/11,bug;duplicate;0 (Non-critical)
62,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,Inconsistent protocol fee limit check,253,https://github.com/code-423n4/2021-11-streaming-findings/issues/253,streaming,2021/11,bug;duplicate;1 (Low Risk)
62,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Flashloan fees of deposit token can be claimed by stream creator,86,https://github.com/code-423n4/2021-11-streaming-findings/issues/86,streaming,2021/11,bug;duplicate;3 (High Risk)
62,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Can't rescue reward tokens if rewards have been claimed,87,https://github.com/code-423n4/2021-11-streaming-findings/issues/87,streaming,2021/11,bug;duplicate;3 (High Risk)
62,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Can't rescue excess depositToken if stream is a sale and deposit tokens have been claimed,88,https://github.com/code-423n4/2021-11-streaming-findings/issues/88,streaming,2021/11,bug;duplicate;3 (High Risk)
62,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,Global unstreamed variable not kept up to date,98,https://github.com/code-423n4/2021-11-streaming-findings/issues/98,streaming,2021/11,bug;1 (Low Risk)
62,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,No need to temporarily save old values when updating settings,99,https://github.com/code-423n4/2021-11-streaming-findings/issues/99,streaming,2021/11,bug;G (Gas Optimization)
62,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Constructor Does Not Check for Zero Addresses,75,https://github.com/code-423n4/2021-11-streaming-findings/issues/75,streaming,2021/11,bug;duplicate;1 (Low Risk)
62,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,2,function __abdicate() Remove Governor is Useless Because pendingGov Can Become Gov Again,76,https://github.com/code-423n4/2021-11-streaming-findings/issues/76,streaming,2021/11,bug;duplicate;3 (High Risk);disagree with severity;sponsor confirmed
62,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,creatorClaimSoldTokens() Does Not Check Destination Address,77,https://github.com/code-423n4/2021-11-streaming-findings/issues/77,streaming,2021/11,bug;0 (Non-critical);sponsor disputed
62,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,TODOs List May Leak Important Info & Errors,78,https://github.com/code-423n4/2021-11-streaming-findings/issues/78,streaming,2021/11,bug;1 (Low Risk);disagree with severity
62,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,createIncentive() Remove Unnecessary Validation to Save Gas,79,https://github.com/code-423n4/2021-11-streaming-findings/issues/79,streaming,2021/11,bug;invalid;G (Gas Optimization)
62,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Remove Unused Input Parameter in modifier updateStream to Save Some Gas,80,https://github.com/code-423n4/2021-11-streaming-findings/issues/80,streaming,2021/11,bug;duplicate;1 (Low Risk)
62,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,arbitraryCall() Unable to Guarantee Incentives Tokens Not Change,81,https://github.com/code-423n4/2021-11-streaming-findings/issues/81,streaming,2021/11,bug;duplicate;3 (High Risk)
62,mtz,0x602411A87ff854A9565e72A88a53c8b17dA3509d,2,Incorrect Validation of feePercent,246,https://github.com/code-423n4/2021-11-streaming-findings/issues/246,streaming,2021/11,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
62,mtz,0x602411A87ff854A9565e72A88a53c8b17dA3509d,0,Use specific solidity version,254,https://github.com/code-423n4/2021-11-streaming-findings/issues/254,streaming,2021/11,bug;duplicate;1 (Low Risk)
62,mtz,0x602411A87ff854A9565e72A88a53c8b17dA3509d,G,merkleAccess is unnecessary,257,https://github.com/code-423n4/2021-11-streaming-findings/issues/257,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,neslinesli93,0x288CB7483ea3e4F44B69996DC2f758236001b41A,3,Inflate staking using flash loans,17,https://github.com/code-423n4/2021-11-streaming-findings/issues/17,streaming,2021/11,bug;invalid;sponsor disputed
62,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,1,"Missing address(0) check, can crippled the governed functions",135,https://github.com/code-423n4/2021-11-streaming-findings/issues/135,streaming,2021/11,bug;0 (Non-critical);sponsor acknowledged
62,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,2,"Missing address(0) check can, lead to user transfering token to the burn address, and doesnt reduce the total supply",136,https://github.com/code-423n4/2021-11-streaming-findings/issues/136,streaming,2021/11,bug;1 (Low Risk);sponsor disputed
62,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,G,[Gas optimization] remove command less else in an if else,137,https://github.com/code-423n4/2021-11-streaming-findings/issues/137,streaming,2021/11,bug;G (Gas Optimization);sponsor confirmed
62,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,3,creatorClaimSoldTokens will be unavailable when the `depositTokenAmount` doesnt match with the actual `deposittoken` balance,138,https://github.com/code-423n4/2021-11-streaming-findings/issues/138,streaming,2021/11,bug;invalid;sponsor disputed
62,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,3,arbitraryCall() can be used by the govern to take the funds through giving unlimited approval,139,https://github.com/code-423n4/2021-11-streaming-findings/issues/139,streaming,2021/11,bug;invalid;3 (High Risk)
62,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,2,Missing contract check on `rewardtoken`,140,https://github.com/code-423n4/2021-11-streaming-findings/issues/140,streaming,2021/11,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
62,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,3,arbitraryCall() can be used by the govern to take the funds through giving unlimited approval by frontrunning createIncentives call,141,https://github.com/code-423n4/2021-11-streaming-findings/issues/141,streaming,2021/11,bug;duplicate;3 (High Risk)
62,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`LockeERC20.transfer()` and `LockeERC20.transferFrom()` emit `Transfer` events when the transferred amount is zero,150,https://github.com/code-423n4/2021-11-streaming-findings/issues/150,streaming,2021/11,bug;0 (Non-critical);sponsor disputed
62,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`LockeERC20.transferFrom()` emits `Transfer` events when `from` equals `to`,151,https://github.com/code-423n4/2021-11-streaming-findings/issues/151,streaming,2021/11,bug;0 (Non-critical);disagree with severity;sponsor disputed
62,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,`LockeERC20.transferFrom()` requires `msg.sender` to have allowence even if it equals `from`,152,https://github.com/code-423n4/2021-11-streaming-findings/issues/152,streaming,2021/11,bug;invalid;sponsor disputed
62,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`LockeERC20.approve()` and `LockeERC20.permit()` emit `Approval` events when the allowence hasn't changed,153,https://github.com/code-423n4/2021-11-streaming-findings/issues/153,streaming,2021/11,bug;0 (Non-critical);disagree with severity;sponsor disputed
62,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`LockeERC20._mint()` emits `Transfer` events when the minted amount is zero,154,https://github.com/code-423n4/2021-11-streaming-findings/issues/154,streaming,2021/11,bug;invalid;sponsor disputed
62,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`LockeERC20._burn()` emits `Transfer` events when the burned amount is zero,155,https://github.com/code-423n4/2021-11-streaming-findings/issues/155,streaming,2021/11,bug;invalid;disagree with severity;sponsor disputed
62,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unused import in `LockeERC20.sol`,156,https://github.com/code-423n4/2021-11-streaming-findings/issues/156,streaming,2021/11,bug;invalid;G (Gas Optimization);sponsor disputed
62,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`Governed.setPendingGov()` emits `NewPendingGov` events when the pending governor hasn't changed,157,https://github.com/code-423n4/2021-11-streaming-findings/issues/157,streaming,2021/11,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
62,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`Governed.acceptGov()` emits `NewGov` events when the governor hasn't changed,158,https://github.com/code-423n4/2021-11-streaming-findings/issues/158,streaming,2021/11,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
62,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`Governed`'s constructor doesn't emit an initial `NewGov` event,159,https://github.com/code-423n4/2021-11-streaming-findings/issues/159,streaming,2021/11,bug;0 (Non-critical);sponsor acknowledged
62,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,`Governed.__abdicate()` can be called by mistake,160,https://github.com/code-423n4/2021-11-streaming-findings/issues/160,streaming,2021/11,bug;invalid;sponsor disputed
62,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,`Governed` doesn't implement the `IGoverned` interface,161,https://github.com/code-423n4/2021-11-streaming-findings/issues/161,streaming,2021/11,bug;0 (Non-critical);disagree with severity
62,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Validations of zero address,169,https://github.com/code-423n4/2021-11-streaming-findings/issues/169,streaming,2021/11,bug;duplicate;1 (Low Risk);sponsor disputed
62,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,who in updateStreamInternal,170,https://github.com/code-423n4/2021-11-streaming-findings/issues/170,streaming,2021/11,bug;duplicate;1 (Low Risk);disagree with severity
62,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Open TODOs in Codebase,171,https://github.com/code-423n4/2021-11-streaming-findings/issues/171,streaming,2021/11,bug;duplicate;1 (Low Risk)
62,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,depositToken != rewardToken,172,https://github.com/code-423n4/2021-11-streaming-findings/issues/172,streaming,2021/11,bug;duplicate;3 (High Risk)
62,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Assigned operations to constant variables,173,https://github.com/code-423n4/2021-11-streaming-findings/issues/173,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,eliminate multiplication in feeAmt calculation,175,https://github.com/code-423n4/2021-11-streaming-findings/issues/175,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unchecked math operations,176,https://github.com/code-423n4/2021-11-streaming-findings/issues/176,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,exit and withdraw both performs updateStream,177,https://github.com/code-423n4/2021-11-streaming-findings/issues/177,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,empty else,178,https://github.com/code-423n4/2021-11-streaming-findings/issues/178,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Eliminate amt in fundStream,179,https://github.com/code-423n4/2021-11-streaming-findings/issues/179,streaming,2021/11,bug;G (Gas Optimization)
62,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,reset depositTokenAmount in creatorClaimSoldTokens ,268,https://github.com/code-423n4/2021-11-streaming-findings/issues/268,streaming,2021/11,bug;duplicate;3 (High Risk)
62,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,3,ArbitraryCall function can be used to steal incentive token,106,https://github.com/code-423n4/2021-11-streaming-findings/issues/106,streaming,2021/11,bug;duplicate;3 (High Risk)
62,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,3,ArbitraryCall function can be used to steal incentive token,107,https://github.com/code-423n4/2021-11-streaming-findings/issues/107,streaming,2021/11,bug;duplicate;3 (High Risk);sponsor confirmed
62,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,Public functions can be declared external,108,https://github.com/code-423n4/2021-11-streaming-findings/issues/108,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,3,If the stream is a sale recover tokens function won't work.,180,https://github.com/code-423n4/2021-11-streaming-findings/issues/180,streaming,2021/11,bug;duplicate;3 (High Risk)
62,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,3,Recover tokens function will become unusable with reward tokens if they are withdrawn first.,212,https://github.com/code-423n4/2021-11-streaming-findings/issues/212,streaming,2021/11,bug;duplicate;3 (High Risk)
62,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,> 0 can be replaced with != 0 for gas optimisation,49,https://github.com/code-423n4/2021-11-streaming-findings/issues/49,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,Flashloan is given for 1 token but checks balances for both reward and deposit token,50,https://github.com/code-423n4/2021-11-streaming-findings/issues/50,streaming,2021/11,bug;G (Gas Optimization);sponsor confirmed
62,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,Name and symbol in ERC20 contract don't change and could be immutable,51,https://github.com/code-423n4/2021-11-streaming-findings/issues/51,streaming,2021/11,bug;duplicate;G (Gas Optimization);sponsor disputed
62,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,0,Unused function parameter,84,https://github.com/code-423n4/2021-11-streaming-findings/issues/84,streaming,2021/11,bug;duplicate;1 (Low Risk)
62,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Use `!= 0` instead of `> 0` for unsigned integer types,71,https://github.com/code-423n4/2021-11-streaming-findings/issues/71,streaming,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
62,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with empty message,10,https://github.com/code-423n4/2021-11-streaming-findings/issues/10,streaming,2021/11,bug;invalid;sponsor disputed
62,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with not comprehensive message,11,https://github.com/code-423n4/2021-11-streaming-findings/issues/11,streaming,2021/11,bug;invalid;1 (Low Risk);sponsor disputed
62,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Must approve 0 first,12,https://github.com/code-423n4/2021-11-streaming-findings/issues/12,streaming,2021/11,bug;invalid;sponsor disputed
62,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove of openZeppelin is deprecated,13,https://github.com/code-423n4/2021-11-streaming-findings/issues/13,streaming,2021/11,bug;invalid;1 (Low Risk);sponsor disputed
62,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Open TODOs,14,https://github.com/code-423n4/2021-11-streaming-findings/issues/14,streaming,2021/11,bug;duplicate;1 (Low Risk);sponsor disputed
62,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Solidity compiler versions mismatch,15,https://github.com/code-423n4/2021-11-streaming-findings/issues/15,streaming,2021/11,bug;duplicate;1 (Low Risk)
62,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Use safe math for solidity version <8,16,https://github.com/code-423n4/2021-11-streaming-findings/issues/16,streaming,2021/11,bug;invalid;sponsor disputed
62,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused imports,2,https://github.com/code-423n4/2021-11-streaming-findings/issues/2,streaming,2021/11,bug;invalid;disagree with severity
62,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use bytes32 instead of string to save gas whenever possible,3,https://github.com/code-423n4/2021-11-streaming-findings/issues/3,streaming,2021/11,bug;invalid;sponsor disputed
62,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused state variables,4,https://github.com/code-423n4/2021-11-streaming-findings/issues/4,streaming,2021/11,bug;invalid;sponsor disputed
62,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused declared local variables,5,https://github.com/code-423n4/2021-11-streaming-findings/issues/5,streaming,2021/11,bug;invalid;sponsor disputed
62,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,6,https://github.com/code-423n4/2021-11-streaming-findings/issues/6,streaming,2021/11,bug;invalid;sponsor disputed
62,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Internal functions to private,7,https://github.com/code-423n4/2021-11-streaming-findings/issues/7,streaming,2021/11,bug;G (Gas Optimization)
62,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,8,https://github.com/code-423n4/2021-11-streaming-findings/issues/8,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,9,https://github.com/code-423n4/2021-11-streaming-findings/issues/9,streaming,2021/11,bug;duplicate;G (Gas Optimization);sponsor disputed
62,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,1,user can initialize stream where the depositToken and the rewardToken are the same,111,https://github.com/code-423n4/2021-11-streaming-findings/issues/111,streaming,2021/11,bug;duplicate;3 (High Risk)
62,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,1,Governance has the ability to withdraw tokens the stream doesn't know about,112,https://github.com/code-423n4/2021-11-streaming-findings/issues/112,streaming,2021/11,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
62,ScopeLift,scopelift.eth,0,Locke.t.sol - duplicate test,207,https://github.com/code-423n4/2021-11-streaming-findings/issues/207,streaming,2021/11,bug;invalid
62,ScopeLift,scopelift.eth,3,Locke.sol:Stream - `arbitraryCall` can be used to drain incentive tokens,209,https://github.com/code-423n4/2021-11-streaming-findings/issues/209,streaming,2021/11,bug;duplicate;3 (High Risk)
62,ScopeLift,scopelift.eth,2,Locke.sol:Stream - possible DOS on `arbitraryCall`,210,https://github.com/code-423n4/2021-11-streaming-findings/issues/210,streaming,2021/11,bug;duplicate;2 (Med Risk)
62,ScopeLift,scopelift.eth,3,Locke.sol:Stream - `recoverTokens` can bork `depositToken` balance,211,https://github.com/code-423n4/2021-11-streaming-findings/issues/211,streaming,2021/11,bug;duplicate;3 (High Risk)
62,toastedsteaksandwich,0xD8f6877aec57C3d70F458C54a1382dDc90522E7D,1,Token allowances vulnerable to front-running,193,https://github.com/code-423n4/2021-11-streaming-findings/issues/193,streaming,2021/11,bug;duplicate;2 (Med Risk);sponsor acknowledged
62,toastedsteaksandwich,0xD8f6877aec57C3d70F458C54a1382dDc90522E7D,G,Unneeded checks in the flashloan function,196,https://github.com/code-423n4/2021-11-streaming-findings/issues/196,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,toastedsteaksandwich,0xD8f6877aec57C3d70F458C54a1382dDc90522E7D,1,No minimum size for flashloan leads to small feeless flashloans ,198,https://github.com/code-423n4/2021-11-streaming-findings/issues/198,streaming,2021/11,bug;duplicate;1 (Low Risk)
62,toastedsteaksandwich,0xD8f6877aec57C3d70F458C54a1382dDc90522E7D,3,Possible incentive theft through the arbitraryCall() function,199,https://github.com/code-423n4/2021-11-streaming-findings/issues/199,streaming,2021/11,bug;3 (High Risk);sponsor confirmed
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Race condition on ERC20 approval,230,https://github.com/code-423n4/2021-11-streaming-findings/issues/230,streaming,2021/11,bug;duplicate;2 (Med Risk)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use immutable variables can save gas,231,https://github.com/code-423n4/2021-11-streaming-findings/issues/231,streaming,2021/11,bug;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache and read storage variables from the stack can save gas,232,https://github.com/code-423n4/2021-11-streaming-findings/issues/232,streaming,2021/11,bug;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unnecessary variables can make the code simpler and save some gas,233,https://github.com/code-423n4/2021-11-streaming-findings/issues/233,streaming,2021/11,bug;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Implementations should inherit their interface,234,https://github.com/code-423n4/2021-11-streaming-findings/issues/234,streaming,2021/11,bug;0 (Non-critical)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Slot packing increases runtime gas consumption due to masking,235,https://github.com/code-423n4/2021-11-streaming-findings/issues/235,streaming,2021/11,bug;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Constructors should not have visibility,236,https://github.com/code-423n4/2021-11-streaming-findings/issues/236,streaming,2021/11,bug;0 (Non-critical)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`ts.tokens` can potentially be reduced more than expected,237,https://github.com/code-423n4/2021-11-streaming-findings/issues/237,streaming,2021/11,bug;duplicate;3 (High Risk)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,238,https://github.com/code-423n4/2021-11-streaming-findings/issues/238,streaming,2021/11,bug;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`LockeERC20.sol#toString()` Implementation can be simpler and save some gas,239,https://github.com/code-423n4/2021-11-streaming-findings/issues/239,streaming,2021/11,bug;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"Wrong calculation of excess depositToken allows stream creator to retrieve `depositTokenFlashloanFeeAmount`, which may cause fund loss to users",241,https://github.com/code-423n4/2021-11-streaming-findings/issues/241,streaming,2021/11,bug;3 (High Risk);sponsor confirmed
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Insufficient input validation,243,https://github.com/code-423n4/2021-11-streaming-findings/issues/243,streaming,2021/11,bug;0 (Non-critical)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary storage reads can save gas,245,https://github.com/code-423n4/2021-11-streaming-findings/issues/245,streaming,2021/11,bug;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`10**6` can be changed to `1e6` and save some gas,248,https://github.com/code-423n4/2021-11-streaming-findings/issues/248,streaming,2021/11,bug;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Inconsistent check of token balance,249,https://github.com/code-423n4/2021-11-streaming-findings/issues/249,streaming,2021/11,bug;0 (Non-critical);sponsor confirmed
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Redundant code,250,https://github.com/code-423n4/2021-11-streaming-findings/issues/250,streaming,2021/11,bug;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Public variable `unstreamed` can be smaller than ∑ts.tokens due to `unstreamed` not being updated in `withdraw()`,251,https://github.com/code-423n4/2021-11-streaming-findings/issues/251,streaming,2021/11,bug;duplicate;2 (Med Risk)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary `updateStream()` can save gas,256,https://github.com/code-423n4/2021-11-streaming-findings/issues/256,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Improper implementation of `arbitraryCall()` allows protocol gov to steal funds from users' wallets,258,https://github.com/code-423n4/2021-11-streaming-findings/issues/258,streaming,2021/11,bug;3 (High Risk);sponsor confirmed
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Stream#claimReward()` storage writes and reads of `ts.rewards` can be combined into one,259,https://github.com/code-423n4/2021-11-streaming-findings/issues/259,streaming,2021/11,bug;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code Style: public functions not used by current contract should be external,260,https://github.com/code-423n4/2021-11-streaming-findings/issues/260,streaming,2021/11,bug;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`* 10 / 10000` can be simpler and save some gas,261,https://github.com/code-423n4/2021-11-streaming-findings/issues/261,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary external calls can save gas,262,https://github.com/code-423n4/2021-11-streaming-findings/issues/262,streaming,2021/11,bug;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`++currStreamId` is more gas efficient than `currStreamId += 1`,263,https://github.com/code-423n4/2021-11-streaming-findings/issues/263,streaming,2021/11,bug;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`++i` is more efficient than `i++`,264,https://github.com/code-423n4/2021-11-streaming-findings/issues/264,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unnecessary function can make the code simpler and save some gas,265,https://github.com/code-423n4/2021-11-streaming-findings/issues/265,streaming,2021/11,bug;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Changing function visibility from public to external can save gas,266,https://github.com/code-423n4/2021-11-streaming-findings/issues/266,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Declaring unnecessary immutable variables as constant can save gas,267,https://github.com/code-423n4/2021-11-streaming-findings/issues/267,streaming,2021/11,bug;duplicate;G (Gas Optimization)
62,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,G,Unused modifier,109,https://github.com/code-423n4/2021-11-streaming-findings/issues/109,streaming,2021/11,bug;duplicate;0 (Non-critical)
62,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,0,LockeERC20 name is not implemented as comment imply,110,https://github.com/code-423n4/2021-11-streaming-findings/issues/110,streaming,2021/11,bug;1 (Low Risk);sponsor confirmed
62,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,G,Unused argument in updateStream,27,https://github.com/code-423n4/2021-11-streaming-findings/issues/27,streaming,2021/11,bug;duplicate;1 (Low Risk);sponsor confirmed
62,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,G,Typos,30,https://github.com/code-423n4/2021-11-streaming-findings/issues/30,streaming,2021/11,bug;0 (Non-critical);disagree with severity;sponsor confirmed
62,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,1,Governance contract can frontrun createIncentive and transfer incentive from the contract to other address,48,https://github.com/code-423n4/2021-11-streaming-findings/issues/48,streaming,2021/11,bug;duplicate;3 (High Risk);disagree with severity;sponsor confirmed
62,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Use existing memory version of state variables (Locke.sol),142,https://github.com/code-423n4/2021-11-streaming-findings/issues/142,streaming,2021/11,bug;G (Gas Optimization)
62,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,"""> 0"" is less efficient than ""!= 0"" for unsigned integers",143,https://github.com/code-423n4/2021-11-streaming-findings/issues/143,streaming,2021/11,bug;G (Gas Optimization)
62,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused local variable in arbitraryCall (Locke.sol),144,https://github.com/code-423n4/2021-11-streaming-findings/issues/144,streaming,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Setters of `UnlockProtocolGovernor.sol` can be implemented more efficiently,101,https://github.com/code-423n4/2021-11-unlock-findings/issues/101,unlock,2021/11,bug;G (Gas Optimization)
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,"`Unlock.sol#addLockTemplate` doesn't check, if the given version is implemented and can be used to update implementations",102,https://github.com/code-423n4/2021-11-unlock-findings/issues/102,unlock,2021/11,bug;duplicate;1 (Low Risk);sponsor acknowledged
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Cache length at for loop to save gas,103,https://github.com/code-423n4/2021-11-unlock-findings/issues/103,unlock,2021/11,bug;G (Gas Optimization)
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For uint `> 0` can be replaced with ` != 0` for gas optimisation,104,https://github.com/code-423n4/2021-11-unlock-findings/issues/104,unlock,2021/11,bug;invalid
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,`MixinTransfer.sol#shareKey` charges extra when `timePlusFee >= timeRemaining`.,106,https://github.com/code-423n4/2021-11-unlock-findings/issues/106,unlock,2021/11,bug;duplicate;2 (Med Risk);sponsor acknowledged
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,`MixinLockCore.sol#setEventHooks` can be used to revert refunds,107,https://github.com/code-423n4/2021-11-unlock-findings/issues/107,unlock,2021/11,bug;invalid
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,`MixinLockCore.sol#approveBeneficiary` would be better with `safeApprove`,108,https://github.com/code-423n4/2021-11-unlock-findings/issues/108,unlock,2021/11,bug;duplicate;1 (Low Risk);sponsor acknowledged
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`MixinGrantKeys.sol` apply requiere statements earlier,110,https://github.com/code-423n4/2021-11-unlock-findings/issues/110,unlock,2021/11,bug;G (Gas Optimization)
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Use unchecked operation to save gas,111,https://github.com/code-423n4/2021-11-unlock-findings/issues/111,unlock,2021/11,bug;G (Gas Optimization)
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`maxTokens` at `Unlock.sol` does not have to be initialized with 0.,112,https://github.com/code-423n4/2021-11-unlock-findings/issues/112,unlock,2021/11,bug;invalid
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`Unlock.sol#RecordKeyPurchases` can be implemented cheaper,114,https://github.com/code-423n4/2021-11-unlock-findings/issues/114,unlock,2021/11,bug;G (Gas Optimization)
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`== true` doesn't bring anything,115,https://github.com/code-423n4/2021-11-unlock-findings/issues/115,unlock,2021/11,bug;0 (Non-critical)
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,4 variables are cached and used only once at `Unlock.sol#upgradeLock`,116,https://github.com/code-423n4/2021-11-unlock-findings/issues/116,unlock,2021/11,bug;G (Gas Optimization)
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,`ERC20` return values not checked (funds can be stolen from lock),92,https://github.com/code-423n4/2021-11-unlock-findings/issues/92,unlock,2021/11,bug;duplicate;1 (Low Risk)
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,"`updateRefundPenalty` makes global updates, which allows scams",93,https://github.com/code-423n4/2021-11-unlock-findings/issues/93,unlock,2021/11,bug;invalid
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,`keyPrice` is global and change on `keyPrice` can damage `lockManager` or `keyOwner`,95,https://github.com/code-423n4/2021-11-unlock-findings/issues/95,unlock,2021/11,bug;duplicate;2 (Med Risk);sponsor acknowledged
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,`freeTrialLength` is used as full refund period,96,https://github.com/code-423n4/2021-11-unlock-findings/issues/96,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,`expireAndRefundFor` allow arbitrary behaviour from Lock Manager rather than refund,97,https://github.com/code-423n4/2021-11-unlock-findings/issues/97,unlock,2021/11,bug;invalid
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`UnlockUtils.sol#address2Str` can be implemented much cheaper,98,https://github.com/code-423n4/2021-11-unlock-findings/issues/98,unlock,2021/11,bug;G (Gas Optimization)
54,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`UnlockProtocolGovernor.sol#setVotingDelay` does not have to cache `_votingDelay`,99,https://github.com/code-423n4/2021-11-unlock-findings/issues/99,unlock,2021/11,bug;invalid
54,aga7hokakological,0xE41B989ce8cF92E265995A5cCcb2C5c9C2981184,G,unneccesary boolean comparison in require statement,10,https://github.com/code-423n4/2021-11-unlock-findings/issues/10,unlock,2021/11,bug;invalid
54,aga7hokakological,0xE41B989ce8cF92E265995A5cCcb2C5c9C2981184,0,Order of layout is wrong in ERC20Patched.sol,11,https://github.com/code-423n4/2021-11-unlock-findings/issues/11,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,aga7hokakological,0xE41B989ce8cF92E265995A5cCcb2C5c9C2981184,G,unused function parameter name in function __ERC20Permit_init_unchained(string memory name) and __ERC20Permit_init_unsafe(string memory name),8,https://github.com/code-423n4/2021-11-unlock-findings/issues/8,unlock,2021/11,bug;invalid
54,aga7hokakological,0xE41B989ce8cF92E265995A5cCcb2C5c9C2981184,0,"Order of function is wrong in contracts ERC20PermitUpgradeable, ERC20VotesCompUpgradeable, EIP712Upgradeable",9,https://github.com/code-423n4/2021-11-unlock-findings/issues/9,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,Use explicit variables type,37,https://github.com/code-423n4/2021-11-unlock-findings/issues/37,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,G,Unnecessary fallback function,4,https://github.com/code-423n4/2021-11-unlock-findings/issues/4,unlock,2021/11,bug;G (Gas Optimization)
54,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,Function type from public to external,5,https://github.com/code-423n4/2021-11-unlock-findings/issues/5,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,Missing event for critical updateBeneficiary function,75,https://github.com/code-423n4/2021-11-unlock-findings/issues/75,unlock,2021/11,bug;0 (Non-critical);sponsor confirmed
54,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,Function type from public to external tokenByIndex(),76,https://github.com/code-423n4/2021-11-unlock-findings/issues/76,unlock,2021/11,bug;0 (Non-critical);sponsor confirmed
54,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,1,Input validation Zero address,81,https://github.com/code-423n4/2021-11-unlock-findings/issues/81,unlock,2021/11,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
54,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,Input validation of Zero address on addLockTemplate,83,https://github.com/code-423n4/2021-11-unlock-findings/issues/83,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,1,Input validation of Zero address on function initialize(),86,https://github.com/code-423n4/2021-11-unlock-findings/issues/86,unlock,2021/11,bug;0 (Non-critical);disagree with severity;sponsor disputed
54,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`initialize` functions can be frontrun,153,https://github.com/code-423n4/2021-11-unlock-findings/issues/153,unlock,2021/11,bug;1 (Low Risk);sponsor acknowledged
54,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Lock template versions can be overwritten,154,https://github.com/code-423n4/2021-11-unlock-findings/issues/154,unlock,2021/11,bug;1 (Low Risk);sponsor acknowledged
54,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Referrer discount token amount can be manipulated,155,https://github.com/code-423n4/2021-11-unlock-findings/issues/155,unlock,2021/11,bug;2 (Med Risk)
54,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Missing scaling factor in `recordKeyPurchase`?,156,https://github.com/code-423n4/2021-11-unlock-findings/issues/156,unlock,2021/11,bug;help wanted;2 (Med Risk)
54,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,ERC20 return values not checked,157,https://github.com/code-423n4/2021-11-unlock-findings/issues/157,unlock,2021/11,bug;0 (Non-critical);sponsor confirmed
54,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Can set arbitrary lock templates,158,https://github.com/code-423n4/2021-11-unlock-findings/issues/158,unlock,2021/11,bug;1 (Low Risk);sponsor confirmed
54,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,More keys than max keys can exist,159,https://github.com/code-423n4/2021-11-unlock-findings/issues/159,unlock,2021/11,bug;invalid
54,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Approvals not cleared after key transfer,160,https://github.com/code-423n4/2021-11-unlock-findings/issues/160,unlock,2021/11,bug;3 (High Risk);sponsor confirmed
54,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,No ERC20 safeApprove called & not success check,161,https://github.com/code-423n4/2021-11-unlock-findings/issues/161,unlock,2021/11,bug;1 (Low Risk);sponsor acknowledged;sponsor confirmed
54,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,No ERC20 safeTransferFrom called & not success check,162,https://github.com/code-423n4/2021-11-unlock-findings/issues/162,unlock,2021/11,bug;duplicate;1 (Low Risk);sponsor acknowledged;sponsor confirmed
54,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,DoS when `onKeyPurchaseHook` reverts,163,https://github.com/code-423n4/2021-11-unlock-findings/issues/163,unlock,2021/11,bug;1 (Low Risk)
54,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Refund value has a cliff,164,https://github.com/code-423n4/2021-11-unlock-findings/issues/164,unlock,2021/11,bug;invalid
54,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Inaccurate fees computation,165,https://github.com/code-423n4/2021-11-unlock-findings/issues/165,unlock,2021/11,bug;2 (Med Risk);sponsor confirmed
54,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Key self transfers lead to expiry,166,https://github.com/code-423n4/2021-11-unlock-findings/issues/166,unlock,2021/11,bug;duplicate;2 (Med Risk);sponsor acknowledged
54,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `_recordOwner` pushes duplicates,167,https://github.com/code-423n4/2021-11-unlock-findings/issues/167,unlock,2021/11,bug;G (Gas Optimization)
54,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Proxy admin address is stored twice,168,https://github.com/code-423n4/2021-11-unlock-findings/issues/168,unlock,2021/11,bug;duplicate;G (Gas Optimization)
54,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,12,https://github.com/code-423n4/2021-11-unlock-findings/issues/12,unlock,2021/11,bug;0 (Non-critical)
54,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,transferOwnership should be two step process,169,https://github.com/code-423n4/2021-11-unlock-findings/issues/169,unlock,2021/11,bug;0 (Non-critical);disagree with severity
54,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1, PREVENT DIV BY 0,170,https://github.com/code-423n4/2021-11-unlock-findings/issues/170,unlock,2021/11,bug;1 (Low Risk);sponsor acknowledged
54,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Confusion On the ChainID,181,https://github.com/code-423n4/2021-11-unlock-findings/issues/181,unlock,2021/11,bug;invalid
54,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Inconsistent use of _msgSender(),209,https://github.com/code-423n4/2021-11-unlock-findings/issues/209,unlock,2021/11,bug;G (Gas Optimization)
54,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas improvement on the nonce increment,210,https://github.com/code-423n4/2021-11-unlock-findings/issues/210,unlock,2021/11,bug;G (Gas Optimization)
54,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Open TODO,211,https://github.com/code-423n4/2021-11-unlock-findings/issues/211,unlock,2021/11,bug;duplicate;0 (Non-critical);sponsor disputed
54,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,++i is more gas efficient than i++ in loops forwarding,88,https://github.com/code-423n4/2021-11-unlock-findings/issues/88,unlock,2021/11,bug;duplicate;G (Gas Optimization)
54,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Less than 256 uints are not gas efficient,89,https://github.com/code-423n4/2021-11-unlock-findings/issues/89,unlock,2021/11,bug;G (Gas Optimization)
54,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,2,Frontrunning `PublicLock.initialize()` can prevent upgrades due to insufficient access control,132,https://github.com/code-423n4/2021-11-unlock-findings/issues/132,unlock,2021/11,bug;2 (Med Risk)
54,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,3,"`Unlock.addLockTemplate` does not adequately increment version, leading to gaps in version",133,https://github.com/code-423n4/2021-11-unlock-findings/issues/133,unlock,2021/11,bug;1 (Low Risk)
54,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,3,Insufficient version validation causes denial of service for `PublicLock` during lock upgrades,134,https://github.com/code-423n4/2021-11-unlock-findings/issues/134,unlock,2021/11,bug;1 (Low Risk)
54,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,3,MEV miner can mint larger than expected UDT total supply,135,https://github.com/code-423n4/2021-11-unlock-findings/issues/135,unlock,2021/11,bug;3 (High Risk);sponsor confirmed
54,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,2,Unlock has incomplete fallback function which may cause loss of funds,136,https://github.com/code-423n4/2021-11-unlock-findings/issues/136,unlock,2021/11,bug;1 (Low Risk)
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,2,ERC20 token that charges fee can be set in createLock or updateKeyPricing,113,https://github.com/code-423n4/2021-11-unlock-findings/issues/113,unlock,2021/11,bug;duplicate;1 (Low Risk)
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,2,transferFrom() and shareKey() doesn't check for _from != _recipient,119,https://github.com/code-423n4/2021-11-unlock-findings/issues/119,unlock,2021/11,bug;duplicate;2 (Med Risk);sponsor confirmed
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,1,a single user can become owner of multiple token ids,120,https://github.com/code-423n4/2021-11-unlock-findings/issues/120,unlock,2021/11,bug;1 (Low Risk);sponsor confirmed
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,1,MixinLockCore.sol has wrong comments,122,https://github.com/code-423n4/2021-11-unlock-findings/issues/122,unlock,2021/11,bug;0 (Non-critical);sponsor confirmed
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,1,MixinTransfer:getTransferFee gas optimization with unchecked,123,https://github.com/code-423n4/2021-11-unlock-findings/issues/123,unlock,2021/11,G (Gas Optimization)
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,MixinRefunds:_getCancelAndRefundValue save gas by using unchecked {},124,https://github.com/code-423n4/2021-11-unlock-findings/issues/124,unlock,2021/11,bug;duplicate;G (Gas Optimization)
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,MixinPurchase:_purchasePriceFor save gas by using unchecked {},125,https://github.com/code-423n4/2021-11-unlock-findings/issues/125,unlock,2021/11,bug;invalid
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,MixinGrantKeys:grantKeys gas optimizations,149,https://github.com/code-423n4/2021-11-unlock-findings/issues/149,unlock,2021/11,bug;G (Gas Optimization)
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,1,MixinRefunds wrong comment about re-entrancy concerns,150,https://github.com/code-423n4/2021-11-unlock-findings/issues/150,unlock,2021/11,bug;invalid
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,1,"MixinLockCore: use safeApprove from SafeERC20, and do approve(0) before approve(amount)",151,https://github.com/code-423n4/2021-11-unlock-findings/issues/151,unlock,2021/11,bug;1 (Low Risk);sponsor acknowledged
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,1,Import lock config changes / operations should be done with time locks to give key owners time to react,152,https://github.com/code-423n4/2021-11-unlock-findings/issues/152,unlock,2021/11,bug;invalid
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,3,"User can refund the received airdropped (free) ""key"", if they are also the key manager.",216,https://github.com/code-423n4/2021-11-unlock-findings/issues/216,unlock,2021/11,invalid
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,2,"If there is no oracle set for a token used by a lock, the referrer and dev won't receive any udt tokens",219,https://github.com/code-423n4/2021-11-unlock-findings/issues/219,unlock,2021/11,bug;invalid
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Unlock:createLock no need to define the newLock as payable,226,https://github.com/code-423n4/2021-11-unlock-findings/issues/226,unlock,2021/11,bug;G (Gas Optimization)
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Unlock:_deployProxyAdmin return value is not used,232,https://github.com/code-423n4/2021-11-unlock-findings/issues/232,unlock,2021/11,bug;G (Gas Optimization)
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,2,MixinPurchase:shareKey allows to generate keys without purchasing,242,https://github.com/code-423n4/2021-11-unlock-findings/issues/242,unlock,2021/11,bug;2 (Med Risk);sponsor acknowledged
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,MixinFunds:_initializeMixinFunds move the require statement to the beginning of the function so save gas in the case of a revert,60,https://github.com/code-423n4/2021-11-unlock-findings/issues/60,unlock,2021/11,bug;G (Gas Optimization)
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,2,MixinGrantKeys:grantKeys possible DoS with (Unexpected) revert,62,https://github.com/code-423n4/2021-11-unlock-findings/issues/62,unlock,2021/11,bug;1 (Low Risk);sponsor acknowledged
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,2,"Refund is bounded by ""keyPrice""",63,https://github.com/code-423n4/2021-11-unlock-findings/issues/63,unlock,2021/11,bug;duplicate;1 (Low Risk)
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,2,Lock manager and beneficiary can drain the funds of the lock,64,https://github.com/code-423n4/2021-11-unlock-findings/issues/64,unlock,2021/11,bug;invalid
54,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,2,Lock manager can drain the funds of the lock by calling expireAndRefundFor(),65,https://github.com/code-423n4/2021-11-unlock-findings/issues/65,unlock,2021/11,bug;invalid
54,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Inconsistent code and comment,212,https://github.com/code-423n4/2021-11-unlock-findings/issues/212,unlock,2021/11,bug;0 (Non-critical);sponsor disputed
54,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Unused variable `yieldedDiscountTokens`,213,https://github.com/code-423n4/2021-11-unlock-findings/issues/213,unlock,2021/11,bug;G (Gas Optimization)
54,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,UDT can be minted for free,214,https://github.com/code-423n4/2021-11-unlock-findings/issues/214,unlock,2021/11,bug;invalid
54,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Unable to change token approval when tokenAddress changed,215,https://github.com/code-423n4/2021-11-unlock-findings/issues/215,unlock,2021/11,bug;0 (Non-critical);sponsor disputed
54,hagrid,0x3A46FeD37cAcd52a6DACc4a49f520AdaD0e51D61,0,Missing `_beforeTokenTransfer` Token Transfer Handle,78,https://github.com/code-423n4/2021-11-unlock-findings/issues/78,unlock,2021/11,bug;0 (Non-critical);sponsor confirmed
54,hagrid,0x3A46FeD37cAcd52a6DACc4a49f520AdaD0e51D61,1,Open TODOs,80,https://github.com/code-423n4/2021-11-unlock-findings/issues/80,unlock,2021/11,bug;duplicate;0 (Non-critical);sponsor acknowledged
54,hagrid,0x3A46FeD37cAcd52a6DACc4a49f520AdaD0e51D61,1,Confliction on double `initialize` functions front-run `minter` ,85,https://github.com/code-423n4/2021-11-unlock-findings/issues/85,unlock,2021/11,bug;1 (Low Risk);sponsor acknowledged
54,HardlyDifficult,0xdb92C096bc5Efa8aDB48F05CD601DDdb75228203,G,Gas: Merge callbacks to Unlock on purchase,126,https://github.com/code-423n4/2021-11-unlock-findings/issues/126,unlock,2021/11,bug;G (Gas Optimization)
54,HardlyDifficult,0xdb92C096bc5Efa8aDB48F05CD601DDdb75228203,G,Gas: Assume 0 when creating struct,127,https://github.com/code-423n4/2021-11-unlock-findings/issues/127,unlock,2021/11,bug;G (Gas Optimization)
54,HardlyDifficult,0xdb92C096bc5Efa8aDB48F05CD601DDdb75228203,0,Fix event params for `KeyManagerChanged`,128,https://github.com/code-423n4/2021-11-unlock-findings/issues/128,unlock,2021/11,bug;0 (Non-critical);sponsor confirmed
54,HardlyDifficult,0xdb92C096bc5Efa8aDB48F05CD601DDdb75228203,G,Gas: Cast instead of creating new variables,129,https://github.com/code-423n4/2021-11-unlock-findings/issues/129,unlock,2021/11,bug;G (Gas Optimization)
54,HardlyDifficult,0xdb92C096bc5Efa8aDB48F05CD601DDdb75228203,G,Gas: remove owners array,130,https://github.com/code-423n4/2021-11-unlock-findings/issues/130,unlock,2021/11,bug;G (Gas Optimization)
54,HardlyDifficult,0xdb92C096bc5Efa8aDB48F05CD601DDdb75228203,0,Reduce rounding error when minting UDT in Unlock,131,https://github.com/code-423n4/2021-11-unlock-findings/issues/131,unlock,2021/11,bug;0 (Non-critical);sponsor confirmed
54,HardlyDifficult,0xdb92C096bc5Efa8aDB48F05CD601DDdb75228203,0,shareKey onERC721Received tokenId,91,https://github.com/code-423n4/2021-11-unlock-findings/issues/91,unlock,2021/11,bug;0 (Non-critical);sponsor confirmed
54,HardlyDifficult,0xdb92C096bc5Efa8aDB48F05CD601DDdb75228203,0,Remove fallback function,94,https://github.com/code-423n4/2021-11-unlock-findings/issues/94,unlock,2021/11,bug;0 (Non-critical);sponsor confirmed
54,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,1,Unlock.sol upgradeLock explicitly check that version exists,73,https://github.com/code-423n4/2021-11-unlock-findings/issues/73,unlock,2021/11,bug;duplicate;1 (Low Risk);sponsor confirmed
54,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,1,Unimplemented function computeAvailableDiscountFor ,74,https://github.com/code-423n4/2021-11-unlock-findings/issues/74,unlock,2021/11,bug;1 (Low Risk);sponsor confirmed
54,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,MixinRefunds: use variable to save gas,68,https://github.com/code-423n4/2021-11-unlock-findings/issues/68,unlock,2021/11,bug;G (Gas Optimization)
54,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,G,MixinPurchase: gas optimisation by relying on 0.8.0 auto revert on underflow.,69,https://github.com/code-423n4/2021-11-unlock-findings/issues/69,unlock,2021/11,bug;G (Gas Optimization)
54,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,2,Unlock: free UDT arbitrage opportunity,70,https://github.com/code-423n4/2021-11-unlock-findings/issues/70,unlock,2021/11,bug;2 (Med Risk)
54,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,3,Unlock: Exploit purchase → refund logic for free UDT tokens,71,https://github.com/code-423n4/2021-11-unlock-findings/issues/71,unlock,2021/11,bug;invalid
54,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,3,MixinRefunds: frontrun updateKeyPricing() for free profit,72,https://github.com/code-423n4/2021-11-unlock-findings/issues/72,unlock,2021/11,bug;2 (Med Risk);sponsor acknowledged
54,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Initializer modifiers should be called in the same way everywhere ,1,https://github.com/code-423n4/2021-11-unlock-findings/issues/1,unlock,2021/11,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
54,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Use of floating pragma,2,https://github.com/code-423n4/2021-11-unlock-findings/issues/2,unlock,2021/11,bug;duplicate;0 (Non-critical);sponsor acknowledged
54,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Unused function parameters ,3,https://github.com/code-423n4/2021-11-unlock-findings/issues/3,unlock,2021/11,bug;1 (Low Risk);sponsor acknowledged
54,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,UDT price can be manipulated,6,https://github.com/code-423n4/2021-11-unlock-findings/issues/6,unlock,2021/11,bug;invalid
54,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Possible gas saving,100,https://github.com/code-423n4/2021-11-unlock-findings/issues/100,unlock,2021/11,bug;duplicate;G (Gas Optimization)
54,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Use safeTransfer consistently instead of transfer,109,https://github.com/code-423n4/2021-11-unlock-findings/issues/109,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Setting the admin in initialize initializeProxyAdmin can be frontrun by an attacker,117,https://github.com/code-423n4/2021-11-unlock-findings/issues/117,unlock,2021/11,bug;1 (Low Risk)
54,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Use safeTransfer consistently instead of transfer,118,https://github.com/code-423n4/2021-11-unlock-findings/issues/118,unlock,2021/11,bug;invalid
54,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,0,Initialization parameters of new lock template are hardcoded,137,https://github.com/code-423n4/2021-11-unlock-findings/issues/137,unlock,2021/11,bug;0 (Non-critical);sponsor confirmed
54,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,New lock version might be initialized by malicious actor,138,https://github.com/code-423n4/2021-11-unlock-findings/issues/138,unlock,2021/11,bug;duplicate;2 (Med Risk)
54,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Referrer UDT reward will be lost if Unlock is not seeded with enough tokens,44,https://github.com/code-423n4/2021-11-unlock-findings/issues/44,unlock,2021/11,bug;invalid
54,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Key buyers will not be able to get refund if lock manager withdraws profits,50,https://github.com/code-423n4/2021-11-unlock-findings/issues/50,unlock,2021/11,bug;2 (Med Risk)
54,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,"Lock manager can override key manager of key, possibly breaking functionality",51,https://github.com/code-423n4/2021-11-unlock-findings/issues/51,unlock,2021/11,bug;invalid
54,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,setKeyManagerOf has no address-0 check,52,https://github.com/code-423n4/2021-11-unlock-findings/issues/52,unlock,2021/11,bug;1 (Low Risk);sponsor acknowledged
54,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Refund mechanism doesn't take into account that key price can change,53,https://github.com/code-423n4/2021-11-unlock-findings/issues/53,unlock,2021/11,bug;2 (Med Risk);sponsor acknowledged
54,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Missing maxNumberOfKeys checks in shareKey and grantKey,55,https://github.com/code-423n4/2021-11-unlock-findings/issues/55,unlock,2021/11,bug;2 (Med Risk);sponsor confirmed
54,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Malicious user can DOS lock by falsely reaching maxNumberOfKeys using shareKey,58,https://github.com/code-423n4/2021-11-unlock-findings/issues/58,unlock,2021/11,bug;duplicate;2 (Med Risk);sponsor acknowledged
54,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Purchase mechanism does not check if ERC20 transfer succeeded,59,https://github.com/code-423n4/2021-11-unlock-findings/issues/59,unlock,2021/11,bug;duplicate;1 (Low Risk)
54,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,Wrong comment in recordKeyPurchase,82,https://github.com/code-423n4/2021-11-unlock-findings/issues/82,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,Wrong event parameter emitted at _setKeyManagerOf,84,https://github.com/code-423n4/2021-11-unlock-findings/issues/84,unlock,2021/11,bug;1 (Low Risk);sponsor confirmed
54,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Key transfer will destroy key if from==to,87,https://github.com/code-423n4/2021-11-unlock-findings/issues/87,unlock,2021/11,bug;2 (Med Risk);sponsor confirmed
54,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,0,Unconventional log emittance confuses Etherscan,90,https://github.com/code-423n4/2021-11-unlock-findings/issues/90,unlock,2021/11,bug;0 (Non-critical);sponsor confirmed
54,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,Strict comparrison on version parameter of `upgradeLock`,38,https://github.com/code-423n4/2021-11-unlock-findings/issues/38,unlock,2021/11,bug;invalid
54,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,2,No check whether an implementation has been added to `_publicLockImpls` before upgrading,39,https://github.com/code-423n4/2021-11-unlock-findings/issues/39,unlock,2021/11,bug;duplicate;1 (Low Risk);sponsor acknowledged
54,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,TODO's left in codebase,40,https://github.com/code-423n4/2021-11-unlock-findings/issues/40,unlock,2021/11,bug;duplicate;0 (Non-critical);sponsor acknowledged
54,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,2,`unlockVersion` and `publicLockVersion` view functions return magic number,41,https://github.com/code-423n4/2021-11-unlock-findings/issues/41,unlock,2021/11,bug;invalid
54,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Boolean comparison in `upgradeLock` ,42,https://github.com/code-423n4/2021-11-unlock-findings/issues/42,unlock,2021/11,bug;invalid
54,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,Potential division by 0 in `recordKeyPurchase`,43,https://github.com/code-423n4/2021-11-unlock-findings/issues/43,unlock,2021/11,bug;1 (Low Risk);sponsor acknowledged
54,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,Function spec and implementation difference / strict comparison,45,https://github.com/code-423n4/2021-11-unlock-findings/issues/45,unlock,2021/11,bug;1 (Low Risk);sponsor acknowledged
54,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,0,Commented lines of code,46,https://github.com/code-423n4/2021-11-unlock-findings/issues/46,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Invalid token checks can be moved to beginning of function,47,https://github.com/code-423n4/2021-11-unlock-findings/issues/47,unlock,2021/11,bug;duplicate;G (Gas Optimization)
54,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,0,Use of access control require statement when modifier exists,48,https://github.com/code-423n4/2021-11-unlock-findings/issues/48,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Some public functions can be external,49,https://github.com/code-423n4/2021-11-unlock-findings/issues/49,unlock,2021/11,bug;duplicate;G (Gas Optimization)
54,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Require Lock Owner Upgrade +1 +1 +1 Version Is Waste Of Gas,139,https://github.com/code-423n4/2021-11-unlock-findings/issues/139,unlock,2021/11,bug;invalid
54,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,2,getTransferFee() Fee Could Be 0,140,https://github.com/code-423n4/2021-11-unlock-findings/issues/140,unlock,2021/11,bug;1 (Low Risk)
54,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Remove Duplicate Function to Save Gas,141,https://github.com/code-423n4/2021-11-unlock-findings/issues/141,unlock,2021/11,bug;invalid
54,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,TODOs List May Leak Important Info & Errors,142,https://github.com/code-423n4/2021-11-unlock-findings/issues/142,unlock,2021/11,bug;duplicate;0 (Non-critical);sponsor acknowledged
54,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,Lock Owner Can Withdraw All Fund And Key Owners Unable to Get Refund,143,https://github.com/code-423n4/2021-11-unlock-findings/issues/143,unlock,2021/11,bug;invalid
54,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,No Transfer Ownership Pattern,144,https://github.com/code-423n4/2021-11-unlock-findings/issues/144,unlock,2021/11,bug;duplicate;0 (Non-critical);sponsor acknowledged
54,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Avoid On Chain Computation That Have Known Answer to Save Gas,145,https://github.com/code-423n4/2021-11-unlock-findings/issues/145,unlock,2021/11,bug;G (Gas Optimization)
54,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Avoiding Initialization of Loop Index If It Is 0,146,https://github.com/code-423n4/2021-11-unlock-findings/issues/146,unlock,2021/11,bug;0 (Non-critical)
54,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,2,Function grantKeys() - Bulk Send Free Keys Are Not Practical & Gas May Over Block Size Limit,147,https://github.com/code-423n4/2021-11-unlock-findings/issues/147,unlock,2021/11,bug;0 (Non-critical);sponsor disputed
54,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,Free Key Holders Can Call cancelAndRefund() to Steal Fund from Contract,148,https://github.com/code-423n4/2021-11-unlock-findings/issues/148,unlock,2021/11,bug;invalid
54,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,upgradeLock emits a `UpgradeLock` when the lock hasn't changed,16,https://github.com/code-423n4/2021-11-unlock-findings/issues/16,unlock,2021/11,bug;invalid
54,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unlock.sol - state variable could be set immutable to save gas,18,https://github.com/code-423n4/2021-11-unlock-findings/issues/18,unlock,2021/11,bug;invalid
54,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions could be set external to save gas,19,https://github.com/code-423n4/2021-11-unlock-findings/issues/19,unlock,2021/11,bug;duplicate;G (Gas Optimization)
54,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,named return issue,20,https://github.com/code-423n4/2021-11-unlock-findings/issues/20,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove is deprecated. ,21,https://github.com/code-423n4/2021-11-unlock-findings/issues/21,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Open TODOs,22,https://github.com/code-423n4/2021-11-unlock-findings/issues/22,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Not necessary require / could use unchecked to save gas without possible over/under-flow,23,https://github.com/code-423n4/2021-11-unlock-findings/issues/23,unlock,2021/11,bug;duplicate;G (Gas Optimization)
54,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,G,Redundant check of freeTrialLength == 0,54,https://github.com/code-423n4/2021-11-unlock-findings/issues/54,unlock,2021/11,bug;G (Gas Optimization)
54,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,0,grantKeys no check on parameter array lengths and values,56,https://github.com/code-423n4/2021-11-unlock-findings/issues/56,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,G,Public functions can be made external,57,https://github.com/code-423n4/2021-11-unlock-findings/issues/57,unlock,2021/11,bug;duplicate;G (Gas Optimization)
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Open TODOs in Codebase,217,https://github.com/code-423n4/2021-11-unlock-findings/issues/217,unlock,2021/11,bug;duplicate;0 (Non-critical);sponsor acknowledged
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,chainid,218,https://github.com/code-423n4/2021-11-unlock-findings/issues/218,unlock,2021/11,bug;invalid
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,msg.value should be 0 when token is not native,220,https://github.com/code-423n4/2021-11-unlock-findings/issues/220,unlock,2021/11,bug;1 (Low Risk);sponsor confirmed
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Support of different ERC20 tokens,221,https://github.com/code-423n4/2021-11-unlock-findings/issues/221,unlock,2021/11,bug;1 (Low Risk)
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,tokenByIndex returns wrong token id,222,https://github.com/code-423n4/2021-11-unlock-findings/issues/222,unlock,2021/11,bug;1 (Low Risk);sponsor confirmed
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,_cancelAndRefund is not protected from re-entrancy,223,https://github.com/code-423n4/2021-11-unlock-findings/issues/223,unlock,2021/11,bug;1 (Low Risk)
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Interface and implementation differ,224,https://github.com/code-423n4/2021-11-unlock-findings/issues/224,unlock,2021/11,bug;1 (Low Risk);sponsor acknowledged
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,onKeyPurchase hook expects amount + discount,225,https://github.com/code-423n4/2021-11-unlock-findings/issues/225,unlock,2021/11,bug;1 (Low Risk);sponsor acknowledged
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,Manager can frontrun refunds,227,https://github.com/code-423n4/2021-11-unlock-findings/issues/227,unlock,2021/11,invalid
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Validations,228,https://github.com/code-423n4/2021-11-unlock-findings/issues/228,unlock,2021/11,bug;1 (Low Risk)
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Problems with addLockTemplate,229,https://github.com/code-423n4/2021-11-unlock-findings/issues/229,unlock,2021/11,bug;duplicate;1 (Low Risk)
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Distribution of tokens in recordKeyPurchase,230,https://github.com/code-423n4/2021-11-unlock-findings/issues/230,unlock,2021/11,bug;1 (Low Risk)
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Store owners in EnumerableSet,231,https://github.com/code-423n4/2021-11-unlock-findings/issues/231,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Precalculate expressions,233,https://github.com/code-423n4/2021-11-unlock-findings/issues/233,unlock,2021/11,bug;G (Gas Optimization)
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unnecessary checks,234,https://github.com/code-423n4/2021-11-unlock-findings/issues/234,unlock,2021/11,bug;G (Gas Optimization)
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unchecked math operations,235,https://github.com/code-423n4/2021-11-unlock-findings/issues/235,unlock,2021/11,bug;duplicate;G (Gas Optimization)
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Refund amount and penalty calculation,236,https://github.com/code-423n4/2021-11-unlock-findings/issues/236,unlock,2021/11,bug;G (Gas Optimization)
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,timePlusFee = timeRemaining,237,https://github.com/code-423n4/2021-11-unlock-findings/issues/237,unlock,2021/11,bug;G (Gas Optimization)
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,assigned operations to constant variables,238,https://github.com/code-423n4/2021-11-unlock-findings/issues/238,unlock,2021/11,bug;G (Gas Optimization)
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,0 valueInETH,239,https://github.com/code-423n4/2021-11-unlock-findings/issues/239,unlock,2021/11,bug;G (Gas Optimization)
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,++/-- are cheapest,240,https://github.com/code-423n4/2021-11-unlock-findings/issues/240,unlock,2021/11,bug;G (Gas Optimization)
54,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,address(this).address2Str(),241,https://github.com/code-423n4/2021-11-unlock-findings/issues/241,unlock,2021/11,bug;G (Gas Optimization)
54,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,"CONSTANT KECCAK VARIABLES ARE TREATED AS EXPRESSIONS, NOT CONSTANTS",13,https://github.com/code-423n4/2021-11-unlock-findings/issues/13,unlock,2021/11,bug;duplicate;G (Gas Optimization)
54,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,1,USE OF DEPRECATED _SETUPROLE FUNCTION,14,https://github.com/code-423n4/2021-11-unlock-findings/issues/14,unlock,2021/11,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
54,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,1,USE OF FLOATING PRAGMA,15,https://github.com/code-423n4/2021-11-unlock-findings/issues/15,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,2,INCOMPATIBILITY WITH NON-STANDARD ERC20 TOKENS,26,https://github.com/code-423n4/2021-11-unlock-findings/issues/26,unlock,2021/11,bug;duplicate;1 (Low Risk)
54,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,3,INCOMPATIBILITY WITH TRANSFER-ON-FEE OR DEFLATIONARY TOKENS,31,https://github.com/code-423n4/2021-11-unlock-findings/issues/31,unlock,2021/11,bug;duplicate;1 (Low Risk)
54,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,1,MixinERC721Enumerable.tokenOfOwnerByIndex - parameter _index can be removed,32,https://github.com/code-423n4/2021-11-unlock-findings/issues/32,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,3,UNCHECKED TRANSFER,33,https://github.com/code-423n4/2021-11-unlock-findings/issues/33,unlock,2021/11,bug;duplicate;1 (Low Risk)
54,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,No need to initialize uint256 i variable to 0 in for loops,34,https://github.com/code-423n4/2021-11-unlock-findings/issues/34,unlock,2021/11,bug;invalid
54,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,Using ++i consumes less gas than i++,35,https://github.com/code-423n4/2021-11-unlock-findings/issues/35,unlock,2021/11,bug;duplicate;G (Gas Optimization)
54,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,Long Revert Strings,36,https://github.com/code-423n4/2021-11-unlock-findings/issues/36,unlock,2021/11,bug;G (Gas Optimization)
54,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,0,Unnecessary function parameter in Unlock.upgradeLock() function,25,https://github.com/code-423n4/2021-11-unlock-findings/issues/25,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,1,Scenario where variable in Unlock.recordKeyPurchase() is not initialized,27,https://github.com/code-423n4/2021-11-unlock-findings/issues/27,unlock,2021/11,bug;1 (Low Risk);sponsor acknowledged
54,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,0,Changes that affect access control should be accompanied by an event,28,https://github.com/code-423n4/2021-11-unlock-findings/issues/28,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,2,The function MixinLockCore.approveBeneficiary is susceptible to a race condition,29,https://github.com/code-423n4/2021-11-unlock-findings/issues/29,unlock,2021/11,bug;1 (Low Risk);sponsor acknowledged
54,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,2,Use safeTransferFrom when working with arbitrary ERC20 tokens,30,https://github.com/code-423n4/2021-11-unlock-findings/issues/30,unlock,2021/11,bug;duplicate;1 (Low Risk)
54,sabtikw,0xDA062abA66ECCD16f293D7fa22335b9AF335cAE0,0,input validation,77,https://github.com/code-423n4/2021-11-unlock-findings/issues/77,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,sabtikw,0xDA062abA66ECCD16f293D7fa22335b9AF335cAE0,2,input validation ,79,https://github.com/code-423n4/2021-11-unlock-findings/issues/79,unlock,2021/11,bug;invalid
54,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Storing proxy admin address twice wastes gas,17,https://github.com/code-423n4/2021-11-unlock-findings/issues/17,unlock,2021/11,bug;duplicate;G (Gas Optimization)
54,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Using uint16 for lock versions increases gas costs for no reason.,24,https://github.com/code-423n4/2021-11-unlock-findings/issues/24,unlock,2021/11,bug;G (Gas Optimization)
54,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,ChainId can be queried rather than stored,7,https://github.com/code-423n4/2021-11-unlock-findings/issues/7,unlock,2021/11,bug;invalid
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Insufficient input validation,171,https://github.com/code-423n4/2021-11-unlock-findings/issues/171,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Unlock#configUnlock()` Use immutable variable can save gas,172,https://github.com/code-423n4/2021-11-unlock-findings/issues/172,unlock,2021/11,bug;invalid
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Constants are not explicitly declared,173,https://github.com/code-423n4/2021-11-unlock-findings/issues/173,unlock,2021/11,bug;0 (Non-critical);sponsor disputed
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Consider adding storage gaps to `Mixin***` contracts,174,https://github.com/code-423n4/2021-11-unlock-findings/issues/174,unlock,2021/11,bug;1 (Low Risk);sponsor acknowledged
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Unchecked return value for `token.transferFrom` call,175,https://github.com/code-423n4/2021-11-unlock-findings/issues/175,unlock,2021/11,bug;duplicate;1 (Low Risk);sponsor confirmed
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Unlock.sol#upgradeLock()` Redundant comparison expression,176,https://github.com/code-423n4/2021-11-unlock-findings/issues/176,unlock,2021/11,bug;invalid
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused named returns,177,https://github.com/code-423n4/2021-11-unlock-findings/issues/177,unlock,2021/11,bug;G (Gas Optimization)
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`UnlockUtils.sol#uint2Str()` Implementation can be simpler and save some gas,178,https://github.com/code-423n4/2021-11-unlock-findings/issues/178,unlock,2021/11,bug;G (Gas Optimization)
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`MixinLockCore.sol#updateKeyPricing()` Check of `_tokenAddress` can be done earlier to save gas,179,https://github.com/code-423n4/2021-11-unlock-findings/issues/179,unlock,2021/11,bug;G (Gas Optimization)
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`MixinTransfer.sol#transferFrom()` Use `else if` can save gas,180,https://github.com/code-423n4/2021-11-unlock-findings/issues/180,unlock,2021/11,bug;invalid
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`MixinTransfer.sol#transferFrom` Wrong implementation can potentially allows attackers to reverse transfer and cause fund loss to the users,182,https://github.com/code-423n4/2021-11-unlock-findings/issues/182,unlock,2021/11,bug;3 (High Risk);sponsor confirmed
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`owners` may include duplicate entries,183,https://github.com/code-423n4/2021-11-unlock-findings/issues/183,unlock,2021/11,bug;invalid
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code Style: Unnecessary public function visibility,184,https://github.com/code-423n4/2021-11-unlock-findings/issues/184,unlock,2021/11,bug;0 (Non-critical);sponsor confirmed
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unnecessary variables can make the code simpler and save some gas,185,https://github.com/code-423n4/2021-11-unlock-findings/issues/185,unlock,2021/11,bug;G (Gas Optimization)
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Potential economic attack on UDT grants to the referrer,186,https://github.com/code-423n4/2021-11-unlock-findings/issues/186,unlock,2021/11,bug;1 (Low Risk)
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`MixinRefunds.sol#cancelAndRefund()` Potential fund loss on `cancelAndRefund()` for users who purchased multiple times,187,https://github.com/code-423n4/2021-11-unlock-findings/issues/187,unlock,2021/11,bug;1 (Low Risk)
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Wrong design/implementation of freeTrial allows attacker to steal funds from the protocol,188,https://github.com/code-423n4/2021-11-unlock-findings/issues/188,unlock,2021/11,bug;3 (High Risk);sponsor confirmed
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Malicious user can get infinite free trial by repeatedly refund and repurchase right before the freeTrial ends,189,https://github.com/code-423n4/2021-11-unlock-findings/issues/189,unlock,2021/11,bug;2 (Med Risk)
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Wrong design/implementation of `updateKeyPricing()` and `cancelAndRefund()` may cause fund loss to lock owner or user,190,https://github.com/code-423n4/2021-11-unlock-findings/issues/190,unlock,2021/11,bug;invalid
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,"Change of `freeTrialLength`, `refundPenaltyBasisPoints` and `expirationDuration` can cause unexpected results to users",191,https://github.com/code-423n4/2021-11-unlock-findings/issues/191,unlock,2021/11,bug;duplicate;2 (Med Risk)
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`initializer` functions can be front run,192,https://github.com/code-423n4/2021-11-unlock-findings/issues/192,unlock,2021/11,bug;duplicate;1 (Low Risk);sponsor acknowledged
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Consider adding `initializer` modifier to _initialize** functions,193,https://github.com/code-423n4/2021-11-unlock-findings/issues/193,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Redundant check of `owner() != address(0)`,194,https://github.com/code-423n4/2021-11-unlock-findings/issues/194,unlock,2021/11,bug;G (Gas Optimization)
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Redundant `payable` keyword,195,https://github.com/code-423n4/2021-11-unlock-findings/issues/195,unlock,2021/11,bug;duplicate;G (Gas Optimization)
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Changing function visibility from public to external can save gas,196,https://github.com/code-423n4/2021-11-unlock-findings/issues/196,unlock,2021/11,bug;G (Gas Optimization)
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Incomplete implementation,197,https://github.com/code-423n4/2021-11-unlock-findings/issues/197,unlock,2021/11,bug;duplicate;0 (Non-critical);sponsor disputed
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`MixinPurchase#purchase()` Consider checking if _referrer equals _recipient,198,https://github.com/code-423n4/2021-11-unlock-findings/issues/198,unlock,2021/11,bug;0 (Non-critical);sponsor disputed
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary storage reads can save gas,199,https://github.com/code-423n4/2021-11-unlock-findings/issues/199,unlock,2021/11,bug;G (Gas Optimization)
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unnecessary function can make the code simpler and save some gas,200,https://github.com/code-423n4/2021-11-unlock-findings/issues/200,unlock,2021/11,bug;G (Gas Optimization)
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,201,https://github.com/code-423n4/2021-11-unlock-findings/issues/201,unlock,2021/11,bug;duplicate;G (Gas Optimization)
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Race condition on ERC20 approval,202,https://github.com/code-423n4/2021-11-unlock-findings/issues/202,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,203,https://github.com/code-423n4/2021-11-unlock-findings/issues/203,unlock,2021/11,bug;G (Gas Optimization)
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Missing events for critical operations,204,https://github.com/code-423n4/2021-11-unlock-findings/issues/204,unlock,2021/11,bug;0 (Non-critical);sponsor confirmed
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Typos,205,https://github.com/code-423n4/2021-11-unlock-findings/issues/205,unlock,2021/11,bug;0 (Non-critical);sponsor confirmed
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`MixinRefunds.sol#_getCancelAndRefundValue` Cache and read storage variables from the stack can save gas,206,https://github.com/code-423n4/2021-11-unlock-findings/issues/206,unlock,2021/11,bug;G (Gas Optimization)
54,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Critical changes should use two-step procedure,207,https://github.com/code-423n4/2021-11-unlock-findings/issues/207,unlock,2021/11,bug;0 (Non-critical);sponsor disputed
54,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Missing input validation on array lengths (MixinGrantKeys.sol),105,https://github.com/code-423n4/2021-11-unlock-findings/issues/105,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Use existing memory version of state variables,121,https://github.com/code-423n4/2021-11-unlock-findings/issues/121,unlock,2021/11,bug;G (Gas Optimization)
54,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Incorrect or confusing comments or missing code in tokenOfOwnerByIndex,208,https://github.com/code-423n4/2021-11-unlock-findings/issues/208,unlock,2021/11,bug;0 (Non-critical);sponsor acknowledged
54,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused Named Returns,66,https://github.com/code-423n4/2021-11-unlock-findings/issues/66,unlock,2021/11,bug;G (Gas Optimization)
54,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Open TODOs,67,https://github.com/code-423n4/2021-11-unlock-findings/issues/67,unlock,2021/11,bug;duplicate;0 (Non-critical);sponsor acknowledged
52,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`SafeMath` is not needed in Solidity 0.8.9,116,https://github.com/code-423n4/2021-11-vader-findings/issues/116,vader,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed;StakingRewards
52,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`StakingRewards.sol#updateReward` can be split to two modifiers to save gas,139,https://github.com/code-423n4/2021-11-vader-findings/issues/139,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged;StakingRewards
52,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,StakingRewards.sol uses global timestamp for all accounts,63,https://github.com/code-423n4/2021-11-vader-findings/issues/63,vader,2021/11,bug;invalid;sponsor disputed;StakingRewards
52,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Save gas by caching array length used in for loops,94,https://github.com/code-423n4/2021-11-vader-findings/issues/94,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged;GovernorAlpha;LinearVesting
52,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For `uint` replace `> 0` with `!= 0` Inbox,96,https://github.com/code-423n4/2021-11-vader-findings/issues/96,vader,2021/11,bug;invalid;sponsor disputed;BasePool;BasePoolV2;StakingRewards;VaderBond;UniswapV2Pair
52,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Custom uint is not more memory efficient,97,https://github.com/code-423n4/2021-11-vader-findings/issues/97,vader,2021/11,bug;invalid;sponsor disputed;BasePool;VaderPool
52,0xean,0xean.eth,G,Using SafeMath ins Solidity 0.8.9 contracts wastes gas,64,https://github.com/code-423n4/2021-11-vader-findings/issues/64,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged
52,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,159,https://github.com/code-423n4/2021-11-vader-findings/issues/159,vader,2021/11,bug;duplicate;1 (Low Risk);sponsor confirmed;StakingRewards
52,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing pool existence checks in Router,160,https://github.com/code-423n4/2021-11-vader-findings/issues/160,vader,2021/11,bug;invalid;disagree with severity;VaderRouter
52,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`VaderRouter._swap` performs wrong swap,161,https://github.com/code-423n4/2021-11-vader-findings/issues/161,vader,2021/11,bug;3 (High Risk);sponsor confirmed;VaderRouter
52,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`VaderRouter.calculateOutGivenIn` calculates wrong swap,162,https://github.com/code-423n4/2021-11-vader-findings/issues/162,vader,2021/11,bug;3 (High Risk);sponsor confirmed;VaderRouter
52,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`VaderPoolV2` minting synths & fungibles can be frontrun,163,https://github.com/code-423n4/2021-11-vader-findings/issues/163,vader,2021/11,bug;duplicate;3 (High Risk);sponsor disputed;VaderPoolV2
52,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,No slippage protection in `VaderPoolV2.mintSynth`,164,https://github.com/code-423n4/2021-11-vader-findings/issues/164,vader,2021/11,bug;duplicate;3 (High Risk);VaderPoolV2
52,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Tokens can be unsupported again,165,https://github.com/code-423n4/2021-11-vader-findings/issues/165,vader,2021/11,bug;1 (Low Risk);resolved;sponsor confirmed;VaderPoolV2
52,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Governor average block time is not up-to-date,166,https://github.com/code-423n4/2021-11-vader-findings/issues/166,vader,2021/11,bug;1 (Low Risk);sponsor disputed;GovernorAlpha
52,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Governor's veto protection can be exploited,167,https://github.com/code-423n4/2021-11-vader-findings/issues/167,vader,2021/11,bug;2 (Med Risk);GovernorAlpha
52,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Using duplicate vesters tracks wrong total amount,168,https://github.com/code-423n4/2021-11-vader-findings/issues/168,vader,2021/11,bug;1 (Low Risk);sponsor confirmed;LinearVesting
52,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Vests can be denied,169,https://github.com/code-423n4/2021-11-vader-findings/issues/169,vader,2021/11,bug;2 (Med Risk);resolved;sponsor confirmed;LinearVesting
52,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,ERC20 return values not checked,170,https://github.com/code-423n4/2021-11-vader-findings/issues/170,vader,2021/11,bug;duplicate;invalid;sponsor disputed;XVader
52,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,TWAPOracle might register with wrong token order,171,https://github.com/code-423n4/2021-11-vader-findings/issues/171,vader,2021/11,bug;3 (High Risk);sponsor confirmed;TwapOracle
52,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`TWAPOracle.getRate` does not scale the ratio,172,https://github.com/code-423n4/2021-11-vader-findings/issues/172,vader,2021/11,bug;2 (Med Risk);sponsor confirmed;TwapOracle
52,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Unclear `TwapOracle.consult` algorithm,173,https://github.com/code-423n4/2021-11-vader-findings/issues/173,vader,2021/11,bug;2 (Med Risk);sponsor confirmed;TwapOracle
52,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `setPaused` should use `_paused`,174,https://github.com/code-423n4/2021-11-vader-findings/issues/174,vader,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed;StakingRewards
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use of ecrecover is susceptible to signature malleability,111,https://github.com/code-423n4/2021-11-vader-findings/issues/111,vader,2021/11,bug;invalid;sponsor disputed;GovernorAlpha
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant Code Statement,114,https://github.com/code-423n4/2021-11-vader-findings/issues/114,vader,2021/11,bug;G (Gas Optimization);sponsor disputed;GovernorAlpha
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant Gas Modifider,115,https://github.com/code-423n4/2021-11-vader-findings/issues/115,vader,2021/11,bug;0 (Non-critical);sponsor disputed;GasThrottle
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant Functions,117,https://github.com/code-423n4/2021-11-vader-findings/issues/117,vader,2021/11,bug;G (Gas Optimization);sponsor disputed;SwapQueue
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Incompatibility With Rebasing/Deflationary/Inflationary tokens,118,https://github.com/code-423n4/2021-11-vader-findings/issues/118,vader,2021/11,bug;1 (Low Risk);disagree with severity;BasePool
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Misconfigured Access Control On The Modifier,119,https://github.com/code-423n4/2021-11-vader-findings/issues/119,vader,2021/11,bug;invalid;sponsor disputed;VaderPoolV2;VaderPoolFactory
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,SHOULD CHECK RETURN DATA FROM CHAINLINK AGGREGATORS,120,https://github.com/code-423n4/2021-11-vader-findings/issues/120,vader,2021/11,bug;2 (Med Risk);sponsor confirmed;TwapOracle
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Missing Access Control On The Create Pool,121,https://github.com/code-423n4/2021-11-vader-findings/issues/121,vader,2021/11,bug;duplicate;3 (High Risk);sponsor disputed;VaderPoolFactory
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Add zero address validation in the GovernorAlpha contract,122,https://github.com/code-423n4/2021-11-vader-findings/issues/122,vader,2021/11,bug;1 (Low Risk);GovernorAlpha
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Missing duplicate veto check,137,https://github.com/code-423n4/2021-11-vader-findings/issues/137,vader,2021/11,bug;duplicate;2 (Med Risk);GovernorAlpha
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,No Transfer Ownership Pattern,175,https://github.com/code-423n4/2021-11-vader-findings/issues/175,vader,2021/11,bug;1 (Low Risk);sponsor acknowledged;VaderReserve;VaderPoolFactory;Treasury
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Revert String Size Optimization,176,https://github.com/code-423n4/2021-11-vader-findings/issues/176,vader,2021/11,bug;duplicate;G (Gas Optimization);sponsor acknowledged;VaderRouterV2;StakingRewards
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Adding unchecked directive can save gas,177,https://github.com/code-423n4/2021-11-vader-findings/issues/177,vader,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed;GovernorAlpha
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,block.chainid may change in case of a hardfork,178,https://github.com/code-423n4/2021-11-vader-findings/issues/178,vader,2021/11,bug;1 (Low Risk);sponsor disputed;UniswapV2ERC20
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Open TODOs,179,https://github.com/code-423n4/2021-11-vader-findings/issues/179,vader,2021/11,bug;duplicate;1 (Low Risk);VaderPoolV2;VaderPool
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use safeTransfer instead of transfer,181,https://github.com/code-423n4/2021-11-vader-findings/issues/181,vader,2021/11,bug;duplicate;0 (Non-critical);sponsor disputed;VaderBond
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Reward Amout Is Not Notified During the Reward Duration Setting,55,https://github.com/code-423n4/2021-11-vader-findings/issues/55,vader,2021/11,bug;invalid;sponsor disputed;StakingRewards
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing events for owner only functions that change critical parameters,56,https://github.com/code-423n4/2021-11-vader-findings/issues/56,vader,2021/11,bug;1 (Low Risk);resolved;sponsor confirmed;VaderBond
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,60,https://github.com/code-423n4/2021-11-vader-findings/issues/60,vader,2021/11,bug;invalid;sponsor disputed;VaderRouterV2
52,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,transferOwnership should be two step process,83,https://github.com/code-423n4/2021-11-vader-findings/issues/83,vader,2021/11,bug;invalid;disagree with severity;sponsor acknowledged;SynthFactory;VaderReserve;VaderPoolFactory
52,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,3,TWAP Oracle inflexible `_updatePeriod`,136,https://github.com/code-423n4/2021-11-vader-findings/issues/136,vader,2021/11,bug;2 (Med Risk);disagree with severity;TwapOracle
52,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,3,VaderBond insufficient validation of max payout may prevent redeeming valid payout ,202,https://github.com/code-423n4/2021-11-vader-findings/issues/202,vader,2021/11,bug;0 (Non-critical);sponsor disputed;VaderBond
52,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,2,ERC20 Return values not checked,218,https://github.com/code-423n4/2021-11-vader-findings/issues/218,vader,2021/11,bug;duplicate;0 (Non-critical);sponsor disputed;VaderBond
52,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,3,Disregarding Check Effects in `VaderBond.redeem()` ,219,https://github.com/code-423n4/2021-11-vader-findings/issues/219,vader,2021/11,bug;0 (Non-critical);sponsor disputed;VaderBond
52,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,1,`LinearVesting` missing events,225,https://github.com/code-423n4/2021-11-vader-findings/issues/225,vader,2021/11,bug;0 (Non-critical);disagree with severity;LinearVesting
52,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,3,Governance Veto lacks sufficient validation to protect against frontrunning,61,https://github.com/code-423n4/2021-11-vader-findings/issues/61,vader,2021/11,bug;1 (Low Risk);sponsor disputed;GovernorAlpha
52,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,G,Unnecessary validation of `proposalId>0` due to incorrect proposalId increments,62,https://github.com/code-423n4/2021-11-vader-findings/issues/62,vader,2021/11,bug;G (Gas Optimization);sponsor disputed;GovernorAlpha
52,elprofesor,0xDA3Cf9e341A4C7ecf41070b074EaBDC5D433f159,1,`VaderPoolV2` lacks MEV protection for `rescue()`,93,https://github.com/code-423n4/2021-11-vader-findings/issues/93,vader,2021/11,bug;invalid;sponsor disputed
52,evo5555,0x5A19172FC8144016fB5a0cD3511967D8483da7FE,0,Vader,180,https://github.com/code-423n4/2021-11-vader-findings/issues/180,vader,2021/11,bug;invalid;sponsor disputed
52,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,0,Multiple Solidity pragma,72,https://github.com/code-423n4/2021-11-vader-findings/issues/72,vader,2021/11,bug;0 (Non-critical);sponsor acknowledged;VaderBond
52,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,0,Multiple Solidity pragma in repo/vader-bond/contracts/interfaces/ITreasury.sol ,73,https://github.com/code-423n4/2021-11-vader-findings/issues/73,vader,2021/11,bug;0 (Non-critical);sponsor acknowledged;Treasury
52,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,0,Multiple Solidity pragma in repo/vader-bond/contracts/test/TestToken.sol,74,https://github.com/code-423n4/2021-11-vader-findings/issues/74,vader,2021/11,bug;0 (Non-critical);sponsor acknowledged;VaderBond
52,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,0,Multiple Solidity pragma repo/vader-bond/contracts/lib/FullMath.sol,75,https://github.com/code-423n4/2021-11-vader-findings/issues/75,vader,2021/11,bug;0 (Non-critical);sponsor acknowledged;VaderBond
52,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,0,Multiple Solidity pragma In repo/vader-bond/contracts/Ownable.sol,76,https://github.com/code-423n4/2021-11-vader-findings/issues/76,vader,2021/11,bug;0 (Non-critical);sponsor acknowledged;VaderBond
52,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,0,Multiple Solidity pragma repo/vader-bond/contracts/lib/FixedPoint.sol,77,https://github.com/code-423n4/2021-11-vader-findings/issues/77,vader,2021/11,bug;0 (Non-critical);sponsor acknowledged;VaderBond
52,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,0,Multiple Solidity pragma in repo/vader-bond/contracts/Treasury.sol,78,https://github.com/code-423n4/2021-11-vader-findings/issues/78,vader,2021/11,bug;0 (Non-critical);sponsor acknowledged;VaderBond;Treasury
52,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,0,Multiple Solidity pragma in repo/vader-bond/contracts/VaderBond.sol,79,https://github.com/code-423n4/2021-11-vader-findings/issues/79,vader,2021/11,bug;0 (Non-critical);sponsor acknowledged;VaderBond
52,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Attacker can claim more IL by manipulating pool price then `removeLiquidity` ,182,https://github.com/code-423n4/2021-11-vader-findings/issues/182,vader,2021/11,bug;3 (High Risk);VaderRouterV2
52,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Inline instead of modifier,183,https://github.com/code-423n4/2021-11-vader-findings/issues/183,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged
52,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Simplify Math,184,https://github.com/code-423n4/2021-11-vader-findings/issues/184,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged;VaderMath
52,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unchecked block,185,https://github.com/code-423n4/2021-11-vader-findings/issues/185,vader,2021/11,bug;duplicate;G (Gas Optimization);VaderMath
52,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Governance veto can be bypassed,186,https://github.com/code-423n4/2021-11-vader-findings/issues/186,vader,2021/11,bug;3 (High Risk);GovernorAlpha
52,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,Wrong comment in `vaderToUsdv`,188,https://github.com/code-423n4/2021-11-vader-findings/issues/188,vader,2021/11,bug;1 (Low Risk);disagree with severity;TwapOracle
52,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,add check for supply while querying era emission,112,https://github.com/code-423n4/2021-11-vader-findings/issues/112,vader,2021/11,bug;invalid;sponsor disputed;Vader
52,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,createEmission function specification and logic mismatch,113,https://github.com/code-423n4/2021-11-vader-findings/issues/113,vader,2021/11,bug;1 (Low Risk);resolved;sponsor confirmed;Vader
52,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,Fancy burning address concerns,261,https://github.com/code-423n4/2021-11-vader-findings/issues/261,vader,2021/11,bug;invalid;sponsor disputed
52,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,setComponents function specs and logic mismatch,262,https://github.com/code-423n4/2021-11-vader-findings/issues/262,vader,2021/11,bug;1 (Low Risk);disagree with severity
52,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,Owner can maliciously set itself as dao,263,https://github.com/code-423n4/2021-11-vader-findings/issues/263,vader,2021/11,bug;1 (Low Risk);resolved;sponsor confirmed;Vader
52,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,2,claimGrant function spec and logic mismatch,264,https://github.com/code-423n4/2021-11-vader-findings/issues/264,vader,2021/11,bug;invalid;sponsor disputed;Vader
52,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,Unused variable lastEmission,265,https://github.com/code-423n4/2021-11-vader-findings/issues/265,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor acknowledged;Vader
52,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,Unused functionalities of inherited contracts,266,https://github.com/code-423n4/2021-11-vader-findings/issues/266,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor acknowledged;USDV
52,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,inconsistent use of msg.sender and _msgSender(),267,https://github.com/code-423n4/2021-11-vader-findings/issues/267,vader,2021/11,bug;1 (Low Risk);disagree with severity;Vader
52,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,3,DOS in LinearVesting,268,https://github.com/code-423n4/2021-11-vader-findings/issues/268,vader,2021/11,bug;duplicate;3 (High Risk);LinearVesting
52,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,Unused imported contract in xVader,269,https://github.com/code-423n4/2021-11-vader-findings/issues/269,vader,2021/11,bug;G (Gas Optimization);sponsor disputed;XVader
52,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,3,`leave` function is susceptible to flashloan attack,270,https://github.com/code-423n4/2021-11-vader-findings/issues/270,vader,2021/11,bug;invalid;sponsor disputed;XVader
52,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,2,contract code and white paper spec mismatch for vadert to veth conversion rate,92,https://github.com/code-423n4/2021-11-vader-findings/issues/92,vader,2021/11,bug;duplicate;1 (Low Risk);ProtocolConstants
52,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,token allocation specs in contract code does not match with whitepaper,95,https://github.com/code-423n4/2021-11-vader-findings/issues/95,vader,2021/11,bug;1 (Low Risk);sponsor acknowledged;ProtocolConstants
52,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Gas: VaderMath's endpoint functions can be made external,222,https://github.com/code-423n4/2021-11-vader-findings/issues/222,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed;VaderMath
52,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,onlyDAO modifier is actually onlyOwner,223,https://github.com/code-423n4/2021-11-vader-findings/issues/223,vader,2021/11,bug;invalid;sponsor disputed;Vader;VaderPoolFactory
52,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,BasePoolV2.rescue function allows malicious user to immediately withdraw all mistakenly sent funds,245,https://github.com/code-423n4/2021-11-vader-findings/issues/245,vader,2021/11,bug;invalid;sponsor disputed;BasePoolV2
52,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,Covering impermanent loss allows profiting off asymmetric liquidity provision at expense of reserve holdings,255,https://github.com/code-423n4/2021-11-vader-findings/issues/255,vader,2021/11,bug;duplicate;3 (High Risk);VaderPoolV2;BasePoolV2;VaderRouterV2;VaderReserve;VaderMath
52,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,Mixing different types of LP shares can lead to losses for Synth holders,257,https://github.com/code-423n4/2021-11-vader-findings/issues/257,vader,2021/11,bug;3 (High Risk);sponsor confirmed;VaderPoolV2;BasePoolV2
52,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,_VADER_VETHER_CONVERSION_RATE,10,https://github.com/code-423n4/2021-11-vader-findings/issues/10,vader,2021/11,bug;1 (Low Risk);disagree with severity;resolved;sponsor confirmed;ProtocolConstants
52,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,VADER contains a Fee-On-Transfer,11,https://github.com/code-423n4/2021-11-vader-findings/issues/11,vader,2021/11,bug;3 (High Risk);sponsor acknowledged;Vader;XVader
52,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,All TWAPs are subject to manipulation,12,https://github.com/code-423n4/2021-11-vader-findings/issues/12,vader,2021/11,bug;invalid;disagree with severity;TwapOracle
52,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,ReentrancyGuard for added protection ,13,https://github.com/code-423n4/2021-11-vader-findings/issues/13,vader,2021/11,bug;1 (Low Risk);resolved;sponsor confirmed;XVader
52,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,DistributeEmission() is unguarded ,14,https://github.com/code-423n4/2021-11-vader-findings/issues/14,vader,2021/11,bug;invalid;sponsor disputed;USDV
52,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Calls _transfer() instead of transfer(),15,https://github.com/code-423n4/2021-11-vader-findings/issues/15,vader,2021/11,bug;invalid;sponsor disputed;Vader
52,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,_totalSupply can be different from actual supply,26,https://github.com/code-423n4/2021-11-vader-findings/issues/26,vader,2021/11,bug;1 (Low Risk);sponsor acknowledged;StakingRewards
52,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Usage of _mint is discouraged,36,https://github.com/code-423n4/2021-11-vader-findings/issues/36,vader,2021/11,bug;duplicate;1 (Low Risk);VaderPoolV2
52,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,User may not receive the full amount of IL compensation,100,https://github.com/code-423n4/2021-11-vader-findings/issues/100,vader,2021/11,bug;2 (Med Risk);sponsor disputed;VaderReserve
52,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,0,Wrong revert message in the router (UniswapV2Router -> VaderRouter),101,https://github.com/code-423n4/2021-11-vader-findings/issues/101,vader,2021/11,bug;0 (Non-critical);resolved;sponsor acknowledged;VaderRouter
52,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,The first lp provider can destroy the pool,109,https://github.com/code-423n4/2021-11-vader-findings/issues/109,vader,2021/11,bug;2 (Med Risk);resolved;sponsor confirmed;VaderMath
52,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3, calculate Loss is vulnerable to flashloan attack,65,https://github.com/code-423n4/2021-11-vader-findings/issues/65,vader,2021/11,bug;3 (High Risk);sponsor disputed;VaderMath
52,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Validate Gas do not stop front-running attacks,66,https://github.com/code-423n4/2021-11-vader-findings/issues/66,vader,2021/11,bug;duplicate;0 (Non-critical);sponsor disputed;GasThrottle
52,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,add liquidity is vulnerable to sandwich attack,67,https://github.com/code-423n4/2021-11-vader-findings/issues/67,vader,2021/11,bug;2 (Med Risk);sponsor disputed;VaderRouterV2
52,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,`onlyOnwer` in the synthFactory is confusing,68,https://github.com/code-423n4/2021-11-vader-findings/issues/68,vader,2021/11,bug;0 (Non-critical);disagree with severity;sponsor acknowledged;VaderPoolV2
52,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Attacker can get extremely cheap synth by front-running create Pool,98,https://github.com/code-423n4/2021-11-vader-findings/issues/98,vader,2021/11,bug;3 (High Risk);sponsor disputed;VaderPoolV2;VaderPoolFactory
52,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,G,internal function _addLiquidity in the router is unnecessary,99,https://github.com/code-423n4/2021-11-vader-findings/issues/99,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged;VaderRouter
52,ksk2345,0xc343235Ec8143EAB788d706165D50082833FF137,1,Possibility of reducing the maxSupply of Vader,198,https://github.com/code-423n4/2021-11-vader-findings/issues/198,vader,2021/11,bug;1 (Low Risk);sponsor disputed;Vader
52,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,Anyone Can Arbitrarily Mint Synthetic Assets In `VaderPoolV2.mintSynth()`,146,https://github.com/code-423n4/2021-11-vader-findings/issues/146,vader,2021/11,bug;3 (High Risk);VaderPoolV2
52,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,Anyone Can Arbitrarily Mint Fungible Tokens In `VaderPoolV2.mintFungible()`,147,https://github.com/code-423n4/2021-11-vader-findings/issues/147,vader,2021/11,bug;3 (High Risk);sponsor confirmed;VaderPoolV2
52,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`BasePool.mint()` Is Callable By Anyone,148,https://github.com/code-423n4/2021-11-vader-findings/issues/148,vader,2021/11,bug;2 (Med Risk);sponsor disputed;VaderRouter;BasePool
52,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`BasePool.swap()` Is Callable By Anyone,149,https://github.com/code-423n4/2021-11-vader-findings/issues/149,vader,2021/11,bug;2 (Med Risk);sponsor disputed;VaderRouter;BasePool
52,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`Converter.convert()` Proofs Can Be Replayed On Other Chains,150,https://github.com/code-423n4/2021-11-vader-findings/issues/150,vader,2021/11,bug;1 (Low Risk);disagree with severity;Converter
52,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Lacking Validation Of Chainlink' Oracle Queries,151,https://github.com/code-423n4/2021-11-vader-findings/issues/151,vader,2021/11,bug;2 (Med Risk);sponsor confirmed;TwapOracle;GasThrottle
52,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Anyone Can Rescue Tokens From `BasePoolV2.sol`,152,https://github.com/code-423n4/2021-11-vader-findings/issues/152,vader,2021/11,bug;invalid;sponsor disputed;BasePoolV2
52,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,Incorrect Price Consultation Results,235,https://github.com/code-423n4/2021-11-vader-findings/issues/235,vader,2021/11,bug;3 (High Risk);sponsor confirmed;TwapOracle
52,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,Newly Registered Assets Skew Consultation Results,249,https://github.com/code-423n4/2021-11-vader-findings/issues/249,vader,2021/11,bug;3 (High Risk);sponsor confirmed;TwapOracle
52,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Users Can Reset Bond Depositor's Vesting Period,259,https://github.com/code-423n4/2021-11-vader-findings/issues/259,vader,2021/11,bug;2 (Med Risk);sponsor acknowledged;VaderBond
52,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,Incorrect Accrual Of `sumNative` and `sumUSD` In Producing Consultation Results ,260,https://github.com/code-423n4/2021-11-vader-findings/issues/260,vader,2021/11,bug;3 (High Risk);sponsor confirmed;TwapOracle
52,m3kk_kn1ght,0x520d7e08d363a21f4bFeEc04519c20dCe1045327,2,Vesting account can greater than 2.5b VADER token,35,https://github.com/code-423n4/2021-11-vader-findings/issues/35,vader,2021/11,bug;invalid;sponsor disputed;Vader;LinearVesting
52,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Use bytes32 Rather Than String,153,https://github.com/code-423n4/2021-11-vader-findings/issues/153,vader,2021/11,bug;G (Gas Optimization);GovernorAlpha
52,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,TODOs List May Leak Important Info & Errors,154,https://github.com/code-423n4/2021-11-vader-findings/issues/154,vader,2021/11,bug;duplicate;1 (Low Risk);BasePool;VaderPool;VaderMath
52,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Constructor Does Not Check for Zero Addresses,155,https://github.com/code-423n4/2021-11-vader-findings/issues/155,vader,2021/11,bug;duplicate;1 (Low Risk);sponsor confirmed;StakingRewards
52,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,setRewardsDuration() Lack of Input Validation May Break notifyRewardAmount(),156,https://github.com/code-423n4/2021-11-vader-findings/issues/156,vader,2021/11,bug;1 (Low Risk);sponsor acknowledged;StakingRewards
52,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,TwapOracle.sol update() Multiple SLOAD During Loop,157,https://github.com/code-423n4/2021-11-vader-findings/issues/157,vader,2021/11,bug;duplicate;G (Gas Optimization);TwapOracle
52,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Avoiding Initialization of Loop Index If It Is 0,158,https://github.com/code-423n4/2021-11-vader-findings/issues/158,vader,2021/11,bug;duplicate;G (Gas Optimization);GovernorAlpha;LinearVesting
52,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Change if -> revert pattern to require,22,https://github.com/code-423n4/2021-11-vader-findings/issues/22,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor acknowledged;GovernorAlpha
52,nathaniel,0xA5BF5254FaAe168231140e139db98F79B65503C8,G,Use proxy clones to create Synths & LPTokens,21,https://github.com/code-423n4/2021-11-vader-findings/issues/21,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged;SynthFactory;LPWrapper
52,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Caching array length to save gas,123,https://github.com/code-423n4/2021-11-vader-findings/issues/123,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged
52,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unchecked{i++} is better than i++,124,https://github.com/code-423n4/2021-11-vader-findings/issues/124,vader,2021/11,bug;G (Gas Optimization)
52,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Prefix increaments are cheaper than postfix increaments,125,https://github.com/code-423n4/2021-11-vader-findings/issues/125,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged
52,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`public` functions can be `external`,126,https://github.com/code-423n4/2021-11-vader-findings/issues/126,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged;GovernorAlpha
52,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,unessesary safe math in UniSwapV2Pair.sol line 120,127,https://github.com/code-423n4/2021-11-vader-findings/issues/127,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged;UniswapV2Pair
52,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,.safeApprove is deprecated.,128,https://github.com/code-423n4/2021-11-vader-findings/issues/128,vader,2021/11,bug;invalid;sponsor disputed;Converter
52,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Shortening revert strings to save gas,129,https://github.com/code-423n4/2021-11-vader-findings/issues/129,vader,2021/11,bug;duplicate;G (Gas Optimization)
52,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Avoiding initialization of loop index,130,https://github.com/code-423n4/2021-11-vader-findings/issues/130,vader,2021/11,bug;duplicate;G (Gas Optimization)
52,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,calldata vs memory in solidity gas usage,131,https://github.com/code-423n4/2021-11-vader-findings/issues/131,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged;LinearVesting
52,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Open TODOs,132,https://github.com/code-423n4/2021-11-vader-findings/issues/132,vader,2021/11,bug;duplicate;1 (Low Risk);sponsor acknowledged;VaderRouter;USDV;VaderPool;VaderBond
52,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,lack of math precision,133,https://github.com/code-423n4/2021-11-vader-findings/issues/133,vader,2021/11,bug;invalid;sponsor disputed;VaderMath
52,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,not checking ERC20.transfer return value,134,https://github.com/code-423n4/2021-11-vader-findings/issues/134,vader,2021/11,bug;duplicate;0 (Non-critical);disagree with severity;sponsor disputed;USDV
52,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,might not check current block when casting vote,135,https://github.com/code-423n4/2021-11-vader-findings/issues/135,vader,2021/11,bug;0 (Non-critical);sponsor disputed;XVader;GovernorAlpha
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,TODOs,226,https://github.com/code-423n4/2021-11-vader-findings/issues/226,vader,2021/11,bug;duplicate;1 (Low Risk);sponsor acknowledged;VaderRouter;VaderPoolV2;BasePool;USDV;TwapOracle;VaderPool;VaderBond;GasThrottle;VaderMath
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Toggle function,227,https://github.com/code-423n4/2021-11-vader-findings/issues/227,vader,2021/11,bug;1 (Low Risk);resolved;sponsor confirmed;VaderPoolV2;VaderPool
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Contracts VaderPoolFactory and VaderReserve can be initialized multiple times,228,https://github.com/code-423n4/2021-11-vader-findings/issues/228,vader,2021/11,bug;1 (Low Risk);disagree with severity
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,Unrestricted vestFor,229,https://github.com/code-423n4/2021-11-vader-findings/issues/229,vader,2021/11,bug;3 (High Risk);resolved;sponsor confirmed;LinearVesting
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,block times 13s -> 12s,231,https://github.com/code-423n4/2021-11-vader-findings/issues/231,vader,2021/11,bug;1 (Low Risk);sponsor acknowledged;VaderBond
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Abstract contracts,232,https://github.com/code-423n4/2021-11-vader-findings/issues/232,vader,2021/11,bug;0 (Non-critical);resolved;sponsor acknowledged;BasePool;BasePoolV2;VaderBond;GasThrottle
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Small precision loss when dividing,233,https://github.com/code-423n4/2021-11-vader-findings/issues/233,vader,2021/11,bug;0 (Non-critical);resolved;sponsor confirmed;Converter
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,safe transfer of tokens,234,https://github.com/code-423n4/2021-11-vader-findings/issues/234,vader,2021/11,bug;0 (Non-critical);disagree with severity
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Whitepaper and code declares different conversion rates,236,https://github.com/code-423n4/2021-11-vader-findings/issues/236,vader,2021/11,bug;0 (Non-critical);resolved;sponsor confirmed;ProtocolConstants
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Chainlink decimals,238,https://github.com/code-423n4/2021-11-vader-findings/issues/238,vader,2021/11,bug;duplicate;1 (Low Risk);TwapOracle
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,Unbounded loops,239,https://github.com/code-423n4/2021-11-vader-findings/issues/239,vader,2021/11,bug;duplicate;2 (Med Risk);TwapOracle
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Pre-calculate values that do not change,240,https://github.com/code-423n4/2021-11-vader-findings/issues/240,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed;TwapOracle;VaderBond
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,queueActive always false,241,https://github.com/code-423n4/2021-11-vader-findings/issues/241,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor acknowledged;VaderPoolFactory
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,SafeMath with Solidity >0.8,242,https://github.com/code-423n4/2021-11-vader-findings/issues/242,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor acknowledged;StakingRewards;UniswapV2Library
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,immutable variables,243,https://github.com/code-423n4/2021-11-vader-findings/issues/243,vader,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed;BasePool;TwapOracle;XVader
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Dead code,244,https://github.com/code-423n4/2021-11-vader-findings/issues/244,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor acknowledged;ProtocolConstants
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Shorter revert messages,246,https://github.com/code-423n4/2021-11-vader-findings/issues/246,vader,2021/11,bug;duplicate;G (Gas Optimization)
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Initialization of loop index to 0,247,https://github.com/code-423n4/2021-11-vader-findings/issues/247,vader,2021/11,bug;duplicate;G (Gas Optimization)
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unchecked math operations,252,https://github.com/code-423n4/2021-11-vader-findings/issues/252,vader,2021/11,bug;G (Gas Optimization);sponsor confirmed;TwapOracle
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Unused slippage params,253,https://github.com/code-423n4/2021-11-vader-findings/issues/253,vader,2021/11,bug;3 (High Risk);sponsor disputed;VaderRouter
52,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Unique vesters,254,https://github.com/code-423n4/2021-11-vader-findings/issues/254,vader,2021/11,bug;1 (Low Risk);resolved;sponsor confirmed;LinearVesting
52,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,G,Use constant `_INITIAL_EMISSION_CURVE` in `Vader.sol`,144,https://github.com/code-423n4/2021-11-vader-findings/issues/144,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged;Vader
52,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,2,`Converter::constructor` ignores return value from function call,145,https://github.com/code-423n4/2021-11-vader-findings/issues/145,vader,2021/11,bug;1 (Low Risk);disagree with severity;Converter
52,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,1,Function LinearVesting.claim() will never meet require conditions,29,https://github.com/code-423n4/2021-11-vader-findings/issues/29,vader,2021/11,bug;1 (Low Risk);sponsor disputed;LinearVesting
52,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,2,Inconsistent balance when supplying transfer-on-fee or deflationary tokens,30,https://github.com/code-423n4/2021-11-vader-findings/issues/30,vader,2021/11,bug;2 (Med Risk);sponsor acknowledged;StakingRewards
52,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,Local variable assignment in XVader.leave function can be removed to save gas,69,https://github.com/code-423n4/2021-11-vader-findings/issues/69,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed;XVader
52,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,Contract StakingRewards (pragma 0.8.9) makes use of SafeMath,70,https://github.com/code-423n4/2021-11-vader-findings/issues/70,vader,2021/11,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed;StakingRewards
52,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,3,(dex-v1) BasePool.mint() function can be frontrun,71,https://github.com/code-423n4/2021-11-vader-findings/issues/71,vader,2021/11,bug;3 (High Risk);sponsor disputed;BasePool
52,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,1,Missing zero-address checks in multiple constructors,80,https://github.com/code-423n4/2021-11-vader-findings/issues/80,vader,2021/11,bug;1 (Low Risk);sponsor confirmed;BasePool;StakingRewards
52,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,Using ++i consumes less gas than i++,81,https://github.com/code-423n4/2021-11-vader-findings/issues/81,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor acknowledged;Vader;TwapOracle;GovernorAlpha;LinearVesting;UniswapV2Library
52,Reigada,0x70eC7d795dB10c5c27d07c926fD0e0A2BB9bF77B,G,No need to initialize uint256 i variable to 0 in for loops,82,https://github.com/code-423n4/2021-11-vader-findings/issues/82,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged;Vader;TwapOracle;GovernorAlpha;LinearVesting
52,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,using memory pointer instead storage,85,https://github.com/code-423n4/2021-11-vader-findings/issues/85,vader,2021/11,bug;invalid;sponsor disputed;LinearVesting
52,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,using memory pointer instead storage,86,https://github.com/code-423n4/2021-11-vader-findings/issues/86,vader,2021/11,bug;G (Gas Optimization);LinearVesting
52,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,using memory pointer instead storage,87,https://github.com/code-423n4/2021-11-vader-findings/issues/87,vader,2021/11,bug;duplicate;G (Gas Optimization);LinearVesting
52,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,3,"Missing balance check before and after transfer, can lead to inconsistent amount due to fee on transfer",88,https://github.com/code-423n4/2021-11-vader-findings/issues/88,vader,2021/11,bug;1 (Low Risk);disagree with severity;sponsor confirmed;LinearVesting
52,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,2,"Missing hasStarted modifier, can lead to user vesting before the owner begin the vesting",89,https://github.com/code-423n4/2021-11-vader-findings/issues/89,vader,2021/11,bug;invalid;sponsor disputed;LinearVesting
52,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,2,"Missing hasStarted modifier, can lead to user vesting before the owner begin the vesting",90,https://github.com/code-423n4/2021-11-vader-findings/issues/90,vader,2021/11,bug;2 (Med Risk);LinearVesting
52,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,3,"Missing balance check before and after transfer, can lead to inconsistent amount due to fee on transfer",91,https://github.com/code-423n4/2021-11-vader-findings/issues/91,vader,2021/11,bug;duplicate;3 (High Risk);sponsor acknowledged;XVader
52,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,1,Use `_safeMint()` instead of `_mint()`,27,https://github.com/code-423n4/2021-11-vader-findings/issues/27,vader,2021/11,bug;1 (Low Risk);sponsor disputed;BasePoolV2;VaderRouterV2
52,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,3,`rescue()` in BasePoolV2.sol allows an attacker to potentially drain tokens for free,28,https://github.com/code-423n4/2021-11-vader-findings/issues/28,vader,2021/11,bug;invalid;sponsor disputed;BasePoolV2
52,shri4net,0xd2DFc6F7a13AD5576eEBBDa7C8DEE36908Cb3AaD,2,XVader.sol : loss of user funds during 'leave' function,187,https://github.com/code-423n4/2021-11-vader-findings/issues/187,vader,2021/11,bug;duplicate;3 (High Risk);sponsor acknowledged;XVader
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,3,LPs are subject to unlimited slippage on joins,1,https://github.com/code-423n4/2021-11-vader-findings/issues/1,vader,2021/11,bug;duplicate;3 (High Risk);sponsor disputed;VaderRouterV2
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,2,Should a Chainlink aggregator become stuck in a stale state then TwapOracle will become irrecoverably broken,16,https://github.com/code-423n4/2021-11-vader-findings/issues/16,vader,2021/11,bug;2 (Med Risk);disagree with severity;TwapOracle
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Use of single _pairs array in TwapOracle increases costs of `consult`ing,17,https://github.com/code-423n4/2021-11-vader-findings/issues/17,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged;TwapOracle
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,2,TwapOracle assumes a possibly incorrect number of decimals when scaling chainlink price feed,18,https://github.com/code-423n4/2021-11-vader-findings/issues/18,vader,2021/11,bug;1 (Low Risk);sponsor disputed;TwapOracle
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,3,TwapOracle doesn't calculate VADER:USDV exchange rate correctly,19,https://github.com/code-423n4/2021-11-vader-findings/issues/19,vader,2021/11,bug;3 (High Risk);sponsor confirmed;TwapOracle
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,3,Minting and burning synths exposes users to unlimited slippage,2,https://github.com/code-423n4/2021-11-vader-findings/issues/2,vader,2021/11,bug;3 (High Risk);disagree with severity;sponsor acknowledged;VaderPoolV2
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,2,Permissioned nature of `TwapOracle` allows owner to manipulate oracle,20,https://github.com/code-423n4/2021-11-vader-findings/issues/20,vader,2021/11,bug;duplicate;2 (Med Risk);TwapOracle
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Check that all transfers don't result in violation of max supply is unnecessary,220,https://github.com/code-423n4/2021-11-vader-findings/issues/220,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed;Vader
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,3,All user assets which are approved to VaderPoolV2 may be stolen,221,https://github.com/code-423n4/2021-11-vader-findings/issues/221,vader,2021/11,bug;3 (High Risk);sponsor confirmed;VaderPoolV2
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Store VaderPoolV2 address as immutable in LPWrapper,224,https://github.com/code-423n4/2021-11-vader-findings/issues/224,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged;LPWrapper
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,3,VaderRouter exposes LPs to unlimited slippage on joins,23,https://github.com/code-423n4/2021-11-vader-findings/issues/23,vader,2021/11,bug;invalid;VaderRouter
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,1,Unsupported tokens can be given fungible LP support,230,https://github.com/code-423n4/2021-11-vader-findings/issues/230,vader,2021/11,bug;0 (Non-critical);sponsor disputed;VaderPoolV2
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Add method to migrate from fungible to nonfungible liquidity,237,https://github.com/code-423n4/2021-11-vader-findings/issues/237,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged;VaderPoolV2
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,2,VaderRouterV2 breaks compatibility with IUniswapV2Router0X,24,https://github.com/code-423n4/2021-11-vader-findings/issues/24,vader,2021/11,bug;0 (Non-critical);disagree with severity;VaderRouterV2
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,3,VaderPoolV2.mintFungible exposes users to unlimited slippage,248,https://github.com/code-423n4/2021-11-vader-findings/issues/248,vader,2021/11,bug;3 (High Risk);sponsor confirmed;VaderPoolV2
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,2,VaderRouter breaks compatibility with IUniswapV2Router0X,25,https://github.com/code-423n4/2021-11-vader-findings/issues/25,vader,2021/11,bug;0 (Non-critical);VaderRouter
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Extra transfers when burning LP tokens,250,https://github.com/code-423n4/2021-11-vader-findings/issues/250,vader,2021/11,bug;G (Gas Optimization);sponsor confirmed;VaderPoolV2
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,2,VaderPoolV2.rescue results in loss of funds rather than recoverability,251,https://github.com/code-423n4/2021-11-vader-findings/issues/251,vader,2021/11,bug;2 (Med Risk);VaderPoolV2
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,2,No way to remove GasThrottle after deployment,256,https://github.com/code-423n4/2021-11-vader-findings/issues/256,vader,2021/11,bug;2 (Med Risk);resolved;sponsor confirmed;GasThrottle
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,1,Remove GasThrottle.sol,258,https://github.com/code-423n4/2021-11-vader-findings/issues/258,vader,2021/11,bug;invalid;sponsor disputed;GasThrottle
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,3,Redemption value of synths can be manipulated to drain `VaderPool` of all native assets,3,https://github.com/code-423n4/2021-11-vader-findings/issues/3,vader,2021/11,bug;question;3 (High Risk);VaderPoolV2
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,3,LPs of VaderPoolV2 can manipulate pool reserves to extract funds from the reserve.,31,https://github.com/code-423n4/2021-11-vader-findings/issues/31,vader,2021/11,bug;question;3 (High Risk);VaderPoolV2;VaderRouterV2
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,3,Paying IL protection for all VaderPoolV2 pairs allows the reserve to be drained.,32,https://github.com/code-423n4/2021-11-vader-findings/issues/32,vader,2021/11,bug;invalid
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,3,LPs of VaderPool can manipulate pool reserves to extract funds from the reserve.,33,https://github.com/code-423n4/2021-11-vader-findings/issues/33,vader,2021/11,bug;duplicate;3 (High Risk);VaderRouter;VaderPool
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,3,Paying IL protection for all VaderPool pairs allows the reserve to be drained.,34,https://github.com/code-423n4/2021-11-vader-findings/issues/34,vader,2021/11,bug;3 (High Risk);sponsor disputed;VaderRouter;VaderPool
52,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,"VaderReserve does not support paying IL protection out to more than one address, resulting in locked funds",37,https://github.com/code-423n4/2021-11-vader-findings/issues/37,vader,2021/11,bug;3 (High Risk);sponsor disputed;VaderRouter;VaderRouterV2
52,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Address of VADER in xVADER.sol can be made immutable,38,https://github.com/code-423n4/2021-11-vader-findings/issues/38,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed;XVader
52,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,VADER and USDV can be made immutable in the TwapOracle,39,https://github.com/code-423n4/2021-11-vader-findings/issues/39,vader,2021/11,bug;G (Gas Optimization);TwapOracle
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,2,BasePool does not account for Vader transfer fees when removing liquidity,4,https://github.com/code-423n4/2021-11-vader-findings/issues/4,vader,2021/11,bug;0 (Non-critical);sponsor disputed;Vader;BasePool
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,2,BasePoolV2 does not account for Vader transfer fees when removing liquidity,5,https://github.com/code-423n4/2021-11-vader-findings/issues/5,vader,2021/11,bug;invalid;BasePoolV2
52,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,VaderPoolV2 incorrectly calculates the amount of IL protection to send to LPs,54,https://github.com/code-423n4/2021-11-vader-findings/issues/54,vader,2021/11,bug;3 (High Risk);resolved;sponsor confirmed;VaderPoolV2;BasePoolV2;TwapOracle;VaderReserve
52,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,VaderPool incorrectly calculates the amount of IL protection to send to LPs,57,https://github.com/code-423n4/2021-11-vader-findings/issues/57,vader,2021/11,bug;duplicate;3 (High Risk);VaderPool;VaderReserve
52,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,Malicious council can hold entire system hostage to avoid being voted out,58,https://github.com/code-423n4/2021-11-vader-findings/issues/58,vader,2021/11,bug;invalid;sponsor disputed;GovernorAlpha
52,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,Malicious council can force a takeover of the DAO should they believe they will be voted out.,59,https://github.com/code-423n4/2021-11-vader-findings/issues/59,vader,2021/11,bug;invalid;GovernorAlpha
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Make use of a bitmap for claims to save gas in Converter.sol,6,https://github.com/code-423n4/2021-11-vader-findings/issues/6,vader,2021/11,bug;G (Gas Optimization);sponsor confirmed;Converter
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Use of SafeERC20 for known tokens used extra gas unnecessarily,7,https://github.com/code-423n4/2021-11-vader-findings/issues/7,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged;Vader;USDV
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,2,Unbounded loop in TwapOracle.update can result in oracle being locked,8,https://github.com/code-423n4/2021-11-vader-findings/issues/8,vader,2021/11,bug;2 (Med Risk);disagree with severity;TwapOracle
52,TomFrench,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,0,Incorrect + misleading documentation on BasePool and BasePoolV2,84,https://github.com/code-423n4/2021-11-vader-findings/issues/84,vader,2021/11,bug;0 (Non-critical);resolved;sponsor acknowledged;BasePoolV2
52,TomFrench,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,TwapOracle timeElapsed check is unnecessarily checked on each iteration,9,https://github.com/code-423n4/2021-11-vader-findings/issues/9,vader,2021/11,bug;invalid;sponsor disputed;TwapOracle
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Early user can break `addLiquidity`,189,https://github.com/code-423n4/2021-11-vader-findings/issues/189,vader,2021/11,bug;3 (High Risk);sponsor acknowledged;BasePool
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`VaderRouterV2#addLiquidity()` is not compatible with the interface of UniswapV2Router02#addliquidity(),190,https://github.com/code-423n4/2021-11-vader-findings/issues/190,vader,2021/11,bug;1 (Low Risk);VaderRouterV2
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`BasePoolV2#rescue()` should be `nonReentrant`,191,https://github.com/code-423n4/2021-11-vader-findings/issues/191,vader,2021/11,bug;1 (Low Risk);disagree with severity;BasePoolV2
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`BasePoolV2.sol` reserve should not be allowed to be 0,192,https://github.com/code-423n4/2021-11-vader-findings/issues/192,vader,2021/11,bug;invalid;sponsor disputed;BasePoolV2
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Tokens with fee on transfer are not supported,193,https://github.com/code-423n4/2021-11-vader-findings/issues/193,vader,2021/11,bug;2 (Med Risk);disagree with severity;BasePoolV2
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`BasePoolV2#_supportedToken(IERC20 token)` is only used in `modifier supportedToken(IERC20 token)`,194,https://github.com/code-423n4/2021-11-vader-findings/issues/194,vader,2021/11,bug;invalid;sponsor disputed;BasePoolV2
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Unsafe type casting,195,https://github.com/code-423n4/2021-11-vader-findings/issues/195,vader,2021/11,bug;1 (Low Risk);sponsor disputed;LinearVesting
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,196,https://github.com/code-423n4/2021-11-vader-findings/issues/196,vader,2021/11,bug;duplicate;G (Gas Optimization);GovernorAlpha;LinearVesting
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,197,https://github.com/code-423n4/2021-11-vader-findings/issues/197,vader,2021/11,bug;duplicate;G (Gas Optimization);GovernorAlpha
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Router#initialize()` Lack of input validation for `reserve` asset,199,https://github.com/code-423n4/2021-11-vader-findings/issues/199,vader,2021/11,bug;1 (Low Risk);sponsor acknowledged;VaderReserve
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unnecessary storage variables can be changed to `immutable` to save gas,200,https://github.com/code-423n4/2021-11-vader-findings/issues/200,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed;StakingRewards
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary storage read can save gas,201,https://github.com/code-423n4/2021-11-vader-findings/issues/201,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed;StakingRewards
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`GasThrottle#validateGas()` Code should be uncommented,203,https://github.com/code-423n4/2021-11-vader-findings/issues/203,vader,2021/11,bug;duplicate;0 (Non-critical);GasThrottle
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Lack of access control allow attacker to `mintFungible()` and `mintSynth()` with other user's wallet balance,204,https://github.com/code-423n4/2021-11-vader-findings/issues/204,vader,2021/11,bug;3 (High Risk);VaderPoolV2
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`USDV.sol` Incomplete implementation,205,https://github.com/code-423n4/2021-11-vader-findings/issues/205,vader,2021/11,bug;0 (Non-critical);USDV
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`SwapQueue.sol` Incomplete implementation,206,https://github.com/code-423n4/2021-11-vader-findings/issues/206,vader,2021/11,bug;0 (Non-critical);SwapQueue
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Changing function visibility from public to external can save gas,207,https://github.com/code-423n4/2021-11-vader-findings/issues/207,vader,2021/11,bug;G (Gas Optimization);Timelock
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,208,https://github.com/code-423n4/2021-11-vader-findings/issues/208,vader,2021/11,bug;duplicate;G (Gas Optimization);VaderMath
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`mintSynth()` and `burnSynth()` can be front run,209,https://github.com/code-423n4/2021-11-vader-findings/issues/209,vader,2021/11,bug;3 (High Risk);VaderPoolV2
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`Synth` tokens can get over-minted,210,https://github.com/code-423n4/2021-11-vader-findings/issues/210,vader,2021/11,bug;3 (High Risk);sponsor confirmed;Synth
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Combine external calls into one can save gas,211,https://github.com/code-423n4/2021-11-vader-findings/issues/211,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged;GovernorAlpha
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Wrong design/implementation of `addLiquidity()` allows attacker to steal funds from the liquidity pool,212,https://github.com/code-423n4/2021-11-vader-findings/issues/212,vader,2021/11,bug;question;3 (High Risk);sponsor disputed;VaderPoolV2
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Wrong design of `swap()` results in unexpected and unfavorable outputs,213,https://github.com/code-423n4/2021-11-vader-findings/issues/213,vader,2021/11,bug;question;3 (High Risk);sponsor disputed;VaderMath
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Missing events for critical operations,214,https://github.com/code-423n4/2021-11-vader-findings/issues/214,vader,2021/11,bug;0 (Non-critical);disagree with severity;VaderPoolV2
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Critical changes should use two-step procedure,215,https://github.com/code-423n4/2021-11-vader-findings/issues/215,vader,2021/11,bug;0 (Non-critical);sponsor confirmed;VaderPoolV2
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`VaderMath.sol#calculateSwap()` Wrong design/implementation of slippage control,216,https://github.com/code-423n4/2021-11-vader-findings/issues/216,vader,2021/11,bug;invalid;sponsor disputed;VaderMath
52,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Potential economic attack that exploits IL coverage,217,https://github.com/code-423n4/2021-11-vader-findings/issues/217,vader,2021/11,bug;duplicate;3 (High Risk);VaderMath
52,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,0,Use `indexed` keyword in events which can be used as filter,40,https://github.com/code-423n4/2021-11-vader-findings/issues/40,vader,2021/11,bug;0 (Non-critical);Vader
52,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,Cache length of array before loop to optimize gas,41,https://github.com/code-423n4/2021-11-vader-findings/issues/41,vader,2021/11,bug;G (Gas Optimization);LinearVesting
52,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,1,Did not check if vestor is address(0),42,https://github.com/code-423n4/2021-11-vader-findings/issues/42,vader,2021/11,bug;1 (Low Risk);sponsor disputed;LinearVesting
52,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,Use `unchecked` keyword to optimize gas,43,https://github.com/code-423n4/2021-11-vader-findings/issues/43,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor acknowledged;Vader
52,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,2,LinearVesting does not calculate vested amount linearly,44,https://github.com/code-423n4/2021-11-vader-findings/issues/44,vader,2021/11,bug;2 (Med Risk);resolved;sponsor confirmed;LinearVesting
52,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,3,XVader does not check transfer fee,45,https://github.com/code-423n4/2021-11-vader-findings/issues/45,vader,2021/11,bug;duplicate;3 (High Risk);sponsor acknowledged;XVader
52,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,0,Use SafeERC20 library,46,https://github.com/code-423n4/2021-11-vader-findings/issues/46,vader,2021/11,bug;invalid;sponsor disputed;USDV;XVader;GovernorAlpha
52,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,Use Immutable keyword,47,https://github.com/code-423n4/2021-11-vader-findings/issues/47,vader,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed;XVader
52,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,0,Typo,48,https://github.com/code-423n4/2021-11-vader-findings/issues/48,vader,2021/11,bug;0 (Non-critical);sponsor acknowledged;TwapOracle
52,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,3,Did not check decimals from ChainLink oracle Critical,49,https://github.com/code-423n4/2021-11-vader-findings/issues/49,vader,2021/11,bug;duplicate;1 (Low Risk);TwapOracle
52,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,3,USDV and VADER rate can be wrong,50,https://github.com/code-423n4/2021-11-vader-findings/issues/50,vader,2021/11,bug;3 (High Risk);sponsor confirmed;TwapOracle
52,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,1,TwapOracle / registerPair function could register VADER / USDV and USDV / VADER pools.,51,https://github.com/code-423n4/2021-11-vader-findings/issues/51,vader,2021/11,bug;1 (Low Risk);sponsor confirmed;VaderPoolV2
52,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,G,Some public functions can be converted as external,52,https://github.com/code-423n4/2021-11-vader-findings/issues/52,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged;GovernorAlpha
52,xYrYuYx,0xa9A1C028E6a637c6F7FA119663E1f6736B726358,0,Missing Zero-address check,53,https://github.com/code-423n4/2021-11-vader-findings/issues/53,vader,2021/11,bug;0 (Non-critical);resolved;sponsor acknowledged;GovernorAlpha;LPToken
52,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Open TODOs,102,https://github.com/code-423n4/2021-11-vader-findings/issues/102,vader,2021/11,bug;1 (Low Risk);disagree with severity;resolved;sponsor acknowledged
52,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused Named Returns,103,https://github.com/code-423n4/2021-11-vader-findings/issues/103,vader,2021/11,bug;G (Gas Optimization);sponsor confirmed;GovernorAlpha;LinearVesting;VaderBond
52,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Long Revert Strings,104,https://github.com/code-423n4/2021-11-vader-findings/issues/104,vader,2021/11,bug;G (Gas Optimization);sponsor acknowledged
52,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Assignment Of Variables To Default ,105,https://github.com/code-423n4/2021-11-vader-findings/issues/105,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed;StakingRewards
52,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Use existing memory version of state variables,106,https://github.com/code-423n4/2021-11-vader-findings/issues/106,vader,2021/11,bug;G (Gas Optimization);sponsor confirmed;StakingRewards;Timelock
52,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,No boundary checking for feeAmount (GovernorAlpha.sol),107,https://github.com/code-423n4/2021-11-vader-findings/issues/107,vader,2021/11,bug;1 (Low Risk);resolved;sponsor confirmed;GovernorAlpha
52,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,"No event emission for ""timelock"" changes (GovernorAlpha.sol)",108,https://github.com/code-423n4/2021-11-vader-findings/issues/108,vader,2021/11,bug;0 (Non-critical);sponsor disputed;GovernorAlpha
52,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,"No event emission for ""guardian"" changes (GovernorAlpha.sol)",110,https://github.com/code-423n4/2021-11-vader-findings/issues/110,vader,2021/11,bug;0 (Non-critical);sponsor disputed;GovernorAlpha
52,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Zero address check not needed ,138,https://github.com/code-423n4/2021-11-vader-findings/issues/138,vader,2021/11,bug;G (Gas Optimization);resolved;sponsor acknowledged;Vader;SynthFactory;LPWrapper;VaderReserve;VaderPoolFactory
52,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Commented out code ,140,https://github.com/code-423n4/2021-11-vader-findings/issues/140,vader,2021/11,bug;0 (Non-critical);resolved;sponsor acknowledged;Vader;BasePool
52,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Incorrect comments (technical issues),141,https://github.com/code-423n4/2021-11-vader-findings/issues/141,vader,2021/11,bug;1 (Low Risk);GovernorAlpha
52,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Typos,142,https://github.com/code-423n4/2021-11-vader-findings/issues/142,vader,2021/11,bug;0 (Non-critical);resolved;sponsor acknowledged;BasePoolV2;GovernorAlpha
52,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Function AdjustMaxSupply is incorrect (or at least confusing),143,https://github.com/code-423n4/2021-11-vader-findings/issues/143,vader,2021/11,bug;1 (Low Risk);disagree with severity;Vader
56,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`AlchemistVault.sol` can be optimised,100,https://github.com/code-423n4/2021-11-yaxis-findings/issues/100,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed
56,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Make global variables of adapters immutable,101,https://github.com/code-423n4/2021-11-yaxis-findings/issues/101,yaxis,2021/11,bug;duplicate;G (Gas Optimization)
56,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Optimize `Alchemist.sol#_withdrawFundsTo`,102,https://github.com/code-423n4/2021-11-yaxis-findings/issues/102,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed
56,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,A user allowed to mint `AlToken` can mint an unlimited amount of it,13,https://github.com/code-423n4/2021-11-yaxis-findings/issues/13,yaxis,2021/11,bug;invalid;3 (High Risk);sponsor disputed
56,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Cache length of array when looping,17,https://github.com/code-423n4/2021-11-yaxis-findings/issues/17,yaxis,2021/11,bug;invalid;G (Gas Optimization);sponsor acknowledged
56,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`uint8` costs more gass than `uint256`,19,https://github.com/code-423n4/2021-11-yaxis-findings/issues/19,yaxis,2021/11,bug;invalid;G (Gas Optimization)
56,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For uint `> 0` can be replaced with ` != 0` for gas optimisation,22,https://github.com/code-423n4/2021-11-yaxis-findings/issues/22,yaxis,2021/11,bug;G (Gas Optimization);sponsor acknowledged;fix later
56,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,"At `Alchemist.sol#acceptGovernance`, cache `pendingGovernance` earlier to save gas",23,https://github.com/code-423n4/2021-11-yaxis-findings/issues/23,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed
56,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,No event for `Alchemist.sol#setPegMinimum`,24,https://github.com/code-423n4/2021-11-yaxis-findings/issues/24,yaxis,2021/11,bug;0 (Non-critical);disagree with severity;sponsor confirmed;wont fix
56,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`Transmuter.sol` make `Token` and `AlToken` immutable,79,https://github.com/code-423n4/2021-11-yaxis-findings/issues/79,yaxis,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
56,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,`AlchemistVault` is not compatible with deflationary tokens,84,https://github.com/code-423n4/2021-11-yaxis-findings/issues/84,yaxis,2021/11,bug;duplicate;0 (Non-critical);sponsor disputed
56,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`CDP.sol#update.sol` can be optimized,91,https://github.com/code-423n4/2021-11-yaxis-findings/issues/91,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed
56,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`CDP.sol#getUpdatedTotalDebt` can be optimized,92,https://github.com/code-423n4/2021-11-yaxis-findings/issues/92,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed
56,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Pending governance is not cleared,63,https://github.com/code-423n4/2021-11-yaxis-findings/issues/63,yaxis,2021/11,bug;1 (Low Risk);sponsor acknowledged;wont fix
56,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,No ERC20 safe* versions called & not success check,64,https://github.com/code-423n4/2021-11-yaxis-findings/issues/64,yaxis,2021/11,bug;duplicate;1 (Low Risk)
56,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`Alchemist.migrate` can push duplicate adapters to `_vaults`,65,https://github.com/code-423n4/2021-11-yaxis-findings/issues/65,yaxis,2021/11,bug;1 (Low Risk);sponsor acknowledged;wont fix
56,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`Transmuter.unstake` updates user without first updating distributing yield,66,https://github.com/code-423n4/2021-11-yaxis-findings/issues/66,yaxis,2021/11,bug;1 (Low Risk);resolved;sponsor confirmed
56,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`Transmuter` yield can be gamed by only staking when yield is distributed,67,https://github.com/code-423n4/2021-11-yaxis-findings/issues/67,yaxis,2021/11,bug;invalid;2 (Med Risk);sponsor disputed
56,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,No incentive to call `transmute()` instead of `forceTransmute(self)`,68,https://github.com/code-423n4/2021-11-yaxis-findings/issues/68,yaxis,2021/11,bug;1 (Low Risk);sponsor acknowledged;wont fix
56,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Loop optimization in `getMultipleUserInfo`,69,https://github.com/code-423n4/2021-11-yaxis-findings/issues/69,yaxis,2021/11,bug;invalid;G (Gas Optimization);sponsor disputed
56,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant Contract Check,25,https://github.com/code-423n4/2021-11-yaxis-findings/issues/25,yaxis,2021/11,bug;invalid;G (Gas Optimization);sponsor disputed
56,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,26,https://github.com/code-423n4/2021-11-yaxis-findings/issues/26,yaxis,2021/11,bug;G (Gas Optimization);sponsor acknowledged;fix later
56,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,The Contract Should safeApprove(0) first,27,https://github.com/code-423n4/2021-11-yaxis-findings/issues/27,yaxis,2021/11,bug;duplicate;0 (Non-critical)
56,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant Import,28,https://github.com/code-423n4/2021-11-yaxis-findings/issues/28,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor acknowledged
56,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Wrong Event Emitted For The SetBorrowFee Function,29,https://github.com/code-423n4/2021-11-yaxis-findings/issues/29,yaxis,2021/11,bug;duplicate;1 (Low Risk)
56,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Missing Emergency Pause Check,30,https://github.com/code-423n4/2021-11-yaxis-findings/issues/30,yaxis,2021/11,bug;duplicate;2 (Med Risk)
56,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing events for owner only functions that change critical parameters,34,https://github.com/code-423n4/2021-11-yaxis-findings/issues/34,yaxis,2021/11,bug;0 (Non-critical);sponsor acknowledged;fix later
56,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimization on the Public Functions,98,https://github.com/code-423n4/2021-11-yaxis-findings/issues/98,yaxis,2021/11,bug;duplicate;G (Gas Optimization);sponsor confirmed
56,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Caching variables,62,https://github.com/code-423n4/2021-11-yaxis-findings/issues/62,yaxis,2021/11,bug;G (Gas Optimization);sponsor acknowledged;fix later
56,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,`safeApprove` is deprecated,70,https://github.com/code-423n4/2021-11-yaxis-findings/issues/70,yaxis,2021/11,bug;duplicate;0 (Non-critical)
56,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Inline instead of modifier,72,https://github.com/code-423n4/2021-11-yaxis-findings/issues/72,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed
56,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas optimization: Reduce storage write,97,https://github.com/code-423n4/2021-11-yaxis-findings/issues/97,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed
56,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Incorrect event emitted on BorrowFee update,99,https://github.com/code-423n4/2021-11-yaxis-findings/issues/99,yaxis,2021/11,bug;duplicate;1 (Low Risk)
56,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,`Alchemist.sol`  is not deployable due to large bytecode size,118,https://github.com/code-423n4/2021-11-yaxis-findings/issues/118,yaxis,2021/11,bug;invalid;question;1 (Low Risk)
56,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,several functions can be marked external,119,https://github.com/code-423n4/2021-11-yaxis-findings/issues/119,yaxis,2021/11,bug;G (Gas Optimization);sponsor acknowledged;fix later
56,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,3,borrowFee can be completly bypassed while minting,120,https://github.com/code-423n4/2021-11-yaxis-findings/issues/120,yaxis,2021/11,bug;invalid;3 (High Risk);sponsor disputed
56,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,`_expectCaller` mutability can be restricted to view,121,https://github.com/code-423n4/2021-11-yaxis-findings/issues/121,yaxis,2021/11,bug;duplicate;G (Gas Optimization)
56,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,3,CDP.sol update overwrites user's credit on every positive increment,31,https://github.com/code-423n4/2021-11-yaxis-findings/issues/31,yaxis,2021/11,bug;3 (High Risk);resolved;sponsor disputed
56,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,YaxisVaultAdapter: deposit() should be restricted to onlyAdmin,71,https://github.com/code-423n4/2021-11-yaxis-findings/issues/71,yaxis,2021/11,bug;duplicate;1 (Low Risk)
56,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,YaxisVaultAdapter: FixedPointMath import is unused,73,https://github.com/code-423n4/2021-11-yaxis-findings/issues/73,yaxis,2021/11,bug;duplicate;G (Gas Optimization)
56,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,YaxisVaultAdapter: Make variables immutable,74,https://github.com/code-423n4/2021-11-yaxis-findings/issues/74,yaxis,2021/11,bug;duplicate;G (Gas Optimization)
56,hubble,0xd2DFc6F7a13AD5576eEBBDa7C8DEE36908Cb3AaD,1,Wrong event emitted during setBorrowFee function call,122,https://github.com/code-423n4/2021-11-yaxis-findings/issues/122,yaxis,2021/11,bug;duplicate;1 (Low Risk)
56,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,1,Some token contract only allow users calling approve when allowance is zero. ,1,https://github.com/code-423n4/2021-11-yaxis-findings/issues/1,yaxis,2021/11,bug;duplicate;0 (Non-critical);sponsor disputed
56,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,`onPriceCheck` revert on every transaction,32,https://github.com/code-423n4/2021-11-yaxis-findings/issues/32,yaxis,2021/11,bug;invalid;3 (High Risk);sponsor disputed
56,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,`Alchemist.sol` does not use safeApprove,33,https://github.com/code-423n4/2021-11-yaxis-findings/issues/33,yaxis,2021/11,bug;1 (Low Risk);sponsor disputed;wont fix
56,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Avoid SLOAD Known Number to Save Gas,55,https://github.com/code-423n4/2021-11-yaxis-findings/issues/55,yaxis,2021/11,bug;invalid;G (Gas Optimization);sponsor disputed
56,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,No Transfer Ownership Pattern in AlToken.sol,56,https://github.com/code-423n4/2021-11-yaxis-findings/issues/56,yaxis,2021/11,bug;0 (Non-critical);sponsor disputed;wont fix
56,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,mint() Rearrange Require to Save Gas ,57,https://github.com/code-423n4/2021-11-yaxis-findings/issues/57,yaxis,2021/11,bug;duplicate;G (Gas Optimization)
56,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,lowerHasMinted() Allow Minter to Mint Unlimited AlToken,58,https://github.com/code-423n4/2021-11-yaxis-findings/issues/58,yaxis,2021/11,bug;invalid;3 (High Risk);sponsor disputed
56,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,function mint() No Tokens Will be Transfer to _recipient,59,https://github.com/code-423n4/2021-11-yaxis-findings/issues/59,yaxis,2021/11,bug;invalid;3 (High Risk);sponsor disputed
56,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,Constructor Lack of Zero Address Check for Tokens,60,https://github.com/code-423n4/2021-11-yaxis-findings/issues/60,yaxis,2021/11,bug;0 (Non-critical);sponsor disputed;wont fix
56,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,function distribute() Allow Certain Users Transfer Third Persons Token aka Users'Wallet into Contract,61,https://github.com/code-423n4/2021-11-yaxis-findings/issues/61,yaxis,2021/11,bug;invalid;3 (High Risk);sponsor disputed
56,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary `MLOAD`s in for-each loops,80,https://github.com/code-423n4/2021-11-yaxis-findings/issues/80,yaxis,2021/11,bug;invalid;G (Gas Optimization)
56,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary array boundaries check when loading an array element twice,81,https://github.com/code-423n4/2021-11-yaxis-findings/issues/81,yaxis,2021/11,bug;invalid;G (Gas Optimization)
56,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unchecked Prefix increaments are cheaper than postfix increaments,82,https://github.com/code-423n4/2021-11-yaxis-findings/issues/82,yaxis,2021/11,bug;invalid;G (Gas Optimization)
56,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,State variables can be `immutable`s,83,https://github.com/code-423n4/2021-11-yaxis-findings/issues/83,yaxis,2021/11,bug;invalid;G (Gas Optimization)
56,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,`public` functions can be `external`,85,https://github.com/code-423n4/2021-11-yaxis-findings/issues/85,yaxis,2021/11,bug;invalid;G (Gas Optimization)
56,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary `SLOAD`s,86,https://github.com/code-423n4/2021-11-yaxis-findings/issues/86,yaxis,2021/11,bug;invalid;G (Gas Optimization)
56,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Open TODOs,87,https://github.com/code-423n4/2021-11-yaxis-findings/issues/87,yaxis,2021/11,bug;invalid;0 (Non-critical)
56,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Require statements without messages,88,https://github.com/code-423n4/2021-11-yaxis-findings/issues/88,yaxis,2021/11,bug;0 (Non-critical);wont fix
56,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,ERC20.transfer return value is ignored,89,https://github.com/code-423n4/2021-11-yaxis-findings/issues/89,yaxis,2021/11,bug;invalid;3 (High Risk)
56,pants,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,SafeApprove is deprecated,90,https://github.com/code-423n4/2021-11-yaxis-findings/issues/90,yaxis,2021/11,bug;duplicate;0 (Non-critical)
56,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,anyone can deposit to adapters directly,103,https://github.com/code-423n4/2021-11-yaxis-findings/issues/103,yaxis,2021/11,bug;1 (Low Risk);sponsor acknowledged;wont fix
56,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,setBorrowFee emits HarvestFeeUpdated,104,https://github.com/code-423n4/2021-11-yaxis-findings/issues/104,yaxis,2021/11,bug;duplicate;1 (Low Risk)
56,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Context and msg.sender,105,https://github.com/code-423n4/2021-11-yaxis-findings/issues/105,yaxis,2021/11,bug;0 (Non-critical);resolved;sponsor confirmed
56,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Misleading comments about admin/sentinel auth,106,https://github.com/code-423n4/2021-11-yaxis-findings/issues/106,yaxis,2021/11,bug;duplicate;1 (Low Risk)
56,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,_setupRole not in constructor,107,https://github.com/code-423n4/2021-11-yaxis-findings/issues/107,yaxis,2021/11,bug;invalid;1 (Low Risk);sponsor disputed
56,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,setSentinel actually adds sentinel,108,https://github.com/code-423n4/2021-11-yaxis-findings/issues/108,yaxis,2021/11,bug;1 (Low Risk);resolved;sponsor disputed
56,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Immutable variables,109,https://github.com/code-423n4/2021-11-yaxis-findings/issues/109,yaxis,2021/11,bug;duplicate;G (Gas Optimization)
56,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Constant expressions,110,https://github.com/code-423n4/2021-11-yaxis-findings/issues/110,yaxis,2021/11,bug;G (Gas Optimization);sponsor disputed;wont fix
56,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Assigned operations to constant variables,111,https://github.com/code-423n4/2021-11-yaxis-findings/issues/111,yaxis,2021/11,bug;G (Gas Optimization);sponsor disputed;wont fix
56,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Shorter revert messages,112,https://github.com/code-423n4/2021-11-yaxis-findings/issues/112,yaxis,2021/11,bug;duplicate;G (Gas Optimization)
56,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Dead code,113,https://github.com/code-423n4/2021-11-yaxis-findings/issues/113,yaxis,2021/11,bug;duplicate;G (Gas Optimization)
56,pmerkleplant,0x7125412Fc011D74C26E3CA768aB6224643702313,1,Incorrect function docs,35,https://github.com/code-423n4/2021-11-yaxis-findings/issues/35,yaxis,2021/11,bug;1 (Low Risk);disagree with severity;resolved;sponsor confirmed
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,1,Effects and Interactions Before Check,10,https://github.com/code-423n4/2021-11-yaxis-findings/issues/10,yaxis,2021/11,bug;1 (Low Risk);sponsor acknowledged;fix later
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,0,Convert Emergency Exit Check to Modifier.,11,https://github.com/code-423n4/2021-11-yaxis-findings/issues/11,yaxis,2021/11,bug;0 (Non-critical);resolved;sponsor confirmed
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,2,Prevent Minting During Emergency Exit,12,https://github.com/code-423n4/2021-11-yaxis-findings/issues/12,yaxis,2021/11,bug;2 (Med Risk);resolved;sponsor confirmed
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,G,Make Vault immutable,14,https://github.com/code-423n4/2021-11-yaxis-findings/issues/14,yaxis,2021/11,bug;duplicate;G (Gas Optimization)
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,1,admin Variable is High Risk,15,https://github.com/code-423n4/2021-11-yaxis-findings/issues/15,yaxis,2021/11,bug;0 (Non-critical);sponsor disputed;wont fix
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,G,Fixed admin should be immutable,16,https://github.com/code-423n4/2021-11-yaxis-findings/issues/16,yaxis,2021/11,bug;duplicate;invalid;G (Gas Optimization)
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,0,Remove FixedPointMath ,18,https://github.com/code-423n4/2021-11-yaxis-findings/issues/18,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,3,Lack of Proper Tests?,20,https://github.com/code-423n4/2021-11-yaxis-findings/issues/20,yaxis,2021/11,bug;0 (Non-critical);disagree with severity;fix later
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,1,Vulnerability to Unexpected Token Behaviour in withdraw(),21,https://github.com/code-423n4/2021-11-yaxis-findings/issues/21,yaxis,2021/11,bug;duplicate;0 (Non-critical);sponsor disputed
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,0,Incorrect Info in Comment in Alchemist.sol,5,https://github.com/code-423n4/2021-11-yaxis-findings/issues/5,yaxis,2021/11,bug;0 (Non-critical);resolved;sponsor confirmed
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,0,Incorrect Info in Comment in Alchemist.sol (138),6,https://github.com/code-423n4/2021-11-yaxis-findings/issues/6,yaxis,2021/11,bug;0 (Non-critical);resolved;sponsor confirmed
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,1,Incorrect Event Emitted in Alchemist.sol,7,https://github.com/code-423n4/2021-11-yaxis-findings/issues/7,yaxis,2021/11,bug;1 (Low Risk);resolved;sponsor confirmed
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,2,Lack of Input Validation,75,https://github.com/code-423n4/2021-11-yaxis-findings/issues/75,yaxis,2021/11,bug;0 (Non-critical);sponsor disputed;wont fix
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,1,No Event Emitted on Minting,76,https://github.com/code-423n4/2021-11-yaxis-findings/issues/76,yaxis,2021/11,bug;0 (Non-critical);sponsor disputed;wont fix
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,0,Incorrect Comment,77,https://github.com/code-423n4/2021-11-yaxis-findings/issues/77,yaxis,2021/11,bug;0 (Non-critical);resolved;sponsor disputed
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,G,Restrict _expectCaller() Mutability,8,https://github.com/code-423n4/2021-11-yaxis-findings/issues/8,yaxis,2021/11,bug;duplicate;G (Gas Optimization)
56,TimmyToes,0xF2E17FEC8fed156726b105C7D8340829D88F5db1,G,Multiple Assignments to Storage Variable,9,https://github.com/code-423n4/2021-11-yaxis-findings/issues/9,yaxis,2021/11,bug;G (Gas Optimization);sponsor disputed;wont fix
56,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Gas optimization when a paused user calls mint() in AlToken.sol,2,https://github.com/code-423n4/2021-11-yaxis-findings/issues/2,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed
56,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Gas optimization in AlToken.sol,3,https://github.com/code-423n4/2021-11-yaxis-findings/issues/3,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed
56,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,0,Lack of 'emit' keyword in AlToken.sol,4,https://github.com/code-423n4/2021-11-yaxis-findings/issues/4,yaxis,2021/11,bug;0 (Non-critical);resolved;sponsor confirmed
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unnecessary libraries,36,https://github.com/code-423n4/2021-11-yaxis-findings/issues/36,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor disputed
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use immutable variable can save gas,37,https://github.com/code-423n4/2021-11-yaxis-findings/issues/37,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`AlToken.sol#mint()` Check `!paused[msg.sender]` earlier can save gas,38,https://github.com/code-423n4/2021-11-yaxis-findings/issues/38,yaxis,2021/11,bug;duplicate;G (Gas Optimization)
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused imports,39,https://github.com/code-423n4/2021-11-yaxis-findings/issues/39,yaxis,2021/11,bug;duplicate;G (Gas Optimization)
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Misleading comments,40,https://github.com/code-423n4/2021-11-yaxis-findings/issues/40,yaxis,2021/11,bug;duplicate;0 (Non-critical)
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Only using `SafeMath` when necessary can save gas,41,https://github.com/code-423n4/2021-11-yaxis-findings/issues/41,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Missing events for critical operations,42,https://github.com/code-423n4/2021-11-yaxis-findings/issues/42,yaxis,2021/11,bug;duplicate;0 (Non-critical)
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Alchemist.sol#setBorrowFee()` Wrong event emitted,43,https://github.com/code-423n4/2021-11-yaxis-findings/issues/43,yaxis,2021/11,bug;duplicate;1 (Low Risk)
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache and read storage variables from the stack can save gas,44,https://github.com/code-423n4/2021-11-yaxis-findings/issues/44,yaxis,2021/11,bug;G (Gas Optimization);resolved
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`YaxisVaultAdapter.sol` Use inline expression can save gas,45,https://github.com/code-423n4/2021-11-yaxis-findings/issues/45,yaxis,2021/11,bug;G (Gas Optimization);resolved
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`YaxisVaultAdapter.sol#withdraw()` will most certainly fail,46,https://github.com/code-423n4/2021-11-yaxis-findings/issues/46,yaxis,2021/11,bug;3 (High Risk);resolved;sponsor confirmed
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Use of deprecated `safeApprove`,47,https://github.com/code-423n4/2021-11-yaxis-findings/issues/47,yaxis,2021/11,bug;0 (Non-critical);sponsor acknowledged;wont fix
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Should `safeApprove(0)` first,48,https://github.com/code-423n4/2021-11-yaxis-findings/issues/48,yaxis,2021/11,bug;0 (Non-critical);resolved
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Tokens with fee on transfer are not supported,49,https://github.com/code-423n4/2021-11-yaxis-findings/issues/49,yaxis,2021/11,bug;0 (Non-critical);sponsor disputed;wont fix
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,50,https://github.com/code-423n4/2021-11-yaxis-findings/issues/50,yaxis,2021/11,bug;G (Gas Optimization);sponsor acknowledged;fix later
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Change unnecessary storage variables to constants can save gas,51,https://github.com/code-423n4/2021-11-yaxis-findings/issues/51,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor acknowledged
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Save `vault.getToken()` as an immutable variable in `YaxisVaultAdapter.sol` contract can save gas,52,https://github.com/code-423n4/2021-11-yaxis-findings/issues/52,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Alchemist.sol#mint()` Two storage writes can be combined into one,53,https://github.com/code-423n4/2021-11-yaxis-findings/issues/53,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed
56,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Inline internal functions that are being used only once can save gas,54,https://github.com/code-423n4/2021-11-yaxis-findings/issues/54,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor acknowledged
56,xxxxx,0xF3726952CD759C710418dCAd508C38f67F330264,G,Duplicate of calculation increases the gas,78,https://github.com/code-423n4/2021-11-yaxis-findings/issues/78,yaxis,2021/11,bug;invalid;G (Gas Optimization)
56,xxxxx,0xF3726952CD759C710418dCAd508C38f67F330264,G,Gas reduction by bypassing the heavy gas user for 1 scenario,93,https://github.com/code-423n4/2021-11-yaxis-findings/issues/93,yaxis,2021/11,bug;invalid;G (Gas Optimization)
56,xxxxx,0xF3726952CD759C710418dCAd508C38f67F330264,G,Reducing gas by not reading the storage variable twice,94,https://github.com/code-423n4/2021-11-yaxis-findings/issues/94,yaxis,2021/11,bug;duplicate;G (Gas Optimization)
56,xxxxx,0xF3726952CD759C710418dCAd508C38f67F330264,G,Gas and smart contract size reduction by removing the unnecessary check,95,https://github.com/code-423n4/2021-11-yaxis-findings/issues/95,yaxis,2021/11,bug;invalid;G (Gas Optimization);sponsor disputed
56,xxxxx,0xF3726952CD759C710418dCAd508C38f67F330264,G,Removing the unnecessary function,96,https://github.com/code-423n4/2021-11-yaxis-findings/issues/96,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed
56,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,borrowFee Issues (Alchemist.sol) ,114,https://github.com/code-423n4/2021-11-yaxis-findings/issues/114,yaxis,2021/11,bug;duplicate;1 (Low Risk)
56,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused Named Returns,115,https://github.com/code-423n4/2021-11-yaxis-findings/issues/115,yaxis,2021/11,bug;G (Gas Optimization);sponsor disputed;wont fix
56,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,TRANSMUTATION_PERIOD Issues,116,https://github.com/code-423n4/2021-11-yaxis-findings/issues/116,yaxis,2021/11,bug;G (Gas Optimization);resolved;sponsor confirmed
56,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Incorrect comment or code in runPhasedDistribution (Transmuter.sol),117,https://github.com/code-423n4/2021-11-yaxis-findings/issues/117,yaxis,2021/11,bug;1 (Low Risk);sponsor disputed;wont fix
65,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,divide-before-multiply,155,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/155,defiprotocol,2021/12,bug;duplicate;2 (Med Risk);sponsor confirmed
65,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,Extra payments for an auction gets stucks,137,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/137,defiprotocol,2021/12,bug;1 (Low Risk);sponsor acknowledged
65,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Use negate(!) rather than `== false`,138,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/138,defiprotocol,2021/12,bug;G (Gas Optimization)
65,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For uint `> 0` can be replaced with ` != 0` for gas optimization,139,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/139,defiprotocol,2021/12,bug;G (Gas Optimization)
65,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Loops can be implemented more efficiently,140,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/140,defiprotocol,2021/12,bug;G (Gas Optimization)
65,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,Inconsistent usage of `safeApprove`,141,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/141,defiprotocol,2021/12,bug;invalid
65,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`mintTo` has not an extra require statement,142,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/142,defiprotocol,2021/12,bug;G (Gas Optimization)
65,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`handleFees` can be implemented more efficiently,143,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/143,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,`Basket.sol#auctionBurn` calculates `ibRatio` wrong,144,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/144,defiprotocol,2021/12,bug;2 (Med Risk);sponsor confirmed
65,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,Change in `auctionMultiplier/auctionDecrement` change profitability of auctions and factory can steal all tokens from a basket abusing it,145,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/145,defiprotocol,2021/12,bug;2 (Med Risk);sponsor confirmed
65,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,`maxSupply` can be exceeded,146,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/146,defiprotocol,2021/12,bug;1 (Low Risk);sponsor acknowledged
65,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Division with `BASE` twice can be optimized ,147,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/147,defiprotocol,2021/12,bug;G (Gas Optimization)
65,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,In `validateWeights` cache `_tokens[i]`,148,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/148,defiprotocol,2021/12,bug;invalid
65,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,Publisher can scam users by changing license fees and using auction to freeze user funds,149,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/149,defiprotocol,2021/12,bug;duplicate;2 (Med Risk)
65,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,Factory can block auctions,150,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/150,defiprotocol,2021/12,bug;1 (Low Risk);sponsor acknowledged
65,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Use of Require statement without reason message,10,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/10,defiprotocol,2021/12,bug;0 (Non-critical)
65,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Empty condition block,11,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/11,defiprotocol,2021/12,bug;invalid
65,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Remove override keyword from Auction,12,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/12,defiprotocol,2021/12,bug;0 (Non-critical)
65,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Remove override keyword from Basket,13,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/13,defiprotocol,2021/12,bug;0 (Non-critical)
65,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Auction is not very resilient ,14,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/14,defiprotocol,2021/12,bug;invalid
65,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Lack of event indexing,15,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/15,defiprotocol,2021/12,bug;0 (Non-critical)
65,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Lack of input verification,8,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/8,defiprotocol,2021/12,bug;0 (Non-critical)
65,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Remove override keyword,9,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/9,defiprotocol,2021/12,bug;0 (Non-critical)
65,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,3,No access control on initialise() will lead to stolen funds ,169,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/169,defiprotocol,2021/12,bug;invalid
65,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,Lack of message in require statments,6,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/6,defiprotocol,2021/12,bug;0 (Non-critical)
65,broccolirob,0x5233aF283E7C359a1011Dc0ff480298E90c8CFd6,3,A `delegatecall` to `createBasket` compromises `Auction` and `Basket` references to `Factory` contract.,172,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/172,defiprotocol,2021/12,bug;invalid
65,broccolirob,0x5233aF283E7C359a1011Dc0ff480298E90c8CFd6,3,Reentrancy vulnerability in `Basket` contract's `initialize()` method.,176,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/176,defiprotocol,2021/12,bug;2 (Med Risk);sponsor confirmed
65,broccolirob,0x5233aF283E7C359a1011Dc0ff480298E90c8CFd6,1,Use of deprecated `safeApprove()` function,177,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/177,defiprotocol,2021/12,bug;0 (Non-critical);sponsor acknowledged
65,bw,0x3d977eF4855A526500E901bFA43c209E0C51BA84,1,Broken unit tests due to incorrect values,88,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/88,defiprotocol,2021/12,bug;0 (Non-critical);sponsor acknowledged
65,bw,0x3d977eF4855A526500E901bFA43c209E0C51BA84,G,Runtime constants not defined as immutable,89,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/89,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Redundant check in `setNewMaxSupply`,7,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/7,defiprotocol,2021/12,bug;G (Gas Optimization)
65,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,G,gas,72,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/72,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,G,gas,73,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/73,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,G,gas,75,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/75,defiprotocol,2021/12,bug;invalid
65,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,G,"Unneeded approval in approveUnderlying, remove to save gas",71,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/71,defiprotocol,2021/12,bug;invalid
65,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,3,DOS attack - BondForRebalance,80,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/80,defiprotocol,2021/12,bug;invalid
65,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Auction:settleAuction() cache address(basket),164,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/164,defiprotocol,2021/12,bug;G (Gas Optimization)
65,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Auction:bondForRebalance() store calculation of bondAmount in local variable,166,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/166,defiprotocol,2021/12,bug;G (Gas Optimization)
65,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Auction:bondBurn(): cache bondAmount,167,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/167,defiprotocol,2021/12,bug;G (Gas Optimization)
65,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,2,Basket:handleFees(): fees are overcharged,170,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/170,defiprotocol,2021/12,bug;2 (Med Risk);sponsor acknowledged
65,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,1,Basket airdops can't be claimed,171,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/171,defiprotocol,2021/12,bug;invalid
65,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,1,Dust can't be withdrawn,174,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/174,defiprotocol,2021/12,bug;invalid
65,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,1,Usage of deprecated safeApprove,175,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/175,defiprotocol,2021/12,bug;duplicate;0 (Non-critical)
65,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,2,Basket:handleFees fee calculation is wrong,43,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/43,defiprotocol,2021/12,bug;2 (Med Risk);sponsor confirmed
65,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,1,Factory:setOwnerSplit owner fee split can be set to exactly 20%,44,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/44,defiprotocol,2021/12,bug;0 (Non-critical)
65,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Factory:constructor don't need to zero initialize storage variable,45,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/45,defiprotocol,2021/12,bug;G (Gas Optimization)
65,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Basket:initialize() reuse function argument instead of storage variable,46,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/46,defiprotocol,2021/12,bug;G (Gas Optimization)
65,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Basket:handleFees() use unchecked to save gas,47,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/47,defiprotocol,2021/12,bug;G (Gas Optimization)
65,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Basket:updateIBRatio() reuse the function argument instead of the storage variable,48,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/48,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Basket:pushUnderlying()/pullUnderlying() cache ibRatio to save gas,49,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/49,defiprotocol,2021/12,bug;G (Gas Optimization)
65,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Basket:validateWeights() don't iterate the full inner loop to save gas,51,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/51,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,gpersoon,gpersoon.eth,1,Emit for publishNewIndex / killAuction part,32,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/32,defiprotocol,2021/12,bug;0 (Non-critical);sponsor confirmed
65,gpersoon,gpersoon.eth,1,changeLicenseFee() and fees for previous period,33,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/33,defiprotocol,2021/12,bug;1 (Low Risk);sponsor acknowledged
65,gpersoon,gpersoon.eth,1,Add validity check in setAuctionMultiplier(),34,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/34,defiprotocol,2021/12,bug;duplicate;0 (Non-critical)
65,gpersoon,gpersoon.eth,1,Add validity check in setAuctionDecrement(),35,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/35,defiprotocol,2021/12,bug;duplicate;0 (Non-critical)
65,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Reorder storage layout,129,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/129,defiprotocol,2021/12,bug;G (Gas Optimization)
65,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use calldata instead of memory,130,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/130,defiprotocol,2021/12,bug;G (Gas Optimization)
65,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Mark immutable variables ,131,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/131,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Mark immutable variables ,132,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/132,defiprotocol,2021/12,bug;invalid
65,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Struct layout,133,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/133,defiprotocol,2021/12,bug;invalid
65,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,`BasketLicenseProposed` better emit proposal id,134,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/134,defiprotocol,2021/12,bug;0 (Non-critical);sponsor confirmed
65,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,`safeApprove` is deprecated,151,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/151,defiprotocol,2021/12,bug;duplicate;0 (Non-critical)
65,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Fee calculation is slightly off,152,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/152,defiprotocol,2021/12,bug;2 (Med Risk);sponsor acknowledged
65,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Remove unnecessary init to default value,153,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/153,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Missing cap on LicenseFee,154,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/154,defiprotocol,2021/12,bug;2 (Med Risk);sponsor acknowledged
65,hagrid,0x3A46FeD37cAcd52a6DACc4a49f520AdaD0e51D61,1,Open TODOs,28,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/28,defiprotocol,2021/12,bug;duplicate;0 (Non-critical)
65,hagrid,0x3A46FeD37cAcd52a6DACc4a49f520AdaD0e51D61,1,RACE-CONDITION RISK WITH INITIALIZE FUNCTIONS,29,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/29,defiprotocol,2021/12,bug;invalid
65,hagrid,0x3A46FeD37cAcd52a6DACc4a49f520AdaD0e51D61,1,`Ownable` Contract Does Not Implement Two-Step Transfer Ownership Pattern,30,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/30,defiprotocol,2021/12,bug;0 (Non-critical);sponsor acknowledged
65,hagrid,0x3A46FeD37cAcd52a6DACc4a49f520AdaD0e51D61,1,Missing Revert Messages,31,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/31,defiprotocol,2021/12,bug;0 (Non-critical)
65,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Useless imports,113,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/113,defiprotocol,2021/12,bug;G (Gas Optimization)
65,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,A variable is being assigned its default value,114,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/114,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Use approve(0) first,116,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/116,defiprotocol,2021/12,bug;invalid
65,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Cache array length in for loops can save gas,124,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/124,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,A more efficient for loop index proceeding,125,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/125,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,> 0 can be replaced with != 0 for gas optimisation,127,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/127,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Mint method could be set external instead public,128,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/128,defiprotocol,2021/12,bug;invalid
65,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,TODO comments should be resolved ,135,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/135,defiprotocol,2021/12,bug;0 (Non-critical)
65,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,`settleAuction()` method could be set external instead public,136,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/136,defiprotocol,2021/12,bug;invalid
65,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Wrong fee calculation after totalSupply was 0,58,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/58,defiprotocol,2021/12,bug;3 (High Risk);sponsor confirmed
65,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Lost fees due to precision loss in fees calculation,60,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/60,defiprotocol,2021/12,bug;2 (Med Risk)
65,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,0,Wrong syntax in test leads to wrong test results,62,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/62,defiprotocol,2021/12,bug;0 (Non-critical)
65,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Unnecessary new list in Basket's validateWeights(),63,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/63,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Unnecessary initializing of variable to 0,64,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/64,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Restore state to 0 if not needed anymore,65,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/65,defiprotocol,2021/12,bug;invalid
65,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,"Redundant call to external contract, result can be saved ",66,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/66,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Emitting storage var rather than memory,67,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/67,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,TODOs List May Leak Important Info & Errors,81,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/81,defiprotocol,2021/12,bug;duplicate;0 (Non-critical)
65,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,setAuctionMultiplier() Lack of Input Validation May Break Other Function,82,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/82,defiprotocol,2021/12,bug;0 (Non-critical);sponsor acknowledged
65,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,setAuctionDecrement() Lack of Input Validation May Break Other Function,83,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/83,defiprotocol,2021/12,bug;0 (Non-critical);sponsor acknowledged
65,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Avoid Initialization of Loop Index If It Is 0 to Save Gas,84,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/84,defiprotocol,2021/12,bug;G (Gas Optimization)
65,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,Use safeIncreaseAllowance() Instead of Deprecated safeApprove(),85,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/85,defiprotocol,2021/12,bug;duplicate;0 (Non-critical)
65,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Repeat SLOAD weights During Loop in Multiple Functions is Waste of Gas,86,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/86,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Factory Constructor Does Not Check for Zero Addresses,87,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/87,defiprotocol,2021/12,bug;invalid
65,neslinesli93,0x05F75e99d8578958Faa756953164ddE0F1FAcbbd,1,"Incorrent visibility for ""initialized"" variable",50,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/50,defiprotocol,2021/12,bug;0 (Non-critical);sponsor confirmed
65,neslinesli93,0x05F75e99d8578958Faa756953164ddE0F1FAcbbd,0,Unnecessary variable initialization and TODO in code,76,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/76,defiprotocol,2021/12,bug;0 (Non-critical)
65,neslinesli93,0x05F75e99d8578958Faa756953164ddE0F1FAcbbd,0,Possible division by zero in `settleAuction`,77,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/77,defiprotocol,2021/12,bug;0 (Non-critical)
65,neslinesli93,0x05F75e99d8578958Faa756953164ddE0F1FAcbbd,G,Set allowance only once when initializing a basket,78,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/78,defiprotocol,2021/12,bug;invalid
65,neslinesli93,0x05F75e99d8578958Faa756953164ddE0F1FAcbbd,G,Use local variables when emitting `ChangedPublisher` and `ChangedLicenseFee`,79,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/79,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,++i is more gas efficient than i++ ,68,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/68,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Cache array length outside of loop,69,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/69,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Use `!= 0` instead of `> 0` for unsigned integer comparisons,70,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/70,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,rishabh,0xaf55d73461836577FEEbe04Ca5CFFFD1918B345C,2,Check for tokenAmount > 0 is missing in pushUnderlying function [basket.sol],165,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/165,defiprotocol,2021/12,bug;G (Gas Optimization);sponsor acknowledged
65,rishabh,0xaf55d73461836577FEEbe04Ca5CFFFD1918B345C,G,Caching array length will save gas [Basket.sol],168,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/168,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused imports,16,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/16,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Struct packing,17,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/17,defiprotocol,2021/12,bug;invalid
65,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,18,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/18,defiprotocol,2021/12,bug;G (Gas Optimization)
65,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Internal functions to private,19,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/19,defiprotocol,2021/12,bug;invalid
65,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,20,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/20,defiprotocol,2021/12,bug;invalid
65,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,21,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/21,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary array boundaries check when loading an array element twice,22,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/22,defiprotocol,2021/12,bug;invalid
65,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with empty message,23,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/23,defiprotocol,2021/12,bug;duplicate;0 (Non-critical)
65,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Must approve 0 first,24,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/24,defiprotocol,2021/12,bug;invalid
65,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove of openZeppelin is deprecated,25,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/25,defiprotocol,2021/12,bug;duplicate;0 (Non-critical)
65,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Open TODOs,26,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/26,defiprotocol,2021/12,bug;duplicate;0 (Non-critical)
65,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified function inputs of public / external functions,27,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/27,defiprotocol,2021/12,bug;0 (Non-critical);sponsor acknowledged
65,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,3,Basket can be fully drained if the auction is settled within a specific block,74,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/74,defiprotocol,2021/12,bug;2 (Med Risk);sponsor confirmed
65,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Function can be external,101,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/101,defiprotocol,2021/12,bug;invalid
65,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Reorder storage variable to save gas,102,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/102,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Function can be external,99,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/99,defiprotocol,2021/12,bug;invalid
65,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Unnecessary uint zero initialization,163,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/163,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Usage of deprecated safeApprove() function,61,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/61,defiprotocol,2021/12,bug;duplicate;0 (Non-critical)
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Post-mint check of totalSupply not exceeding maxSupply is unnecessary,1,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/1,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Extra ERC20 approvals/transfers on Basket deployment,2,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/2,defiprotocol,2021/12,bug;G (Gas Optimization)
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,`initialized` variable in Basket.sol is unnecessary,3,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/3,defiprotocol,2021/12,bug;invalid
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Auction.auctionOngoing variable is unnecessary,36,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/36,defiprotocol,2021/12,bug;G (Gas Optimization)
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Auction.hasBonded variable is unnecessary,37,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/37,defiprotocol,2021/12,bug;G (Gas Optimization)
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Excessive checking of basket totalsupply,38,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/38,defiprotocol,2021/12,bug;G (Gas Optimization)
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Excessive checking of factory.ownerSplit,39,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/39,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Minted and Burned events are unnecessary,4,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/4,defiprotocol,2021/12,bug;G (Gas Optimization)
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Unnecessary reading of basket total supply,40,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/40,defiprotocol,2021/12,bug;invalid
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Publisher switch logic can be simplified,41,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/41,defiprotocol,2021/12,bug;G (Gas Optimization)
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,"Basket publisher can raise licenseFee in an unbounded fashion, stealing other users tokens",42,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/42,defiprotocol,2021/12,bug;duplicate;2 (Med Risk)
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,0,Lack of revert reason strings,5,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/5,defiprotocol,2021/12,bug;0 (Non-critical)
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3, Basket publisher can steal user assets by proposing a malicious auction,52,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/52,defiprotocol,2021/12,bug;invalid
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,Publisher can lock all user funds in the Basket in order to force a user to have their bond burned,53,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/53,defiprotocol,2021/12,bug;2 (Med Risk);sponsor acknowledged
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,"By requiring that tokens are provided in ascending order, checking for duplicates is simplified",54,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/54,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Basket and Auction should be merged into a single contract,55,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/55,defiprotocol,2021/12,bug;invalid
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,2,Bonding doesn't seem to perform any meaningful role and leads to inefficient auctions,56,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/56,defiprotocol,2021/12,bug;1 (Low Risk);sponsor acknowledged
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,`auctionImpl` and `basketImpl` in factory can be made immutable for gas savings,57,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/57,defiprotocol,2021/12,bug;G (Gas Optimization)
65,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Explicit assignment of zero to `ownerSplit` waste gas,59,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/59,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Basket.sol#approveUnderlying()` Cache and read storage variables from the stack can save gas,100,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/100,defiprotocol,2021/12,bug;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Basket.sol` Pending licenseFee may unable to be canceled when current licenseFee is `0`,103,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/103,defiprotocol,2021/12,bug;1 (Low Risk)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Basket.sol` should use the Upgradeable variant of OpenZeppelin Contracts,104,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/104,defiprotocol,2021/12,bug;1 (Low Risk);sponsor acknowledged
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Basket.sol#pullUnderlying()` Cache and read storage variables from the stack can save gas,105,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/105,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"`Auction.sol#settleAuction()` Bonder may not be able to settle a bonded auction, leading to loss of funds",106,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/106,defiprotocol,2021/12,bug;2 (Med Risk);sponsor confirmed
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"`Auction.sol#auctionOngoing` Switching between 1, 2 instead of true, false is more gas efficient",107,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/107,defiprotocol,2021/12,bug;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`Basket.sol#publishNewIndex()` Lack of input validation may cause fund loss to anyone who bonds an auction,108,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/108,defiprotocol,2021/12,bug;duplicate;2 (Med Risk);sponsor acknowledged
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,External visibility should be preferred,109,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/109,defiprotocol,2021/12,bug;invalid
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Basket.sol#handleFees()` Check if `timeDiff > 0` can save gas,110,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/110,defiprotocol,2021/12,bug;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`Factory.sol` Lack of two-step procedure and/or input validation routines for critical operations leaves them error-prone,111,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/111,defiprotocol,2021/12,bug;0 (Non-critical)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Critical operations should emit events,112,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/112,defiprotocol,2021/12,bug;0 (Non-critical)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`NewIndexSubmitted` event is not emitted in some case,115,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/115,defiprotocol,2021/12,bug;0 (Non-critical);sponsor acknowledged
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use free functions to replace external calls can save gas,117,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/117,defiprotocol,2021/12,bug;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`validateWeights()` Limit loop to a meaningful bound can save gas,118,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/118,defiprotocol,2021/12,bug;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,119,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/119,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`++i` is more efficient than `i++`,120,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/120,defiprotocol,2021/12,bug;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unnecessary checked arithmetic in for loops,121,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/121,defiprotocol,2021/12,bug;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache external call results can save gas,122,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/122,defiprotocol,2021/12,bug;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,123,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/123,defiprotocol,2021/12,bug;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Auction.sol#initialize()` Use msg.sender rather than factory_ parameter can save gas,126,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/126,defiprotocol,2021/12,bug;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Outdated compiler version,90,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/90,defiprotocol,2021/12,bug;0 (Non-critical)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Unused imports,91,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/91,defiprotocol,2021/12,bug;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Basket.sol#initialize()` Remove redundant assertion can save gas,92,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/92,defiprotocol,2021/12,bug;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Missing error messages in require statements,93,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/93,defiprotocol,2021/12,bug;0 (Non-critical)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Setting `uint256` variables to `0` is redundant,94,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/94,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Basket.sol#initialize()` Remove redundant storage and code can save gas,95,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/95,defiprotocol,2021/12,bug;invalid
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Basket.sol#changePublisher()` Remove redundant assertion can save gas,96,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/96,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Basket.sol#changeLicenseFee()` Unable to set `licenseFee` to 0,97,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/97,defiprotocol,2021/12,bug;1 (Low Risk);sponsor acknowledged
65,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary storage read can save gas,98,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/98,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Comparison with literal boolean values,156,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/156,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Open TODOs,157,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/157,defiprotocol,2021/12,bug;0 (Non-critical)
65,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,"""> 0"" is less efficient than ""!= 0"" for unsigned integers",158,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/158,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Assignment Of Variable To Default in the constructor,159,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/159,defiprotocol,2021/12,bug;duplicate;G (Gas Optimization)
65,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused Named Return,160,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/160,defiprotocol,2021/12,bug;invalid
65,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Function handleFees #L148-L151 and updateIBRatio (Basket.sol) can be refactored for efficiency and clarity,161,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/161,defiprotocol,2021/12,bug;G (Gas Optimization)
65,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,"Function changePublisher, changeLicenseFee, and setNewMaxSupply  can be refactored for efficiency and clarity",162,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/162,defiprotocol,2021/12,bug;G (Gas Optimization)
55,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Lack of input validation,36,https://github.com/code-423n4/2021-12-maple-findings/issues/36,maple,2021/12,bug;duplicate;invalid;sponsor confirmed
55,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Drain strategy contracts,37,https://github.com/code-423n4/2021-12-maple-findings/issues/37,maple,2021/12,bug;duplicate;invalid;sponsor disputed
55,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Missing `success` return value check in liquidations,32,https://github.com/code-423n4/2021-12-maple-findings/issues/32,maple,2021/12,bug;invalid;sponsor disputed
55,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Same implementation can be registerd for several versions,33,https://github.com/code-423n4/2021-12-maple-findings/issues/33,maple,2021/12,bug;1 (Low Risk);sponsor confirmed
55,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Liquidation strategies are missing authorization checks,34,https://github.com/code-423n4/2021-12-maple-findings/issues/34,maple,2021/12,bug;duplicate;invalid;sponsor disputed
55,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Functionality of liquidation strategies can be broken,35,https://github.com/code-423n4/2021-12-maple-findings/issues/35,maple,2021/12,bug;1 (Low Risk);disagree with severity;sponsor confirmed
55,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing Conditional Check On the Approve Function,68,https://github.com/code-423n4/2021-12-maple-findings/issues/68,maple,2021/12,bug;duplicate;invalid
55,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,IsContract Function Usage,72,https://github.com/code-423n4/2021-12-maple-findings/issues/72,maple,2021/12,bug;0 (Non-critical);sponsor disputed
55,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Less than 256 uints are not gas efficient,73,https://github.com/code-423n4/2021-12-maple-findings/issues/73,maple,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
55,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,ERC20 approve method missing return value check,78,https://github.com/code-423n4/2021-12-maple-findings/issues/78,maple,2021/12,bug;duplicate;0 (Non-critical);sponsor disputed
55,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,MapleLoanInternals:_fundLoan() cache storage reads,28,https://github.com/code-423n4/2021-12-maple-findings/issues/28,maple,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
55,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,MapleLoanInternals:_getEarlyPaymentBreakdown() save a SLOAD,29,https://github.com/code-423n4/2021-12-maple-findings/issues/29,maple,2021/12,bug;duplicate;invalid;G (Gas Optimization);sponsor confirmed
55,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use constant instead of block.timestamp,55,https://github.com/code-423n4/2021-12-maple-findings/issues/55,maple,2021/12,bug;G (Gas Optimization);sponsor confirmed
55,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Let keeper return liquidation proceed from strategy,60,https://github.com/code-423n4/2021-12-maple-findings/issues/60,maple,2021/12,bug;invalid;G (Gas Optimization)
55,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Fund stuck in `Liquidator` if `stopLiquidation` is called ,67,https://github.com/code-423n4/2021-12-maple-findings/issues/67,maple,2021/12,bug;1 (Low Risk);disagree with severity;sponsor confirmed
55,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,refinancer used in delegatecall can be any contract,69,https://github.com/code-423n4/2021-12-maple-findings/issues/69,maple,2021/12,bug;invalid;sponsor disputed
55,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Reduce uint size to pack variable into 1 slot,70,https://github.com/code-423n4/2021-12-maple-findings/issues/70,maple,2021/12,bug;invalid;G (Gas Optimization);sponsor acknowledged
55,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Remove amount_ == uint256(0) checks,71,https://github.com/code-423n4/2021-12-maple-findings/issues/71,maple,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
55,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unchecked safe math,74,https://github.com/code-423n4/2021-12-maple-findings/issues/74,maple,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
55,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use != 0 instead of > 0,75,https://github.com/code-423n4/2021-12-maple-findings/issues/75,maple,2021/12,bug;duplicate;G (Gas Optimization)
55,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use external for function not called internally,77,https://github.com/code-423n4/2021-12-maple-findings/issues/77,maple,2021/12,bug;duplicate;invalid;G (Gas Optimization)
55,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Liquidator constructor miss zero-address checks,20,https://github.com/code-423n4/2021-12-maple-findings/issues/20,maple,2021/12,bug;invalid;disagree with severity;sponsor confirmed
55,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,MapleLoanInternals._fundLoan number of storage reads can be reduced,21,https://github.com/code-423n4/2021-12-maple-findings/issues/21,maple,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
55,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,UniswapV2Strategy and SushiswapStrategy swap functions treat min return amount as desired amount,30,https://github.com/code-423n4/2021-12-maple-findings/issues/30,maple,2021/12,bug;invalid;sponsor disputed
55,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,MapleLoanInternals._initialize doesn't check validity of its arguments,31,https://github.com/code-423n4/2021-12-maple-findings/issues/31,maple,2021/12,bug;duplicate;1 (Low Risk);sponsor confirmed
55,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,MapleLoanInternals._initialize allows arbitrary reinitialization,43,https://github.com/code-423n4/2021-12-maple-findings/issues/43,maple,2021/12,bug;invalid;sponsor disputed
55,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,"Refinancer has no access controls for loan parameters setters, which don't validate new parameters",44,https://github.com/code-423n4/2021-12-maple-findings/issues/44,maple,2021/12,bug;invalid;sponsor disputed
55,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,Early exit fee and last period interest can be avoided by a borrower,76,https://github.com/code-423n4/2021-12-maple-findings/issues/76,maple,2021/12,bug;invalid
55,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Factory constructor should guard against zero addresses,13,https://github.com/code-423n4/2021-12-maple-findings/issues/13,maple,2021/12,bug;duplicate;invalid;sponsor confirmed
55,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,G,extra success variable is not needed in createInstance() function ,14,https://github.com/code-423n4/2021-12-maple-findings/issues/14,maple,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
55,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Proxy constructor should guard again zero address for factory argument,15,https://github.com/code-423n4/2021-12-maple-findings/issues/15,maple,2021/12,bug;duplicate;1 (Low Risk);sponsor confirmed
55,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,_migrate() function should check for a successful delegatecall,16,https://github.com/code-423n4/2021-12-maple-findings/issues/16,maple,2021/12,bug;invalid;sponsor disputed
55,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,return size in _isContract() function check should be inline with battle tested standards,17,https://github.com/code-423n4/2021-12-maple-findings/issues/17,maple,2021/12,bug;invalid;sponsor disputed
55,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,_initializeInstance() does not check success of .call to proxy_,18,https://github.com/code-423n4/2021-12-maple-findings/issues/18,maple,2021/12,bug;duplicate;invalid;sponsor disputed
55,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,MapleLoans.sol does not make use of safeTransfer and safeTransferFrom ,19,https://github.com/code-423n4/2021-12-maple-findings/issues/19,maple,2021/12,bug;invalid;sponsor disputed
55,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Liquidator.sol: Constructor Does Not Check for Zero Addresses,38,https://github.com/code-423n4/2021-12-maple-findings/issues/38,maple,2021/12,bug;duplicate;invalid
55,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,MapleProxyFactory.sol: Constructor Does Not Check for Zero Address,39,https://github.com/code-423n4/2021-12-maple-findings/issues/39,maple,2021/12,bug;invalid;sponsor acknowledged
55,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Long Revert Strings are Waste of Gas,40,https://github.com/code-423n4/2021-12-maple-findings/issues/40,maple,2021/12,bug;duplicate;G (Gas Optimization)
55,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,TODOs List May Leak Important Info & Errors,41,https://github.com/code-423n4/2021-12-maple-findings/issues/41,maple,2021/12,bug;duplicate;0 (Non-critical);disagree with severity;sponsor confirmed
55,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,UpgradePath Does Not Validate toVersion_ Is Higher Than fromVersion_,42,https://github.com/code-423n4/2021-12-maple-findings/issues/42,maple,2021/12,bug;invalid;sponsor disputed
55,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,3,an attacker can get unlimited approval from executing flashborrowliquidation() function,26,https://github.com/code-423n4/2021-12-maple-findings/issues/26,maple,2021/12,bug;invalid;sponsor disputed
55,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,3,"Instance upgrade doesnt disable the previous update, that can lead to upgrade getting degrade to previous instance by malicious user",27,https://github.com/code-423n4/2021-12-maple-findings/issues/27,maple,2021/12,bug;duplicate;invalid;sponsor disputed
55,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused state variables,1,https://github.com/code-423n4/2021-12-maple-findings/issues/1,maple,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
55,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Open TODOs,10,https://github.com/code-423n4/2021-12-maple-findings/issues/10,maple,2021/12,bug;question;0 (Non-critical);disagree with severity;sponsor confirmed
55,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Must approve 0 first,11,https://github.com/code-423n4/2021-12-maple-findings/issues/11,maple,2021/12,bug;1 (Low Risk);sponsor confirmed
55,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,unsafe approves,12,https://github.com/code-423n4/2021-12-maple-findings/issues/12,maple,2021/12,bug;duplicate;0 (Non-critical);sponsor disputed
55,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused declared local variables,2,https://github.com/code-423n4/2021-12-maple-findings/issues/2,maple,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
55,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Short the following require messages,3,https://github.com/code-423n4/2021-12-maple-findings/issues/3,maple,2021/12,bug;G (Gas Optimization);sponsor confirmed
55,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,4,https://github.com/code-423n4/2021-12-maple-findings/issues/4,maple,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
55,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Internal functions to private,5,https://github.com/code-423n4/2021-12-maple-findings/issues/5,maple,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
55,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,6,https://github.com/code-423n4/2021-12-maple-findings/issues/6,maple,2021/12,bug;invalid;G (Gas Optimization);sponsor confirmed
55,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,7,https://github.com/code-423n4/2021-12-maple-findings/issues/7,maple,2021/12,bug;G (Gas Optimization);sponsor confirmed
55,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with empty message,8,https://github.com/code-423n4/2021-12-maple-findings/issues/8,maple,2021/12,bug;invalid;sponsor disputed
55,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Lack Of Precision,9,https://github.com/code-423n4/2021-12-maple-findings/issues/9,maple,2021/12,bug;invalid;sponsor disputed
55,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,1,Floating pragma,23,https://github.com/code-423n4/2021-12-maple-findings/issues/23,maple,2021/12,bug;0 (Non-critical);disagree with severity;sponsor confirmed
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Insufficient input validation,45,https://github.com/code-423n4/2021-12-maple-findings/issues/45,maple,2021/12,bug;1 (Low Risk);sponsor confirmed
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Anyone can call `closeLoan()` to close the loan,46,https://github.com/code-423n4/2021-12-maple-findings/issues/46,maple,2021/12,bug;2 (Med Risk);sponsor confirmed
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Unsafe implementation of `fundLoan()` allows attacker to steal collateral from an unfunded loan,47,https://github.com/code-423n4/2021-12-maple-findings/issues/47,maple,2021/12,bug;2 (Med Risk);disagree with severity;sponsor confirmed
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,48,https://github.com/code-423n4/2021-12-maple-findings/issues/48,maple,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code Style: public functions not used by current contract should be external,49,https://github.com/code-423n4/2021-12-maple-findings/issues/49,maple,2021/12,bug;duplicate;invalid;0 (Non-critical)
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,50,https://github.com/code-423n4/2021-12-maple-findings/issues/50,maple,2021/12,bug;G (Gas Optimization);sponsor acknowledged
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Outdated compiler version,51,https://github.com/code-423n4/2021-12-maple-findings/issues/51,maple,2021/12,bug;duplicate;0 (Non-critical);sponsor disputed
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Unchecked return value for `ERC20.approve` call,52,https://github.com/code-423n4/2021-12-maple-findings/issues/52,maple,2021/12,bug;0 (Non-critical);disagree with severity;sponsor confirmed
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`MapleLoan.sol#drawdownFunds()` Validation of `amount_` can be done earlier to save gas,53,https://github.com/code-423n4/2021-12-maple-findings/issues/53,maple,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use immutable variable can save gas,54,https://github.com/code-423n4/2021-12-maple-findings/issues/54,maple,2021/12,bug;duplicate;G (Gas Optimization)
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"`makePayment()` Lack of access control allows malicious `lender` to retrieve a large portion of the funds earlier, making the borrower suffer fund loss",56,https://github.com/code-423n4/2021-12-maple-findings/issues/56,maple,2021/12,bug;3 (High Risk);sponsor confirmed
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Consider adding storage gaps to proxied contracts,57,https://github.com/code-423n4/2021-12-maple-findings/issues/57,maple,2021/12,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`MapleLoanInternals.sol#_initialize()` Insufficient input validation,58,https://github.com/code-423n4/2021-12-maple-findings/issues/58,maple,2021/12,bug;invalid
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache storage variables in the stack can save gas,59,https://github.com/code-423n4/2021-12-maple-findings/issues/59,maple,2021/12,bug;duplicate;G (Gas Optimization)
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,A malicious `borrower` can `makePayment()` without sufficient collateral,61,https://github.com/code-423n4/2021-12-maple-findings/issues/61,maple,2021/12,bug;invalid;sponsor disputed
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache external call result in the stack can save gas,62,https://github.com/code-423n4/2021-12-maple-findings/issues/62,maple,2021/12,bug;G (Gas Optimization);sponsor confirmed
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unnecessary checked arithmetic in for loops,63,https://github.com/code-423n4/2021-12-maple-findings/issues/63,maple,2021/12,bug;duplicate;invalid;G (Gas Optimization);sponsor acknowledged
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"`Liquidator.sol#_locked` Switching between 1, 2 instead of true, false is more gas efficient",64,https://github.com/code-423n4/2021-12-maple-findings/issues/64,maple,2021/12,bug;G (Gas Optimization);sponsor confirmed
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary arithmetic operations can save gas,65,https://github.com/code-423n4/2021-12-maple-findings/issues/65,maple,2021/12,bug;G (Gas Optimization);sponsor confirmed
55,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Reuse arithmetic results can save gas ,66,https://github.com/code-423n4/2021-12-maple-findings/issues/66,maple,2021/12,bug;G (Gas Optimization);sponsor confirmed
55,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,0,Typos,22,https://github.com/code-423n4/2021-12-maple-findings/issues/22,maple,2021/12,bug;0 (Non-critical);sponsor confirmed
55,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,"""> 0"" is less efficient than ""!= 0"" for unsigned integers",24,https://github.com/code-423n4/2021-12-maple-findings/issues/24,maple,2021/12,bug;G (Gas Optimization);sponsor confirmed
55,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Function poolDelegate does not have a named return (DebtLocker.sol),25,https://github.com/code-423n4/2021-12-maple-findings/issues/25,maple,2021/12,bug;0 (Non-critical);sponsor confirmed
58,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`+= 1` costs extra gas,63,https://github.com/code-423n4/2021-12-mellow-findings/issues/63,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Optimize `baseSupply` calculation in `_chargeFee`,64,https://github.com/code-423n4/2021-12-mellow-findings/issues/64,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,`maxTokensPerVault` is not used,65,https://github.com/code-423n4/2021-12-mellow-findings/issues/65,mellow,2021/12,bug;1 (Low Risk);sponsor confirmed
58,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Don't cache variables used only once,66,https://github.com/code-423n4/2021-12-mellow-findings/issues/66,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,Governor can steal funds from vaults,67,https://github.com/code-423n4/2021-12-mellow-findings/issues/67,mellow,2021/12,bug;invalid;3 (High Risk);sponsor disputed
58,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Make vaultGovernance immutable,68,https://github.com/code-423n4/2021-12-mellow-findings/issues/68,mellow,2021/12,bug;duplicate;G (Gas Optimization)
58,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,Unlimited allowances let anyone move funds to child vaults ,69,https://github.com/code-423n4/2021-12-mellow-findings/issues/69,mellow,2021/12,bug;invalid;2 (Med Risk);sponsor disputed
58,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,Safe ERC20 methods are not used,70,https://github.com/code-423n4/2021-12-mellow-findings/issues/70,mellow,2021/12,bug;duplicate;1 (Low Risk)
58,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,There is no need to assign default values to variables,71,https://github.com/code-423n4/2021-12-mellow-findings/issues/71,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For uint `> 0` can be replaced with ` != 0` for gas optimization,72,https://github.com/code-423n4/2021-12-mellow-findings/issues/72,mellow,2021/12,bug;duplicate;G (Gas Optimization)
58,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Loops can be implemented more efficiently,73,https://github.com/code-423n4/2021-12-mellow-findings/issues/73,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Learn from the past,20,https://github.com/code-423n4/2021-12-mellow-findings/issues/20,mellow,2021/12,bug;1 (Low Risk);sponsor confirmed
58,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Store Interface instead of address,21,https://github.com/code-423n4/2021-12-mellow-findings/issues/21,mellow,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
58,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Wrong logic in UniV3Trader,22,https://github.com/code-423n4/2021-12-mellow-findings/issues/22,mellow,2021/12,bug;1 (Low Risk);disagree with severity
58,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Undesired tokens can be called,23,https://github.com/code-423n4/2021-12-mellow-findings/issues/23,mellow,2021/12,bug;invalid;3 (High Risk);sponsor disputed
58,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Possible deny of service by human error,24,https://github.com/code-423n4/2021-12-mellow-findings/issues/24,mellow,2021/12,bug;duplicate;2 (Med Risk);disagree with severity
58,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Remove don't fail,25,https://github.com/code-423n4/2021-12-mellow-findings/issues/25,mellow,2021/12,bug;invalid;G (Gas Optimization);sponsor confirmed
58,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Don't check contains before remove II,26,https://github.com/code-423n4/2021-12-mellow-findings/issues/26,mellow,2021/12,bug;G (Gas Optimization);sponsor confirmed
58,0x421f,0x421f0897F2E07462b5A7B994AbF8AE758DD0DD70,G,Skip initialization of factory address in vault governance by predicting it before hand,127,https://github.com/code-423n4/2021-12-mellow-findings/issues/127,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,0x421f,0x421f0897F2E07462b5A7B994AbF8AE758DD0DD70,G,Redundant check for timestamp > 0,128,https://github.com/code-423n4/2021-12-mellow-findings/issues/128,mellow,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
58,0x421f,0x421f0897F2E07462b5A7B994AbF8AE758DD0DD70,G,No need of separate indexing (NFT_ID => Vault Address),129,https://github.com/code-423n4/2021-12-mellow-findings/issues/129,mellow,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
58,0x421f,0x421f0897F2E07462b5A7B994AbF8AE758DD0DD70,0,What you guys mean by this line ? Its redundant imo,130,https://github.com/code-423n4/2021-12-mellow-findings/issues/130,mellow,2021/12,bug;0 (Non-critical);resolved;sponsor confirmed
58,0x421f,0x421f0897F2E07462b5A7B994AbF8AE758DD0DD70,3,Possible price manipulation while adding liquidity to uniV3,131,https://github.com/code-423n4/2021-12-mellow-findings/issues/131,mellow,2021/12,bug;invalid;3 (High Risk);sponsor disputed
58,0x421f,0x421f0897F2E07462b5A7B994AbF8AE758DD0DD70,G,Make deposit efficient ,132,https://github.com/code-423n4/2021-12-mellow-findings/issues/132,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,0x421f,0x421f0897F2E07462b5A7B994AbF8AE758DD0DD70,G,Migrate from NonFungiblePositionManager to UniV3Pool directly,133,https://github.com/code-423n4/2021-12-mellow-findings/issues/133,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,0x421f,0x421f0897F2E07462b5A7B994AbF8AE758DD0DD70,2,Consider fees while calculating tvl of univ3,134,https://github.com/code-423n4/2021-12-mellow-findings/issues/134,mellow,2021/12,bug;invalid;2 (Med Risk)
58,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,AaveVault does not update TVL on deposit/withdraw,41,https://github.com/code-423n4/2021-12-mellow-findings/issues/41,mellow,2021/12,bug;3 (High Risk);resolved;sponsor confirmed
58,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,ERC20 transfer return values not checked,42,https://github.com/code-423n4/2021-12-mellow-findings/issues/42,mellow,2021/12,bug;duplicate;1 (Low Risk);resolved;sponsor confirmed
58,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,ERC20 approve return values not checked,43,https://github.com/code-423n4/2021-12-mellow-findings/issues/43,mellow,2021/12,bug;duplicate;1 (Low Risk)
58,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Bad redirects can make it impossible to deposit & withdraw,44,https://github.com/code-423n4/2021-12-mellow-findings/issues/44,mellow,2021/12,bug;2 (Med Risk);sponsor confirmed
58,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`GatewayVault` events not used,45,https://github.com/code-423n4/2021-12-mellow-findings/issues/45,mellow,2021/12,bug;0 (Non-critical);disagree with severity;sponsor confirmed
58,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,User deposits don't have min. return checks,46,https://github.com/code-423n4/2021-12-mellow-findings/issues/46,mellow,2021/12,bug;2 (Med Risk);sponsor confirmed
58,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Users can avoid paying vault fees,47,https://github.com/code-423n4/2021-12-mellow-findings/issues/47,mellow,2021/12,bug;2 (Med Risk);sponsor disputed
58,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Wrong logic in `tokenWhitelist()`?,48,https://github.com/code-423n4/2021-12-mellow-findings/issues/48,mellow,2021/12,bug;1 (Low Risk)
58,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Admin can break `_numberOfValidTokens`,49,https://github.com/code-423n4/2021-12-mellow-findings/issues/49,mellow,2021/12,bug;2 (Med Risk)
58,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,UniswapV3's path issue for `swapExactOutput`,50,https://github.com/code-423n4/2021-12-mellow-findings/issues/50,mellow,2021/12,bug;2 (Med Risk)
58,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `GatewayVault._pull` can skip redirected,51,https://github.com/code-423n4/2021-12-mellow-findings/issues/51,mellow,2021/12,bug;G (Gas Optimization)
58,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Cache `_pendingTokenWhitelistAdd[i]`,52,https://github.com/code-423n4/2021-12-mellow-findings/issues/52,mellow,2021/12,bug;G (Gas Optimization)
58,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Unnecessary zero writes,53,https://github.com/code-423n4/2021-12-mellow-findings/issues/53,mellow,2021/12,bug;G (Gas Optimization);sponsor disputed
58,cuong_qnom,0xc38C3B16E82803f9D956F57f3C7e8Cc784d0155B,1,Guard for initialization function of VaultGovernance,105,https://github.com/code-423n4/2021-12-mellow-findings/issues/105,mellow,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
58,cuong_qnom,0xc38C3B16E82803f9D956F57f3C7e8Cc784d0155B,0,These functions can be made modifier,106,https://github.com/code-423n4/2021-12-mellow-findings/issues/106,mellow,2021/12,bug;0 (Non-critical);sponsor disputed
58,cuong_qnom,0xc38C3B16E82803f9D956F57f3C7e8Cc784d0155B,1,Unchecked ERC20 Transfer,109,https://github.com/code-423n4/2021-12-mellow-findings/issues/109,mellow,2021/12,bug;duplicate;1 (Low Risk)
58,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,ERC20 approve method missing return value check,113,https://github.com/code-423n4/2021-12-mellow-findings/issues/113,mellow,2021/12,bug;duplicate;1 (Low Risk)
58,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,114,https://github.com/code-423n4/2021-12-mellow-findings/issues/114,mellow,2021/12,bug;duplicate;1 (Low Risk);resolved;sponsor confirmed
58,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1, The Contract Should Approve(0) first,115,https://github.com/code-423n4/2021-12-mellow-findings/issues/115,mellow,2021/12,bug;1 (Low Risk)
58,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,IsContract Function Usage,126,https://github.com/code-423n4/2021-12-mellow-findings/issues/126,mellow,2021/12,bug;invalid;1 (Low Risk);sponsor disputed
58,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,++i is more gas efficient than i++ in loops forwarding,77,https://github.com/code-423n4/2021-12-mellow-findings/issues/77,mellow,2021/12,bug;duplicate;G (Gas Optimization)
58,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use `calldata` instead of `memory` for function parameters,78,https://github.com/code-423n4/2021-12-mellow-findings/issues/78,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,IsContract Function Usage,79,https://github.com/code-423n4/2021-12-mellow-findings/issues/79,mellow,2021/12,bug;invalid;2 (Med Risk)
58,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use of constant keccak variables results in extra hashing (and so gas).,80,https://github.com/code-423n4/2021-12-mellow-findings/issues/80,mellow,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
58,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use of _msgSender(),81,https://github.com/code-423n4/2021-12-mellow-findings/issues/81,mellow,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
58,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,`UniV3Vault` does not distribute fee earning to depositor,111,https://github.com/code-423n4/2021-12-mellow-findings/issues/111,mellow,2021/12,bug;1 (Low Risk);sponsor disputed
58,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,`ERC20Vault` does not support fee-on-transfer token,112,https://github.com/code-423n4/2021-12-mellow-findings/issues/112,mellow,2021/12,bug;invalid;3 (High Risk);sponsor disputed
58,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Cache array length,58,https://github.com/code-423n4/2021-12-mellow-findings/issues/58,mellow,2021/12,bug;duplicate;G (Gas Optimization)
58,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Pack `Params` struct in `IProtocolGovernance`,59,https://github.com/code-423n4/2021-12-mellow-findings/issues/59,mellow,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
58,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use != 0 instead of > 0,60,https://github.com/code-423n4/2021-12-mellow-findings/issues/60,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use of immutable instead of constant keccak expression,61,https://github.com/code-423n4/2021-12-mellow-findings/issues/61,mellow,2021/12,bug;duplicate;G (Gas Optimization)
58,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,`tokenWhitelist` might break if `removeFromTokenWhitelist` is called multiple times with the same token,75,https://github.com/code-423n4/2021-12-mellow-findings/issues/75,mellow,2021/12,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
58,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Withdraw from `AaveVault` will receive less than actual share,82,https://github.com/code-423n4/2021-12-mellow-findings/issues/82,mellow,2021/12,bug;2 (Med Risk);resolved;sponsor confirmed
58,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,`YearnVault` did not cache tvl as comment described,84,https://github.com/code-423n4/2021-12-mellow-findings/issues/84,mellow,2021/12,bug;1 (Low Risk);sponsor confirmed
58,hagrid,0x3A46FeD37cAcd52a6DACc4a49f520AdaD0e51D61,3,Potential DOS with Division By Zero on `LpIssuer`,27,https://github.com/code-423n4/2021-12-mellow-findings/issues/27,mellow,2021/12,bug;1 (Low Risk);disagree with severity
58,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Missing zero-address checks on contract construction,19,https://github.com/code-423n4/2021-12-mellow-findings/issues/19,mellow,2021/12,bug;0 (Non-critical);disagree with severity
58,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,A more efficient for loop index proceeding,54,https://github.com/code-423n4/2021-12-mellow-findings/issues/54,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,> 0 can be replaced with != 0 for gas optimisation,55,https://github.com/code-423n4/2021-12-mellow-findings/issues/55,mellow,2021/12,bug;duplicate;G (Gas Optimization);sponsor disputed
58,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Cache array length in for loops can save gas,56,https://github.com/code-423n4/2021-12-mellow-findings/issues/56,mellow,2021/12,bug;duplicate;G (Gas Optimization)
58,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Unchecked math  or Save Gas With The Unchecked Keyword,57,https://github.com/code-423n4/2021-12-mellow-findings/issues/57,mellow,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
58,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Use one require instead of several,62,https://github.com/code-423n4/2021-12-mellow-findings/issues/62,mellow,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
58,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,IERC20(token) should approve(0) first,74,https://github.com/code-423n4/2021-12-mellow-findings/issues/74,mellow,2021/12,bug;duplicate;1 (Low Risk);sponsor acknowledged
58,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Initialization with empty `_symbol`,76,https://github.com/code-423n4/2021-12-mellow-findings/issues/76,mellow,2021/12,bug;0 (Non-critical);sponsor disputed
58,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Multi Transfer arrays length check.,83,https://github.com/code-423n4/2021-12-mellow-findings/issues/83,mellow,2021/12,bug;invalid;1 (Low Risk);sponsor disputed
58,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,ExceptionsLibrary.sol Shorten Revert Strings to Save Gas,32,https://github.com/code-423n4/2021-12-mellow-findings/issues/32,mellow,2021/12,bug;G (Gas Optimization);sponsor disputed
58,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,Protocol Have No Transfer Ownership Pattern,33,https://github.com/code-423n4/2021-12-mellow-findings/issues/33,mellow,2021/12,bug;invalid;1 (Low Risk);sponsor disputed
58,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Remove ADMIN_DELEGATE_ROLE to Save Gas,34,https://github.com/code-423n4/2021-12-mellow-findings/issues/34,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Use bytes32 Rather Than String to Save Gas,35,https://github.com/code-423n4/2021-12-mellow-findings/issues/35,mellow,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
58,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,_swapExactOutputSingle() and _swapExactOutputMultihop() May Fail When Transfer Token to recipient,36,https://github.com/code-423n4/2021-12-mellow-findings/issues/36,mellow,2021/12,bug;duplicate;2 (Med Risk);disagree with severity
58,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,TODOs List May Leak Important Info & Errors,37,https://github.com/code-423n4/2021-12-mellow-findings/issues/37,mellow,2021/12,bug;duplicate;0 (Non-critical)
58,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,withdraw() Validate lpTokenAmount At Beginning of Function Can Save Gas,38,https://github.com/code-423n4/2021-12-mellow-findings/issues/38,mellow,2021/12,bug;0 (Non-critical);sponsor disputed
58,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Avoid Initialization of Loop Index If It Is 0 to Save Gas,39,https://github.com/code-423n4/2021-12-mellow-findings/issues/39,mellow,2021/12,bug;invalid;G (Gas Optimization)
58,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,Unable to Unlock NFT Once it Locked and Owner may Lose His Token Permanently,40,https://github.com/code-423n4/2021-12-mellow-findings/issues/40,mellow,2021/12,bug;invalid;3 (High Risk);sponsor disputed
58,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,register the same vault twice,116,https://github.com/code-423n4/2021-12-mellow-findings/issues/116,mellow,2021/12,bug;invalid;1 (Low Risk);sponsor disputed
58,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,adminApprove will not work,117,https://github.com/code-423n4/2021-12-mellow-findings/issues/117,mellow,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
58,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,pre-calculate expressions that do not change,118,https://github.com/code-423n4/2021-12-mellow-findings/issues/118,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Assigned operations to constant variables,120,https://github.com/code-423n4/2021-12-mellow-findings/issues/120,mellow,2021/12,bug;duplicate;G (Gas Optimization)
58,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Cache array length outside of loop,29,https://github.com/code-423n4/2021-12-mellow-findings/issues/29,mellow,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
58,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Use `!= 0` instead of `> 0` for unsigned integer comparisons,30,https://github.com/code-423n4/2021-12-mellow-findings/issues/30,mellow,2021/12,bug;duplicate;G (Gas Optimization);sponsor disputed
58,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Unhandled return value of ERC20 `transfer`,31,https://github.com/code-423n4/2021-12-mellow-findings/issues/31,mellow,2021/12,bug;duplicate;1 (Low Risk);resolved;sponsor confirmed
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused imports,1,https://github.com/code-423n4/2021-12-mellow-findings/issues/1,mellow,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary array boundaries check when loading an array element twice,10,https://github.com/code-423n4/2021-12-mellow-findings/issues/10,mellow,2021/12,bug;G (Gas Optimization)
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with empty message,11,https://github.com/code-423n4/2021-12-mellow-findings/issues/11,mellow,2021/12,bug;0 (Non-critical);disagree with severity
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Require with not comprehensive message,12,https://github.com/code-423n4/2021-12-mellow-findings/issues/12,mellow,2021/12,bug;invalid;2 (Med Risk);disagree with severity;sponsor disputed
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Lack Of Precision,13,https://github.com/code-423n4/2021-12-mellow-findings/issues/13,mellow,2021/12,bug;invalid;1 (Low Risk);sponsor disputed
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Must approve 0 first,14,https://github.com/code-423n4/2021-12-mellow-findings/issues/14,mellow,2021/12,bug;duplicate;1 (Low Risk);disagree with severity;sponsor disputed
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove of openZeppelin is deprecated,15,https://github.com/code-423n4/2021-12-mellow-findings/issues/15,mellow,2021/12,bug;0 (Non-critical);sponsor acknowledged
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Open TODOs,16,https://github.com/code-423n4/2021-12-mellow-findings/issues/16,mellow,2021/12,bug;0 (Non-critical);sponsor acknowledged
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Solidity compiler versions mismatch,17,https://github.com/code-423n4/2021-12-mellow-findings/issues/17,mellow,2021/12,bug;0 (Non-critical)
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Use safe math for solidity version <8,18,https://github.com/code-423n4/2021-12-mellow-findings/issues/18,mellow,2021/12,bug;invalid;1 (Low Risk);sponsor disputed
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use bytes32 instead of string to save gas whenever possible,2,https://github.com/code-423n4/2021-12-mellow-findings/issues/2,mellow,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused state variables,3,https://github.com/code-423n4/2021-12-mellow-findings/issues/3,mellow,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused declared local variables,4,https://github.com/code-423n4/2021-12-mellow-findings/issues/4,mellow,2021/12,bug;invalid;G (Gas Optimization)
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Struct packing,5,https://github.com/code-423n4/2021-12-mellow-findings/issues/5,mellow,2021/12,bug;duplicate;G (Gas Optimization)
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,6,https://github.com/code-423n4/2021-12-mellow-findings/issues/6,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Internal functions to private,7,https://github.com/code-423n4/2021-12-mellow-findings/issues/7,mellow,2021/12,bug;G (Gas Optimization)
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,8,https://github.com/code-423n4/2021-12-mellow-findings/issues/8,mellow,2021/12,bug;G (Gas Optimization)
58,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,9,https://github.com/code-423n4/2021-12-mellow-findings/issues/9,mellow,2021/12,bug;duplicate;G (Gas Optimization);sponsor disputed
58,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,1,Possiblity of creating a UniV3Vault without access to a Uniswap pool,28,https://github.com/code-423n4/2021-12-mellow-findings/issues/28,mellow,2021/12,bug;invalid;1 (Low Risk);sponsor disputed
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Outdated compiler version,100,https://github.com/code-423n4/2021-12-mellow-findings/issues/100,mellow,2021/12,bug;0 (Non-critical);sponsor disputed
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unnecessary checked arithmetic in for loops,101,https://github.com/code-423n4/2021-12-mellow-findings/issues/101,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,102,https://github.com/code-423n4/2021-12-mellow-findings/issues/102,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Declaring unnecessary immutable variables as constant can save gas,103,https://github.com/code-423n4/2021-12-mellow-findings/issues/103,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use literal `2` instead of read from storage for `_vaultTokens.length` can save gas,104,https://github.com/code-423n4/2021-12-mellow-findings/issues/104,mellow,2021/12,bug;G (Gas Optimization);sponsor confirmed
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Swap functions in ERC20 Vault will cause fund loss,107,https://github.com/code-423n4/2021-12-mellow-findings/issues/107,mellow,2021/12,bug;invalid;3 (High Risk);sponsor disputed
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`ChiefTrader.sol` Wrong implementation of `swapExactInput()` and `swapExactOutput()`,108,https://github.com/code-423n4/2021-12-mellow-findings/issues/108,mellow,2021/12,bug;2 (Med Risk);sponsor confirmed
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Strategy can steal all the funds in `ERC20Vault` by rebalancing with a fake token in `path`,110,https://github.com/code-423n4/2021-12-mellow-findings/issues/110,mellow,2021/12,bug;invalid;3 (High Risk);sponsor disputed
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`AaveVault.sol#_pull()` may return wrong `actualTokenAmounts`,119,https://github.com/code-423n4/2021-12-mellow-findings/issues/119,mellow,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`YearnVault.sol#pull()` will most certainly fail,121,https://github.com/code-423n4/2021-12-mellow-findings/issues/121,mellow,2021/12,bug;3 (High Risk);resolved;sponsor confirmed
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Unchecked return value for `ERC20.approve` call,85,https://github.com/code-423n4/2021-12-mellow-findings/issues/85,mellow,2021/12,bug;duplicate;1 (Low Risk);sponsor acknowledged
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Setting `uint256` variables to `0` is redundant,86,https://github.com/code-423n4/2021-12-mellow-findings/issues/86,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,87,https://github.com/code-423n4/2021-12-mellow-findings/issues/87,mellow,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Unsafe token transfer,88,https://github.com/code-423n4/2021-12-mellow-findings/issues/88,mellow,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache external call results can save gas,89,https://github.com/code-423n4/2021-12-mellow-findings/issues/89,mellow,2021/12,bug;G (Gas Optimization);sponsor confirmed
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`LpIssuer.sol#_chargeFees()` Check `if (performanceFee > 0)` can be done earlier to save gas,90,https://github.com/code-423n4/2021-12-mellow-findings/issues/90,mellow,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Wrong implementation of `performanceFee` can cause users to lose 50% to 100% of their funds,91,https://github.com/code-423n4/2021-12-mellow-findings/issues/91,mellow,2021/12,bug;3 (High Risk);sponsor confirmed
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use immutable variables can save gas,92,https://github.com/code-423n4/2021-12-mellow-findings/issues/92,mellow,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unnecessary variables can make the code simpler and save some gas,93,https://github.com/code-423n4/2021-12-mellow-findings/issues/93,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`++i` is more efficient than `i++`,94,https://github.com/code-423n4/2021-12-mellow-findings/issues/94,mellow,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unnecessary function can make the code simpler and save some gas,95,https://github.com/code-423n4/2021-12-mellow-findings/issues/95,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache storage variables in the stack can save gas,96,https://github.com/code-423n4/2021-12-mellow-findings/issues/96,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`AaveVault` is vulnerable to flashloan sandwich attack,97,https://github.com/code-423n4/2021-12-mellow-findings/issues/97,mellow,2021/12,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`UniV3Vault.sol#collectEarnings()` can be front run,98,https://github.com/code-423n4/2021-12-mellow-findings/issues/98,mellow,2021/12,bug;3 (High Risk);resolved;sponsor confirmed
58,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"Deadline based on `block.timestamp` is ineffective for in contract calls, removing them can make the code simpler and save gas",99,https://github.com/code-423n4/2021-12-mellow-findings/issues/99,mellow,2021/12,bug;invalid;question;G (Gas Optimization);sponsor acknowledged
58,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G, Constant variables can be immutable (DefaultAccessControl.sol),122,https://github.com/code-423n4/2021-12-mellow-findings/issues/122,mellow,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
58,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Save Gas With The Unchecked Keyword,123,https://github.com/code-423n4/2021-12-mellow-findings/issues/123,mellow,2021/12,bug;G (Gas Optimization);sponsor acknowledged
58,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Function _chargeFees #L212-L217 (LpIssuer.sol) can be refactored for efficiency and clarity,124,https://github.com/code-423n4/2021-12-mellow-findings/issues/124,mellow,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
58,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,"""> 0"" is less efficient than ""!= 0"" for unsigned integers",125,https://github.com/code-423n4/2021-12-mellow-findings/issues/125,mellow,2021/12,bug;duplicate;G (Gas Optimization)
69,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`+= 1` or `-= 1` costs extra gas,76,https://github.com/code-423n4/2021-12-nftx-findings/issues/76,nftx,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
69,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Loops can be implemented more efficiently,77,https://github.com/code-423n4/2021-12-nftx-findings/issues/77,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For uint `> 0` can be replaced with ` != 0` for gas optimization,78,https://github.com/code-423n4/2021-12-nftx-findings/issues/78,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,"In `NFTXSimpleFeeDistributor`, `isContract` is given as input",79,https://github.com/code-423n4/2021-12-nftx-findings/issues/79,nftx,2021/12,bug;invalid;sponsor disputed
69,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,Timelock functionality for `xToken` is applied on all existing balance,80,https://github.com/code-423n4/2021-12-nftx-findings/issues/80,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Unsafe transfers in NFTXFlashSwipe,184,https://github.com/code-423n4/2021-12-nftx-findings/issues/184,nftx,2021/12,bug;duplicate;2 (Med Risk);sponsor acknowledged;sponsor confirmed
69,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unsafe approve in NFTXSimpleFeeDistributor,186,https://github.com/code-423n4/2021-12-nftx-findings/issues/186,nftx,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
69,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Unsafe transfer in XTokenUpgradeable,188,https://github.com/code-423n4/2021-12-nftx-findings/issues/188,nftx,2021/12,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
69,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Wrong code style,190,https://github.com/code-423n4/2021-12-nftx-findings/issues/190,nftx,2021/12,bug;0 (Non-critical);sponsor acknowledged
69,BouSalman,0xddd4d4c17971dbfc6fd781c3354dcaa7757a87eb,0,No zero address check on function setDefaultPairedToken() of Contract StakingTokenProvider,15,https://github.com/code-423n4/2021-12-nftx-findings/issues/15,nftx,2021/12,bug;duplicate;1 (Low Risk);sponsor acknowledged
69,BouSalman,0xddd4d4c17971dbfc6fd781c3354dcaa7757a87eb,0,No zero address check on function setInventoryStakingAddress() of Contract NFTXSimpleFeeDistributor,16,https://github.com/code-423n4/2021-12-nftx-findings/issues/16,nftx,2021/12,bug;duplicate;1 (Low Risk);sponsor acknowledged
69,BouSalman,0xddd4d4c17971dbfc6fd781c3354dcaa7757a87eb,0,No zero address check on function setNFTXVaultFactory() of Contract StakingTokenProvider,17,https://github.com/code-423n4/2021-12-nftx-findings/issues/17,nftx,2021/12,bug;duplicate;1 (Low Risk);sponsor acknowledged
69,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,buyAndSwap1155WETH() function does not work,1,https://github.com/code-423n4/2021-12-nftx-findings/issues/1,nftx,2021/12,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
69,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,G,Change function visibility from public to external,128,https://github.com/code-423n4/2021-12-nftx-findings/issues/128,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Race condition in approve() 收件箱,134,https://github.com/code-423n4/2021-12-nftx-findings/issues/134,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,buyAndSwap1155WETH() function may cause loss of user assets,2,https://github.com/code-423n4/2021-12-nftx-findings/issues/2,nftx,2021/12,bug;3 (High Risk);resolved;sponsor confirmed
69,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,"The return value of the _sendForReceiver function is not set, causing the receiver to receive more fees",67,https://github.com/code-423n4/2021-12-nftx-findings/issues/67,nftx,2021/12,bug;3 (High Risk);disagree with severity;resolved;sponsor confirmed
69,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,Malicious receiver can make distribute function denial of service,69,https://github.com/code-423n4/2021-12-nftx-findings/issues/69,nftx,2021/12,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
69,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,Malicious receivers can get the fees of other receivers,72,https://github.com/code-423n4/2021-12-nftx-findings/issues/72,nftx,2021/12,bug;duplicate;1 (Low Risk);disagree with severity;resolved;sponsor confirmed
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Same module can be added several times,135,https://github.com/code-423n4/2021-12-nftx-findings/issues/135,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Rewards can be stolen,136,https://github.com/code-423n4/2021-12-nftx-findings/issues/136,nftx,2021/12,bug;2 (Med Risk);sponsor acknowledged;sponsor confirmed
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Zaps should verify paths,137,https://github.com/code-423n4/2021-12-nftx-findings/issues/137,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Marketplace Zap mints can be denied,138,https://github.com/code-423n4/2021-12-nftx-findings/issues/138,nftx,2021/12,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Staking Zap add liquidity can be denied,139,https://github.com/code-423n4/2021-12-nftx-findings/issues/139,nftx,2021/12,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Low-level call return value not checked,140,https://github.com/code-423n4/2021-12-nftx-findings/issues/140,nftx,2021/12,bug;2 (Med Risk);resolved;sponsor confirmed
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,ERC20 return values not checked,141,https://github.com/code-423n4/2021-12-nftx-findings/issues/141,nftx,2021/12,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,ERC20 return values not checked (2),142,https://github.com/code-423n4/2021-12-nftx-findings/issues/142,nftx,2021/12,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Staking Zap approves wrong LP token,143,https://github.com/code-423n4/2021-12-nftx-findings/issues/143,nftx,2021/12,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Fee distribution double-spend,144,https://github.com/code-423n4/2021-12-nftx-findings/issues/144,nftx,2021/12,bug;duplicate;1 (Low Risk);disagree with severity;resolved;sponsor confirmed
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Fee changes can lead to users losing funds,145,https://github.com/code-423n4/2021-12-nftx-findings/issues/145,nftx,2021/12,bug;duplicate;invalid;sponsor acknowledged
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unbounded iteration in `NFTXSimpleFeeDistributor.distribute` over `feeReceivers`,146,https://github.com/code-423n4/2021-12-nftx-findings/issues/146,nftx,2021/12,bug;invalid;sponsor acknowledged
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Unbounded iteration in `NFTXVaultUpgradeable.allHoldings` over all holdings,147,https://github.com/code-423n4/2021-12-nftx-findings/issues/147,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`getRandomTokenIdFromVault` yields wrong probabilities for ERC1155,148,https://github.com/code-423n4/2021-12-nftx-findings/issues/148,nftx,2021/12,bug;invalid;disagree with severity;sponsor acknowledged
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,The target redeem fees can be circumvented,149,https://github.com/code-423n4/2021-12-nftx-findings/issues/149,nftx,2021/12,bug;invalid;sponsor acknowledged
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Outdated comment in `TimelockRewardDistributionTokenImpl.burnFrom`,150,https://github.com/code-423n4/2021-12-nftx-findings/issues/150,nftx,2021/12,bug;1 (Low Risk);disagree with severity;resolved;sponsor confirmed
69,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Store WETH value,151,https://github.com/code-423n4/2021-12-nftx-findings/issues/151,nftx,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
69,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Deposit is happening without amount transfer,10,https://github.com/code-423n4/2021-12-nftx-findings/issues/10,nftx,2021/12,bug;invalid;disagree with severity;sponsor acknowledged
69,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas savings,11,https://github.com/code-423n4/2021-12-nftx-findings/issues/11,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,Unsafe usage of transfer,12,https://github.com/code-423n4/2021-12-nftx-findings/issues/12,nftx,2021/12,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
69,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,DOS on withdrawal,13,https://github.com/code-423n4/2021-12-nftx-findings/issues/13,nftx,2021/12,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
69,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas savings,14,https://github.com/code-423n4/2021-12-nftx-findings/issues/14,nftx,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
69,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Rewards can be stolen,18,https://github.com/code-423n4/2021-12-nftx-findings/issues/18,nftx,2021/12,bug;invalid;sponsor disputed
69,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,Duplicate modules can be added,3,https://github.com/code-423n4/2021-12-nftx-findings/issues/3,nftx,2021/12,bug;duplicate;1 (Low Risk);sponsor acknowledged
69,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Modules are not updated properly,4,https://github.com/code-423n4/2021-12-nftx-findings/issues/4,nftx,2021/12,bug;invalid;disagree with severity;sponsor acknowledged
69,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,Inconsistency in fee distribution,41,https://github.com/code-423n4/2021-12-nftx-findings/issues/41,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas saving,42,https://github.com/code-423n4/2021-12-nftx-findings/issues/42,nftx,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
69,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas saving by storing modulesCopy.length in local variable,5,https://github.com/code-423n4/2021-12-nftx-findings/issues/5,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas saving __NFTXEligibilityManager_init should be external and not public,6,https://github.com/code-423n4/2021-12-nftx-findings/issues/6,nftx,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
69,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas saving by using mapping instead of computeAddress,7,https://github.com/code-423n4/2021-12-nftx-findings/issues/7,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Amount can be stolen using non existent Vault id,8,https://github.com/code-423n4/2021-12-nftx-findings/issues/8,nftx,2021/12,bug;invalid;disagree with severity;sponsor disputed
69,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,deposit and withdraw can be made external,9,https://github.com/code-423n4/2021-12-nftx-findings/issues/9,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,129,https://github.com/code-423n4/2021-12-nftx-findings/issues/129,nftx,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
69,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,"After Solidity 0.8.1, The Inline Assembly Contract Check Can Be replaced with the new function",130,https://github.com/code-423n4/2021-12-nftx-findings/issues/130,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use a constant instead of block.timestamp for the deadline,131,https://github.com/code-423n4/2021-12-nftx-findings/issues/131,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G, Use `calldata` instead of `memory` for function parameters,132,https://github.com/code-423n4/2021-12-nftx-findings/issues/132,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
69,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Cache array length in for loops can save gas,133,https://github.com/code-423n4/2021-12-nftx-findings/issues/133,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Restrict funds receivable to be only from wrapped native token,152,https://github.com/code-423n4/2021-12-nftx-findings/issues/152,nftx,2021/12,bug;duplicate;1 (Low Risk);resolved;sponsor confirmed
69,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,158,https://github.com/code-423n4/2021-12-nftx-findings/issues/158,nftx,2021/12,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
69,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,During The Withdraw Process Pool Is Not Updated,175,https://github.com/code-423n4/2021-12-nftx-findings/issues/175,nftx,2021/12,bug;invalid;sponsor disputed
69,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,`> 0` can be replaced with `!= 0` for gas optimization,176,https://github.com/code-423n4/2021-12-nftx-findings/issues/176,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Upgrade pragma to at least 0.8.4,189,https://github.com/code-423n4/2021-12-nftx-findings/issues/189,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Ownable Contract Does Not Implement Two-Step Transfer Ownership Pattern,192,https://github.com/code-423n4/2021-12-nftx-findings/issues/192,nftx,2021/12,bug;duplicate;1 (Low Risk);sponsor confirmed
69,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Using 10**X for constants isn't gas efficient,193,https://github.com/code-423n4/2021-12-nftx-findings/issues/193,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
69,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,An array's length should be cached to save gas in for-loops,194,https://github.com/code-423n4/2021-12-nftx-findings/issues/194,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`++i` costs less gass compared to `i++`,195,https://github.com/code-423n4/2021-12-nftx-findings/issues/195,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
69,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Unnecessary checked arithmetic in for-loops,198,https://github.com/code-423n4/2021-12-nftx-findings/issues/198,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Use `calldata` instead of `memory` for external functions where the function argument is read-only.,203,https://github.com/code-423n4/2021-12-nftx-findings/issues/203,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,!= 0 costs less gass compared to > 0 for unsigned integer inside pure or view functions,206,https://github.com/code-423n4/2021-12-nftx-findings/issues/206,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Explicit initialization with zero not required,207,https://github.com/code-423n4/2021-12-nftx-findings/issues/207,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
69,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Constants can be made internal / private,209,https://github.com/code-423n4/2021-12-nftx-findings/issues/209,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
69,gpersoon,0x0000000000000000,G,Testing - Testing the findings form,75,https://github.com/code-423n4/2021-12-nftx-findings/issues/75,nftx,2021/12,bug;invalid
69,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,G,NFTXInventoryStaking: Unused variables,216,https://github.com/code-423n4/2021-12-nftx-findings/issues/216,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,G,NFTXStakingZap: Unused xTokenMinted variable ,217,https://github.com/code-423n4/2021-12-nftx-findings/issues/217,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
69,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,0,NFTXInventoryStaking: Index vaultId in events,218,https://github.com/code-423n4/2021-12-nftx-findings/issues/218,nftx,2021/12,bug;0 (Non-critical);sponsor acknowledged
69,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,0,NFTXSimpleFeeDistributor: Changes are not compatible with existing FeeDistributor,219,https://github.com/code-423n4/2021-12-nftx-findings/issues/219,nftx,2021/12,bug;invalid;sponsor disputed
69,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,0,NFTXLPStaking: Implementation Upgrade Storage Layout Caution,220,https://github.com/code-423n4/2021-12-nftx-findings/issues/220,nftx,2021/12,bug;0 (Non-critical);resolved;sponsor confirmed
69,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,PausableUpgradeable: Document lockId code 10 = deposit,221,https://github.com/code-423n4/2021-12-nftx-findings/issues/221,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,NFTXSimpleFeeDistributor: Inconsistency between implementation and comment,222,https://github.com/code-423n4/2021-12-nftx-findings/issues/222,nftx,2021/12,bug;1 (Low Risk);disagree with severity;resolved;sponsor confirmed
69,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,NFTXStakingZap: Restrict native ETH transfers to WETH contract,223,https://github.com/code-423n4/2021-12-nftx-findings/issues/223,nftx,2021/12,bug;duplicate;1 (Low Risk);resolved;sponsor confirmed
69,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,NFTXMarketplaceZap: Restrict native ETH transfers to WETH contract,224,https://github.com/code-423n4/2021-12-nftx-findings/issues/224,nftx,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
69,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,NFTXMarketplaceZap: Add rescue() function,226,https://github.com/code-423n4/2021-12-nftx-findings/issues/226,nftx,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
69,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,NFTXMarketplaceZap: incorrect parameter name,228,https://github.com/code-423n4/2021-12-nftx-findings/issues/228,nftx,2021/12,bug;0 (Non-critical);disagree with severity;resolved;sponsor confirmed
69,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,2,NFTXStakingZap: Balance check can result in griefing,229,https://github.com/code-423n4/2021-12-nftx-findings/issues/229,nftx,2021/12,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
69,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,2,NFTXSimpleFeeDistributor#addReceiver: Failure to check for existing receiver,230,https://github.com/code-423n4/2021-12-nftx-findings/issues/230,nftx,2021/12,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
69,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,3,NFTXMarketplaceZap: Balance check can result in DOS,231,https://github.com/code-423n4/2021-12-nftx-findings/issues/231,nftx,2021/12,bug;duplicate;3 (High Risk);disagree with severity;resolved;sponsor confirmed
69,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Bypass zap timelock,178,https://github.com/code-423n4/2021-12-nftx-findings/issues/178,nftx,2021/12,bug;2 (Med Risk);resolved;sponsor confirmed
69,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,Missing OOB check in `changeReceiverAlloc`,181,https://github.com/code-423n4/2021-12-nftx-findings/issues/181,nftx,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
69,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unused variable,182,https://github.com/code-423n4/2021-12-nftx-findings/issues/182,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use uint232 for `allocPoint`,183,https://github.com/code-423n4/2021-12-nftx-findings/issues/183,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use immutable to cache beaconhash,187,https://github.com/code-423n4/2021-12-nftx-findings/issues/187,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,NFTXMarketplaceZap and NFTXStakingZap don't check WETH.transfer result,102,https://github.com/code-423n4/2021-12-nftx-findings/issues/102,nftx,2021/12,bug;duplicate;2 (Med Risk);sponsor confirmed
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Low level checks lack error messages,103,https://github.com/code-423n4/2021-12-nftx-findings/issues/103,nftx,2021/12,bug;duplicate;1 (Low Risk);sponsor confirmed
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,0,NFTXVaultFactoryUpgradeable has unused storage to be removed,104,https://github.com/code-423n4/2021-12-nftx-findings/issues/104,nftx,2021/12,bug;invalid;sponsor disputed
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,NFTXSimpleFeeDistributor._sendForReceiver doesn't return success if receiver is not a contract,105,https://github.com/code-423n4/2021-12-nftx-findings/issues/105,nftx,2021/12,bug;2 (Med Risk);resolved;sponsor confirmed
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,NFTXVaultUpgradeable's __NFTXVault_init can be front run,106,https://github.com/code-423n4/2021-12-nftx-findings/issues/106,nftx,2021/12,bug;invalid;sponsor disputed
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,NFTXVaultUpgradeable.mintTo and swapTo do not check for user supplied arrays length,111,https://github.com/code-423n4/2021-12-nftx-findings/issues/111,nftx,2021/12,bug;1 (Low Risk);sponsor confirmed
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,NFTXSimpleFeeDistributor._sendForReceiver comment doesn't correspond to current implementation,112,https://github.com/code-423n4/2021-12-nftx-findings/issues/112,nftx,2021/12,bug;duplicate;1 (Low Risk);sponsor confirmed
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,XTokenUpgradeable's __XToken_init can be front run,113,https://github.com/code-423n4/2021-12-nftx-findings/issues/113,nftx,2021/12,bug;invalid;sponsor disputed
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,XTokenUpgradeable burnXTokens doesn't check baseToken transfer result,114,https://github.com/code-423n4/2021-12-nftx-findings/issues/114,nftx,2021/12,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,NFTXInventoryStaking._deployXToken create2 deploy result isn't zero checked,115,https://github.com/code-423n4/2021-12-nftx-findings/issues/115,nftx,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,"NFTXStakingZap, NFTXMarketplaceZap and NFTXVaultUpgradeable use hard coded Cryptokitties and CryptoPunks addresses",155,https://github.com/code-423n4/2021-12-nftx-findings/issues/155,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,NFTXVaultFactoryUpgradeable implementation can be replaced in production breaking the system,177,https://github.com/code-423n4/2021-12-nftx-findings/issues/177,nftx,2021/12,bug;2 (Med Risk);resolved;sponsor confirmed
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,NFTXStakingZap and NFTXMarketplaceZap's transferFromERC721 transfer Cryptokitties to the wrong address,185,https://github.com/code-423n4/2021-12-nftx-findings/issues/185,nftx,2021/12,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,"Unused receive in NFTXStakingZap, NFTXMarketplaceZap and PalmNFTXStakingZap contracts",212,https://github.com/code-423n4/2021-12-nftx-findings/issues/212,nftx,2021/12,bug;invalid;sponsor disputed
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,"Griefing attack is possible as NFTXStakingZap, PalmNFTXStakingZap, NFTXMarketplaceZap rely on zero vault token balance for LP and minting",232,https://github.com/code-423n4/2021-12-nftx-findings/issues/232,nftx,2021/12,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,Anyone can remove the manager role with NFTXVaultUpgradeable.finalizeVault,233,https://github.com/code-423n4/2021-12-nftx-findings/issues/233,nftx,2021/12,bug;invalid;sponsor disputed
69,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,NFTXMarketplaceZap ERC1155 user facing functions do not check for supplied ids and amounts arrays length matching,81,https://github.com/code-423n4/2021-12-nftx-findings/issues/81,nftx,2021/12,bug;duplicate;1 (Low Risk);sponsor confirmed
69,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,__Context_init_unchained() function not implemented ,46,https://github.com/code-423n4/2021-12-nftx-findings/issues/46,nftx,2021/12,bug;invalid;disagree with severity;sponsor acknowledged
69,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,setNFTXVaultFactory() function should require that newFactory is not equal to previous ,47,https://github.com/code-423n4/2021-12-nftx-findings/issues/47,nftx,2021/12,bug;invalid;sponsor disputed
69,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,G,isContract() code is duplicated in multiple files ,48,https://github.com/code-423n4/2021-12-nftx-findings/issues/48,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,onlyOwnerIfPaused(0) argument should not be hard coded ,52,https://github.com/code-423n4/2021-12-nftx-findings/issues/52,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,_mint721() function can be broken because of strict equality check on token balance ,55,https://github.com/code-423n4/2021-12-nftx-findings/issues/55,nftx,2021/12,bug;duplicate;3 (High Risk);disagree with severity;resolved;sponsor confirmed
69,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Users can create vaults with a malicious _assetAddress ,56,https://github.com/code-423n4/2021-12-nftx-findings/issues/56,nftx,2021/12,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
69,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,`NFTXStakingZap` Performs A Dangerous Equality Check Which Can Brick Contract,43,https://github.com/code-423n4/2021-12-nftx-findings/issues/43,nftx,2021/12,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
69,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,`NFTXMarketplaceZap` Performs A Dangerous Equality Check Which Can Brick Contract,44,https://github.com/code-423n4/2021-12-nftx-findings/issues/44,nftx,2021/12,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
69,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,`buyAndSwap1155WETH` Does Not Work As Intended,45,https://github.com/code-423n4/2021-12-nftx-findings/issues/45,nftx,2021/12,bug;2 (Med Risk);resolved;sponsor confirmed
69,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,Dishonest Stakers Can Siphon Rewards From `xToken` Holders Through The `deposit` Function In `NFTXInventoryStaking`,57,https://github.com/code-423n4/2021-12-nftx-findings/issues/57,nftx,2021/12,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
69,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,`xToken` Approvals Allow Spenders To Spend More Tokens,58,https://github.com/code-423n4/2021-12-nftx-findings/issues/58,nftx,2021/12,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
69,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,1,`NFTXMarketplaceZap` Does Not Validate `path` Argument,59,https://github.com/code-423n4/2021-12-nftx-findings/issues/59,nftx,2021/12,bug;duplicate;1 (Low Risk);sponsor acknowledged
69,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,1,`setManager` Does Not Implement A Two-Step Transfer Pattern,60,https://github.com/code-423n4/2021-12-nftx-findings/issues/60,nftx,2021/12,bug;duplicate;1 (Low Risk);sponsor acknowledged
69,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,1,`timelockMint` In `TimelockRewardDistributionTokenImpl` Does Not Ensure Mint Is Greater Than Zero,64,https://github.com/code-423n4/2021-12-nftx-findings/issues/64,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,1,`assignDefaultFeatures` Does Nothing,65,https://github.com/code-423n4/2021-12-nftx-findings/issues/65,nftx,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
69,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,1,`SafeERC20` Is Not Used On Token Transfers,71,https://github.com/code-423n4/2021-12-nftx-findings/issues/71,nftx,2021/12,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
69,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,1,Rewards Cannot Be Claimed If LP Tokens Are Unstaked,73,https://github.com/code-423n4/2021-12-nftx-findings/issues/73,nftx,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
69,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,1,Fee Receivers Can Manipulate `distribute` Events To Receive More Tokens,74,https://github.com/code-423n4/2021-12-nftx-findings/issues/74,nftx,2021/12,bug;invalid;resolved;sponsor confirmed
69,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,3,A vault can be locked from MarketplaceZap and StakingZap,107,https://github.com/code-423n4/2021-12-nftx-findings/issues/107,nftx,2021/12,bug;3 (High Risk);disagree with severity;resolved;sponsor confirmed
69,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,3,Unfair fee distribution,108,https://github.com/code-423n4/2021-12-nftx-findings/issues/108,nftx,2021/12,bug;1 (Low Risk);disagree with severity;resolved;sponsor confirmed
69,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Misleading comments,109,https://github.com/code-423n4/2021-12-nftx-findings/issues/109,nftx,2021/12,bug;0 (Non-critical);resolved;sponsor confirmed
69,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Move kitties/punk addresses to constants,110,https://github.com/code-423n4/2021-12-nftx-findings/issues/110,nftx,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
69,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Reliance on exact balance,166,https://github.com/code-423n4/2021-12-nftx-findings/issues/166,nftx,2021/12,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
69,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache duplicate external calls,167,https://github.com/code-423n4/2021-12-nftx-findings/issues/167,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Receive from WETH only,168,https://github.com/code-423n4/2021-12-nftx-findings/issues/168,nftx,2021/12,bug;duplicate;1 (Low Risk);resolved;sponsor confirmed
69,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused state variables,169,https://github.com/code-423n4/2021-12-nftx-findings/issues/169,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,uint64 state variable is less efficient than uint256,170,https://github.com/code-423n4/2021-12-nftx-findings/issues/170,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Use cached version of sushiRouter.WETH(),171,https://github.com/code-423n4/2021-12-nftx-findings/issues/171,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,max timelockLength,172,https://github.com/code-423n4/2021-12-nftx-findings/issues/172,nftx,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
69,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Sell event amounts[1],173,https://github.com/code-423n4/2021-12-nftx-findings/issues/173,nftx,2021/12,bug;0 (Non-critical);resolved;sponsor confirmed
69,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,approves _sushiRouter again,174,https://github.com/code-423n4/2021-12-nftx-findings/issues/174,nftx,2021/12,bug;invalid;sponsor disputed
69,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,UpgradeableBeacon should initialize OwnableUpgradeable ?,200,https://github.com/code-423n4/2021-12-nftx-findings/issues/200,nftx,2021/12,bug;invalid;sponsor disputed
69,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Use unchecked math and cache values,208,https://github.com/code-423n4/2021-12-nftx-findings/issues/208,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
69,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Long revert messages,210,https://github.com/code-423n4/2021-12-nftx-findings/issues/210,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,_sendForReceiver returns false when receiver is EOA,211,https://github.com/code-423n4/2021-12-nftx-findings/issues/211,nftx,2021/12,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
69,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Cached lpStaking and inventoryStaking in Zap contracts,214,https://github.com/code-423n4/2021-12-nftx-findings/issues/214,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Validations,234,https://github.com/code-423n4/2021-12-nftx-findings/issues/234,nftx,2021/12,bug;duplicate;1 (Low Risk);sponsor acknowledged
69,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,3,Pool Manager can frontrun fees to 100% and use it to steal the value from users,213,https://github.com/code-423n4/2021-12-nftx-findings/issues/213,nftx,2021/12,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
69,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,Using x!= 0 costs less gas than x>0 for uint,215,https://github.com/code-423n4/2021-12-nftx-findings/issues/215,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,1,NFTXVaultFactoryUpgradeable.sol function assignFees() does not have onlyOwner modifier,196,https://github.com/code-423n4/2021-12-nftx-findings/issues/196,nftx,2021/12,bug;duplicate;1 (Low Risk);sponsor acknowledged
69,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,0,Unused imports,197,https://github.com/code-423n4/2021-12-nftx-findings/issues/197,nftx,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
69,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,0,isContract() duplication and Address.sol library usage,199,https://github.com/code-423n4/2021-12-nftx-findings/issues/199,nftx,2021/12,bug;0 (Non-critical);sponsor acknowledged
69,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,0,TimelockRewardDistributionTokenImpl.sol function withdrawableRewardOf() visibility can be changed from internal to public,201,https://github.com/code-423n4/2021-12-nftx-findings/issues/201,nftx,2021/12,bug;0 (Non-critical);sponsor acknowledged
69,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,G,Use temporary variable for array.length,202,https://github.com/code-423n4/2021-12-nftx-findings/issues/202,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,0,Redundant code: NFTXLPStaking.sol function emergencyExit(),204,https://github.com/code-423n4/2021-12-nftx-findings/issues/204,nftx,2021/12,bug;invalid;sponsor disputed
69,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,0,"Unused function input argument ""vault""",205,https://github.com/code-423n4/2021-12-nftx-findings/issues/205,nftx,2021/12,bug;0 (Non-critical);resolved;sponsor confirmed
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused imports,19,https://github.com/code-423n4/2021-12-nftx-findings/issues/19,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use bytes32 instead of string to save gas whenever possible,20,https://github.com/code-423n4/2021-12-nftx-findings/issues/20,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Short the following require messages,21,https://github.com/code-423n4/2021-12-nftx-findings/issues/21,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,22,https://github.com/code-423n4/2021-12-nftx-findings/issues/22,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,23,https://github.com/code-423n4/2021-12-nftx-findings/issues/23,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,24,https://github.com/code-423n4/2021-12-nftx-findings/issues/24,nftx,2021/12,bug;invalid;sponsor disputed
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary array boundaries check when loading an array element twice,25,https://github.com/code-423n4/2021-12-nftx-findings/issues/25,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Prefix increments are cheaper than postfix increments,26,https://github.com/code-423n4/2021-12-nftx-findings/issues/26,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary index init,27,https://github.com/code-423n4/2021-12-nftx-findings/issues/27,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Caching array length can save gas,28,https://github.com/code-423n4/2021-12-nftx-findings/issues/28,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with empty message,29,https://github.com/code-423n4/2021-12-nftx-findings/issues/29,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with not comprehensive message,30,https://github.com/code-423n4/2021-12-nftx-findings/issues/30,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove of openZeppelin is deprecated,31,https://github.com/code-423n4/2021-12-nftx-findings/issues/31,nftx,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified function inputs of public / external functions,32,https://github.com/code-423n4/2021-12-nftx-findings/issues/32,nftx,2021/12,bug;duplicate;1 (Low Risk);sponsor acknowledged
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Init frontrun,33,https://github.com/code-423n4/2021-12-nftx-findings/issues/33,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Named return issue,34,https://github.com/code-423n4/2021-12-nftx-findings/issues/34,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Unbounded loop on array controlled by owner can lead to DoS,35,https://github.com/code-423n4/2021-12-nftx-findings/issues/35,nftx,2021/12,bug;duplicate;invalid;sponsor acknowledged
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Two Steps Verification before Transferring Ownership,36,https://github.com/code-423n4/2021-12-nftx-findings/issues/36,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Missing non reentrancy modifier,37,https://github.com/code-423n4/2021-12-nftx-findings/issues/37,nftx,2021/12,bug;2 (Med Risk);sponsor disputed
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Unbounded loop on array that can only grow can lead to DoS,38,https://github.com/code-423n4/2021-12-nftx-findings/issues/38,nftx,2021/12,bug;invalid;sponsor acknowledged
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1, approve  used instead of safeApprove,39,https://github.com/code-423n4/2021-12-nftx-findings/issues/39,nftx,2021/12,bug;invalid;resolved;sponsor confirmed
69,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,3,transfer return value is ignored,40,https://github.com/code-423n4/2021-12-nftx-findings/issues/40,nftx,2021/12,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
69,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,1,Marketplace allows functions made for ERC721 vaults to interact with ERC1155 vaults,51,https://github.com/code-423n4/2021-12-nftx-findings/issues/51,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Unnecessary assignment of 0 to an uninitialized variable,53,https://github.com/code-423n4/2021-12-nftx-findings/issues/53,nftx,2021/12,bug;G (Gas Optimization);sponsor disputed
69,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,`NFTXLPStaking.rewardDistTokenImpl` is never initialized,54,https://github.com/code-423n4/2021-12-nftx-findings/issues/54,nftx,2021/12,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
69,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,1,InventoryStaking `deposit()` and `withdraw()` don't validate passed vaultId,61,https://github.com/code-423n4/2021-12-nftx-findings/issues/61,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,NFTXLPStaking emergency exit functions don't allow exiting before timelock,62,https://github.com/code-423n4/2021-12-nftx-findings/issues/62,nftx,2021/12,bug;invalid;sponsor disputed
69,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,VaultManager is able to change vault features after minting has begun,63,https://github.com/code-423n4/2021-12-nftx-findings/issues/63,nftx,2021/12,bug;invalid;disagree with severity;sponsor acknowledged
69,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,0,Use of floating pragma,179,https://github.com/code-423n4/2021-12-nftx-findings/issues/179,nftx,2021/12,bug;0 (Non-critical);sponsor acknowledged
69,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Importing unused contract,180,https://github.com/code-423n4/2021-12-nftx-findings/issues/180,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,1,Zap contracts vulnerable to DoS,66,https://github.com/code-423n4/2021-12-nftx-findings/issues/66,nftx,2021/12,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
69,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,0,Unused constructs,68,https://github.com/code-423n4/2021-12-nftx-findings/issues/68,nftx,2021/12,bug;invalid;sponsor confirmed
69,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,0,Incorrect contract referenced in test,116,https://github.com/code-423n4/2021-12-nftx-findings/issues/116,nftx,2021/12,bug;0 (Non-critical);resolved;sponsor confirmed
69,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,provideInventory1155 assumes tokenIds.length == amounts.length,117,https://github.com/code-423n4/2021-12-nftx-findings/issues/117,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
69,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Unused local variables,118,https://github.com/code-423n4/2021-12-nftx-findings/issues/118,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Store totalSupply() in variable,119,https://github.com/code-423n4/2021-12-nftx-findings/issues/119,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Refactor `distribute()` logic,120,https://github.com/code-423n4/2021-12-nftx-findings/issues/120,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,Return variable can remain unassigned in _sendForReceiver,121,https://github.com/code-423n4/2021-12-nftx-findings/issues/121,nftx,2021/12,bug;2 (Med Risk);resolved;sponsor confirmed
69,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Missing address(0) checks,122,https://github.com/code-423n4/2021-12-nftx-findings/issues/122,nftx,2021/12,bug;1 (Low Risk);sponsor acknowledged
69,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Local variables shadowing,123,https://github.com/code-423n4/2021-12-nftx-findings/issues/123,nftx,2021/12,bug;0 (Non-critical);resolved;sponsor confirmed
69,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,0,Internal functions names should start with underscore,124,https://github.com/code-423n4/2021-12-nftx-findings/issues/124,nftx,2021/12,bug;0 (Non-critical);sponsor acknowledged;sponsor confirmed
69,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,Use safeTransfer/safeTransferFrom consistently,125,https://github.com/code-423n4/2021-12-nftx-findings/issues/125,nftx,2021/12,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
69,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Weak nonce usage,126,https://github.com/code-423n4/2021-12-nftx-findings/issues/126,nftx,2021/12,bug;0 (Non-critical);sponsor disputed
69,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Revert string > 32 bytes,127,https://github.com/code-423n4/2021-12-nftx-findings/issues/127,nftx,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
69,Sleepy,0x0b8e21d798df1c25d03f34ba61df5991057ee935,G,Contract may not be deployable to main net due to size,70,https://github.com/code-423n4/2021-12-nftx-findings/issues/70,nftx,2021/12,bug;invalid;sponsor disputed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use immutable variables can save gas,100,https://github.com/code-423n4/2021-12-nftx-findings/issues/100,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unnecessary variables can make the code simpler and save some gas,101,https://github.com/code-423n4/2021-12-nftx-findings/issues/101,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Public functions not used by current contract should be external,153,https://github.com/code-423n4/2021-12-nftx-findings/issues/153,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Missing error messages in require statements,154,https://github.com/code-423n4/2021-12-nftx-findings/issues/154,nftx,2021/12,bug;duplicate;1 (Low Risk);sponsor acknowledged;sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`NFTXMarketplaceZap.sol#buyAndSwap1155WETH()` Implementation can be simpler and save some gas,156,https://github.com/code-423n4/2021-12-nftx-findings/issues/156,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unnecessary checked arithmetic in for loops,157,https://github.com/code-423n4/2021-12-nftx-findings/issues/157,nftx,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Inline unnecessary function can make the code simpler and save some gas,159,https://github.com/code-423n4/2021-12-nftx-findings/issues/159,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`10 ** 18` can be changed to `1e18` and save some gas,160,https://github.com/code-423n4/2021-12-nftx-findings/issues/160,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`NFTXMarketplaceZap.sol#buyAnd***()` should return unused weth/eth back to `msg.sender` instead of `to`,161,https://github.com/code-423n4/2021-12-nftx-findings/issues/161,nftx,2021/12,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused events,162,https://github.com/code-423n4/2021-12-nftx-findings/issues/162,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused local variables,163,https://github.com/code-423n4/2021-12-nftx-findings/issues/163,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused function parameters,164,https://github.com/code-423n4/2021-12-nftx-findings/issues/164,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Check if amount > 0 before token transfer can save gas,165,https://github.com/code-423n4/2021-12-nftx-findings/issues/165,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache storage variables in the stack can save gas,191,https://github.com/code-423n4/2021-12-nftx-findings/issues/191,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Constants are not explicitly declared,82,https://github.com/code-423n4/2021-12-nftx-findings/issues/82,nftx,2021/12,bug;0 (Non-critical);sponsor acknowledged
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,83,https://github.com/code-423n4/2021-12-nftx-findings/issues/83,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary storage read can save gas,84,https://github.com/code-423n4/2021-12-nftx-findings/issues/84,nftx,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`NFTXSimpleFeeDistributor#distribute()` Unbounded for loops,85,https://github.com/code-423n4/2021-12-nftx-findings/issues/85,nftx,2021/12,bug;duplicate;invalid;sponsor acknowledged
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Race condition on ERC20 approval,86,https://github.com/code-423n4/2021-12-nftx-findings/issues/86,nftx,2021/12,bug;duplicate;1 (Low Risk);sponsor acknowledged
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Unchecked return value for `ERC20.approve` call,87,https://github.com/code-423n4/2021-12-nftx-findings/issues/87,nftx,2021/12,bug;duplicate;0 (Non-critical);resolved;sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Outdated compiler version,88,https://github.com/code-423n4/2021-12-nftx-findings/issues/88,nftx,2021/12,bug;0 (Non-critical);sponsor acknowledged
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary external call can save gas,89,https://github.com/code-423n4/2021-12-nftx-findings/issues/89,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`NFTXSimpleFeeDistributor#__SimpleFeeDistributor__init__()` Missing `__ReentrancyGuard_init()`,90,https://github.com/code-423n4/2021-12-nftx-findings/issues/90,nftx,2021/12,bug;1 (Low Risk);sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Attacker can break `addLiquidity721()` by transferring `vaultToken` to the contract,91,https://github.com/code-423n4/2021-12-nftx-findings/issues/91,nftx,2021/12,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`NFTXSimpleFeeDistributor#distribute()` Wrong implementation of `NFTXSimpleFeeDistributor#_sendForReceiver` can potentially cause receivers to get wrong amounts of tokens,92,https://github.com/code-423n4/2021-12-nftx-findings/issues/92,nftx,2021/12,bug;duplicate;3 (High Risk);disagree with severity;resolved;sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,93,https://github.com/code-423n4/2021-12-nftx-findings/issues/93,nftx,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`transfer()` is not recommended for sending ETH,94,https://github.com/code-423n4/2021-12-nftx-findings/issues/94,nftx,2021/12,bug;0 (Non-critical);resolved;sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,95,https://github.com/code-423n4/2021-12-nftx-findings/issues/95,nftx,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Unchecked return value for `token.transfer` call,96,https://github.com/code-423n4/2021-12-nftx-findings/issues/96,nftx,2021/12,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Using constants instead of local variables can save some gas,97,https://github.com/code-423n4/2021-12-nftx-findings/issues/97,nftx,2021/12,bug;G (Gas Optimization);sponsor acknowledged
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`++i` is more efficient than `i++`,98,https://github.com/code-423n4/2021-12-nftx-findings/issues/98,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary external call can save gas,99,https://github.com/code-423n4/2021-12-nftx-findings/issues/99,nftx,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
69,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,G,Unnecessary check for a condition ,49,https://github.com/code-423n4/2021-12-nftx-findings/issues/49,nftx,2021/12,bug;G (Gas Optimization);resolved;sponsor acknowledged
69,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,2,No access control on assignFees() function in NFTXVaultFactoryUpgradeable contract,50,https://github.com/code-423n4/2021-12-nftx-findings/issues/50,nftx,2021/12,bug;2 (Med Risk);resolved;sponsor confirmed
60,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For uint `> 0` can be replaced with ` != 0` for gas optimization,60,https://github.com/code-423n4/2021-12-perennial-findings/issues/60,perennial,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
60,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Loops can be implemented more efficiently,61,https://github.com/code-423n4/2021-12-perennial-findings/issues/61,perennial,2021/12,bug;duplicate;G (Gas Optimization)
60,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,It is possible to liquidate not existing account,62,https://github.com/code-423n4/2021-12-perennial-findings/issues/62,perennial,2021/12,bug;invalid;2 (Med Risk);sponsor disputed
60,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,No checks if given product is created by the factory,63,https://github.com/code-423n4/2021-12-perennial-findings/issues/63,perennial,2021/12,bug;2 (Med Risk);disagree with severity;resolved
60,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Libraries add extra gas cost,64,https://github.com/code-423n4/2021-12-perennial-findings/issues/64,perennial,2021/12,bug;invalid;G (Gas Optimization);sponsor acknowledged
60,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,"At `Product.sol#closeAll`, cache `_position[account]`",65,https://github.com/code-423n4/2021-12-perennial-findings/issues/65,perennial,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
60,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,"At settleAccountInternal, check whether the position can be changeable to pre more efficiently",66,https://github.com/code-423n4/2021-12-perennial-findings/issues/66,perennial,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
60,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,"At settleInternal, check whether the position can be changable to pre more efficiently",67,https://github.com/code-423n4/2021-12-perennial-findings/issues/67,perennial,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
60,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,"At settleAccountInternal, don't make calculations for pre when it does not exist",68,https://github.com/code-423n4/2021-12-perennial-findings/issues/68,perennial,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
60,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,"At settleInternal, should not make calculations when not needed",69,https://github.com/code-423n4/2021-12-perennial-findings/issues/69,perennial,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
60,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`Collateral.sol#maintananceInvariant` can be combined with `collateralnvarant` to save gas,70,https://github.com/code-423n4/2021-12-perennial-findings/issues/70,perennial,2021/12,bug;G (Gas Optimization);sponsor acknowledged
60,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unsecure Ownership Transfer,12,https://github.com/code-423n4/2021-12-perennial-findings/issues/12,perennial,2021/12,bug;0 (Non-critical);resolved;sponsor confirmed
60,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Multiple initialization of Collateral contract,13,https://github.com/code-423n4/2021-12-perennial-findings/issues/13,perennial,2021/12,bug;2 (Med Risk);resolved
60,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Lack of input verification,14,https://github.com/code-423n4/2021-12-perennial-findings/issues/14,perennial,2021/12,bug;duplicate;1 (Low Risk)
60,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Non compatile with all tokens,16,https://github.com/code-423n4/2021-12-perennial-findings/issues/16,perennial,2021/12,bug;invalid;2 (Med Risk);sponsor disputed
60,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Multiple initialization of Incentivizer contract,48,https://github.com/code-423n4/2021-12-perennial-findings/issues/48,perennial,2021/12,bug;duplicate;invalid;disagree with severity
60,broccolirob,0x5233aF283E7C359a1011Dc0ff480298E90c8CFd6,3,Initialization functions can be front-run,71,https://github.com/code-423n4/2021-12-perennial-findings/issues/71,perennial,2021/12,bug;0 (Non-critical);disagree with severity;resolved
60,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing fee parameter validation,50,https://github.com/code-423n4/2021-12-perennial-findings/issues/50,perennial,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
60,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`initialize` functions can be frontrun,51,https://github.com/code-423n4/2021-12-perennial-findings/issues/51,perennial,2021/12,bug;duplicate;0 (Non-critical);disagree with severity
60,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`NotControllerOwnerError` error not used,52,https://github.com/code-423n4/2021-12-perennial-findings/issues/52,perennial,2021/12,bug;disagree with severity;G (Gas Optimization);resolved
60,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,ChainLink price data could be stale,53,https://github.com/code-423n4/2021-12-perennial-findings/issues/53,perennial,2021/12,bug;duplicate;2 (Med Risk)
60,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Fixed18 conversions don't work for all values,54,https://github.com/code-423n4/2021-12-perennial-findings/issues/54,perennial,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
60,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Incentivizer rewards are unclear and can be more than allotted?,55,https://github.com/code-423n4/2021-12-perennial-findings/issues/55,perennial,2021/12,bug;invalid;3 (High Risk);disagree with severity
60,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: unnecessary `add`,56,https://github.com/code-423n4/2021-12-perennial-findings/issues/56,perennial,2021/12,bug;duplicate;G (Gas Optimization)
60,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,SHOULD CHECK RETURN DATA FROM CHAINLINK AGGREGATORS,44,https://github.com/code-423n4/2021-12-perennial-findings/issues/44,perennial,2021/12,bug;duplicate;2 (Med Risk)
60,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Improper Upper Bound Definition on the Fee,45,https://github.com/code-423n4/2021-12-perennial-findings/issues/45,perennial,2021/12,bug;duplicate;1 (Low Risk)
60,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Struct layout,58,https://github.com/code-423n4/2021-12-perennial-findings/issues/58,perennial,2021/12,bug;invalid;G (Gas Optimization);resolved;sponsor confirmed
60,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Cache length() for iteration,59,https://github.com/code-423n4/2021-12-perennial-findings/issues/59,perennial,2021/12,bug;duplicate;G (Gas Optimization)
60,hubble,0xd2DFc6F7a13AD5576eEBBDa7C8DEE36908Cb3AaD,1,"On updating the Incentive fee greater than UFixedLib18.ONE, new Programs can not be created",72,https://github.com/code-423n4/2021-12-perennial-findings/issues/72,perennial,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
60,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Incorrect maintenance invariant check,17,https://github.com/code-423n4/2021-12-perennial-findings/issues/17,perennial,2021/12,bug;invalid;3 (High Risk);sponsor disputed
60,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Wrong shortfall calculation,18,https://github.com/code-423n4/2021-12-perennial-findings/issues/18,perennial,2021/12,bug;3 (High Risk);resolved;sponsor confirmed
60,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,DOS by Frontrunning The `initialize` Function,73,https://github.com/code-423n4/2021-12-perennial-findings/issues/73,perennial,2021/12,bug;duplicate;0 (Non-critical);disagree with severity
60,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,`withdrawTo` Does Not Sync Before Checking A Position's Margin Requirements,74,https://github.com/code-423n4/2021-12-perennial-findings/issues/74,perennial,2021/12,bug;3 (High Risk);resolved;sponsor confirmed
60,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Cache array length outside of loop,47,https://github.com/code-423n4/2021-12-perennial-findings/issues/47,perennial,2021/12,bug;duplicate;G (Gas Optimization)
60,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused imports,1,https://github.com/code-423n4/2021-12-perennial-findings/issues/1,perennial,2021/12,bug;0 (Non-critical);resolved;sponsor confirmed
60,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Solidity compiler versions mismatch,10,https://github.com/code-423n4/2021-12-perennial-findings/issues/10,perennial,2021/12,bug;0 (Non-critical);resolved;sponsor disputed
60,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified function inputs of public / external functions,11,https://github.com/code-423n4/2021-12-perennial-findings/issues/11,perennial,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
60,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Named return issue,15,https://github.com/code-423n4/2021-12-perennial-findings/issues/15,perennial,2021/12,bug;invalid;1 (Low Risk);sponsor disputed
60,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused state variables,2,https://github.com/code-423n4/2021-12-perennial-findings/issues/2,perennial,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
60,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,3,https://github.com/code-423n4/2021-12-perennial-findings/issues/3,perennial,2021/12,bug;invalid;G (Gas Optimization);sponsor acknowledged
60,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,4,https://github.com/code-423n4/2021-12-perennial-findings/issues/4,perennial,2021/12,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
60,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Two Steps Verification before Transferring Ownership,46,https://github.com/code-423n4/2021-12-perennial-findings/issues/46,perennial,2021/12,bug;duplicate;0 (Non-critical)
60,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,5,https://github.com/code-423n4/2021-12-perennial-findings/issues/5,perennial,2021/12,bug;duplicate;G (Gas Optimization)
60,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary array boundaries check when loading an array element twice,6,https://github.com/code-423n4/2021-12-perennial-findings/issues/6,perennial,2021/12,bug;duplicate;G (Gas Optimization)
60,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Prefix increments are cheaper than postfix increments,7,https://github.com/code-423n4/2021-12-perennial-findings/issues/7,perennial,2021/12,bug;duplicate;G (Gas Optimization)
60,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Caching array length can save gas,8,https://github.com/code-423n4/2021-12-perennial-findings/issues/8,perennial,2021/12,bug;duplicate;G (Gas Optimization)
60,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Lack Of Precision,9,https://github.com/code-423n4/2021-12-perennial-findings/issues/9,perennial,2021/12,bug;invalid;1 (Low Risk);sponsor disputed
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary arithmetic operations can save gas,20,https://github.com/code-423n4/2021-12-perennial-findings/issues/20,perennial,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`10 ** 18` can be changed to `1e18` and save some gas,21,https://github.com/code-423n4/2021-12-perennial-findings/issues/21,perennial,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"`Token18.sol#push()` When `isEther()`, `toTokenAmount()` is unnecessary",22,https://github.com/code-423n4/2021-12-perennial-findings/issues/22,perennial,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"`Token18.sol#balanceOf()` When `isEther()`, `fromTokenAmount()` is unnecessary",23,https://github.com/code-423n4/2021-12-perennial-findings/issues/23,perennial,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Chainlink's `latestRoundData` might return stale or incorrect results,24,https://github.com/code-423n4/2021-12-perennial-findings/issues/24,perennial,2021/12,bug;2 (Med Risk);resolved;sponsor confirmed
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`initializer` functions can be front run,25,https://github.com/code-423n4/2021-12-perennial-findings/issues/25,perennial,2021/12,bug;duplicate;0 (Non-critical)
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary external calls can save gas,26,https://github.com/code-423n4/2021-12-perennial-findings/issues/26,perennial,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding a new method `provider.currentPrice()` can save gas,27,https://github.com/code-423n4/2021-12-perennial-findings/issues/27,perennial,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`++i` is more efficient than `i++`,28,https://github.com/code-423n4/2021-12-perennial-findings/issues/28,perennial,2021/12,bug;duplicate;G (Gas Optimization)
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use immutable variables can save gas,29,https://github.com/code-423n4/2021-12-perennial-findings/issues/29,perennial,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary `SafeCast.toInt256()` can save gas,30,https://github.com/code-423n4/2021-12-perennial-findings/issues/30,perennial,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,31,https://github.com/code-423n4/2021-12-perennial-findings/issues/31,perennial,2021/12,bug;G (Gas Optimization);sponsor acknowledged
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Reuse operation results can save gas,32,https://github.com/code-423n4/2021-12-perennial-findings/issues/32,perennial,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache storage read and call results in the stack can save gas,33,https://github.com/code-423n4/2021-12-perennial-findings/issues/33,perennial,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unnecessary checked arithmetic in for loops,34,https://github.com/code-423n4/2021-12-perennial-findings/issues/34,perennial,2021/12,bug;G (Gas Optimization);sponsor acknowledged
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Factory.sol#updateController()` Lack of input validation,35,https://github.com/code-423n4/2021-12-perennial-findings/issues/35,perennial,2021/12,bug;1 (Low Risk);resolved;sponsor confirmed
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`Incentivizer.sol` Tokens with fee on transfer are not supported,36,https://github.com/code-423n4/2021-12-perennial-findings/issues/36,perennial,2021/12,bug;1 (Low Risk);disagree with severity;resolved
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Best Practice: public functions not used by current contract should be external,37,https://github.com/code-423n4/2021-12-perennial-findings/issues/37,perennial,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Inline unnecessary function can make the code simpler and save some gas,38,https://github.com/code-423n4/2021-12-perennial-findings/issues/38,perennial,2021/12,bug;G (Gas Optimization);sponsor acknowledged
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unnecessary variables can make the code simpler and save some gas,39,https://github.com/code-423n4/2021-12-perennial-findings/issues/39,perennial,2021/12,bug;G (Gas Optimization);sponsor acknowledged
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache storage variables in the stack can save gas,40,https://github.com/code-423n4/2021-12-perennial-findings/issues/40,perennial,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Improper implementation of `Fixed18.sol#abs()`,49,https://github.com/code-423n4/2021-12-perennial-findings/issues/49,perennial,2021/12,bug;duplicate;1 (Low Risk)
60,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,57,https://github.com/code-423n4/2021-12-perennial-findings/issues/57,perennial,2021/12,bug;G (Gas Optimization);sponsor acknowledged
60,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,2,Function sync in ChainlinkOracle.sol does not check the price returned from chainlink aggregators ,19,https://github.com/code-423n4/2021-12-perennial-findings/issues/19,perennial,2021/12,bug;duplicate;2 (Med Risk)
60,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G," Removing redundant code can save gas (Collateral, Factory, Incentivizer, ChainlinkOracle)",41,https://github.com/code-423n4/2021-12-perennial-findings/issues/41,perennial,2021/12,bug;0 (Non-critical);sponsor acknowledged
60,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Constant variable can be immutable (UFactoryProvider.sol),42,https://github.com/code-423n4/2021-12-perennial-findings/issues/42,perennial,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
60,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,claimFee loop does not check for zero transfer amount (Incentivizer.sol) ,43,https://github.com/code-423n4/2021-12-perennial-findings/issues/43,perennial,2021/12,bug;G (Gas Optimization);resolved;sponsor confirmed
64,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For uint `> 0` can be replaced with ` != 0` for gas optimization,128,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/128,pooltogether,2021/12,bug;duplicate;invalid
64,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Loops can be implemented more efficiently,129,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/129,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,"After a promotion is cancelled, not claimed rewards are stuck",130,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/130,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,Rewards not worth to claim will accumulate in the contract,131,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/131,pooltogether,2021/12,bug;duplicate;2 (Med Risk)
64,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,extendPromotion is callable by anyone without protecting extending users,132,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/132,pooltogether,2021/12,bug;duplicate;0 (Non-critical);disagree with severity
64,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,0,`_nextPromotionId/_latestPromotionId` calculation can be done more efficiently,133,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/133,pooltogether,2021/12,bug;G (Gas Optimization);sponsor acknowledged
64,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Implement _calculateRewardAmount more efficiently,134,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/134,pooltogether,2021/12,bug;G (Gas Optimization);sponsor confirmed
64,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Possible drain of funds with bad ticket,6,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/6,pooltogether,2021/12,bug;invalid;sponsor disputed
64,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Lack of input validation,7,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/7,pooltogether,2021/12,bug;invalid;sponsor disputed
64,0x421f,0x421f0897F2E07462b5A7B994AbF8AE758DD0DD70,0,Suggestion : To add explicit check for no of epochs to be 255 in createPromotion and extendPromotion,147,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/147,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,0xabc,0xF3a6a14234b8A728aF7bBaaED2Ea6d4f951ea0Be,3,Drain the award pool by feeding outrange epoch into function claimRewards,107,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/107,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,0xabc,0xF3a6a14234b8A728aF7bBaaED2Ea6d4f951ea0Be,G,Unnecessary check for _promotionEndTimestamp,76,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/76,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,_requirePromotionActive allows actions before the promotion is active,115,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/115,pooltogether,2021/12,bug;1 (Low Risk);sponsor acknowledged
64,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,cancelPromotion will revert if the promotion is not started yet,116,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/116,pooltogether,2021/12,bug;duplicate;2 (Med Risk)
64,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,getRemainingRewards might fail unexpectedly,117,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/117,pooltogether,2021/12,bug;duplicate;2 (Med Risk)
64,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,getCurrentEpochId might behave unexpectedly,118,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/118,pooltogether,2021/12,bug;duplicate;1 (Low Risk)
64,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,unsafe casts,119,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/119,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,`getRewardsAmount` might return wrong result,80,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/80,pooltogether,2021/12,bug;1 (Low Risk);sponsor confirmed
64,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,unsafe cast can lead to theft,81,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/81,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,_calculateRewardAmount might return wrong result,83,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/83,pooltogether,2021/12,bug;duplicate;1 (Low Risk)
64,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,_updateClaimedEpoch might behave unexpectedly,85,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/85,pooltogether,2021/12,bug;duplicate;1 (Low Risk)
64,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,_isClaimedEpoch must return wrong result,87,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/87,pooltogether,2021/12,bug;duplicate;1 (Low Risk)
64,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Can delegate burnt tokens to oneself,66,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/66,pooltogether,2021/12,bug;invalid;sponsor disputed
64,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Allowing more than 256 epochs leads to loss of funds,67,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/67,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Anyone can claim rewards on behalf of someone,68,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/68,pooltogether,2021/12,bug;1 (Low Risk);sponsor acknowledged
64,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Redundant check in `_requirePromotionActive`,69,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/69,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,getRewardsAmount is not considering duplicate epoch id,10,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/10,pooltogether,2021/12,bug;invalid;sponsor disputed
64,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,0,User can fund other user promotion by mistake,11,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/11,pooltogether,2021/12,bug;0 (Non-critical);sponsor acknowledged
64,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Steal rewards from contract,4,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/4,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,Fake promotions with no significance can be created,5,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/5,pooltogether,2021/12,bug;invalid;sponsor disputed
64,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Backdated _startTimestamp can lead to loss of funds,8,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/8,pooltogether,2021/12,bug;3 (High Risk);disagree with severity;sponsor confirmed
64,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,User can claim even after promotion has ended,9,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/9,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,G,unnecessary check in require,79,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/79,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Less than 256 uints are not gas efficient,40,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/40,pooltogether,2021/12,bug;invalid;sponsor disputed
64,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Revert String Size Optimization,41,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/41,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Cache array length in for loops can save gas,42,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/42,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Adding unchecked directive can save gas,43,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/43,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,++i is more gas efficient than i++ in loops forwarding,44,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/44,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Missing access restriction On The Promotion Extending,45,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/45,pooltogether,2021/12,bug;invalid;disagree with severity
64,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Incompatibility With Rebasing/Deflationary/Inflationary tokens,47,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/47,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Ticket Usable Multiple Times,48,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/48,pooltogether,2021/12,bug;invalid;sponsor disputed
64,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,StartTimestamp is not checked,55,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/55,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Long revert strings,114,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/114,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,3,TwabRewards: fee on transfer token as promotion token will block at least one epoch reward claim,141,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/141,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,3,TwabRewards: cancelPromotion() can revert if a promotion tokens applies fee on transfer,148,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/148,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,TwarbRewards: don't use the onlyPromotionCreator modifier to save gas,77,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/77,pooltogether,2021/12,bug;G (Gas Optimization);sponsor confirmed
64,gpersoon,gpersoon.eth,G,simplify require in _requirePromotionActive(),19,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/19,pooltogether,2021/12,bug;G (Gas Optimization);sponsor confirmed
64,gpersoon,gpersoon.eth,3,Continue claiming reqrds after numberOfEpochs are over,20,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/20,pooltogether,2021/12,bug;3 (High Risk);sponsor confirmed
64,gpersoon,gpersoon.eth,3,Repeatedly claim for the same epoch,21,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/21,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,gpersoon,gpersoon.eth,3,Steal the reward tokens from another promotion,22,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/22,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,gpersoon,gpersoon.eth,3,cancelPromotion is too rigorous,23,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/23,pooltogether,2021/12,bug;3 (High Risk);sponsor confirmed
64,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Reward stuck if promotion cancel before all past reward claimed,105,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/105,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Reward can be cancel during a epoch,110,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/110,pooltogether,2021/12,bug;invalid;sponsor disputed
64,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Struct layout,112,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/112,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Redundant > 0 check,113,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/113,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Can drain any promotion rewards,73,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/73,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Can claim epoch > 255 repeatedly due to bitshift truncation,74,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/74,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Can drain any promotion rewards with a evil ticket,78,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/78,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,3,CancelPromotion will lock all unclaimed rewards from previous epochs,39,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/39,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,3,Can create promotion with malicious ticket to steal tokens from other promotions ,49,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/49,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,getRewardsAmount doesn't check epochs haven't been claimed,50,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/50,pooltogether,2021/12,bug;2 (Med Risk);sponsor confirmed
64,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,3,Users can claim rewards on epochIds that don't exist,51,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/51,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,3,claimRewards _epochIds should be uint8[] instead of uint256[],52,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/52,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,_getPromotion does not revert if promotion does not exist,53,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/53,pooltogether,2021/12,bug;duplicate;1 (Low Risk);disagree with severity
64,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,1,Inconsistent definition of when an epoch ends,54,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/54,pooltogether,2021/12,bug;1 (Low Risk);sponsor confirmed
64,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,3,"If a promoter cancels a promotion, unclaimed rewards of ticket holders are lost",125,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/125,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,extendPromotion function should be access controlled by using onlyPromotionCreator,126,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/126,pooltogether,2021/12,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
64,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,1,event PromotionCancelled should also emit the _to address,127,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/127,pooltogether,2021/12,bug;1 (Low Risk);sponsor confirmed
64,johnnycash,0x3a64B3ceA5E4bfe773b3522f0A0eE37c42dDF2ba,3,Malicious tickets can lead to the loss of all tokens,1,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/1,pooltogether,2021/12,bug;3 (High Risk);sponsor confirmed
64,johnnycash,0x3a64B3ceA5E4bfe773b3522f0A0eE37c42dDF2ba,2,_getPromotion() doesn't revert on invalid _promotionId,2,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/2,pooltogether,2021/12,bug;1 (Low Risk);disagree with severity;sponsor confirmed
64,johnnycash,0x3a64B3ceA5E4bfe773b3522f0A0eE37c42dDF2ba,3,Rewards can be claimed multiple times,3,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/3,pooltogether,2021/12,bug;3 (High Risk);sponsor confirmed
64,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Placement of require statements,120,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/120,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,A more efficient for loop index proceeding,86,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/86,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Long Revert Strings,88,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/88,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,> 0 can be replaced with != 0 for gas optimisation,89,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/89,pooltogether,2021/12,bug;duplicate;invalid
64,kemmio,0xb1E261C37Fd29c27de80cc0d1fb9Ca2f151D0C1d,3,Possibility to drain TwabRewards smart contract tokens,71,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/71,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,kemmio,0xb1E261C37Fd29c27de80cc0d1fb9Ca2f151D0C1d,3,Possibility to drain TwabRewards smart contract tokens (even with valid ticket),82,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/82,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Cancelling a promotion will lock funds and disable claiming of legitimate rewards,24,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/24,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,TWAB values could be spoofed using a malicious ticket,25,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/25,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,No check in claimRewards that epochId is valid,26,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/26,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,No check that promotion's number of epochs is < 256,27,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/27,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Promotion creator can't cancel promotion before it has begun,28,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/28,pooltogether,2021/12,bug;duplicate;2 (Med Risk)
64,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,No sanity checks for user supplied promotion values,29,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/29,pooltogether,2021/12,bug;1 (Low Risk);sponsor confirmed
64,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,1,Missing Validation Of `createPromotion` Parameters,59,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/59,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,Malicious Promotion Creators Can Drain Token Balances,61,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/61,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,G,Gas Optimization: Efficient Struct Packing,62,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/62,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,G,Gas Optimization: Remove Redundant Checks In `for` Loop,63,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/63,pooltogether,2021/12,bug;invalid;sponsor disputed
64,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,G,Gas Optimization: `epochIds.length` Can Be Declared Outside Of `for` Loop,64,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/64,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,Missing Check When Transferring Tokens Out For A Given Promotion,70,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/70,pooltogether,2021/12,bug;2 (Med Risk);sponsor acknowledged
64,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,`claimRewards` Does Not Prevent Users From Claiming Rewards After A Promotion's End Epoch,72,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/72,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,Dust Token Balances Cannot Be Claimed By An `admin` Account,75,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/75,pooltogether,2021/12,bug;2 (Med Risk);sponsor confirmed
64,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Long Revert Strings are Waste of Gas,34,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/34,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Check Zero Address Before Function Call Can Save Gas,35,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/35,pooltogether,2021/12,bug;G (Gas Optimization);sponsor confirmed
64,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,cancelPromotion() Does Not Send Promotion Tokens Back to the Creator,36,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/36,pooltogether,2021/12,bug;1 (Low Risk);sponsor disputed
64,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Avoid Initialization of Loop Index If It Is 0 to Save Gas,37,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/37,pooltogether,2021/12,bug;duplicate;invalid
64,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,2,extendPromotion() Lack of Access Control May Abused by Bad Actors to Create Unexpected Surprise,38,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/38,pooltogether,2021/12,bug;invalid;sponsor disputed
64,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,A malicious ticket can drain the tokens,138,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/138,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Validations,139,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/139,pooltogether,2021/12,bug;duplicate;1 (Low Risk)
64,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Support of deflationary / rebasing tokens,140,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/140,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Creator can run with extended funds,142,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/142,pooltogether,2021/12,bug;duplicate;0 (Non-critical)
64,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,"loops: skip initialization, do prefix increments",143,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/143,pooltogether,2021/12,bug;duplicate;invalid
64,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Inline functions _updateClaimedEpoch and _isClaimedEpoch,144,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/144,pooltogether,2021/12,bug;G (Gas Optimization);sponsor acknowledged
64,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,>0 -> !=0,145,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/145,pooltogether,2021/12,bug;duplicate;invalid
64,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,_promotionEndTimestamp > 0,146,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/146,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,1,Contract does not work with fee-on transfer tokens,30,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/30,pooltogether,2021/12,bug;3 (High Risk);sponsor confirmed
64,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Remove unnecessary check in `TwabRewards::_requirePromotionActive`,31,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/31,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Cache array length outside of loop,32,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/32,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Use `!= 0` instead of `> 0` for unsigned integer comparisons,33,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/33,pooltogether,2021/12,bug;invalid;sponsor disputed
64,rishabh,0xaf55d73461836577FEEbe04Ca5CFFFD1918B345C,3,No restriction on epocsDuration can lead to attacker gaining extra money,149,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/149,pooltogether,2021/12,bug;invalid;sponsor disputed
64,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Struct packing,12,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/12,pooltogether,2021/12,bug;G (Gas Optimization);sponsor confirmed
64,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Short the following require messages,13,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/13,pooltogether,2021/12,bug;G (Gas Optimization);sponsor confirmed
64,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Internal functions to private,14,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/14,pooltogether,2021/12,bug;invalid;sponsor disputed
64,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified function inputs of public / external functions,15,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/15,pooltogether,2021/12,bug;invalid;sponsor disputed
64,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Caching array length can save gas,16,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/16,pooltogether,2021/12,bug;G (Gas Optimization);sponsor confirmed
64,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,uint8 index,17,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/17,pooltogether,2021/12,bug;invalid;sponsor disputed
64,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Prefix increments are cheaper than postfix increments,18,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/18,pooltogether,2021/12,bug;G (Gas Optimization);sponsor acknowledged
64,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,3,Claim more rewards by transferring tickets to another address that belongs to you within an epoch,46,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/46,pooltogether,2021/12,bug;invalid;sponsor disputed
64,Ruhum,0xC3e61F4ef0a95E616F75f94D5b6A358bD9DC18ac,3,User can withdraw more rewards than expected by moving their tickets to a different wallet within an epoch,60,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/60,pooltogether,2021/12,bug;invalid
64,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Change sequence of extendPromotion operations,121,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/121,pooltogether,2021/12,bug;invalid;sponsor disputed
64,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,Large _epochId value impacts rewards calculation,122,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/122,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Unsafe uint64 casting may overflow,123,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/123,pooltogether,2021/12,bug;2 (Med Risk)
64,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,0,safeTransferFrom call inconsistency,124,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/124,pooltogether,2021/12,bug;invalid;sponsor disputed
64,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Revert string > 32 bytes,56,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/56,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Redundant _promotionEndTimestamp check,57,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/57,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,uint256 types can be uint64,58,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/58,pooltogether,2021/12,bug;G (Gas Optimization);sponsor confirmed
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`cancelPromotion()` Unable to cancel unstarted promotions,101,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/101,pooltogether,2021/12,bug;2 (Med Risk);sponsor confirmed
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`getRemainingRewards()` Malfunction for unstarted promotions,102,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/102,pooltogether,2021/12,bug;duplicate;2 (Med Risk)
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`_requirePromotionActive()` Remove redundant check can save gas,103,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/103,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Inline `onlyPromotionCreator` can save gas,104,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/104,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`createPromotion()` Lack of input validation for `_epochDuration` can potentially freeze promotion creator's funds,106,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/106,pooltogether,2021/12,bug;3 (High Risk)
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`getRemainingRewards()` Malfunction for ended promotions,108,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/108,pooltogether,2021/12,bug;invalid;sponsor disputed
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`getCurrentEpochId()` Malfunction for ended promotions,109,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/109,pooltogether,2021/12,bug;1 (Low Risk);sponsor confirmed
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,111,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/111,pooltogether,2021/12,bug;G (Gas Optimization);sponsor confirmed
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`_requireTicket()` Implementation can be simpler and save some gas,90,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/90,pooltogether,2021/12,bug;G (Gas Optimization);sponsor confirmed
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary dynamic size array `_averageTotalSupplies` can save gas,92,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/92,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Attacker can empty all the funds by creating fake promotions,93,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/93,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`createPromotion()` Consider adding `require(_tokensPerEpoch > 0)`,94,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/94,pooltogether,2021/12,bug;duplicate;1 (Low Risk)
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`createPromotion()` Check if `_tokensPerEpoch * _numberOfEpochs > 0` before transfer can save gas,95,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/95,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`cancelPromotion()` Validate input earlier can save gas,96,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/96,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,97,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/97,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`++i` is more efficient than `i++`,98,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/98,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Tokens with fee on transfer are not supported,99,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/99,pooltogether,2021/12,bug;duplicate;3 (High Risk)
64,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,"""> 0"" is less efficient than ""!= 0"" for unsigned integers",135,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/135,pooltogether,2021/12,bug;duplicate;invalid
64,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Long Revert Strings,136,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/136,pooltogether,2021/12,bug;duplicate;G (Gas Optimization)
64,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Transfer amounts not checked for > 0 ,137,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/137,pooltogether,2021/12,bug;G (Gas Optimization);sponsor acknowledged
61,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,"In `CreditLine#_borrowTokensToLiquidate`, oracle is used wrong way",155,https://github.com/code-423n4/2021-12-sublime-findings/issues/155,sublime,2021/12,bug;3 (High Risk);sponsor confirmed
61,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,3,"In `CreditLine#liquidate`, lender doesn't receive `_borrowTokens`, when it is ETH",156,https://github.com/code-423n4/2021-12-sublime-findings/issues/156,sublime,2021/12,bug;duplicate;2 (Med Risk)
61,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Loops can be implemented more efficiently,157,https://github.com/code-423n4/2021-12-sublime-findings/issues/157,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Don't assign default values,158,https://github.com/code-423n4/2021-12-sublime-findings/issues/158,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Use preincrement for `id` to save gas,159,https://github.com/code-423n4/2021-12-sublime-findings/issues/159,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Not needed zero address check,160,https://github.com/code-423n4/2021-12-sublime-findings/issues/160,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,Use Solidity 0.8,161,https://github.com/code-423n4/2021-12-sublime-findings/issues/161,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Lack of input validation in YearnYield,10,https://github.com/code-423n4/2021-12-sublime-findings/issues/10,sublime,2021/12,bug;duplicate;0 (Non-critical)
61,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving by duplicate call III,11,https://github.com/code-423n4/2021-12-sublime-findings/issues/11,sublime,2021/12,bug;duplicate;invalid;sponsor disputed
61,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Lack of Safe calls,12,https://github.com/code-423n4/2021-12-sublime-findings/issues/12,sublime,2021/12,bug;duplicate;1 (Low Risk);sponsor disputed
61,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Price oracle doesn't meed all cases,13,https://github.com/code-423n4/2021-12-sublime-findings/issues/13,sublime,2021/12,bug;invalid;sponsor disputed
61,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving by struct reorganization,14,https://github.com/code-423n4/2021-12-sublime-findings/issues/14,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Lack of input validation,3,https://github.com/code-423n4/2021-12-sublime-findings/issues/3,sublime,2021/12,bug;duplicate;0 (Non-critical)
61,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas optimization,34,https://github.com/code-423n4/2021-12-sublime-findings/issues/34,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Wrong emergencyWithdraw logic,4,https://github.com/code-423n4/2021-12-sublime-findings/issues/4,sublime,2021/12,bug;duplicate;3 (High Risk)
61,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving by duplicate check,5,https://github.com/code-423n4/2021-12-sublime-findings/issues/5,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving removing safe math,6,https://github.com/code-423n4/2021-12-sublime-findings/issues/6,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving using delete,7,https://github.com/code-423n4/2021-12-sublime-findings/issues/7,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving by duplicate call,8,https://github.com/code-423n4/2021-12-sublime-findings/issues/8,sublime,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
61,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving by duplicate call II,9,https://github.com/code-423n4/2021-12-sublime-findings/issues/9,sublime,2021/12,bug;duplicate;invalid;sponsor disputed
61,0xamogh,0x68aF7716EADab50838fF52768dFEE5AA6F070aca,1,Zyc,172,https://github.com/code-423n4/2021-12-sublime-findings/issues/172,sublime,2021/12,bug;invalid;question
61,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,G,Gas: Upgrading solc version and removing SafeMath,39,https://github.com/code-423n4/2021-12-sublime-findings/issues/39,sublime,2021/12,bug;G (Gas Optimization);sponsor acknowledged
61,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,G,Gas: Inlining logic that's used only once in the contract,40,https://github.com/code-423n4/2021-12-sublime-findings/issues/40,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,2,AaveYield: Misspelled external function name making functions fail,42,https://github.com/code-423n4/2021-12-sublime-findings/issues/42,sublime,2021/12,bug;2 (Med Risk);sponsor confirmed
61,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,0,Fix Unused Variables and Function Parameters,46,https://github.com/code-423n4/2021-12-sublime-findings/issues/46,sublime,2021/12,bug;disagree with severity;G (Gas Optimization)
61,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,G,Reduce length of require error messages to save in deployment costs,47,https://github.com/code-423n4/2021-12-sublime-findings/issues/47,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,1,Natspec not matching function's logic,48,https://github.com/code-423n4/2021-12-sublime-findings/issues/48,sublime,2021/12,bug;1 (Low Risk);sponsor disputed
61,broccolirob,0x5233aF283E7C359a1011Dc0ff480298E90c8CFd6,3,Ether can be locked in the `PoolFactory` contract without a way to retrieve it,168,https://github.com/code-423n4/2021-12-sublime-findings/issues/168,sublime,2021/12,bug;2 (Med Risk);disagree with severity
61,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,denial of service,154,https://github.com/code-423n4/2021-12-sublime-findings/issues/154,sublime,2021/12,bug;3 (High Risk);sponsor confirmed
61,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,missing nonreentrant modifier,163,https://github.com/code-423n4/2021-12-sublime-findings/issues/163,sublime,2021/12,bug;duplicate;0 (Non-critical);disagree with severity
61,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,missing nonreentrant modfier,166,https://github.com/code-423n4/2021-12-sublime-findings/issues/166,sublime,2021/12,bug;0 (Non-critical);disagree with severity
61,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,some events are not indexed,167,https://github.com/code-423n4/2021-12-sublime-findings/issues/167,sublime,2021/12,bug;invalid;1 (Low Risk);sponsor disputed
61,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`initialize` functions can be frontrun,133,https://github.com/code-423n4/2021-12-sublime-findings/issues/133,sublime,2021/12,bug;duplicate;1 (Low Risk)
61,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Yearn token <> shares conversion decimal issue,134,https://github.com/code-423n4/2021-12-sublime-findings/issues/134,sublime,2021/12,bug;3 (High Risk);sponsor confirmed
61,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`unlockShares` wrong comment,135,https://github.com/code-423n4/2021-12-sublime-findings/issues/135,sublime,2021/12,bug;1 (Low Risk);sponsor confirmed
61,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,approve return values not checked,136,https://github.com/code-423n4/2021-12-sublime-findings/issues/136,sublime,2021/12,bug;0 (Non-critical);sponsor disputed
61,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Aave's share tokens are rebasing breaking current strategy code,137,https://github.com/code-423n4/2021-12-sublime-findings/issues/137,sublime,2021/12,bug;3 (High Risk);sponsor acknowledged
61,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Pool direct savingsaccount deposits fail when no strategy set,138,https://github.com/code-423n4/2021-12-sublime-findings/issues/138,sublime,2021/12,bug;1 (Low Risk);disagree with severity
61,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Restrict fee percentages to 100%,139,https://github.com/code-423n4/2021-12-sublime-findings/issues/139,sublime,2021/12,bug;duplicate;0 (Non-critical)
61,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Extension voting power can be flashloaned,140,https://github.com/code-423n4/2021-12-sublime-findings/issues/140,sublime,2021/12,bug;1 (Low Risk);disagree with severity
61,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Extension voting threshold check needs to rerun on each transfer,141,https://github.com/code-423n4/2021-12-sublime-findings/issues/141,sublime,2021/12,bug;2 (Med Risk);sponsor confirmed
61,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Collateral deposit does not support fee-on-transfer tokens,143,https://github.com/code-423n4/2021-12-sublime-findings/issues/143,sublime,2021/12,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
61,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Borrow should increase principal by withdrawn amount,144,https://github.com/code-423n4/2021-12-sublime-findings/issues/144,sublime,2021/12,bug;duplicate;3 (High Risk);sponsor confirmed
61,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,DoS when depositing collateral,145,https://github.com/code-423n4/2021-12-sublime-findings/issues/145,sublime,2021/12,bug;invalid;2 (Med Risk);sponsor disputed
61,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Self-transfer leads to wrong withdrawable repayments,146,https://github.com/code-423n4/2021-12-sublime-findings/issues/146,sublime,2021/12,bug;1 (Low Risk);sponsor confirmed
61,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Unnecessary assignment in `SavingsAccount.withdrawAll`,147,https://github.com/code-423n4/2021-12-sublime-findings/issues/147,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Use `else if` in `withdrawLiquidity`,148,https://github.com/code-423n4/2021-12-sublime-findings/issues/148,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,cyberboy,0xdc3442769DB7D34e6468Ded0b9B2a1baa4630C99,G,"Function should be declared as external to save gas [Controller.sol, Strategy.sol, yVault.sol, FluxAggregator.sol]",62,https://github.com/code-423n4/2021-12-sublime-findings/issues/62,sublime,2021/12,bug;invalid;sponsor disputed
61,cyberboy,0xdc3442769DB7D34e6468Ded0b9B2a1baa4630C99,G,State variables that could be declared constant to save gas,63,https://github.com/code-423n4/2021-12-sublime-findings/issues/63,sublime,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
61,cyberboy,0xdc3442769DB7D34e6468Ded0b9B2a1baa4630C99,G,State variables that could be declared constant to save gas,64,https://github.com/code-423n4/2021-12-sublime-findings/issues/64,sublime,2021/12,bug;invalid;sponsor disputed
61,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,101,https://github.com/code-423n4/2021-12-sublime-findings/issues/101,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use of _msgSender(),102,https://github.com/code-423n4/2021-12-sublime-findings/issues/102,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing timelock for critical contract setters of privileged roles (Price Oracles),103,https://github.com/code-423n4/2021-12-sublime-findings/issues/103,sublime,2021/12,bug;1 (Low Risk);sponsor confirmed
61,gpersoon,gpersoon.eth,2,Unlinked address can link immediately again,54,https://github.com/code-423n4/2021-12-sublime-findings/issues/54,sublime,2021/12,bug;2 (Med Risk);sponsor confirmed
61,gpersoon,gpersoon.eth,2,_beforeTokenTransfer  with _from == _to.,55,https://github.com/code-423n4/2021-12-sublime-findings/issues/55,sublime,2021/12,bug;duplicate;1 (Low Risk)
61,gpersoon,gpersoon.eth,1,Safemath not used in transferTokens,56,https://github.com/code-423n4/2021-12-sublime-findings/issues/56,sublime,2021/12,bug;invalid;sponsor disputed
61,gpersoon,gpersoon.eth,1,transferTokens should use _from instead of msg.sender,57,https://github.com/code-423n4/2021-12-sublime-findings/issues/57,sublime,2021/12,bug;1 (Low Risk);sponsor confirmed
61,gpersoon,gpersoon.eth,1,Overflow in _repay(),58,https://github.com/code-423n4/2021-12-sublime-findings/issues/58,sublime,2021/12,bug;1 (Low Risk);sponsor confirmed
61,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Struct layout,129,https://github.com/code-423n4/2021-12-sublime-findings/issues/129,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,2,Failed transfer with low level call could be overlooked,162,https://github.com/code-423n4/2021-12-sublime-findings/issues/162,sublime,2021/12,bug;invalid;2 (Med Risk);sponsor disputed
61,harleythedog,0xeFBFe9c6a66d871175d2B0ab35bc00255Aa36298,3,Anyone can liquidate credit line when autoLiquidation is false without supplying borrow tokens,96,https://github.com/code-423n4/2021-12-sublime-findings/issues/96,sublime,2021/12,bug;3 (High Risk);sponsor confirmed
61,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,PoolFactory and CreditLine updateSavingsAccount will break the system in production as savings account hold current user records,53,https://github.com/code-423n4/2021-12-sublime-findings/issues/53,sublime,2021/12,bug;1 (Low Risk);disagree with severity
61,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,PoolFactory.updateRepaymentImpl will break the system in production as there is no way to copy Pool state info held in Repayments,60,https://github.com/code-423n4/2021-12-sublime-findings/issues/60,sublime,2021/12,bug;duplicate;1 (Low Risk)
61,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Repayments._transferTokens doesn't check msg.value in ETH case,61,https://github.com/code-423n4/2021-12-sublime-findings/issues/61,sublime,2021/12,bug;0 (Non-critical);sponsor disputed
61,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,SavingsAccount withdrawAll and switchStrategy can freeze user funds by ignoring possible strategy liquidity issues,80,https://github.com/code-423n4/2021-12-sublime-findings/issues/80,sublime,2021/12,bug;3 (High Risk);disagree with severity
61,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,CreditLine.liquidate doesn't transfer borrowed ETH to a lender,90,https://github.com/code-423n4/2021-12-sublime-findings/issues/90,sublime,2021/12,bug;2 (Med Risk);sponsor confirmed
61,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,CreditLine.liquidate allows for price manipulated liquidation,94,https://github.com/code-423n4/2021-12-sublime-findings/issues/94,sublime,2021/12,bug;1 (Low Risk);sponsor disputed
61,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Possible storage collision,100,https://github.com/code-423n4/2021-12-sublime-findings/issues/100,sublime,2021/12,bug;invalid;1 (Low Risk);sponsor disputed
61,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Chainlink Price oracle always assumes 8 decimals,43,https://github.com/code-423n4/2021-12-sublime-findings/issues/43,sublime,2021/12,bug;invalid;1 (Low Risk);sponsor disputed
61,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,.latestRoundData() does not update the oracle,44,https://github.com/code-423n4/2021-12-sublime-findings/issues/44,sublime,2021/12,bug;invalid;sponsor disputed
61,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Chainlink’s latestRoundData might return incorrect results,45,https://github.com/code-423n4/2021-12-sublime-findings/issues/45,sublime,2021/12,bug;duplicate;1 (Low Risk);sponsor disputed
61,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Upgrading the solc compiler to >=0.8 may save gas ,88,https://github.com/code-423n4/2021-12-sublime-findings/issues/88,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Approved by zero first,89,https://github.com/code-423n4/2021-12-sublime-findings/issues/89,sublime,2021/12,bug;duplicate;2 (Med Risk);disagree with severity
61,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Long Revert Strings,91,https://github.com/code-423n4/2021-12-sublime-findings/issues/91,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Redundant use safeMath,92,https://github.com/code-423n4/2021-12-sublime-findings/issues/92,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Use one require instead of several,93,https://github.com/code-423n4/2021-12-sublime-findings/issues/93,sublime,2021/12,bug;G (Gas Optimization);sponsor acknowledged
61,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Incorrect `safeApprove` usage,98,https://github.com/code-423n4/2021-12-sublime-findings/issues/98,sublime,2021/12,bug;duplicate;2 (Med Risk)
61,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Unnecessary receive(),99,https://github.com/code-423n4/2021-12-sublime-findings/issues/99,sublime,2021/12,bug;1 (Low Risk);sponsor confirmed
61,kemmio,0xb1E261C37Fd29c27de80cc0d1fb9Ca2f151D0C1d,3,Possibility to drain SavingsAccount contract assets,41,https://github.com/code-423n4/2021-12-sublime-findings/issues/41,sublime,2021/12,bug;3 (High Risk);sponsor disputed
61,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,Users Can Siphon `AaveYield` Rewards By Depositing And Withdrawing Collateral,171,https://github.com/code-423n4/2021-12-sublime-findings/issues/171,sublime,2021/12,bug;duplicate;3 (High Risk)
61,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,DOS by Frontrunning The `initialize` Function,49,https://github.com/code-423n4/2021-12-sublime-findings/issues/49,sublime,2021/12,bug;duplicate;1 (Low Risk)
61,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,Improper Validation Of Chainlink's `latestRoundData` Function,50,https://github.com/code-423n4/2021-12-sublime-findings/issues/50,sublime,2021/12,bug;1 (Low Risk);sponsor disputed
61,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,`PriceOracle` Does Not Filter Price Feed Outliers,51,https://github.com/code-423n4/2021-12-sublime-findings/issues/51,sublime,2021/12,bug;3 (High Risk);sponsor disputed
61,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,Unable To Call `emergencyWithdraw` ETH in `NoYield` Contract,52,https://github.com/code-423n4/2021-12-sublime-findings/issues/52,sublime,2021/12,bug;3 (High Risk);sponsor confirmed
61,p4st13r4,0xBDf9d4570ECf19583190eE4a2D1946A3325e849B,0,Unused variables in SavingsAccount.sol,164,https://github.com/code-423n4/2021-12-sublime-findings/issues/164,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,p4st13r4,0xBDf9d4570ECf19583190eE4a2D1946A3325e849B,0,Change state mutability in NoYield.sol,165,https://github.com/code-423n4/2021-12-sublime-findings/issues/165,sublime,2021/12,bug;0 (Non-critical);sponsor confirmed
61,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Collateral can be deposited in a finished pool,169,https://github.com/code-423n4/2021-12-sublime-findings/issues/169,sublime,2021/12,bug;2 (Med Risk);disagree with severity
61,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,1,Event missing when removing a vote in extensions,170,https://github.com/code-423n4/2021-12-sublime-findings/issues/170,sublime,2021/12,bug;0 (Non-critical);disagree with severity
61,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,1,ETH deposited to `Pool.sol` could be lost for user,118,https://github.com/code-423n4/2021-12-sublime-findings/issues/118,sublime,2021/12,bug;duplicate;1 (Low Risk)
61,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Remove unused local variables,119,https://github.com/code-423n4/2021-12-sublime-findings/issues/119,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Cache array length outside of loop,120,https://github.com/code-423n4/2021-12-sublime-findings/issues/120,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Don't load array element twice,121,https://github.com/code-423n4/2021-12-sublime-findings/issues/121,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Don't initialize variables with default value,122,https://github.com/code-423n4/2021-12-sublime-findings/issues/122,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused state variables,15,https://github.com/code-423n4/2021-12-sublime-findings/issues/15,sublime,2021/12,bug;invalid;sponsor disputed
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Missing Slippage Protection,150,https://github.com/code-423n4/2021-12-sublime-findings/issues/150,sublime,2021/12,bug;invalid;sponsor disputed
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Two Steps Verification before Transferring Ownership,151,https://github.com/code-423n4/2021-12-sublime-findings/issues/151,sublime,2021/12,bug;duplicate;1 (Low Risk)
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary payable,152,https://github.com/code-423n4/2021-12-sublime-findings/issues/152,sublime,2021/12,bug;invalid;sponsor disputed
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Missing payable,153,https://github.com/code-423n4/2021-12-sublime-findings/issues/153,sublime,2021/12,bug;invalid;2 (Med Risk);sponsor disputed
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Short the following require messages,16,https://github.com/code-423n4/2021-12-sublime-findings/issues/16,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,17,https://github.com/code-423n4/2021-12-sublime-findings/issues/17,sublime,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary Reentrancy Guards,18,https://github.com/code-423n4/2021-12-sublime-findings/issues/18,sublime,2021/12,bug;G (Gas Optimization);sponsor acknowledged
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,19,https://github.com/code-423n4/2021-12-sublime-findings/issues/19,sublime,2021/12,bug;invalid;sponsor disputed
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,20,https://github.com/code-423n4/2021-12-sublime-findings/issues/20,sublime,2021/12,bug;invalid;sponsor disputed
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary array boundaries check when loading an array element twice,21,https://github.com/code-423n4/2021-12-sublime-findings/issues/21,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Prefix increments are cheaper than postfix increments,22,https://github.com/code-423n4/2021-12-sublime-findings/issues/22,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,uint8 index,23,https://github.com/code-423n4/2021-12-sublime-findings/issues/23,sublime,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Caching array length can save gas,24,https://github.com/code-423n4/2021-12-sublime-findings/issues/24,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Require with not comprehensive message,25,https://github.com/code-423n4/2021-12-sublime-findings/issues/25,sublime,2021/12,bug;invalid;sponsor disputed
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Lack Of Precision,26,https://github.com/code-423n4/2021-12-sublime-findings/issues/26,sublime,2021/12,bug;1 (Low Risk);sponsor disputed
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Must approve 0 first,27,https://github.com/code-423n4/2021-12-sublime-findings/issues/27,sublime,2021/12,bug;invalid;1 (Low Risk);sponsor disputed
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove of openZeppelin is deprecated,28,https://github.com/code-423n4/2021-12-sublime-findings/issues/28,sublime,2021/12,bug;duplicate;1 (Low Risk)
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Use safe math for solidity version <8,29,https://github.com/code-423n4/2021-12-sublime-findings/issues/29,sublime,2021/12,bug;invalid;sponsor disputed
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified function inputs of public / external functions,30,https://github.com/code-423n4/2021-12-sublime-findings/issues/30,sublime,2021/12,bug;duplicate;0 (Non-critical)
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,3,Use approve instead of safeApprove,31,https://github.com/code-423n4/2021-12-sublime-findings/issues/31,sublime,2021/12,bug;duplicate;1 (Low Risk)
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,3,transfer return value is ignored,32,https://github.com/code-423n4/2021-12-sublime-findings/issues/32,sublime,2021/12,bug;invalid;sponsor disputed
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Init frontrun,37,https://github.com/code-423n4/2021-12-sublime-findings/issues/37,sublime,2021/12,bug;duplicate;1 (Low Risk)
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Named return issue,38,https://github.com/code-423n4/2021-12-sublime-findings/issues/38,sublime,2021/12,bug;0 (Non-critical);disagree with severity
61,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Two Steps Verification before Transferring Ownership,95,https://github.com/code-423n4/2021-12-sublime-findings/issues/95,sublime,2021/12,bug;1 (Low Risk);sponsor confirmed
61,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Revert strings >32 bytes,1,https://github.com/code-423n4/2021-12-sublime-findings/issues/1,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Deprecated safeApprove() function,2,https://github.com/code-423n4/2021-12-sublime-findings/issues/2,sublime,2021/12,bug;1 (Low Risk);sponsor confirmed
61,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Missing SafeApprove(0),33,https://github.com/code-423n4/2021-12-sublime-findings/issues/33,sublime,2021/12,bug;duplicate;2 (Med Risk);sponsor confirmed
61,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Public function can be external,35,https://github.com/code-423n4/2021-12-sublime-findings/issues/35,sublime,2021/12,bug;invalid;sponsor disputed
61,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Unnecessary uint zero initialization,36,https://github.com/code-423n4/2021-12-sublime-findings/issues/36,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,uint8 can replace uint256,81,https://github.com/code-423n4/2021-12-sublime-findings/issues/81,sublime,2021/12,bug;invalid;G (Gas Optimization);sponsor confirmed
61,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,0,Magic number 30 could be a constant,82,https://github.com/code-423n4/2021-12-sublime-findings/issues/82,sublime,2021/12,bug;0 (Non-critical);sponsor confirmed
61,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,`delete` doesn’t delete mapping in struct,83,https://github.com/code-423n4/2021-12-sublime-findings/issues/83,sublime,2021/12,bug;1 (Low Risk);sponsor disputed
61,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,0,No validation of protocol fee fraction,84,https://github.com/code-423n4/2021-12-sublime-findings/issues/84,sublime,2021/12,bug;0 (Non-critical);sponsor confirmed
61,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,0,Comments inconsistency for _id,85,https://github.com/code-423n4/2021-12-sublime-findings/issues/85,sublime,2021/12,bug;0 (Non-critical);sponsor confirmed
61,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,0,CreditLine.sol assumes 365 day year,86,https://github.com/code-423n4/2021-12-sublime-findings/issues/86,sublime,2021/12,bug;0 (Non-critical);sponsor acknowledged
61,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,calculateInterest() comments missing input parameter,87,https://github.com/code-423n4/2021-12-sublime-findings/issues/87,sublime,2021/12,bug;1 (Low Risk);sponsor confirmed
61,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Missing approve(0),97,https://github.com/code-423n4/2021-12-sublime-findings/issues/97,sublime,2021/12,bug;2 (Med Risk);sponsor confirmed
61,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Flattening nested mappings can save gas,59,https://github.com/code-423n4/2021-12-sublime-findings/issues/59,sublime,2021/12,bug;G (Gas Optimization);sponsor acknowledged
61,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,PoolConstants struct can have fields be packed ,65,https://github.com/code-423n4/2021-12-sublime-findings/issues/65,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Check on `poolConstants.loanWithdrawalDeadline` for liquidation is unnecessary,66,https://github.com/code-423n4/2021-12-sublime-findings/issues/66,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,0,Typo in liquidateCancelPenalty natspec,67,https://github.com/code-423n4/2021-12-sublime-findings/issues/67,sublime,2021/12,bug;0 (Non-critical);sponsor confirmed
61,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,1,`poolSizeLimit` does not account for differing unit values between borrow assets,68,https://github.com/code-423n4/2021-12-sublime-findings/issues/68,sublime,2021/12,bug;1 (Low Risk);sponsor confirmed
61,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,0,Duplicated code in Yield contracts,69,https://github.com/code-423n4/2021-12-sublime-findings/issues/69,sublime,2021/12,bug;0 (Non-critical);sponsor disputed
61,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Unnecessary zero approvals in yield contracts,70,https://github.com/code-423n4/2021-12-sublime-findings/issues/70,sublime,2021/12,bug;G (Gas Optimization);sponsor acknowledged
61,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,1,Contracts allow sending ETH on calls which does not expect it,71,https://github.com/code-423n4/2021-12-sublime-findings/issues/71,sublime,2021/12,bug;1 (Low Risk);disagree with severity
61,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,LinkedAddress struct can be packed to save an SSTORE,72,https://github.com/code-423n4/2021-12-sublime-findings/issues/72,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Consider folding Extension.sol into Pool.sol,73,https://github.com/code-423n4/2021-12-sublime-findings/issues/73,sublime,2021/12,bug;invalid;sponsor disputed
61,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,1,`getInterestOverdue` reverts rather than returning 0 when there is no overdue interest,74,https://github.com/code-423n4/2021-12-sublime-findings/issues/74,sublime,2021/12,bug;0 (Non-critical);sponsor disputed
61,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Consider folding Repayments.sol into Pool.sol,75,https://github.com/code-423n4/2021-12-sublime-findings/issues/75,sublime,2021/12,bug;duplicate;invalid
61,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,0,Argument order for SavingsAccount approval functions is odd,76,https://github.com/code-423n4/2021-12-sublime-findings/issues/76,sublime,2021/12,bug;0 (Non-critical);sponsor confirmed
61,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Credit Line acceptance logic can be simplified to avoid SLOAD in some cases,77,https://github.com/code-423n4/2021-12-sublime-findings/issues/77,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,1,CreditLine.borrow accepts ETH transfers,78,https://github.com/code-423n4/2021-12-sublime-findings/issues/78,sublime,2021/12,bug;1 (Low Risk);disagree with severity
61,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,0,`idealCollateralRatio` is confusingly named,79,https://github.com/code-423n4/2021-12-sublime-findings/issues/79,sublime,2021/12,bug;0 (Non-critical);sponsor confirmed
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,104,https://github.com/code-423n4/2021-12-sublime-findings/issues/104,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Best Practice: Contract file name should follow coding conventions,105,https://github.com/code-423n4/2021-12-sublime-findings/issues/105,sublime,2021/12,bug;0 (Non-critical);sponsor confirmed
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,`initializer` functions can be front run,106,https://github.com/code-423n4/2021-12-sublime-findings/issues/106,sublime,2021/12,bug;1 (Low Risk);sponsor acknowledged
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Outdated compiler version,107,https://github.com/code-423n4/2021-12-sublime-findings/issues/107,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Pool.sol` should use the Upgradeable variant of OpenZeppelin Contracts,108,https://github.com/code-423n4/2021-12-sublime-findings/issues/108,sublime,2021/12,bug;1 (Low Risk);sponsor confirmed
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,109,https://github.com/code-423n4/2021-12-sublime-findings/issues/109,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Redundant code,110,https://github.com/code-423n4/2021-12-sublime-findings/issues/110,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`CreditLine.sol#accept()` Implementation can be simpler and save some gas,111,https://github.com/code-423n4/2021-12-sublime-findings/issues/111,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unnecessary variables can make the code simpler and save some gas,112,https://github.com/code-423n4/2021-12-sublime-findings/issues/112,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`++i` is more efficient than `i++`,113,https://github.com/code-423n4/2021-12-sublime-findings/issues/113,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Wrong usage of `OracleLibrary.getQuoteAtTick()` breaks `PriceOracle.sol`,114,https://github.com/code-423n4/2021-12-sublime-findings/issues/114,sublime,2021/12,bug;1 (Low Risk);sponsor disputed
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Wrong implementation of `NoYield.sol#emergencyWithdraw()`,115,https://github.com/code-423n4/2021-12-sublime-findings/issues/115,sublime,2021/12,bug;3 (High Risk);sponsor confirmed
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Unchecked return value for `ERC20.approve` call,116,https://github.com/code-423n4/2021-12-sublime-findings/issues/116,sublime,2021/12,bug;duplicate;1 (Low Risk);sponsor disputed
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache storage variables in the stack can save gas,117,https://github.com/code-423n4/2021-12-sublime-findings/issues/117,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Wrong implementation of `AaveYield.sol` causing users to lose yields,123,https://github.com/code-423n4/2021-12-sublime-findings/issues/123,sublime,2021/12,bug;duplicate;3 (High Risk)
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Inline unnecessary function can make the code simpler and save some gas,124,https://github.com/code-423n4/2021-12-sublime-findings/issues/124,sublime,2021/12,bug;G (Gas Optimization);sponsor disputed
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Only using SafeMath when necessary can save gas,125,https://github.com/code-423n4/2021-12-sublime-findings/issues/125,sublime,2021/12,bug;duplicate;G (Gas Optimization)
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`10**30` can be changed to `1e30` and save some gas,126,https://github.com/code-423n4/2021-12-sublime-findings/issues/126,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Pool.sol#withdrawBorrowedAmount()` Validation of pool status can be done earlier to save gas,127,https://github.com/code-423n4/2021-12-sublime-findings/issues/127,sublime,2021/12,bug;G (Gas Optimization);sponsor confirmed
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"`AaveYield.getTokensForShares()`, `AaveYield.getSharesForTokens()` Implementation can be simpler and save some gas",128,https://github.com/code-423n4/2021-12-sublime-findings/issues/128,sublime,2021/12,bug;G (Gas Optimization);sponsor disputed
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`SavingsAccount.sol` Wrong `amount` in `Transfer` events,130,https://github.com/code-423n4/2021-12-sublime-findings/issues/130,sublime,2021/12,bug;0 (Non-critical);disagree with severity
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Lack of input validation,131,https://github.com/code-423n4/2021-12-sublime-findings/issues/131,sublime,2021/12,bug;duplicate;0 (Non-critical)
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Wrong returns of `SavingsAccountUtil.depositFromSavingsAccount()` can cause fund loss,132,https://github.com/code-423n4/2021-12-sublime-findings/issues/132,sublime,2021/12,bug;3 (High Risk);sponsor confirmed
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`NoYield.sol` Tokens with fee on transfer are not supported,142,https://github.com/code-423n4/2021-12-sublime-findings/issues/142,sublime,2021/12,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
61,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2, Borrowers are unable to repay a defaulted loan,149,https://github.com/code-423n4/2021-12-sublime-findings/issues/149,sublime,2021/12,bug;invalid;sponsor disputed
70,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unsafe transfers in Converter.sol,125,https://github.com/code-423n4/2021-12-vader-findings/issues/125,vader,2021/12,bug;duplicate;0 (Non-critical);sponsor acknowledged;Converter
70,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Unsafe transfers in LinearVesting,127,https://github.com/code-423n4/2021-12-vader-findings/issues/127,vader,2021/12,bug;duplicate;0 (Non-critical);sponsor acknowledged;LinearVesting
70,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Lack of check of inputs in StakingRewards,128,https://github.com/code-423n4/2021-12-vader-findings/issues/128,vader,2021/12,bug;0 (Non-critical);sponsor acknowledged;StakingRewards
70,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Lack of decimal control in StakingRewards,129,https://github.com/code-423n4/2021-12-vader-findings/issues/129,vader,2021/12,bug;1 (Low Risk);sponsor acknowledged;StakingRewards
70,ACai,0x0187A7442260787bD8cac7FEE883615F18d8b3fa,1,`rewardRate` parameter are not updated in time,146,https://github.com/code-423n4/2021-12-vader-findings/issues/146,vader,2021/12,bug;invalid;sponsor acknowledged;StakingRewards
70,AmitN,0x7eb10E4380Ae01ab902fe4A24b63180064A2bD37,0,Redudant 2nd call to lastTimeRewardApplicable in StakingRewards.sol,8,https://github.com/code-423n4/2021-12-vader-findings/issues/8,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged;StakingRewards
70,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,mintSynth and mintFungible function are not verified from==msg.sender,118,https://github.com/code-423n4/2021-12-vader-findings/issues/118,vader,2021/12,bug;duplicate;3 (High Risk);sponsor acknowledged;VaderPoolV2
70,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Race condition in approve(),83,https://github.com/code-423n4/2021-12-vader-findings/issues/83,vader,2021/12,bug;invalid;sponsor disputed;USDV;Vader
70,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,xVADERToMint can be rounded down to zero,10,https://github.com/code-423n4/2021-12-vader-findings/issues/10,vader,2021/12,bug;duplicate;3 (High Risk);sponsor acknowledged
70,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,unsafe cast,41,https://github.com/code-423n4/2021-12-vader-findings/issues/41,vader,2021/12,bug;1 (Low Risk);sponsor acknowledged;LinearVesting
70,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,inconsistent vesting duration,84,https://github.com/code-423n4/2021-12-vader-findings/issues/84,vader,2021/12,bug;invalid;sponsor acknowledged;LinearVesting
70,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,missing check in getClaim,85,https://github.com/code-423n4/2021-12-vader-findings/issues/85,vader,2021/12,bug;invalid;sponsor disputed;LinearVesting
70,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,missing check in getClaim,86,https://github.com/code-423n4/2021-12-vader-findings/issues/86,vader,2021/12,bug;invalid;sponsor disputed;LinearVesting
70,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,wrong revert message,87,https://github.com/code-423n4/2021-12-vader-findings/issues/87,vader,2021/12,bug;0 (Non-critical);sponsor acknowledged;Converter
70,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,mintSynth is vulnerable to price manipulation.,88,https://github.com/code-423n4/2021-12-vader-findings/issues/88,vader,2021/12,bug;duplicate;3 (High Risk);VaderPoolV2
70,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,wrong comment,9,https://github.com/code-423n4/2021-12-vader-findings/issues/9,vader,2021/12,bug;0 (Non-critical);sponsor acknowledged;BasePool
70,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`VaderPoolV2` minting synths & fungibles can be frontrun,147,https://github.com/code-423n4/2021-12-vader-findings/issues/147,vader,2021/12,bug;3 (High Risk);sponsor acknowledged;VaderPoolV2
70,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Vader TWAP averages wrong,148,https://github.com/code-423n4/2021-12-vader-findings/issues/148,vader,2021/12,bug;3 (High Risk);sponsor confirmed;LiquidityBasedTWAP
70,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,USDV TWAP averages wrong,149,https://github.com/code-423n4/2021-12-vader-findings/issues/149,vader,2021/12,bug;duplicate;3 (High Risk);sponsor confirmed;LiquidityBasedTWAP
70,Critical,0x07e6509914F956bEcec902265A6cf36F15a98E29,3,mintSynth() can transfer funds from an arbitrary address,165,https://github.com/code-423n4/2021-12-vader-findings/issues/165,vader,2021/12,bug;duplicate;3 (High Risk);sponsor acknowledged;VaderPoolV2
70,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,loss of precision,134,https://github.com/code-423n4/2021-12-vader-findings/issues/134,vader,2021/12,bug;1 (Low Risk);sponsor acknowledged;LiquidityBasedTWAP
70,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,denial of service,135,https://github.com/code-423n4/2021-12-vader-findings/issues/135,vader,2021/12,bug;duplicate;1 (Low Risk);sponsor disputed;LiquidityBasedTWAP
70,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,vader price is wrong,136,https://github.com/code-423n4/2021-12-vader-findings/issues/136,vader,2021/12,bug;duplicate;3 (High Risk);LiquidityBasedTWAP
70,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,vader can be initialized twice,139,https://github.com/code-423n4/2021-12-vader-findings/issues/139,vader,2021/12,bug;1 (Low Risk);sponsor confirmed;LiquidityBasedTWAP
70,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,mintSynth might mint nothing,142,https://github.com/code-423n4/2021-12-vader-findings/issues/142,vader,2021/12,bug;1 (Low Risk);sponsor acknowledged;VaderPoolV2
70,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,mintSynth can be frontrun to steal money,95,https://github.com/code-423n4/2021-12-vader-findings/issues/95,vader,2021/12,bug;duplicate;3 (High Risk);VaderPoolV2
70,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,denial of service,98,https://github.com/code-423n4/2021-12-vader-findings/issues/98,vader,2021/12,bug;3 (High Risk);sponsor acknowledged;VaderPoolV2
70,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,validateGas does nothing,99,https://github.com/code-423n4/2021-12-vader-findings/issues/99,vader,2021/12,bug;1 (Low Risk);sponsor acknowledged;GasThrottle
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,SHOULD CHECK RETURN DATA FROM CHAINLINK AGGREGATORS (Timestamp),111,https://github.com/code-423n4/2021-12-vader-findings/issues/111,vader,2021/12,bug;1 (Low Risk);sponsor disputed;LiquidityBasedTWAP
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,`> 0` can be replaced with `!= 0` for gas optimization,112,https://github.com/code-423n4/2021-12-vader-findings/issues/112,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,transferOwnership should be two step process,113,https://github.com/code-423n4/2021-12-vader-findings/issues/113,vader,2021/12,bug;0 (Non-critical);sponsor acknowledged
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,setGuardian  should be two step process,114,https://github.com/code-423n4/2021-12-vader-findings/issues/114,vader,2021/12,bug;invalid;sponsor disputed
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Less than 256 uints are not gas efficient,115,https://github.com/code-423n4/2021-12-vader-findings/issues/115,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Open TODOs,116,https://github.com/code-423n4/2021-12-vader-findings/issues/116,vader,2021/12,bug;duplicate;0 (Non-critical);sponsor acknowledged
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Lack Of Router Setter Function,137,https://github.com/code-423n4/2021-12-vader-findings/issues/137,vader,2021/12,bug;1 (Low Risk);sponsor acknowledged;BasePoolV2
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Adding unchecked directive can save gas,138,https://github.com/code-423n4/2021-12-vader-findings/issues/138,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged;VaderPoolV2
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,++i is more gas efficient than i++ in loops forwarding,143,https://github.com/code-423n4/2021-12-vader-findings/issues/143,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged;USDV
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Cache array length in for loops can save gas,144,https://github.com/code-423n4/2021-12-vader-findings/issues/144,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged;USDV
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Incompatibility With Rebasing/Deflationary/Inflationary tokens,145,https://github.com/code-423n4/2021-12-vader-findings/issues/145,vader,2021/12,bug;invalid;1 (Low Risk);sponsor acknowledged;VaderPoolV2
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Guardian Is not Set On The Constructor,150,https://github.com/code-423n4/2021-12-vader-findings/issues/150,vader,2021/12,bug;invalid;G (Gas Optimization);sponsor acknowledged;USDV
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Immutable variable,153,https://github.com/code-423n4/2021-12-vader-findings/issues/153,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged;VaderPoolV2
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing lower bound of dailyLimit argument could indefinitely lock minting process,154,https://github.com/code-423n4/2021-12-vader-findings/issues/154,vader,2021/12,bug;invalid;sponsor disputed;USDV
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Changing function visibility from public to external can save gas,175,https://github.com/code-423n4/2021-12-vader-findings/issues/175,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged;VaderPoolV2
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant Constant Inheritance,176,https://github.com/code-423n4/2021-12-vader-findings/issues/176,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged;LPWrapper
70,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,177,https://github.com/code-423n4/2021-12-vader-findings/issues/177,vader,2021/12,bug;duplicate;0 (Non-critical);sponsor disputed;USDV
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Open TODOs,119,https://github.com/code-423n4/2021-12-vader-findings/issues/119,vader,2021/12,bug;duplicate;0 (Non-critical);sponsor acknowledged
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,SafeMath is not needed when using Solidity version 0.8.*,120,https://github.com/code-423n4/2021-12-vader-findings/issues/120,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged;StakingRewards
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Explicit overflow checks in solidity 0.8 is unnecessary,121,https://github.com/code-423n4/2021-12-vader-findings/issues/121,vader,2021/12,bug;invalid;sponsor acknowledged
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,An array's length should be cached to save gas in for-loops,122,https://github.com/code-423n4/2021-12-vader-findings/issues/122,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`++i` costs less gass compared to `i++`,123,https://github.com/code-423n4/2021-12-vader-findings/issues/123,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Unnecessary checked arithmetic in for-loops,124,https://github.com/code-423n4/2021-12-vader-findings/issues/124,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Explicit initialization with zero not required,126,https://github.com/code-423n4/2021-12-vader-findings/issues/126,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Save Gas With The Unchecked Keyword,130,https://github.com/code-423n4/2021-12-vader-findings/issues/130,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged;VaderPoolV2
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Missing checks for non-zero transfer value calls,131,https://github.com/code-423n4/2021-12-vader-findings/issues/131,vader,2021/12,bug;invalid;G (Gas Optimization);sponsor acknowledged
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Public function that should be declared external,132,https://github.com/code-423n4/2021-12-vader-findings/issues/132,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Internal functions can be private if the contract is not herited,133,https://github.com/code-423n4/2021-12-vader-findings/issues/133,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Lack of address(0) check,140,https://github.com/code-423n4/2021-12-vader-findings/issues/140,vader,2021/12,bug;0 (Non-critical);sponsor acknowledged
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Public function that should be declared external (2),141,https://github.com/code-423n4/2021-12-vader-findings/issues/141,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged;VaderPoolV2
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`LiquidityBasedTWAP.getStaleVaderPrice()` Gas Optimization,155,https://github.com/code-423n4/2021-12-vader-findings/issues/155,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged;LiquidityBasedTWAP
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`LiquidityBasedTWAP.getStaleUSDVPrice()` Gas Optimization,156,https://github.com/code-423n4/2021-12-vader-findings/issues/156,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged;LiquidityBasedTWAP
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`uint a = b++;` is a confusing syntax and can be gas-optimized,157,https://github.com/code-423n4/2021-12-vader-findings/issues/157,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged;BasePoolV2
70,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimization: Reduce the size of error messages (Long revert Strings),174,https://github.com/code-423n4/2021-12-vader-findings/issues/174,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
70,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,1,VaderMath:calculateSlipAdjustment() wrong comments,43,https://github.com/code-423n4/2021-12-vader-findings/issues/43,vader,2021/12,bug;0 (Non-critical);sponsor acknowledged;VaderMath
70,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,2,Covered IL loss protection should linearly increase over 100 days and not one year,53,https://github.com/code-423n4/2021-12-vader-findings/issues/53,vader,2021/12,bug;invalid;VaderPoolV2;VaderPool
70,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,1,VaderMath:calculateSwapReverse require statement change to <= instead of <,61,https://github.com/code-423n4/2021-12-vader-findings/issues/61,vader,2021/12,bug;1 (Low Risk);VaderMath
70,gpersoon,0x0,G,Test - testing,100,https://github.com/code-423n4/2021-12-vader-findings/issues/100,vader,2021/12,invalid;withdrawn by warden
70,Grantm68,0x9378EA0028Fb3e8Ef4240800259A32c0bDD87CF8,3,If you don’t add Vader before you buy it on MetaMask it won’t show up your balance ,76,https://github.com/code-423n4/2021-12-vader-findings/issues/76,vader,2021/12,bug;invalid;sponsor disputed
70,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Unable to remove/change USDVPair,158,https://github.com/code-423n4/2021-12-vader-findings/issues/158,vader,2021/12,bug;duplicate;1 (Low Risk);sponsor acknowledged;LiquidityBasedTWAP
70,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Able to add duplicated USDVPair,159,https://github.com/code-423n4/2021-12-vader-findings/issues/159,vader,2021/12,bug;duplicate;1 (Low Risk);LiquidityBasedTWAP
70,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Adding pair of the same `foreignAsset` would replace oracle of earlier entry,160,https://github.com/code-423n4/2021-12-vader-findings/issues/160,vader,2021/12,bug;2 (Med Risk);sponsor confirmed;LiquidityBasedTWAP
70,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Avoid list manipulation,161,https://github.com/code-423n4/2021-12-vader-findings/issues/161,vader,2021/12,bug;invalid;G (Gas Optimization);sponsor disputed;USDV
70,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Can mint more than `dailyLimit` in `USDV`,162,https://github.com/code-423n4/2021-12-vader-findings/issues/162,vader,2021/12,bug;duplicate;1 (Low Risk);USDV
70,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,USDV LockCreated event should include the index of a created lock,117,https://github.com/code-423n4/2021-12-vader-findings/issues/117,vader,2021/12,bug;0 (Non-critical);sponsor acknowledged;USDV
70,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Chainlink USD pairs decimals are hard coded as a required condition for the addition of any USD liquidity source,169,https://github.com/code-423n4/2021-12-vader-findings/issues/169,vader,2021/12,bug;invalid;1 (Low Risk);sponsor disputed;LiquidityBasedTWAP
70,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Chainlink price of a round with zero commit timestamp is accepted as current,170,https://github.com/code-423n4/2021-12-vader-findings/issues/170,vader,2021/12,bug;duplicate;1 (Low Risk);sponsor disputed;LiquidityBasedTWAP
70,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,onlyDAO modifier of VaderPoolFactory is actually onlyOwner,171,https://github.com/code-423n4/2021-12-vader-findings/issues/171,vader,2021/12,bug;invalid;sponsor acknowledged;VaderPoolFactory
70,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Incorrect descriptions of BasePoolV2's _onlyRouter and _supportedToken,172,https://github.com/code-423n4/2021-12-vader-findings/issues/172,vader,2021/12,bug;0 (Non-critical);sponsor acknowledged;BasePoolV2
70,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,BasePoolV2.rescue function allows an attacker to routinely withdraw all mistakenly sent funds,173,https://github.com/code-423n4/2021-12-vader-findings/issues/173,vader,2021/12,bug;invalid;sponsor acknowledged;BasePoolV2
70,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,VaderPoolV2 doesn't implement queue system yet,178,https://github.com/code-423n4/2021-12-vader-findings/issues/178,vader,2021/12,bug;0 (Non-critical);sponsor acknowledged;VaderPoolV2
70,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,Using single total native reserve variable for synth and non-synth reserves of VaderPoolV2 can lead to losses for synth holders,179,https://github.com/code-423n4/2021-12-vader-findings/issues/179,vader,2021/12,bug;3 (High Risk);sponsor acknowledged;VaderPoolV2
70,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,setGasThrottle function should be moved to BasePoolV2,181,https://github.com/code-423n4/2021-12-vader-findings/issues/181,vader,2021/12,bug;1 (Low Risk);sponsor acknowledged;VaderPoolV2;BasePoolV2
70,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,Covering impermanent loss allows profiting from asymmetric liquidity provision at the expense of reserves,189,https://github.com/code-423n4/2021-12-vader-findings/issues/189,vader,2021/12,bug;duplicate;3 (High Risk);sponsor acknowledged;VaderPoolV2
70,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,mint() function can be frontfun after native/foreign amounts are sent to the pool ,59,https://github.com/code-423n4/2021-12-vader-findings/issues/59,vader,2021/12,bug;invalid;BasePool
70,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,No check that native and foreign assets are equal in value in the mint() function ,60,https://github.com/code-423n4/2021-12-vader-findings/issues/60,vader,2021/12,bug;invalid;BasePool
70,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,"swap() function should make sure the ""to"" address is not the address(this)",62,https://github.com/code-423n4/2021-12-vader-findings/issues/62,vader,2021/12,bug;invalid;BasePool
70,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,bytes calldata argument is not used in swap() function ,63,https://github.com/code-423n4/2021-12-vader-findings/issues/63,vader,2021/12,bug;duplicate;0 (Non-critical);BasePool
70,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Consider making the second swap() function an internal function,64,https://github.com/code-423n4/2021-12-vader-findings/issues/64,vader,2021/12,bug;invalid;BasePool
70,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,swap() function can be frontrun ,65,https://github.com/code-423n4/2021-12-vader-findings/issues/65,vader,2021/12,bug;invalid;BasePool
70,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,"_mint() function doesn't check if ""from"" and ""to"" are different addresses ",67,https://github.com/code-423n4/2021-12-vader-findings/issues/67,vader,2021/12,bug;invalid;BasePool;BasePoolV2
70,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,No check that constructor addresses are unique in LiquidityBasedTWAP.sol,89,https://github.com/code-423n4/2021-12-vader-findings/issues/89,vader,2021/12,bug;invalid;sponsor disputed;LiquidityBasedTWAP
70,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,loop over dynamic arrays can cause out of gas errors ,90,https://github.com/code-423n4/2021-12-vader-findings/issues/90,vader,2021/12,bug;duplicate;1 (Low Risk);LiquidityBasedTWAP
70,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,looping usdvPairs dynamic array can cause out of gas errors,91,https://github.com/code-423n4/2021-12-vader-findings/issues/91,vader,2021/12,bug;duplicate;1 (Low Risk);LiquidityBasedTWAP
70,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,No check that vAmount is greater than 0 allows to create useless locks ,92,https://github.com/code-423n4/2021-12-vader-findings/issues/92,vader,2021/12,bug;invalid;disagree with severity;USDV
70,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,safeTransferFrom should be used in mint() function ,93,https://github.com/code-423n4/2021-12-vader-findings/issues/93,vader,2021/12,bug;duplicate;0 (Non-critical);disagree with severity;USDV
70,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,burn function doesn't check if uAmount is greater than zero yet still creates locks ,94,https://github.com/code-423n4/2021-12-vader-findings/issues/94,vader,2021/12,bug;invalid;disagree with severity
70,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Out of gas.,110,https://github.com/code-423n4/2021-12-vader-findings/issues/110,vader,2021/12,bug;1 (Low Risk);sponsor disputed;LiquidityBasedTWAP
70,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Modifier onlyUSDV() and function _onlyUSDV(),77,https://github.com/code-423n4/2021-12-vader-findings/issues/77,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged;Vader
70,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Long Revert Strings,78,https://github.com/code-423n4/2021-12-vader-findings/issues/78,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged;Vader
70,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Avoid use of state variables in event emissions to save gas,79,https://github.com/code-423n4/2021-12-vader-findings/issues/79,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
70,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Cache `vader` state variable ,80,https://github.com/code-423n4/2021-12-vader-findings/issues/80,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged;USDV
70,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Save gas with the unchecked keyword,81,https://github.com/code-423n4/2021-12-vader-findings/issues/81,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged;USDV
70,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,`latestRoundData()` does not update the oracle ,82,https://github.com/code-423n4/2021-12-vader-findings/issues/82,vader,2021/12,bug;duplicate;1 (Low Risk);sponsor disputed;LiquidityBasedTWAP
70,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,1,`_addVaderPair` and `_addUSDVPair` Does Not Check For Duplicate Token Pairs,102,https://github.com/code-423n4/2021-12-vader-findings/issues/102,vader,2021/12,bug;1 (Low Risk);LiquidityBasedTWAP
70,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,`previousPrices` Is Never Updated Upon Syncing Token Price,103,https://github.com/code-423n4/2021-12-vader-findings/issues/103,vader,2021/12,bug;3 (High Risk);sponsor acknowledged
70,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,1,No Method To Remove Token Pairs,104,https://github.com/code-423n4/2021-12-vader-findings/issues/104,vader,2021/12,bug;duplicate;1 (Low Risk);LiquidityBasedTWAP
70,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,`totalLiquidityWeight` Is Updated When Adding New Token Pairs Which Skews Price Data For `getVaderPrice` and `getUSDVPrice`,105,https://github.com/code-423n4/2021-12-vader-findings/issues/105,vader,2021/12,bug;3 (High Risk);sponsor confirmed;LiquidityBasedTWAP
70,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,1,`USDV.claim` Does Not Check If Index Is Valid,106,https://github.com/code-423n4/2021-12-vader-findings/issues/106,vader,2021/12,bug;1 (Low Risk);disagree with severity;sponsor acknowledged;USDV
70,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,Anyone Can Frontrun `VaderPoolV2.mintSynth()` To Steal Synthetic Assets,107,https://github.com/code-423n4/2021-12-vader-findings/issues/107,vader,2021/12,bug;duplicate;3 (High Risk);sponsor acknowledged;VaderPoolV2
70,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,Anyone Can Frontrun `VaderPoolV2.mintFungible()` To Steal Fungible Tokens,108,https://github.com/code-423n4/2021-12-vader-findings/issues/108,vader,2021/12,bug;duplicate;3 (High Risk);sponsor acknowledged;VaderPoolV2
70,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,`foreignPrice` Is Not Scaled To 18 Decimals In `getChainlinkPrice`,109,https://github.com/code-423n4/2021-12-vader-findings/issues/109,vader,2021/12,bug;invalid;sponsor disputed;LiquidityBasedTWAP
70,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,Price Calculation Favours Higher Priced Token Pairs,163,https://github.com/code-423n4/2021-12-vader-findings/issues/163,vader,2021/12,bug;duplicate;3 (High Risk);sponsor acknowledged;LiquidityBasedTWAP
70,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,`USDV.sol` Mint and Burn Amounts Are Incorrect,164,https://github.com/code-423n4/2021-12-vader-findings/issues/164,vader,2021/12,bug;3 (High Risk);sponsor disputed;USDV
70,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Avoiding Initialization of Loop Index If It Is 0,166,https://github.com/code-423n4/2021-12-vader-findings/issues/166,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged;USDV
70,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,Open Discussion That Hint Potential Security Problem Should be Avoided,167,https://github.com/code-423n4/2021-12-vader-findings/issues/167,vader,2021/12,bug;0 (Non-critical);sponsor acknowledged;LiquidityBasedTWAP
70,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Long Revert Strings are Waste of Gas,168,https://github.com/code-423n4/2021-12-vader-findings/issues/168,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged;LiquidityBasedTWAP
70,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Missing boundary check in USDV.sol,151,https://github.com/code-423n4/2021-12-vader-findings/issues/151,vader,2021/12,bug;G (Gas Optimization);USDV
70,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Keccak functions in constants waste gas,152,https://github.com/code-423n4/2021-12-vader-findings/issues/152,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged;GovernorAlpha
70,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,24 hour limit not applied on first mint,180,https://github.com/code-423n4/2021-12-vader-findings/issues/180,vader,2021/12,bug;duplicate;1 (Low Risk);USDV
70,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Cycles are not exactly 24 hours,182,https://github.com/code-423n4/2021-12-vader-findings/issues/182,vader,2021/12,bug;invalid;sponsor disputed;USDV
70,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Open TODOs in Codebase,183,https://github.com/code-423n4/2021-12-vader-findings/issues/183,vader,2021/12,bug;0 (Non-critical);sponsor acknowledged
70,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,list of vader pairs might grow too large,184,https://github.com/code-423n4/2021-12-vader-findings/issues/184,vader,2021/12,bug;duplicate;1 (Low Risk);sponsor disputed;LiquidityBasedTWAP
70,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,_addUSDVPair can also update,185,https://github.com/code-423n4/2021-12-vader-findings/issues/185,vader,2021/12,bug;1 (Low Risk);sponsor confirmed;LiquidityBasedTWAP
70,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Slippage control,186,https://github.com/code-423n4/2021-12-vader-findings/issues/186,vader,2021/12,bug;duplicate;2 (Med Risk);sponsor confirmed;USDV
70,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Avoid repeated calculations,187,https://github.com/code-423n4/2021-12-vader-findings/issues/187,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged;LiquidityBasedTWAP
70,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Shorter revert messages,188,https://github.com/code-423n4/2021-12-vader-findings/issues/188,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged;LiquidityBasedTWAP
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused imports,11,https://github.com/code-423n4/2021-12-vader-findings/issues/11,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use bytes32 instead of string to save gas whenever possible,12,https://github.com/code-423n4/2021-12-vader-findings/issues/12,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused state variables,13,https://github.com/code-423n4/2021-12-vader-findings/issues/13,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Short the following require messages,14,https://github.com/code-423n4/2021-12-vader-findings/issues/14,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,15,https://github.com/code-423n4/2021-12-vader-findings/issues/15,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,16,https://github.com/code-423n4/2021-12-vader-findings/issues/16,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Internal functions to private,17,https://github.com/code-423n4/2021-12-vader-findings/issues/17,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,18,https://github.com/code-423n4/2021-12-vader-findings/issues/18,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,19,https://github.com/code-423n4/2021-12-vader-findings/issues/19,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary array boundaries check when loading an array element twice,20,https://github.com/code-423n4/2021-12-vader-findings/issues/20,vader,2021/12,bug;invalid;G (Gas Optimization);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Prefix increments are cheaper than postfix increments,21,https://github.com/code-423n4/2021-12-vader-findings/issues/21,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary index init,22,https://github.com/code-423n4/2021-12-vader-findings/issues/22,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Caching array length can save gas,23,https://github.com/code-423n4/2021-12-vader-findings/issues/23,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Cache powers of 10 used several times,24,https://github.com/code-423n4/2021-12-vader-findings/issues/24,vader,2021/12,bug;invalid;G (Gas Optimization);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Upgrade pragma to at least 0.8.4,25,https://github.com/code-423n4/2021-12-vader-findings/issues/25,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Check if amount is not zero to save gas,26,https://github.com/code-423n4/2021-12-vader-findings/issues/26,vader,2021/12,bug;invalid;G (Gas Optimization);sponsor acknowledged;VaderMath
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with not comprehensive message,27,https://github.com/code-423n4/2021-12-vader-findings/issues/27,vader,2021/12,bug;invalid;disagree with severity;sponsor acknowledged;VaderBond
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Must approve 0 first,28,https://github.com/code-423n4/2021-12-vader-findings/issues/28,vader,2021/12,bug;invalid;sponsor acknowledged;VaderBond
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove of openZeppelin is deprecated,29,https://github.com/code-423n4/2021-12-vader-findings/issues/29,vader,2021/12,bug;invalid;sponsor disputed;VaderBond
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Open TODOs,30,https://github.com/code-423n4/2021-12-vader-findings/issues/30,vader,2021/12,bug;duplicate;0 (Non-critical);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Solidity compiler versions mismatch,31,https://github.com/code-423n4/2021-12-vader-findings/issues/31,vader,2021/12,bug;0 (Non-critical);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Use safe math for solidity version <8,32,https://github.com/code-423n4/2021-12-vader-findings/issues/32,vader,2021/12,bug;invalid;sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified function inputs of public / external functions,33,https://github.com/code-423n4/2021-12-vader-findings/issues/33,vader,2021/12,bug;invalid;sponsor acknowledged;VaderPool;BasePool;VaderPoolFactory
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Assert instead require to validate user inputs,34,https://github.com/code-423n4/2021-12-vader-findings/issues/34,vader,2021/12,bug;invalid;sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Never used parameters,35,https://github.com/code-423n4/2021-12-vader-findings/issues/35,vader,2021/12,bug;0 (Non-critical);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Unbounded loop on array that can only grow can lead to DoS,36,https://github.com/code-423n4/2021-12-vader-findings/issues/36,vader,2021/12,bug;duplicate;1 (Low Risk);LiquidityBasedTWAP
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Missing Slippage Protection,37,https://github.com/code-423n4/2021-12-vader-findings/issues/37,vader,2021/12,bug;duplicate;2 (Med Risk);sponsor acknowledged;VaderRouter;VaderRouterV2
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,approve return value is ignored,38,https://github.com/code-423n4/2021-12-vader-findings/issues/38,vader,2021/12,bug;duplicate;0 (Non-critical);sponsor acknowledged
70,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,3,transfer return value of a general ERC20 is ignored,39,https://github.com/code-423n4/2021-12-vader-findings/issues/39,vader,2021/12,bug;0 (Non-critical);sponsor disputed
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,All user assets which are approved to VaderPoolV2 may be stolen,1,https://github.com/code-423n4/2021-12-vader-findings/issues/1,vader,2021/12,bug;duplicate;3 (High Risk);sponsor acknowledged;VaderPoolV2
70,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,3,Insufficient access control on VaderPoolV2.mintSynth allows theft of user funds,101,https://github.com/code-423n4/2021-12-vader-findings/issues/101,vader,2021/12,bug;duplicate;3 (High Risk);sponsor acknowledged;VaderPoolV2
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,VaderPoolV2.mintFungible exposes users to unlimited slippage,2,https://github.com/code-423n4/2021-12-vader-findings/issues/2,vader,2021/12,bug;2 (Med Risk);sponsor acknowledged;VaderPoolV2
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,Minting synths allows user assets to be stolen due to insufficient access control,3,https://github.com/code-423n4/2021-12-vader-findings/issues/3,vader,2021/12,bug;duplicate;3 (High Risk);sponsor acknowledged;VaderPoolV2
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,1,Core AMM logic is written to give the impression it is working on a different asset than it is.,4,https://github.com/code-423n4/2021-12-vader-findings/issues/4,vader,2021/12,bug;1 (Low Risk);sponsor acknowledged;VaderMath
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,2,Oracle can be manipulted to consider only a single pair for pricing,40,https://github.com/code-423n4/2021-12-vader-findings/issues/40,vader,2021/12,bug;2 (Med Risk);sponsor disputed;LiquidityBasedTWAP
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,Oracle doesn't calculate USDV/VADER price correctly,42,https://github.com/code-423n4/2021-12-vader-findings/issues/42,vader,2021/12,bug;3 (High Risk);sponsor acknowledged;LiquidityBasedTWAP
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,Council veto protection does not work,44,https://github.com/code-423n4/2021-12-vader-findings/issues/44,vader,2021/12,bug;3 (High Risk);sponsor acknowledged;GovernorAlpha
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,1,USDV minting limit is not applied if `cycleTimestamp <= block.timestamp`,45,https://github.com/code-423n4/2021-12-vader-findings/issues/45,vader,2021/12,bug;1 (Low Risk);USDV
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,USDV uses incorrect exchange rate for burning,46,https://github.com/code-423n4/2021-12-vader-findings/issues/46,vader,2021/12,bug;duplicate;3 (High Risk);USDV
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,2,Should a Chainlink aggregator become stuck in a stale state then calls to update LiquidityBasedTWAP will revert,47,https://github.com/code-423n4/2021-12-vader-findings/issues/47,vader,2021/12,bug;duplicate;1 (Low Risk);LiquidityBasedTWAP
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Make use of a bitmap for claims to save gas in Converter.sol,48,https://github.com/code-423n4/2021-12-vader-findings/issues/48,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged;Converter
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,VaderRouter exposes LPs to unlimited slippage on joins,49,https://github.com/code-423n4/2021-12-vader-findings/issues/49,vader,2021/12,bug;duplicate;2 (Med Risk);VaderRouter
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,Redemption value of synths can be manipulated to drain `VaderPoolV2` of all native assets in the associated pair,5,https://github.com/code-423n4/2021-12-vader-findings/issues/5,vader,2021/12,bug;3 (High Risk);sponsor acknowledged;VaderPoolV2
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,VaderRouterV2 exposes LPs to unlimited slippage on joins,50,https://github.com/code-423n4/2021-12-vader-findings/issues/50,vader,2021/12,bug;duplicate;2 (Med Risk);VaderRouterV2
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,Minting and burning synths exposes users to unlimited slippage,51,https://github.com/code-423n4/2021-12-vader-findings/issues/51,vader,2021/12,bug;duplicate;2 (Med Risk);VaderPoolV2
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,2,No way to remove GasThrottle from VaderPool after deployment,52,https://github.com/code-423n4/2021-12-vader-findings/issues/52,vader,2021/12,bug;2 (Med Risk);VaderPool
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,LPs of VaderPoolV2 can manipulate pool reserves to extract funds from the reserve,54,https://github.com/code-423n4/2021-12-vader-findings/issues/54,vader,2021/12,bug;invalid;VaderPoolV2
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,LPs of VaderPoolV2 can manipulate pool reserves to extract funds from the reserve.,55,https://github.com/code-423n4/2021-12-vader-findings/issues/55,vader,2021/12,bug;3 (High Risk);VaderPoolV2;VaderRouterV2
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,0,Test submission please ignore,56,https://github.com/code-423n4/2021-12-vader-findings/issues/56,vader,2021/12,bug;invalid;0 (Non-critical)
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Store VaderPoolV2 address as immutable in LPWrapper,57,https://github.com/code-423n4/2021-12-vader-findings/issues/57,vader,2021/12,bug;duplicate;G (Gas Optimization);sponsor acknowledged;LPWrapper
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Functions to calculate synth name/symbol should live in factory to reduce bytecode,58,https://github.com/code-423n4/2021-12-vader-findings/issues/58,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged;Synth
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,Paying IL protection for all VaderPool pairs allows the reserve to be drained.,6,https://github.com/code-423n4/2021-12-vader-findings/issues/6,vader,2021/12,bug;duplicate;3 (High Risk);sponsor acknowledged
70,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Unnecessary checks on VADER token address in oracle.,69,https://github.com/code-423n4/2021-12-vader-findings/issues/69,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged;LiquidityBasedTWAP
70,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,2,VaderReserve.reimburseImpermanentLoss improperly converts USDV to VADER,7,https://github.com/code-423n4/2021-12-vader-findings/issues/7,vader,2021/12,bug;2 (Med Risk);sponsor acknowledged
70,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,3,Oracle returns an improperly scaled USDV/VADER price,70,https://github.com/code-423n4/2021-12-vader-findings/issues/70,vader,2021/12,bug;3 (High Risk);sponsor confirmed;LiquidityBasedTWAP
70,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,3,Reserve does not properly apply prices of VADER and USDV tokens,71,https://github.com/code-423n4/2021-12-vader-findings/issues/71,vader,2021/12,bug;3 (High Risk);VaderReserve
70,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,3,VaderPoolV2 owner can steal all user assets which are approved VaderPoolV2,72,https://github.com/code-423n4/2021-12-vader-findings/issues/72,vader,2021/12,bug;3 (High Risk);VaderPoolV2
70,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Storage of previous prices and total liquidity weights is suboptimal for gas costs,73,https://github.com/code-423n4/2021-12-vader-findings/issues/73,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged;LiquidityBasedTWAP
70,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Unnecessary supportedToken checks on swaps on VaderPoolV2,74,https://github.com/code-423n4/2021-12-vader-findings/issues/74,vader,2021/12,bug;G (Gas Optimization);sponsor acknowledged;VaderPoolV2
70,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,1,A single immature lock prevents a user from calling `USDV.claimAll`,75,https://github.com/code-423n4/2021-12-vader-findings/issues/75,vader,2021/12,bug;invalid;sponsor disputed;USDV
70,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Inclusion of salt and chainId in merkle tree leaves increases gas costs for no reason.,96,https://github.com/code-423n4/2021-12-vader-findings/issues/96,vader,2021/12,bug;G (Gas Optimization);sponsor disputed;Converter
70,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,2,"Users can lock themselves out of being able to convert VETH, becoming stuck with the deprecated asset",97,https://github.com/code-423n4/2021-12-vader-findings/issues/97,vader,2021/12,bug;2 (Med Risk);sponsor acknowledged
70,xnarus,0x8cafc50f34Fba1d46A776679c8245bf9ed58c533,1,Returns not assigned value,66,https://github.com/code-423n4/2021-12-vader-findings/issues/66,vader,2021/12,bug;invalid;sponsor disputed;USDV
70,xnarus,0x8cafc50f34Fba1d46A776679c8245bf9ed58c533,1,Delete locks before claim all finish execution,68,https://github.com/code-423n4/2021-12-vader-findings/issues/68,vader,2021/12,bug;invalid;sponsor disputed;USDV
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Possible owner loss,115,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/115,yetifinance,2021/12,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Unsafe transfer,116,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/116,yetifinance,2021/12,bug;duplicate;invalid;disagree with severity;sponsor confirmed
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Possible loss of teamwallet ,117,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/117,yetifinance,2021/12,bug;invalid;disagree with severity;sponsor disputed
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Usanfe YETI transfer,118,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/118,yetifinance,2021/12,bug;duplicate;invalid
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving,119,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/119,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unsafe YETI transfer in CommunityIssuance,130,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/130,yetifinance,2021/12,bug;duplicate;invalid
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unsafe YETI transfer,131,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/131,yetifinance,2021/12,bug;duplicate;invalid
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Use immutable,132,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/132,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving in ShortLockupContract,133,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/133,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unsafe YETI transfer in ShortLockupContract,134,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/134,yetifinance,2021/12,bug;duplicate;1 (Low Risk)
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving (immutable),140,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/140,yetifinance,2021/12,bug;invalid;sponsor disputed
66,0x1f8b,"Calle del Pilar, 35, 3A",1,Unsafe transfer in StabilityPool,227,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/227,yetifinance,2021/12,bug;duplicate;invalid
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unsafe transfer in StabilityPool,229,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/229,yetifinance,2021/12,bug;duplicate;invalid
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Storage optimization,231,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/231,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Possible wrong transfers,232,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/232,yetifinance,2021/12,bug;duplicate;invalid
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Approve burned YETIToken,235,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/235,yetifinance,2021/12,bug;invalid;sponsor disputed
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unsafe transfer in Unpool,237,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/237,yetifinance,2021/12,bug;duplicate;invalid
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unsafe transfer in LPTokenWrapper,239,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/239,yetifinance,2021/12,bug;duplicate;invalid
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Multiple unsafe calls in WJLP,241,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/241,yetifinance,2021/12,bug;duplicate;1 (Low Risk)
66,0x1f8b,"Calle del Pilar, 35, 3A",1,Unsafe approve in sYETIToken,286,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/286,yetifinance,2021/12,bug;1 (Low Risk);disagree with severity
66,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Infinite mint,287,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/287,yetifinance,2021/12,bug;0 (Non-critical);sponsor disputed
66,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,2,_openTroveInternal()  within openTrove function on line 275 (BorrowOperations.sol) has an error in accounting logic that will affect important calculations such as vars.YusdFee et al,295,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/295,yetifinance,2021/12,bug;help wanted;invalid;sponsor disputed
66,broccolirob,0x5233aF283E7C359a1011Dc0ff480298E90c8CFd6,3,No Price Oracle Support for LP and Interest-bearing Tokens,302,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/302,yetifinance,2021/12,bug;invalid;sponsor disputed
66,broccolirob,0x5233aF283E7C359a1011Dc0ff480298E90c8CFd6,3,Return Value from `transfer` Function is Not Checked,303,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/303,yetifinance,2021/12,bug;duplicate;1 (Low Risk);disagree with severity
66,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,G,Change function visibility from public to external,178,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/178,yetifinance,2021/12,bug;duplicate;invalid
66,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,G,Change function visibility from public to external,179,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/179,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Race condition in approve(),191,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/191,yetifinance,2021/12,bug;duplicate;0 (Non-critical);disagree with severity
66,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,unsafe token transfer,1,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/1,yetifinance,2021/12,bug;duplicate;1 (Low Risk);sponsor confirmed
66,certora,0xf8911c3CFff41861943AaeFA95Fc882477B49Fb7,G,`.length` access in loop,110,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/110,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,certora,0xf8911c3CFff41861943AaeFA95Fc882477B49Fb7,1,Some contracts use different solidity versions,111,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/111,yetifinance,2021/12,bug;duplicate;1 (Low Risk);sponsor acknowledged
66,certora,0xf8911c3CFff41861943AaeFA95Fc882477B49Fb7,1,Open TODOs,112,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/112,yetifinance,2021/12,bug;duplicate;0 (Non-critical);disagree with severity
66,certora,0xf8911c3CFff41861943AaeFA95Fc882477B49Fb7,1,Confusing return value,147,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/147,yetifinance,2021/12,bug;duplicate;disagree with severity;G (Gas Optimization);sponsor confirmed
66,certora,0xf8911c3CFff41861943AaeFA95Fc882477B49Fb7,2,cannot remove from `poolColl` in ActivePool,149,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/149,yetifinance,2021/12,bug;invalid;sponsor disputed
66,certora,0xf8911c3CFff41861943AaeFA95Fc882477B49Fb7,1,Require without a message,154,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/154,yetifinance,2021/12,bug;duplicate;0 (Non-critical);disagree with severity
66,certora,0xf8911c3CFff41861943AaeFA95Fc882477B49Fb7,G,Assert is a waste of gas,194,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/194,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,certora,0xf8911c3CFff41861943AaeFA95Fc882477B49Fb7,G,prefix operations are cheaper than postfix operations,220,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/220,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,certora,0xf8911c3CFff41861943AaeFA95Fc882477B49Fb7,1,Lack of precision,221,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/221,yetifinance,2021/12,bug;1 (Low Risk);sponsor disputed
66,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,wrong use of assert,51,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/51,yetifinance,2021/12,bug;duplicate;disagree with severity;G (Gas Optimization);sponsor confirmed
66,certora,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,wrong use of deadline field in swapExactTokensForTokens,52,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/52,yetifinance,2021/12,bug;duplicate;disagree with severity;G (Gas Optimization);sponsor confirmed
66,certora,0x5C368D355C3F46bD0aD21C04e405DC7798cbFE7E,2,withdraw YetiTokens using approve() and frontrunning,98,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/98,yetifinance,2021/12,bug;duplicate;0 (Non-critical);disagree with severity
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`setAddresses` functions can be frontrun,195,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/195,yetifinance,2021/12,bug;duplicate;1 (Low Risk)
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,No ERC20 safe* versions called,196,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/196,yetifinance,2021/12,bug;duplicate;invalid;disagree with severity
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing duplicate checks in `withdrawColl`,197,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/197,yetifinance,2021/12,bug;1 (Low Risk)
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Collateral parameters can be overwritten,198,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/198,yetifinance,2021/12,bug;2 (Med Risk)
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing cutoff checks in `adjustParams`,199,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/199,yetifinance,2021/12,bug;1 (Low Risk);sponsor confirmed
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Cannot use most piecewise linear functions with current implementation,200,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/200,yetifinance,2021/12,bug;2 (Med Risk);sponsor confirmed
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`lastFeeTime` can be reset,201,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/201,yetifinance,2021/12,bug;0 (Non-critical);sponsor disputed
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`lastFeePercent` can be > 100%,202,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/202,yetifinance,2021/12,bug;0 (Non-critical);sponsor disputed
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,rong comment in `getFee`,203,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/203,yetifinance,2021/12,bug;2 (Med Risk);disagree with severity;sponsor confirmed
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Fee not decayed if past `decayTime`,204,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/204,yetifinance,2021/12,bug;2 (Med Risk);sponsor confirmed
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,sYETIToken does not emit Approval event in `transferFrom`,205,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/205,yetifinance,2021/12,bug;0 (Non-critical);disagree with severity;sponsor confirmed
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Wrong `lastBuyBackPrice`,206,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/206,yetifinance,2021/12,bug;2 (Med Risk);disagree with severity;sponsor confirmed
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,ERC20 return values not checked,207,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/207,yetifinance,2021/12,bug;duplicate;1 (Low Risk);disagree with severity
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Wrapped JLP can be stolen,208,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/208,yetifinance,2021/12,bug;duplicate;3 (High Risk)
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,ActivePool unwraps but does not update user state in WJLP,209,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/209,yetifinance,2021/12,bug;3 (High Risk);sponsor confirmed
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Unnecessary caller != 0 check,210,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/210,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: Unnecessary deadline increase,211,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/211,yetifinance,2021/12,bug;G (Gas Optimization)
66,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,Use safetransfer instead of transfer,101,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/101,yetifinance,2021/12,bug;duplicate;1 (Low Risk)
66,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Reward not transferred correctly,137,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/137,yetifinance,2021/12,bug;2 (Med Risk);disagree with severity
66,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas savings,139,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/139,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Duplicate Collateral could cause financial instability,142,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/142,yetifinance,2021/12,bug;duplicate;2 (Med Risk);disagree with severity;sponsor confirmed
66,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas savings: Require statement is not needed,143,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/143,yetifinance,2021/12,bug;G (Gas Optimization);sponsor acknowledged
66,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,Deprecated collateral check is missing in sendCollaterals,144,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/144,yetifinance,2021/12,bug;0 (Non-critical);sponsor disputed
66,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Target pool does not get updated due to receiveCollateral not being called,145,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/145,yetifinance,2021/12,bug;1 (Low Risk);sponsor disputed
66,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Unwhitelisted token can cause disaster,146,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/146,yetifinance,2021/12,bug;2 (Med Risk);sponsor disputed
66,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas saving,148,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/148,yetifinance,2021/12,bug;G (Gas Optimization);sponsor acknowledged
66,dalgarim,0x13b75E274Acb0eb9cEd75FcF7eA9AA28E5C7aa42,G,Checking zero address on msg.sender is impractical,103,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/103,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,dalgarim,0x13b75E274Acb0eb9cEd75FcF7eA9AA28E5C7aa42,3,sYETI Token mint function has no access control.,122,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/122,yetifinance,2021/12,bug;duplicate;0 (Non-critical);sponsor disputed
66,dalgarim,0x13b75E274Acb0eb9cEd75FcF7eA9AA28E5C7aa42,1,StabilityPool.receiveCollateral function doesn't have access control,190,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/190,yetifinance,2021/12,bug;duplicate;3 (High Risk);disagree with severity
66,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Less than 256 uints are not gas efficient,123,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/123,yetifinance,2021/12,bug;G (Gas Optimization);sponsor acknowledged
66,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,++i is more gas efficient than i++ in loops forwarding,124,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/124,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,`> 0` can be replaced with `!= 0` for gas optimization,125,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/125,yetifinance,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
66,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,"After Solidity 0.8.1, The Inline Assembly Can Be replaced with the new function",126,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/126,yetifinance,2021/12,bug;invalid;sponsor disputed
66,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing validation of address argument could indefinitely lock treasury,163,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/163,yetifinance,2021/12,bug;duplicate;1 (Low Risk);disagree with severity
66,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use `calldata` instead of `memory` for function parameters,164,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/164,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Cache array length in for loops can save gas,165,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/165,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Incompatibility With Rebasing/Deflationary/Inflationary tokens,167,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/167,yetifinance,2021/12,bug;1 (Low Risk);sponsor disputed
66,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,88,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/88,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Delete - ABI Coder V2 For Gas Optimization,89,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/89,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Revert String Size Optimization,90,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/90,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,SHOULD CHECK RETURN DATA FROM CHAINLINK AGGREGATORS,91,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/91,yetifinance,2021/12,bug;2 (Med Risk);sponsor confirmed
66,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use a constant instead of block.timestamp for the deadline,92,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/92,yetifinance,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
66,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use of ecrecover is susceptible to signature malleability,93,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/93,yetifinance,2021/12,bug;invalid;sponsor disputed
66,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,94,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/94,yetifinance,2021/12,bug;1 (Low Risk)
66,Dravee,0x319dcd0306908ce08ffa6f5e5b6b6a4ff8ccb9de,1,Open TODOs,155,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/155,yetifinance,2021/12,bug;duplicate;0 (Non-critical)
66,Dravee,0x319dcd0306908ce08ffa6f5e5b6b6a4ff8ccb9de,G,Usage of assert() instead of require(),157,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/157,yetifinance,2021/12,bug;G (Gas Optimization)
66,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,An array's length should be cached to save gas in for-loops,166,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/166,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Use of uint8 for counter in for loop increases gas costs,168,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/168,yetifinance,2021/12,bug;G (Gas Optimization)
66,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Bytes constants are more efficient than string constants,169,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/169,yetifinance,2021/12,bug;G (Gas Optimization)
66,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Explicit initialization with zero not required,170,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/170,yetifinance,2021/12,bug;G (Gas Optimization)
66,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Check if transfer amount > 0,171,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/171,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"Tautology on ""variable >= 0"" which is always true as variable is uint",172,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/172,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,!= 0 costs less gass compared to > 0 for unsigned integer inside pure or view functions,173,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/173,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Use calldata instead of memory for external function parameters,174,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/174,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"""constants"" expressions are expressions, not constants, so constant `keccak` variables results in extra hashing (and so gas).",175,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/175,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Upgrade pragma to at least 0.8.4,193,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/193,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`++i` costs less gass compared to `i++`,247,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/247,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,gpersoon,gpersoon.eth,2,Check for duplicate collateral in withdrawColl(),104,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/104,yetifinance,2021/12,bug;duplicate;1 (Low Risk);disagree with severity
66,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,validCollateral[0] can be added multiple times,192,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/192,yetifinance,2021/12,bug;duplicate;2 (Med Risk)
66,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Struct layout,212,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/212,yetifinance,2021/12,bug;invalid;sponsor disputed
66,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Unbounded number of Collateral,215,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/215,yetifinance,2021/12,bug;duplicate;2 (Med Risk)
66,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unnecessary variables,299,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/299,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,heiho1,0x6347E3470d953dAA37A885FF1F2fb158e4427f73,1,Multiple contracts or interfaces with the same name,180,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/180,yetifinance,2021/12,bug;0 (Non-critical);disagree with severity;sponsor confirmed
66,heiho1,0x6347E3470d953dAA37A885FF1F2fb158e4427f73,2,NamespaceCollision: Multiple SafeMath contracts,181,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/181,yetifinance,2021/12,bug;0 (Non-critical);disagree with severity;sponsor confirmed
66,heiho1,0x6347E3470d953dAA37A885FF1F2fb158e4427f73,1,No version pragma in 'contracts/TellorDummy.sol',182,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/182,yetifinance,2021/12,bug;invalid;sponsor disputed
66,heiho1,0x6347E3470d953dAA37A885FF1F2fb158e4427f73,2,Reentrancy in contracts/BorrowerOperations.sol,183,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/183,yetifinance,2021/12,bug;2 (Med Risk)
66,heiho1,0x6347E3470d953dAA37A885FF1F2fb158e4427f73,1,Dead code in contracts/BorrowerOperations.sol,184,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/184,yetifinance,2021/12,bug;duplicate;1 (Low Risk);disagree with severity
66,heiho1,0x6347E3470d953dAA37A885FF1F2fb158e4427f73,2,Re-entrancy in contracts/TroveManager.sol ,185,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/185,yetifinance,2021/12,bug;duplicate;invalid
66,heiho1,0x6347E3470d953dAA37A885FF1F2fb158e4427f73,1,Function getCurrentICR() can be made external,186,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/186,yetifinance,2021/12,bug;duplicate;disagree with severity;G (Gas Optimization);sponsor confirmed
66,heiho1,0x6347E3470d953dAA37A885FF1F2fb158e4427f73,1,contracts/TroveManagerLiquidations.sol is missing inheritance,187,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/187,yetifinance,2021/12,bug;1 (Low Risk);sponsor confirmed
66,heiho1,0x6347E3470d953dAA37A885FF1F2fb158e4427f73,1,contracts/TroveManagerRedemptions.sol is missing inheritance,188,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/188,yetifinance,2021/12,bug;1 (Low Risk);sponsor confirmed
66,heiho1,0x6347E3470d953dAA37A885FF1F2fb158e4427f73,G,contracts/Dependencies/CheckContract.sol has a potential gas optimization,189,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/189,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,sYETIToken rebase comment should be 'added is not more than repurchased',100,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/100,yetifinance,2021/12,bug;1 (Low Risk);disagree with severity;sponsor confirmed
66,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,WJLP setAddresses initialization can be front run,105,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/105,yetifinance,2021/12,bug;1 (Low Risk);sponsor confirmed
66,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,0,Debug code left over in WJLP.unwrapFor,106,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/106,yetifinance,2021/12,bug;disagree with severity;G (Gas Optimization);sponsor confirmed
66,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,WJLP contract doesn't check for JOE and JLP token transfers success,107,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/107,yetifinance,2021/12,bug;2 (Med Risk);sponsor confirmed
66,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,WJLP._safeJoeTransfer should return amount actually sent,109,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/109,yetifinance,2021/12,bug;duplicate;2 (Med Risk);disagree with severity
66,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,PriceFeed ignores ChainLink roundId and will treat stale price as fresh,113,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/113,yetifinance,2021/12,bug;duplicate;2 (Med Risk);disagree with severity
66,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,StabilityPool deposit and withdraw don't check for collateral tokens transfer success,114,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/114,yetifinance,2021/12,bug;duplicate;1 (Low Risk)
66,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,BorrowerOperations and StabilityPool trove status check depends on the enumeration order,120,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/120,yetifinance,2021/12,bug;1 (Low Risk);sponsor confirmed
66,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,Yeti token rebase checks the additional token amount incorrectly,121,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/121,yetifinance,2021/12,bug;3 (High Risk);sponsor confirmed
66,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Unipool's and Pool2Unipool's setParams can be run repeatedly,86,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/86,yetifinance,2021/12,bug;1 (Low Risk);sponsor disputed
66,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,BorrowerOperations.withdrawColl doesn't check the length of the caller supplied arrays,96,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/96,yetifinance,2021/12,bug;1 (Low Risk);sponsor confirmed
66,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,User facing BorrowerOperations and TroveManager miss emergency lever,97,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/97,yetifinance,2021/12,bug;1 (Low Risk);sponsor acknowledged
66,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,BorrowerOperations has unused pieces of functionality,99,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/99,yetifinance,2021/12,bug;0 (Non-critical);disagree with severity;sponsor confirmed
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,G,Safe Math is not needed in solidity versions 0.8.0 and above,53,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/53,yetifinance,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,No guard against zero address in constructor of WJLP.sol ,54,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/54,yetifinance,2021/12,bug;invalid;disagree with severity;sponsor confirmed
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Constructor does not ensure that addresses are not the same ,55,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/55,yetifinance,2021/12,bug;duplicate;invalid;3 (High Risk);disagree with severity
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,No checks in setAddresses() functions ,56,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/56,yetifinance,2021/12,bug;duplicate;invalid;3 (High Risk);disagree with severity
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,No use of reentrency guards,57,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/57,yetifinance,2021/12,bug;duplicate;2 (Med Risk);sponsor confirmed
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,_from and _to can be the same address on wrap() function,58,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/58,yetifinance,2021/12,bug;3 (High Risk);sponsor confirmed
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Uses transferFrom instead of safeTransferFrom ,59,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/59,yetifinance,2021/12,bug;duplicate;1 (Low Risk)
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Use of approve() without first reducing spenders allowance to 0,60,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/60,yetifinance,2021/12,bug;duplicate;0 (Non-critical)
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,_safeJoeTransfer doesn't refund users JOE incase of rounding error,61,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/61,yetifinance,2021/12,bug;duplicate;2 (Med Risk);disagree with severity;sponsor confirmed
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,WJLP.sol does not make use of important events to emit ,62,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/62,yetifinance,2021/12,bug;0 (Non-critical);disagree with severity;sponsor confirmed
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,G,Consider removing BaseBoringBatchable.sol,68,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/68,yetifinance,2021/12,bug;G (Gas Optimization);sponsor acknowledged
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,G,Remove GasPool.sol since its not needed ,71,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/71,yetifinance,2021/12,bug;G (Gas Optimization);sponsor disputed
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,receiveCollateral() can be called by anyone,74,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/74,yetifinance,2021/12,bug;3 (High Risk);sponsor confirmed
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,sendAllocatedYETI() can be called by anyone,75,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/75,yetifinance,2021/12,bug;invalid;3 (High Risk);sponsor disputed
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Consider using safeTransfer for sendAllocatedYETI() function ,76,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/76,yetifinance,2021/12,bug;invalid;sponsor disputed
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Should add onlyTeam modifier to getTeamWallet() function,77,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/77,yetifinance,2021/12,bug;invalid;sponsor disputed
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,TellorCaller.sol constructor does not guard against zero address,78,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/78,yetifinance,2021/12,bug;1 (Low Risk);sponsor confirmed
66,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,assert will always fail if someone sends tokens into Unipool.sol,82,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/82,yetifinance,2021/12,bug;invalid;sponsor disputed
66,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,uint is always >= 0,102,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/102,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,ERC20 return values not checked,108,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/108,yetifinance,2021/12,bug;duplicate;1 (Low Risk)
66,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Find the collateral token iteration over all tokens can be avoided,129,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/129,yetifinance,2021/12,bug;invalid;sponsor disputed
66,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Out of gas.,151,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/151,yetifinance,2021/12,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
66,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,A more efficient for loop index proceeding,65,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/65,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Long Revert Strings,66,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/66,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Cache array length in for loops can save gas,67,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/67,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,"Wrapped Joe LP token Contract  JLP token variable is set on initialization, doesn't change afterwards and should be immutable",69,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/69,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Caching variables,70,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/70,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Useless imports,72,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/72,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Avoid unnecessary storage read can save gas,79,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/79,yetifinance,2021/12,bug;G (Gas Optimization)
66,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Checking non-zero value can avoid an external call to save gas,80,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/80,yetifinance,2021/12,bug;invalid;sponsor disputed
66,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Upgrading the solc compiler to >=0.8 may save gas ,81,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/81,yetifinance,2021/12,bug;G (Gas Optimization);sponsor acknowledged
66,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Unnecessary use of Safemath,85,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/85,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,A variable is being assigned its default value which is unnecessary.,87,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/87,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Consider making some constants as non-public to save gas,95,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/95,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,k,test,1,test,156,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/156,yetifinance,2021/12,bug;invalid;1 (Low Risk)
66,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Unnecessary use of SafeMath in ERC20_8,127,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/127,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,WJLP totalSupply is always 0,128,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/128,yetifinance,2021/12,bug;duplicate;1 (Low Risk);sponsor confirmed
66,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Anybody can claim JLP tokens approved to WJLP,135,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/135,yetifinance,2021/12,bug;duplicate;3 (High Risk)
66,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,WJLP will continue accruing rewards after user has unwrapped his tokens,136,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/136,yetifinance,2021/12,bug;3 (High Risk);disagree with severity;sponsor confirmed
66,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Unused WJLP can't be simply unwrapped,138,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/138,yetifinance,2021/12,bug;2 (Med Risk);sponsor confirmed
66,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,WJLP loses unclaimed rewards when updating user's rewards,141,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/141,yetifinance,2021/12,bug;3 (High Risk);sponsor confirmed
66,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,ActivePool does not update rewards before unwrapping wrapped asset,150,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/150,yetifinance,2021/12,bug;2 (Med Risk);sponsor confirmed
66,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,StabilityPool does not update rewards when upwrapping wrapped asset,152,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/152,yetifinance,2021/12,bug;0 (Non-critical);sponsor disputed
66,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Wrong assumption that wrapped asset holder is receiver of wrapped asset rewards,153,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/153,yetifinance,2021/12,bug;0 (Non-critical);sponsor disputed
66,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Unsafe transfer of ERC20 gains in StabilityPool,213,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/213,yetifinance,2021/12,bug;duplicate;invalid
66,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,0,Unsafe transfer of ERC20 tokens of YetiFinanceTreasury,214,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/214,yetifinance,2021/12,bug;duplicate;1 (Low Risk)
66,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,No sanity check of safe ratio when adding collateral,217,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/217,yetifinance,2021/12,bug;1 (Low Risk);sponsor confirmed
66,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,No timelock when changing ratio of risky collateral,219,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/219,yetifinance,2021/12,bug;invalid;disagree with severity;sponsor confirmed
66,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,Wrong vesting schedule for YETI mentioned in LockupContract,250,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/250,yetifinance,2021/12,bug;1 (Low Risk);disagree with severity;sponsor confirmed
66,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,TeamLockup releases more tokens that it should,263,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/263,yetifinance,2021/12,bug;1 (Low Risk);disagree with severity;sponsor confirmed
66,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,Missing access restriction on StabilityPool's receiveCollateral,285,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/285,yetifinance,2021/12,bug;duplicate;3 (High Risk);disagree with severity
66,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Mixed compiler versions,158,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/158,yetifinance,2021/12,bug;1 (Low Risk)
66,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Leftover console.log calls,159,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/159,yetifinance,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
66,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Useless require,160,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/160,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Long revert string reasons,161,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/161,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Declare state variables as immutable,162,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/162,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,ERC20_8 totalSupply is always 0,236,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/236,yetifinance,2021/12,bug;duplicate;1 (Low Risk);disagree with severity
66,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,TODOs,238,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/238,yetifinance,2021/12,bug;0 (Non-critical)
66,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,setAddresses should only be callable once,240,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/240,yetifinance,2021/12,bug;1 (Low Risk);disagree with severity;sponsor confirmed
66,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,'wrap' tokens that you are not entitled to,242,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/242,yetifinance,2021/12,bug;duplicate;3 (High Risk)
66,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Rescue assets in treasury contract,243,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/243,yetifinance,2021/12,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
66,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,ecrecover 0 address,244,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/244,yetifinance,2021/12,bug;0 (Non-critical);sponsor confirmed
66,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Deleting a mapping within a struct,245,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/245,yetifinance,2021/12,bug;1 (Low Risk);sponsor disputed
66,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,SafeMath with Solidity 0.8,246,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/246,yetifinance,2021/12,bug;G (Gas Optimization)
66,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,long revert messages,249,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/249,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,exists check passes when validCollateral length is 0,292,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/292,yetifinance,2021/12,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
66,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Assigned operations to constant variables,293,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/293,yetifinance,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
66,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache repeated calculations,294,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/294,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,_isBeforeFeeBootstrapPeriod inside the loop,296,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/296,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,claimYeti inclusive check,300,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/300,yetifinance,2021/12,bug;1 (Low Risk);disagree with severity;sponsor confirmed
66,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Missing return statements,301,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/301,yetifinance,2021/12,bug;1 (Low Risk)
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,10,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/10,yetifinance,2021/12,bug;G (Gas Optimization);sponsor acknowledged
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary array boundaries check when loading an array element twice,11,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/11,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Prefix increments are cheaper than postfix increments,12,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/12,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary index init,13,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/13,yetifinance,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Caching array length can save gas,14,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/14,yetifinance,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary payable,15,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/15,yetifinance,2021/12,bug;G (Gas Optimization);sponsor acknowledged
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Cache powers of 10 used several times,16,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/16,yetifinance,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with empty message,17,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/17,yetifinance,2021/12,bug;duplicate;0 (Non-critical);disagree with severity;sponsor confirmed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Must approve 0 first,18,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/18,yetifinance,2021/12,bug;1 (Low Risk);sponsor confirmed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove of openZeppelin is deprecated,19,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/19,yetifinance,2021/12,bug;duplicate;0 (Non-critical);disagree with severity;sponsor confirmed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused imports,2,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/2,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Open TODOs,20,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/20,yetifinance,2021/12,bug;duplicate;0 (Non-critical);disagree with severity;sponsor acknowledged
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Solidity compiler versions mismatch,21,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/21,yetifinance,2021/12,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Use safe math for solidity version <8,22,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/22,yetifinance,2021/12,bug;invalid;sponsor disputed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified function inputs of public / external functions,23,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/23,yetifinance,2021/12,bug;invalid;sponsor disputed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Named return issue,24,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/24,yetifinance,2021/12,bug;disagree with severity;G (Gas Optimization);sponsor acknowledged
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Two Steps Verification before Transferring Ownership,25,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/25,yetifinance,2021/12,bug;invalid;sponsor disputed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Use approve instead of safeApprove,26,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/26,yetifinance,2021/12,bug;duplicate;invalid
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,3,transfer return value is ignored,27,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/27,yetifinance,2021/12,bug;duplicate;1 (Low Risk)
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Loss of precision,28,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/28,yetifinance,2021/12,bug;invalid;sponsor disputed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use bytes32 instead of string to save gas whenever possible,3,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/3,yetifinance,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,More efficient Struct packing of CollateralParams in the contract Whitelist.sol,4,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/4,yetifinance,2021/12,bug;duplicate;invalid;sponsor confirmed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Named return issue,44,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/44,yetifinance,2021/12,bug;duplicate;invalid;sponsor disputed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,More efficient Struct packing of ChainlinkResponse in the contract PriceFeed.sol,5,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/5,yetifinance,2021/12,bug;duplicate;invalid;sponsor confirmed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,More efficient Struct packing of TellorResponse in the contract PriceFeed.sol,6,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/6,yetifinance,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Short the following require messages,7,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/7,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,8,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/8,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,9,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/9,yetifinance,2021/12,bug;duplicate;G (Gas Optimization);sponsor confirmed
66,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,GAS: packing structs saves gas,224,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/224,yetifinance,2021/12,bug;G (Gas Optimization)
66,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Do not store address and contract interfaces separately as state variables,225,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/225,yetifinance,2021/12,bug;invalid;sponsor disputed
66,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,1,Use a two-step process when assigning control over a contract to a different address,226,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/226,yetifinance,2021/12,bug;duplicate;1 (Low Risk)
66,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Ownable doesn't allow transferring ownership,228,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/228,yetifinance,2021/12,bug;1 (Low Risk);disagree with severity
66,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,1,CollSurplusPool doesn't verify that the passed `_whitelistAddress` is an actual contract addres,230,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/230,yetifinance,2021/12,bug;1 (Low Risk);sponsor confirmed
66,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,`WJLP.getPendingRewards()` should be aview function,233,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/233,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,1,`WJLP.setAddresses()` could potentially be front-run making the contract unsable,234,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/234,yetifinance,2021/12,bug;duplicate;1 (Low Risk)
66,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,The `permit()` function makes users more susceptible to phishing attacks,248,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/248,yetifinance,2021/12,bug;invalid;disagree with severity;sponsor acknowledged
66,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,1,Dangerous `teamWallet` update,222,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/222,yetifinance,2021/12,bug;duplicate;1 (Low Risk)
66,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,1,Missing validation for `_minRatio` in `Whitelist.addCollateral`,223,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/223,yetifinance,2021/12,bug;duplicate;1 (Low Risk)
66,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Revert string > 32 bytes,176,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/176,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Unnecessary uint zero initialization,177,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/177,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,assert() used instead of require(),297,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/297,yetifinance,2021/12,bug;duplicate;disagree with severity;G (Gas Optimization)
66,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,Use safeTransfer/safeTransferFrom consistently,298,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/298,yetifinance,2021/12,bug;duplicate;1 (Low Risk)
66,SolidityScan,0xa84394e3006b1b15A816eC059f895dCf6493b429,G,Unused functions can be removed to save gas,63,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/63,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,SolidityScan,0xa84394e3006b1b15A816eC059f895dCf6493b429,1,Use of Large Number Literals,64,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/64,yetifinance,2021/12,bug;0 (Non-critical);disagree with severity;sponsor confirmed
66,SolidityScan,0xa84394e3006b1b15A816eC059f895dCf6493b429,2,Missing zero address checks at multiple places,73,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/73,yetifinance,2021/12,bug;invalid;disagree with severity;sponsor disputed
66,SolidityScan,0xa84394e3006b1b15A816eC059f895dCf6493b429,G,Function should be declared as external to save gas,83,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/83,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,SolidityScan,0xa84394e3006b1b15A816eC059f895dCf6493b429,1,Missing events in critical functions,84,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/84,yetifinance,2021/12,bug;0 (Non-critical);disagree with severity;sponsor confirmed
66,UncleGrandpa925,0x171ea6acDdA2Cb411E4763d71e91b10d96B64f81,3,Incorrect logic of _userUpdate in WJLP.sol,216,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/216,yetifinance,2021/12,bug;duplicate;3 (High Risk)
66,UncleGrandpa925,0x171ea6acDdA2Cb411E4763d71e91b10d96B64f81,3,Missing of _userUpdate in unwrapFor in WJLP.sol,218,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/218,yetifinance,2021/12,bug;duplicate;3 (High Risk)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`YetiFinanceTreasury.sol#updateTeamWallet()` should implement two-step transfer pattern,251,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/251,yetifinance,2021/12,bug;1 (Low Risk)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Race condition on ERC20 approval,252,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/252,yetifinance,2021/12,bug;0 (Non-critical)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Outdated compiler version,253,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/253,yetifinance,2021/12,bug;duplicate;1 (Low Risk)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`++i` is more efficient than `i++`,254,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/254,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused imports,255,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/255,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`console.log()` should be deleted,256,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/256,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Setting `uint` variables to `0` is redundant,257,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/257,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Chainlink's `latestRoundData` might return stale results,258,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/258,yetifinance,2021/12,bug;duplicate;2 (Med Risk)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`ERC20_8.sol` `totalSupply` should be increased on `mint` and decreased on `burn`,259,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/259,yetifinance,2021/12,bug;1 (Low Risk);disagree with severity
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"`ERC20_8.sol`, `WJLP.sol` SafeMath is no longer needed",260,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/260,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,261,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/261,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Upgrade pragma to at least 0.8.4 is more gas efficient,262,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/262,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Lack of access control allows attacker to call `wrap()` and steal other user's wallet balance,264,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/264,yetifinance,2021/12,bug;duplicate;3 (High Risk)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Missing error messages in require statements,265,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/265,yetifinance,2021/12,bug;0 (Non-critical)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,266,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/266,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Unchecked return value for `token.transfer` call,267,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/267,yetifinance,2021/12,bug;duplicate;1 (Low Risk);disagree with severity;sponsor confirmed
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Tokens with fee on transfer are not supported,268,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/268,yetifinance,2021/12,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"Deadline based on `block.timestamp` is ineffective for contract calls, removing them can make the code simpler and save gas",269,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/269,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Public functions not used by current contract should be external,270,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/270,yetifinance,2021/12,bug;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Change `public` constant variables to `private` / `internal` can save gas,271,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/271,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use immutable variable can save gas,272,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/272,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Check if amount > 0 before token transfer can save gas,273,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/273,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`10 ** 18` can be changed to `1e18` and save some gas,274,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/274,yetifinance,2021/12,bug;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Returning the named returns is redundant,275,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/275,yetifinance,2021/12,bug;duplicate;invalid;disagree with severity
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`setAddresses()` functions can be front run,276,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/276,yetifinance,2021/12,bug;duplicate;1 (Low Risk)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`HintHelpers.sol#setAddresses()` can be replaced with `constructor` and save gas,277,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/277,yetifinance,2021/12,bug;G (Gas Optimization);sponsor acknowledged
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Inline unnecessary function can make the code simpler and save some gas,278,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/278,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Only use `amount` when needed can save gas,279,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/279,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Use of assert() instead of require(),280,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/280,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Only using `SafeMath` when necessary can save gas,281,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/281,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unnecessary variables can make the code simpler and save some gas,282,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/282,yetifinance,2021/12,bug;invalid;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,283,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/283,yetifinance,2021/12,bug;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Liquidation can be escaped by depositing a WJLP with `_rewardOwner` != `_borrower`,284,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/284,yetifinance,2021/12,bug;3 (High Risk)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused named returns,288,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/288,yetifinance,2021/12,bug;duplicate;G (Gas Optimization)
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache storage variables in the stack can save gas,289,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/289,yetifinance,2021/12,bug;G (Gas Optimization);sponsor confirmed
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Attacker can steal future rewards of `WJLP` from other users,290,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/290,yetifinance,2021/12,bug;1 (Low Risk);sponsor disputed
66,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`_redeemCaller` should not obtain rights to future rewards for the `WJLP` they redeemed,291,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/291,yetifinance,2021/12,bug;0 (Non-critical);sponsor disputed
78,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas optimisation,275,https://github.com/code-423n4/2022-01-behodler-findings/issues/275,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,Potential Reentrancy,277,https://github.com/code-423n4/2022-01-behodler-findings/issues/277,behodler,2022/01,bug;invalid;sponsor disputed
78,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,Potential Reentrancy,278,https://github.com/code-423n4/2022-01-behodler-findings/issues/278,behodler,2022/01,bug;invalid;sponsor disputed
78,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,Potential Reentrancy,279,https://github.com/code-423n4/2022-01-behodler-findings/issues/279,behodler,2022/01,bug;duplicate;invalid
78,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,1,Missing zero checks,280,https://github.com/code-423n4/2022-01-behodler-findings/issues/280,behodler,2022/01,bug;duplicate;invalid
78,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,1,variable shadowing,284,https://github.com/code-423n4/2022-01-behodler-findings/issues/284,behodler,2022/01,bug;invalid;sponsor acknowledged
78,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,ERC20 returns ignored at multiple places,287,https://github.com/code-423n4/2022-01-behodler-findings/issues/287,behodler,2022/01,bug;duplicate;1 (Low Risk);G (Gas Optimization)
78,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Lack of checks,42,https://github.com/code-423n4/2022-01-behodler-findings/issues/42,behodler,2022/01,bug;invalid;disagree with severity
78,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unsafe transfer or approvals,43,https://github.com/code-423n4/2022-01-behodler-findings/issues/43,behodler,2022/01,bug;duplicate;1 (Low Risk);resolved;sponsor confirmed
78,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving using immutable,44,https://github.com/code-423n4/2022-01-behodler-findings/issues/44,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Outdated openzeppelin/contracts,46,https://github.com/code-423n4/2022-01-behodler-findings/issues/46,behodler,2022/01,bug;invalid;sponsor disputed
78,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving in for loops,47,https://github.com/code-423n4/2022-01-behodler-findings/issues/47,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving using optimizing struct,48,https://github.com/code-423n4/2022-01-behodler-findings/issues/48,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Lack of Governance in important method,49,https://github.com/code-423n4/2022-01-behodler-findings/issues/49,behodler,2022/01,bug;duplicate;0 (Non-critical);sponsor disputed
78,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving removing variable,50,https://github.com/code-423n4/2022-01-behodler-findings/issues/50,behodler,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
78,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Lack of Governance in Governable methods,51,https://github.com/code-423n4/2022-01-behodler-findings/issues/51,behodler,2022/01,bug;0 (Non-critical);resolved;sponsor disputed
78,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Denial of Service in UpdateMultipleSoulConfigProposal,52,https://github.com/code-423n4/2022-01-behodler-findings/issues/52,behodler,2022/01,bug;duplicate;1 (Low Risk);resolved
78,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving optimizing DAO,53,https://github.com/code-423n4/2022-01-behodler-findings/issues/53,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
78,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Reentrancy in withdrawGovernanceAsset,54,https://github.com/code-423n4/2022-01-behodler-findings/issues/54,behodler,2022/01,bug;invalid;question;3 (High Risk)
78,ACai,0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,G,The visibility of some functions should be changed to external.,84,https://github.com/code-423n4/2022-01-behodler-findings/issues/84,behodler,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
78,bobi,0x8f24b7bee60c5421101e2e596b1008522368920f,2,Unchecked transfers,112,https://github.com/code-423n4/2022-01-behodler-findings/issues/112,behodler,2022/01,bug;duplicate;1 (Low Risk)
78,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,G,Gas saving by removing default values,91,https://github.com/code-423n4/2022-01-behodler-findings/issues/91,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,G,gas opts by caching array length,92,https://github.com/code-423n4/2022-01-behodler-findings/issues/92,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,G,gas saving by using != operator,93,https://github.com/code-423n4/2022-01-behodler-findings/issues/93,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,G,Gas saving by setting smaller revert messages ,94,https://github.com/code-423n4/2022-01-behodler-findings/issues/94,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,G,gas optimization by using shift operator,95,https://github.com/code-423n4/2022-01-behodler-findings/issues/95,behodler,2022/01,bug;G (Gas Optimization);sponsor acknowledged
78,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,unchecked on ERC20  transfer functions,96,https://github.com/code-423n4/2022-01-behodler-findings/issues/96,behodler,2022/01,bug;duplicate;1 (Low Risk)
78,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,commented debugging code,97,https://github.com/code-423n4/2022-01-behodler-findings/issues/97,behodler,2022/01,bug;0 (Non-critical);sponsor acknowledged
78,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,1,Importing testing folder,98,https://github.com/code-423n4/2022-01-behodler-findings/issues/98,behodler,2022/01,bug;invalid;sponsor disputed
78,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,2,Calling `generateFLNQuote` twice in every block prevents any migration,102,https://github.com/code-423n4/2022-01-behodler-findings/issues/102,behodler,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
78,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,3,FlashGovernanceArbiter `setEnforcement` is public,103,https://github.com/code-423n4/2022-01-behodler-findings/issues/103,behodler,2022/01,bug;invalid;sponsor disputed
78,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,3,FlashGovernanceArbiter `enforceTolerance` doesn't enforce correctly when `v1 > v2`,104,https://github.com/code-423n4/2022-01-behodler-findings/issues/104,behodler,2022/01,bug;invalid;question
78,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,2,You can grief migrations by sending SCX to the UniswapHelper,105,https://github.com/code-423n4/2022-01-behodler-findings/issues/105,behodler,2022/01,bug;2 (Med Risk);sponsor acknowledged
78,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,2,You can flip governance decisions without extending vote duration,106,https://github.com/code-423n4/2022-01-behodler-findings/issues/106,behodler,2022/01,bug;question;2 (Med Risk);resolved;sponsor confirmed
78,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,2,buyFlanAndBurn transfers tokens instead of approving them for the swap,107,https://github.com/code-423n4/2022-01-behodler-findings/issues/107,behodler,2022/01,bug;invalid;sponsor disputed
78,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,1,incorrect require statement for uniswap LPs,108,https://github.com/code-423n4/2022-01-behodler-findings/issues/108,behodler,2022/01,bug;duplicate;0 (Non-critical);disagree with severity
78,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,G,`purchasePyroFlan` has many `redeemRate` calls that don't do anything,109,https://github.com/code-423n4/2022-01-behodler-findings/issues/109,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,transferAndCall sends tokens twice,1,https://github.com/code-423n4/2022-01-behodler-findings/issues/1,behodler,2022/01,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
78,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,No Transfer Ownership Pattern,40,https://github.com/code-423n4/2022-01-behodler-findings/issues/40,behodler,2022/01,bug;duplicate;1 (Low Risk)
78,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Parameter check error,65,https://github.com/code-423n4/2022-01-behodler-findings/issues/65,behodler,2022/01,bug;invalid;disagree with severity
78,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Missing input checks,66,https://github.com/code-423n4/2022-01-behodler-findings/issues/66,behodler,2022/01,bug;invalid;sponsor disputed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,0,typo in `facade`,113,https://github.com/code-423n4/2022-01-behodler-findings/issues/113,behodler,2022/01,bug;duplicate;0 (Non-critical);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,save gas by reduce amount of accessing to storage ,114,https://github.com/code-423n4/2022-01-behodler-findings/issues/114,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,save gas by shifting instead of dividing,115,https://github.com/code-423n4/2022-01-behodler-findings/issues/115,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,save gas by using unchecked,116,https://github.com/code-423n4/2022-01-behodler-findings/issues/116,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,save gas by not calculating the same thing twice,117,https://github.com/code-423n4/2022-01-behodler-findings/issues/117,behodler,2022/01,bug;invalid;sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,save gas by using local variables,118,https://github.com/code-423n4/2022-01-behodler-findings/issues/118,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,use variables indtead of array to save gas,119,https://github.com/code-423n4/2022-01-behodler-findings/issues/119,behodler,2022/01,bug;G (Gas Optimization);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Unnecessary expression,120,https://github.com/code-423n4/2022-01-behodler-findings/issues/120,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,save gas by using unchecked,121,https://github.com/code-423n4/2022-01-behodler-findings/issues/121,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,save gas by using `if else` instead of calculating the same expression twice,122,https://github.com/code-423n4/2022-01-behodler-findings/issues/122,behodler,2022/01,bug;G (Gas Optimization);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,0,typo,123,https://github.com/code-423n4/2022-01-behodler-findings/issues/123,behodler,2022/01,bug;0 (Non-critical);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,use unchecked when overflow can't happen to save gas,124,https://github.com/code-423n4/2022-01-behodler-findings/issues/124,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,use a local variable to save gas,125,https://github.com/code-423n4/2022-01-behodler-findings/issues/125,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor disputed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,use a defined variable instead of access to the mapping again,126,https://github.com/code-423n4/2022-01-behodler-findings/issues/126,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,use a defined constant to save gas,127,https://github.com/code-423n4/2022-01-behodler-findings/issues/127,behodler,2022/01,bug;disagree with severity;G (Gas Optimization);resolved;sponsor disputed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,use return value instead of variables to save gas,128,https://github.com/code-423n4/2022-01-behodler-findings/issues/128,behodler,2022/01,invalid;sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,save return value instead of calculating it twice,129,https://github.com/code-423n4/2022-01-behodler-findings/issues/129,behodler,2022/01,invalid;G (Gas Optimization);sponsor disputed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,1,multiple (and probably unnecessary) call to the same function,130,https://github.com/code-423n4/2022-01-behodler-findings/issues/130,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,prefix instead of postfix incrementing ,131,https://github.com/code-423n4/2022-01-behodler-findings/issues/131,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,save the length of an array to save gas,132,https://github.com/code-423n4/2022-01-behodler-findings/issues/132,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,save array elements instead of accessing it multiple time,133,https://github.com/code-423n4/2022-01-behodler-findings/issues/133,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,save return value of a function instead of calling it multiple times ,134,https://github.com/code-423n4/2022-01-behodler-findings/issues/134,behodler,2022/01,bug;invalid;G (Gas Optimization);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,save gas by using unchecked if an underflow can't happen,135,https://github.com/code-423n4/2022-01-behodler-findings/issues/135,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,use return values instead of defining local variables,136,https://github.com/code-423n4/2022-01-behodler-findings/issues/136,behodler,2022/01,bug;invalid;G (Gas Optimization);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,shift instead of multiplying saves gas,137,https://github.com/code-423n4/2022-01-behodler-findings/issues/137,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,unused variable,138,https://github.com/code-423n4/2022-01-behodler-findings/issues/138,behodler,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,prefix incrementing use less gas than postfix incrementing ,139,https://github.com/code-423n4/2022-01-behodler-findings/issues/139,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,save the length of an array instead of accessing it in every iteration,140,https://github.com/code-423n4/2022-01-behodler-findings/issues/140,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,save an array element instead of accessing it multiple times,141,https://github.com/code-423n4/2022-01-behodler-findings/issues/141,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,a not needed variable,142,https://github.com/code-423n4/2022-01-behodler-findings/issues/142,behodler,2022/01,bug;disagree with severity;G (Gas Optimization);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,inline a function (use its code) instead of calling it,143,https://github.com/code-423n4/2022-01-behodler-findings/issues/143,behodler,2022/01,bug;G (Gas Optimization);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,save a double mapping value instead of accessing the double mapping multiple times,144,https://github.com/code-423n4/2022-01-behodler-findings/issues/144,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,a not needed variable,145,https://github.com/code-423n4/2022-01-behodler-findings/issues/145,behodler,2022/01,bug;invalid;G (Gas Optimization);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,1,user won't be able to get his rewards in case of staking with amount = 0,146,https://github.com/code-423n4/2022-01-behodler-findings/issues/146,behodler,2022/01,bug;question;2 (Med Risk);resolved;sponsor confirmed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,0,emitting unnecessary event,147,https://github.com/code-423n4/2022-01-behodler-findings/issues/147,behodler,2022/01,bug;invalid;sponsor disputed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,0,not emitting `ClaimedReward` event ,148,https://github.com/code-423n4/2022-01-behodler-findings/issues/148,behodler,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,1,users won't be able to withdraw their funds if they don't have a reward,149,https://github.com/code-423n4/2022-01-behodler-findings/issues/149,behodler,2022/01,bug;duplicate;1 (Low Risk);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,3,attacker can make the contract run his code,150,https://github.com/code-423n4/2022-01-behodler-findings/issues/150,behodler,2022/01,bug;invalid;sponsor disputed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,2,attacker can get free flan in the right terms,151,https://github.com/code-423n4/2022-01-behodler-findings/issues/151,behodler,2022/01,bug;duplicate;invalid;sponsor disputed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,0,forgot to remove debug line,152,https://github.com/code-423n4/2022-01-behodler-findings/issues/152,behodler,2022/01,bug;invalid;sponsor disputed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,3,"The system can get to a ""stuck"" state if a bad proposal (proposal that can't be executed) is accepted",153,https://github.com/code-423n4/2022-01-behodler-findings/issues/153,behodler,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Unnecessary variable creation  in a loop,159,https://github.com/code-423n4/2022-01-behodler-findings/issues/159,behodler,2022/01,bug;invalid;G (Gas Optimization);sponsor acknowledged
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,3,flan can't be transferred unless the flan contract has flan balance greater than the amount we want to transfer,160,https://github.com/code-423n4/2022-01-behodler-findings/issues/160,behodler,2022/01,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,save gas by accessing to a double mapping element one time instead of three times,161,https://github.com/code-423n4/2022-01-behodler-findings/issues/161,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
78,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,parameters in proposals,163,https://github.com/code-423n4/2022-01-behodler-findings/issues/163,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,CertoraInc,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,G,Calculating true difference is redundant due to safeTransfer,41,https://github.com/code-423n4/2022-01-behodler-findings/issues/41,behodler,2022/01,bug;invalid;sponsor disputed
78,CertoraInc,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,3,"Soul.lastRewardTimestamp is uninitialized, can cause huge rewards",45,https://github.com/code-423n4/2022-01-behodler-findings/issues/45,behodler,2022/01,bug;invalid;resolved;sponsor confirmed
78,CertoraInc,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,1,`approveUnstake` is unsafe ,55,https://github.com/code-423n4/2022-01-behodler-findings/issues/55,behodler,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
78,CertoraInc,0x777bA383e74062dd7948A61471267E8e4370EA39,G,Unnecessary double line,87,https://github.com/code-423n4/2022-01-behodler-findings/issues/87,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,CertoraInc,0x777bA383e74062dd7948A61471267E8e4370EA39,G,Unnecessary check equals to 0,90,https://github.com/code-423n4/2022-01-behodler-findings/issues/90,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`LimboDAO.seed`: Wrong error message,167,https://github.com/code-423n4/2022-01-behodler-findings/issues/167,behodler,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
78,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,ERC20 return values not checked,168,https://github.com/code-423n4/2022-01-behodler-findings/issues/168,behodler,2022/01,bug;duplicate;1 (Low Risk)
78,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Unstake wont work if pending reward is 0,210,https://github.com/code-423n4/2022-01-behodler-findings/issues/210,behodler,2022/01,bug;duplicate;1 (Low Risk);resolved
78,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,User funds will be stuck if protocolEnabled is set to false,211,https://github.com/code-423n4/2022-01-behodler-findings/issues/211,behodler,2022/01,bug;invalid;sponsor disputed
78,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas savings,212,https://github.com/code-423n4/2022-01-behodler-findings/issues/212,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
78,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,Incorrect require statement,213,https://github.com/code-423n4/2022-01-behodler-findings/issues/213,behodler,2022/01,bug;0 (Non-critical);disagree with severity;resolved;sponsor confirmed
78,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,User can alter voting decisions by adding fake votes,214,https://github.com/code-423n4/2022-01-behodler-findings/issues/214,behodler,2022/01,bug;invalid;sponsor disputed
78,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas savings,215,https://github.com/code-423n4/2022-01-behodler-findings/issues/215,behodler,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
78,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,User can DOS makeProposal,216,https://github.com/code-423n4/2022-01-behodler-findings/issues/216,behodler,2022/01,bug;invalid;sponsor disputed
78,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas savings,217,https://github.com/code-423n4/2022-01-behodler-findings/issues/217,behodler,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
78,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,Incorrect fate deducted,219,https://github.com/code-423n4/2022-01-behodler-findings/issues/219,behodler,2022/01,bug;invalid;sponsor disputed
78,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,0,Incorrect ERC20NetTransfer function,221,https://github.com/code-423n4/2022-01-behodler-findings/issues/221,behodler,2022/01,bug;invalid;sponsor disputed
78,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,burnOnTransferFee could be set incorrectly,223,https://github.com/code-423n4/2022-01-behodler-findings/issues/223,behodler,2022/01,bug;invalid;sponsor disputed
78,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,0,Missing conditions,224,https://github.com/code-423n4/2022-01-behodler-findings/issues/224,behodler,2022/01,bug;invalid;sponsor disputed
78,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas savings,225,https://github.com/code-423n4/2022-01-behodler-findings/issues/225,behodler,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
78,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,Incorrect security.changeTolerance,226,https://github.com/code-423n4/2022-01-behodler-findings/issues/226,behodler,2022/01,bug;invalid;sponsor disputed
78,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Incorrect unlockTime can DOS withdrawGovernanceAsset,228,https://github.com/code-423n4/2022-01-behodler-findings/issues/228,behodler,2022/01,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
78,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,it is possible to unstake when the protocol is disabled,289,https://github.com/code-423n4/2022-01-behodler-findings/issues/289,behodler,2022/01,bug;invalid;sponsor disputed
78,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,a user without pending money can't unstake their funds,292,https://github.com/code-423n4/2022-01-behodler-findings/issues/292,behodler,2022/01,bug;duplicate;1 (Low Risk)
78,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,wrong revert message,293,https://github.com/code-423n4/2022-01-behodler-findings/issues/293,behodler,2022/01,bug;duplicate;0 (Non-critical);G (Gas Optimization)
78,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,double transfer,294,https://github.com/code-423n4/2022-01-behodler-findings/issues/294,behodler,2022/01,bug;duplicate;3 (High Risk);G (Gas Optimization)
78,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,wrong minting amount,297,https://github.com/code-423n4/2022-01-behodler-findings/issues/297,behodler,2022/01,bug;3 (High Risk);disagree with severity;resolved;sponsor confirmed
78,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,++i is more gas efficient than i++ in loops forwarding,238,https://github.com/code-423n4/2022-01-behodler-findings/issues/238,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Adding unchecked directive can save gas,241,https://github.com/code-423n4/2022-01-behodler-findings/issues/241,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use of _msgSender(),242,https://github.com/code-423n4/2022-01-behodler-findings/issues/242,behodler,2022/01,bug;G (Gas Optimization);sponsor acknowledged
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `++i` costs less gas compared to `i++`,196,https://github.com/code-423n4/2022-01-behodler-findings/issues/196,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"Gas: ""constants"" expressions are expressions, not constants.",197,https://github.com/code-423n4/2022-01-behodler-findings/issues/197,behodler,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Use Custom Errors instead of Revert Strings to save Gas,198,https://github.com/code-423n4/2022-01-behodler-findings/issues/198,behodler,2022/01,bug;duplicate;disagree with severity;G (Gas Optimization);resolved;sponsor confirmed
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: No need to initialize variables with default values,199,https://github.com/code-423n4/2022-01-behodler-findings/issues/199,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: An array's length should be cached to save gas in for-loops,200,https://github.com/code-423n4/2022-01-behodler-findings/issues/200,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Reduce the size of error messages (Long revert Strings),201,https://github.com/code-423n4/2022-01-behodler-findings/issues/201,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Use safeTransfer/safeTransferFrom or require()/conditional consistently instead of transfer/transferFrom,202,https://github.com/code-423n4/2022-01-behodler-findings/issues/202,behodler,2022/01,bug;duplicate;1 (Low Risk)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Shift Right instead of Dividing by 2,203,https://github.com/code-423n4/2022-01-behodler-findings/issues/203,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Unnecessary checked arithmetic in for-loops,204,https://github.com/code-423n4/2022-01-behodler-findings/issues/204,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Limbo.sol`: useless `Ownable` import ,205,https://github.com/code-423n4/2022-01-behodler-findings/issues/205,behodler,2022/01,bug;invalid;G (Gas Optimization);resolved;sponsor confirmed;sponsor disputed
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `> 0` is less efficient than `!= 0` for unsigned integers (with proof),206,https://github.com/code-423n4/2022-01-behodler-findings/issues/206,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Tight variable packing in struct `FlashGovernanceArbiter.FlashGovernanceConfig`,207,https://github.com/code-423n4/2022-01-behodler-findings/issues/207,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Tight variable packing in struct `FlashGovernanceArbiter.SecurityParameters`,208,https://github.com/code-423n4/2022-01-behodler-findings/issues/208,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Mark functions as payable when users can't mistakenly send ETH,209,https://github.com/code-423n4/2022-01-behodler-findings/issues/209,behodler,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,3,Consistently check account balance before and after transfers for Fee-On-Transfer discrepencies,237,https://github.com/code-423n4/2022-01-behodler-findings/issues/237,behodler,2022/01,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,`UpdateMultipleSoulConfigProposal.parameterize()` should check Parameters' existence,240,https://github.com/code-423n4/2022-01-behodler-findings/issues/240,behodler,2022/01,bug;duplicate;1 (Low Risk)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimization in `Flan._setBurnOnTransferFee()`,247,https://github.com/code-423n4/2022-01-behodler-findings/issues/247,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`allowance == type(uint256).max` should be possible ,248,https://github.com/code-423n4/2022-01-behodler-findings/issues/248,behodler,2022/01,bug;invalid;sponsor acknowledged
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimization in `Flan.safeTransfer()`: Non-strict inequalities are cheaper than strict ones,250,https://github.com/code-423n4/2022-01-behodler-findings/issues/250,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Flan._transfer()`: `senderBalance - amount` can't underflow,251,https://github.com/code-423n4/2022-01-behodler-findings/issues/251,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`struct ConfigVars`: related FlanLPs data should be grouped in a struct,252,https://github.com/code-423n4/2022-01-behodler-findings/issues/252,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Minor precision loss,253,https://github.com/code-423n4/2022-01-behodler-findings/issues/253,behodler,2022/01,bug;duplicate;1 (Low Risk);sponsor acknowledged
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `MigrationLib.migrate()`: `scxMinted - adjustedRectangle` can't underflow,254,https://github.com/code-423n4/2022-01-behodler-findings/issues/254,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Non-strict inequalities should be used for time when possible,255,https://github.com/code-423n4/2022-01-behodler-findings/issues/255,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `UniswapHelper.configure()`: require statements should be reordered to save gas on revert,256,https://github.com/code-423n4/2022-01-behodler-findings/issues/256,behodler,2022/01,bug;G (Gas Optimization);sponsor acknowledged
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1, `UniswapHelper.configure()` doesn't take a value between 1 and 100,257,https://github.com/code-423n4/2022-01-behodler-findings/issues/257,behodler,2022/01,bug;duplicate;0 (Non-critical);Needs input from sponsor
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1, `UniswapHelper.configure()`: `VARS.DAI` is being overwritten while it shouldn't,258,https://github.com/code-423n4/2022-01-behodler-findings/issues/258,behodler,2022/01,bug;duplicate;0 (Non-critical)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `UniswapHelper.stabilizeFlan()`: `DesiredFinalFlanOnLP - existingFlanOnLP` can't underflow,259,https://github.com/code-423n4/2022-01-behodler-findings/issues/259,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `UniswapHelper.buyFlanAndBurn()`: `amountOut - reward` can't underflow,260,https://github.com/code-423n4/2022-01-behodler-findings/issues/260,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `FlashGovernanceArbiter.assertGovernanceApproved()`: Short-circuiting in an if-statement,261,https://github.com/code-423n4/2022-01-behodler-findings/issues/261,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `FlashGovernanceArbiter.configureSecurityParameters()`: place the require statement earlier to save gas on revert,262,https://github.com/code-423n4/2022-01-behodler-findings/issues/262,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `FlashGovernanceArbiter.enforceToleranceInt()`: use inclusive inequalities to save gas,263,https://github.com/code-423n4/2022-01-behodler-findings/issues/263,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `FlashGovernanceArbiter.enforceTolerance()`: substractions that can't underflow should be unchecked,265,https://github.com/code-423n4/2022-01-behodler-findings/issues/265,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LimboDAO.vote()`: use inclusive inequalities to save gas,285,https://github.com/code-423n4/2022-01-behodler-findings/issues/285,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LimboDAO.vote()`: SLOADs minimization,288,https://github.com/code-423n4/2022-01-behodler-findings/issues/288,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `TransferHelper.ERC20NetTransfer`: check if amount != 0 before transfer,290,https://github.com/code-423n4/2022-01-behodler-findings/issues/290,behodler,2022/01,bug;G (Gas Optimization);sponsor acknowledged
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`contract LimboDAO`: related Fate data should be grouped in a struct,299,https://github.com/code-423n4/2022-01-behodler-findings/issues/299,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`LimboDAO.seed()`: misleading revert string,307,https://github.com/code-423n4/2022-01-behodler-findings/issues/307,behodler,2022/01,bug;duplicate;0 (Non-critical);G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LimboDAO.seed()`: Avoiding a 2N for-loop for a N one,309,https://github.com/code-423n4/2022-01-behodler-findings/issues/309,behodler,2022/01,bug;G (Gas Optimization);sponsor acknowledged
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Limbo.stake()`: `user.stakedAmount` should get cached,311,https://github.com/code-423n4/2022-01-behodler-findings/issues/311,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Limbo.claimBonus()`: `crossing.crossingBonusDelta` should get cached,313,https://github.com/code-423n4/2022-01-behodler-findings/issues/313,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Limbo.claimSecondaryRewards()`: `crossing.ammHelper` should get cached,314,https://github.com/code-423n4/2022-01-behodler-findings/issues/314,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Limbo.migrate()`: `latestIndex[token]` should get cached,315,https://github.com/code-423n4/2022-01-behodler-findings/issues/315,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `UniswapHelper._ensurePriceStability()`: `VARS.divergenceTolerance` should get cached,316,https://github.com/code-423n4/2022-01-behodler-findings/issues/316,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `UniswapHelper.buyFlanAndBurn()`: `VARS.flan` should get cached,317,https://github.com/code-423n4/2022-01-behodler-findings/issues/317,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Flan.incrementBurnOnTransferFee()`: `burnOnTransferFee` should get cached,320,https://github.com/code-423n4/2022-01-behodler-findings/issues/320,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`FlanBackstop.sol`: `redeemRate()` is called twice,322,https://github.com/code-423n4/2022-01-behodler-findings/issues/322,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `FlanBackstop.purchasePyroFlan()`: `config.flan` and `config.pyroFlan` should get cached,324,https://github.com/code-423n4/2022-01-behodler-findings/issues/324,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `UniswapHelper.stabilizeFlan()`: `VARS.behodler` and `VARS.flan` should get cached,325,https://github.com/code-423n4/2022-01-behodler-findings/issues/325,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LimboDAO.updateCurrentProposal()`: `address(currentProposalState.proposal)` should get cached,326,https://github.com/code-423n4/2022-01-behodler-findings/issues/326,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LimboDAO.convertFateToFlan()`: `fateToFlan` should get cached,327,https://github.com/code-423n4/2022-01-behodler-findings/issues/327,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LimboDAO.vote()`: `currentProposalState.start` and `proposalConfig.votingDuration` should get cached,328,https://github.com/code-423n4/2022-01-behodler-findings/issues/328,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LimboDAO.setEYEBasedAssetStake()`: `precision` should get cached,330,https://github.com/code-423n4/2022-01-behodler-findings/issues/330,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LimboDAO.burnAsset()`: `domainConfig.eye` should get cached,331,https://github.com/code-423n4/2022-01-behodler-findings/issues/331,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Governable.setDAO()`: `DAO` should get cached,333,https://github.com/code-423n4/2022-01-behodler-findings/issues/333,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `FlashGovernanceArbiter.assertGovernanceApproved()`: `flashGovernanceConfig.asset` and `flashGovernanceConfig.amount` should get cached,336,https://github.com/code-423n4/2022-01-behodler-findings/issues/336,behodler,2022/01,bug;G (Gas Optimization);sponsor acknowledged
78,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,dai already update on constructor,246,https://github.com/code-423n4/2022-01-behodler-findings/issues/246,behodler,2022/01,bug;G (Gas Optimization);sponsor acknowledged
78,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,3,unstaker can act malicious when given approval from holder,264,https://github.com/code-423n4/2022-01-behodler-findings/issues/264,behodler,2022/01,bug;invalid;sponsor disputed
78,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,2,Non erc20 token might revert the transaction,266,https://github.com/code-423n4/2022-01-behodler-findings/issues/266,behodler,2022/01,bug;duplicate;1 (Low Risk);G (Gas Optimization)
78,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,3,generateFLNQuote() can be used to prevent migration(),195,https://github.com/code-423n4/2022-01-behodler-findings/issues/195,behodler,2022/01,bug;duplicate;2 (Med Risk);disagree with severity
78,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Cache array length in for loop,218,https://github.com/code-423n4/2022-01-behodler-findings/issues/218,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: `> 0` is less efficient than `!= 0` for uint in require condition,220,https://github.com/code-423n4/2022-01-behodler-findings/issues/220,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Struct layout,222,https://github.com/code-423n4/2022-01-behodler-findings/issues/222,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved
78,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unnecessary code,312,https://github.com/code-423n4/2022-01-behodler-findings/issues/312,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use uint256 instead of bool,318,https://github.com/code-423n4/2022-01-behodler-findings/issues/318,behodler,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
78,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use custom errors,323,https://github.com/code-423n4/2022-01-behodler-findings/issues/323,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Proposal creation DOS,334,https://github.com/code-423n4/2022-01-behodler-findings/issues/334,behodler,2022/01,bug;invalid;sponsor acknowledged
78,Hawkeye,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,2,All the scxMinted is at risk of being burnt.(Limbo.sol),335,https://github.com/code-423n4/2022-01-behodler-findings/issues/335,behodler,2022/01,bug;2 (Med Risk);sponsor acknowledged
78,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,1,Null Address Check missing in important function setDAO in Governable.sol,338,https://github.com/code-423n4/2022-01-behodler-findings/issues/338,behodler,2022/01,bug;invalid;sponsor disputed
78,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,G,purchasePyroFlan calls redeemRate five times without using the result,175,https://github.com/code-423n4/2022-01-behodler-findings/issues/175,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,FlanBackstop's setBacker doesn't check core configuration parameters,176,https://github.com/code-423n4/2022-01-behodler-findings/issues/176,behodler,2022/01,bug;invalid;sponsor acknowledged
78,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,Limbo.configureCrossingConfig doesn't check core configuration parameters,183,https://github.com/code-423n4/2022-01-behodler-findings/issues/183,behodler,2022/01,bug;duplicate;invalid
78,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,2,"Unsafe arbitrary token transfers are used in Limbo's MigrationLib.migrate, UniswapHelper.buyFlanAndBurn and FlashGovernanceArbiter.withdrawGovernanceAsset",227,https://github.com/code-423n4/2022-01-behodler-findings/issues/227,behodler,2022/01,bug;duplicate;1 (Low Risk);G (Gas Optimization)
78,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,2,UniswapHelper.buyFlanAndBurn is a subject to sandwich attacks,230,https://github.com/code-423n4/2022-01-behodler-findings/issues/230,behodler,2022/01,bug;2 (Med Risk);sponsor acknowledged
78,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,3,UniswapHelper is open to manipulations on all chains whose id isn't 1,236,https://github.com/code-423n4/2022-01-behodler-findings/issues/236,behodler,2022/01,bug;0 (Non-critical);resolved;sponsor disputed
78,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,2,"makeProposal can be front run with an arbitrary proposal modifications, enabling griefing attack",243,https://github.com/code-423n4/2022-01-behodler-findings/issues/243,behodler,2022/01,bug;duplicate;2 (Med Risk);sponsor acknowledged
78,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,0,Incorrect comment in LimboDAO.seed,244,https://github.com/code-423n4/2022-01-behodler-findings/issues/244,behodler,2022/01,bug;duplicate;0 (Non-critical)
78,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,User facing Flan and FlanBackstop miss emergency lever,245,https://github.com/code-423n4/2022-01-behodler-findings/issues/245,behodler,2022/01,bug;duplicate;1 (Low Risk);resolved;sponsor confirmed
78,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,"Limbo, LimboDAO and FlashGovernanceArbiter events aren't indexed",249,https://github.com/code-423n4/2022-01-behodler-findings/issues/249,behodler,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
78,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,G,config.flan and config.pyroFlan can be saved to memory,283,https://github.com/code-423n4/2022-01-behodler-findings/issues/283,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
78,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,G,purchasePyroFlan calls getMagnitude twice with the same result,291,https://github.com/code-423n4/2022-01-behodler-findings/issues/291,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,2,unstake enabled modifier can be surpassed with unstakeFor,308,https://github.com/code-423n4/2022-01-behodler-findings/issues/308,behodler,2022/01,bug;duplicate;invalid
78,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,G,adjustSoul can save storage variable to memory to reduce reads,321,https://github.com/code-423n4/2022-01-behodler-findings/issues/321,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,3,pyroFlan price manipulation is possible in purchasePyroFlan,337,https://github.com/code-423n4/2022-01-behodler-findings/issues/337,behodler,2022/01,bug;invalid;sponsor disputed
78,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,"Prefix (`++i`), rather than postfix (`i++`), increment/decrement operators should be used in for-loops",332,https://github.com/code-423n4/2022-01-behodler-findings/issues/332,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,sender and receiver can be the same address on _transfer() function ,56,https://github.com/code-423n4/2022-01-behodler-findings/issues/56,behodler,2022/01,bug;invalid;sponsor disputed
78,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,buyFlanAndBurn() function open to flashloan attacks to inflate rewards and drain pool ,57,https://github.com/code-423n4/2022-01-behodler-findings/issues/57,behodler,2022/01,bug;invalid;question
78,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,buyFlanAndBurn() inputToken argument is not a whitelisted token and can be attacker controlled,58,https://github.com/code-423n4/2022-01-behodler-findings/issues/58,behodler,2022/01,bug;invalid;sponsor disputed
78,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Use of .transfer() in LimboDAO.sol will revert on certain tokens,67,https://github.com/code-423n4/2022-01-behodler-findings/issues/67,behodler,2022/01,bug;invalid;resolved;sponsor confirmed
78,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,incrementFateFor() uses the user arg instead of msg.sender,68,https://github.com/code-423n4/2022-01-behodler-findings/issues/68,behodler,2022/01,bug;invalid;sponsor disputed
78,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Anyone can mint an unlimited amount of flan to themselves ,69,https://github.com/code-423n4/2022-01-behodler-findings/issues/69,behodler,2022/01,bug;invalid;sponsor disputed
78,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,anyone can change Parameters state ,71,https://github.com/code-423n4/2022-01-behodler-findings/issues/71,behodler,2022/01,bug;duplicate;2 (Med Risk);sponsor disputed
78,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,#Gas report Behodler Liquidity Protocol - 13 findings,239,https://github.com/code-423n4/2022-01-behodler-findings/issues/239,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,DoS of `UniswapHelper.sol` By Generating FLN Price too Quickly,110,https://github.com/code-423n4/2022-01-behodler-findings/issues/110,behodler,2022/01,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed;Needs input from sponsor
78,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,1,Recency of Oracle Price When Checking Prices and Stability in `UniswapHelper.sol`,111,https://github.com/code-423n4/2022-01-behodler-findings/issues/111,behodler,2022/01,bug;invalid;sponsor disputed;Needs input from sponsor
78,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Reentrancy on Flash Governance Proposal Withdrawal,154,https://github.com/code-423n4/2022-01-behodler-findings/issues/154,behodler,2022/01,bug;2 (Med Risk);sponsor acknowledged
78,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Locking of User Funds Without Permission,155,https://github.com/code-423n4/2022-01-behodler-findings/issues/155,behodler,2022/01,bug;duplicate;3 (High Risk)
78,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,3,Loss Of Flash Governance Tokens If They Are Not Withdrawn Before The Next Request,156,https://github.com/code-423n4/2022-01-behodler-findings/issues/156,behodler,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
78,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Burning a User's Tokens for a Flash Proposal will not Deduct Their Balance,157,https://github.com/code-423n4/2022-01-behodler-findings/issues/157,behodler,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
78,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Insufficient Validation of `burnFlashGovernanceAsset()` Parameters,158,https://github.com/code-423n4/2022-01-behodler-findings/issues/158,behodler,2022/01,bug;1 (Low Risk);sponsor acknowledged
78,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,DoS by Locking Voting Through Flipping a Proposal,162,https://github.com/code-423n4/2022-01-behodler-findings/issues/162,behodler,2022/01,bug;invalid;sponsor disputed
78,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Bypass Vote Flipping Time Addition,164,https://github.com/code-423n4/2022-01-behodler-findings/issues/164,behodler,2022/01,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
78,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,1,`Limbo.sol` Does Not Implement `WithdrawERC20Proposal` Functionality,165,https://github.com/code-423n4/2022-01-behodler-findings/issues/165,behodler,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
78,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,1,Excessive Permissions to Owner for Soul Update Proposals,166,https://github.com/code-423n4/2022-01-behodler-findings/issues/166,behodler,2022/01,bug;invalid;sponsor disputed
78,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Reentrancy of `stake()` to Overstate User Balance,62,https://github.com/code-423n4/2022-01-behodler-findings/issues/62,behodler,2022/01,bug;invalid;sponsor disputed
78,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,0,Naming Overlap of `safeTransfer()`,63,https://github.com/code-423n4/2022-01-behodler-findings/issues/63,behodler,2022/01,bug;invalid;sponsor disputed
78,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,1,Unsafe External Call Pattern in `rewardAdjustDebt()`,70,https://github.com/code-423n4/2022-01-behodler-findings/issues/70,behodler,2022/01,bug;invalid;sponsor disputed
78,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,1,Lack of Access Control on Configuration Functions,77,https://github.com/code-423n4/2022-01-behodler-findings/issues/77,behodler,2022/01,bug;duplicate;question;1 (Low Risk);sponsor disputed
78,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,3,assertGovernanceApproved() will always revert is non ERC-20 compliant token is used,177,https://github.com/code-423n4/2022-01-behodler-findings/issues/177,behodler,2022/01,bug;duplicate;1 (Low Risk);sponsor acknowledged
78,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,1,flashDecision event has no indexed fields,178,https://github.com/code-423n4/2022-01-behodler-findings/issues/178,behodler,2022/01,bug;duplicate;0 (Non-critical);disagree with severity;resolved;sponsor confirmed
78,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,1,LimboDAO.sol events do not index any field,179,https://github.com/code-423n4/2022-01-behodler-findings/issues/179,behodler,2022/01,bug;duplicate;0 (Non-critical);disagree with severity;resolved;sponsor confirmed
78,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,1,Limbo.sol events do not index any field,180,https://github.com/code-423n4/2022-01-behodler-findings/issues/180,behodler,2022/01,bug;duplicate;0 (Non-critical);resolved;sponsor confirmed;Needs input from sponsor
78,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Comments in LimboDAO.sol,181,https://github.com/code-423n4/2022-01-behodler-findings/issues/181,behodler,2022/01,bug;duplicate;0 (Non-critical);sponsor acknowledged
78,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Using ++i consumes less gas than i++,182,https://github.com/code-423n4/2022-01-behodler-findings/issues/182,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Unauthorized assertGovernanceApproved,268,https://github.com/code-423n4/2022-01-behodler-findings/issues/268,behodler,2022/01,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
78,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Unprotected setFactory and setDAI,269,https://github.com/code-423n4/2022-01-behodler-findings/issues/269,behodler,2022/01,bug;duplicate;0 (Non-critical)
78,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Immutable variables,270,https://github.com/code-423n4/2022-01-behodler-findings/issues/270,behodler,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
78,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,.length in a loop,271,https://github.com/code-423n4/2022-01-behodler-findings/issues/271,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Lower than uint256 size storage variables are less gas efficient,272,https://github.com/code-423n4/2022-01-behodler-findings/issues/272,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unchecked math operations,273,https://github.com/code-423n4/2022-01-behodler-findings/issues/273,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Shorter revert messages,274,https://github.com/code-423n4/2022-01-behodler-findings/issues/274,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Repeated math operation,276,https://github.com/code-423n4/2022-01-behodler-findings/issues/276,behodler,2022/01,bug;invalid;G (Gas Optimization)
78,Randyyy,0x8a59f36d7d44460418781ded3d1cA45e19F2Ab02,2,Stacking with 0 amount will reset rewarded without claiming any flan.,171,https://github.com/code-423n4/2022-01-behodler-findings/issues/171,behodler,2022/01,bug;duplicate;2 (Med Risk)
78,Randyyy,0x8a59f36d7d44460418781ded3d1cA45e19F2Ab02,G,Using type(uint).max is cheaper than using calculation.,173,https://github.com/code-423n4/2022-01-behodler-findings/issues/173,behodler,2022/01,bug;G (Gas Optimization);resolved;sponsor disputed
78,Randyyy,0x8a59f36d7d44460418781ded3d1cA45e19F2Ab02,G,Consider save array length to variable for cheaper gas in looping,72,https://github.com/code-423n4/2022-01-behodler-findings/issues/72,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Randyyy,0x8a59f36d7d44460418781ded3d1cA45e19F2Ab02,G, Cheaper to use caldata than memory,73,https://github.com/code-423n4/2022-01-behodler-findings/issues/73,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,Randyyy,0x8a59f36d7d44460418781ded3d1cA45e19F2Ab02,1,Miss address zero checked,74,https://github.com/code-423n4/2022-01-behodler-findings/issues/74,behodler,2022/01,bug;invalid;sponsor acknowledged
78,Randyyy,0x8a59f36d7d44460418781ded3d1cA45e19F2Ab02,1,Missing check existing tokenProxy .,75,https://github.com/code-423n4/2022-01-behodler-findings/issues/75,behodler,2022/01,bug;invalid;sponsor disputed
78,Randyyy,0x8a59f36d7d44460418781ded3d1cA45e19F2Ab02,1,Miss address zero checked,76,https://github.com/code-423n4/2022-01-behodler-findings/issues/76,behodler,2022/01,bug;duplicate;invalid
78,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,better increment operator,267,https://github.com/code-423n4/2022-01-behodler-findings/issues/267,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,function visibility can set external,281,https://github.com/code-423n4/2022-01-behodler-findings/issues/281,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,use multiple require() instead of &&,282,https://github.com/code-423n4/2022-01-behodler-findings/issues/282,behodler,2022/01,bug;G (Gas Optimization);resolved;sponsor disputed
78,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,unnecessary value set to uint,286,https://github.com/code-423n4/2022-01-behodler-findings/issues/286,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,1,require() validation and the revert message is not match,310,https://github.com/code-423n4/2022-01-behodler-findings/issues/310,behodler,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed;Needs input from sponsor
78,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,more gas eficient constructor on TokenProxyRegistry.sol,319,https://github.com/code-423n4/2022-01-behodler-findings/issues/319,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Prefix increments are cheaper than postfix increments,10,https://github.com/code-423n4/2022-01-behodler-findings/issues/10,behodler,2022/01,bug;G (Gas Optimization);sponsor acknowledged
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary index init,11,https://github.com/code-423n4/2022-01-behodler-findings/issues/11,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Caching array length can save gas,12,https://github.com/code-423n4/2022-01-behodler-findings/issues/12,behodler,2022/01,bug;G (Gas Optimization);sponsor acknowledged
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,transfer return value of a custom ERC20 is ignored,13,https://github.com/code-423n4/2022-01-behodler-findings/issues/13,behodler,2022/01,bug;duplicate;1 (Low Risk)
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Check if amount is not zero to save gas,14,https://github.com/code-423n4/2022-01-behodler-findings/issues/14,behodler,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use != 0 instead of > 0,15,https://github.com/code-423n4/2022-01-behodler-findings/issues/15,behodler,2022/01,bug;G (Gas Optimization);sponsor acknowledged
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Mult instead div in compares,16,https://github.com/code-423n4/2022-01-behodler-findings/issues/16,behodler,2022/01,bug;duplicate;1 (Low Risk);sponsor acknowledged
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Consider inline the following functions to save gas,17,https://github.com/code-423n4/2022-01-behodler-findings/issues/17,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary constructor,18,https://github.com/code-423n4/2022-01-behodler-findings/issues/18,behodler,2022/01,bug;G (Gas Optimization);sponsor acknowledged
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Inline one time use functions,19,https://github.com/code-423n4/2022-01-behodler-findings/issues/19,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor disputed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused imports,2,https://github.com/code-423n4/2022-01-behodler-findings/issues/2,behodler,2022/01,bug;G (Gas Optimization);resolved;sponsor disputed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary default assignment,20,https://github.com/code-423n4/2022-01-behodler-findings/issues/20,behodler,2022/01,bug;G (Gas Optimization);sponsor acknowledged
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimization On The 2^256-1,21,https://github.com/code-423n4/2022-01-behodler-findings/issues/21,behodler,2022/01,bug;invalid;question;G (Gas Optimization);sponsor acknowledged
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use calldata instead of memory,22,https://github.com/code-423n4/2022-01-behodler-findings/issues/22,behodler,2022/01,bug;G (Gas Optimization);sponsor acknowledged
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Must approve 0 first,23,https://github.com/code-423n4/2022-01-behodler-findings/issues/23,behodler,2022/01,bug;invalid;question;resolved;sponsor confirmed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove of openZeppelin is deprecated,24,https://github.com/code-423n4/2022-01-behodler-findings/issues/24,behodler,2022/01,bug;invalid;question;sponsor disputed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified owner input can lead to undesired behavior,25,https://github.com/code-423n4/2022-01-behodler-findings/issues/25,behodler,2022/01,bug;invalid;sponsor disputed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Unbounded loop on array controlled by owner can lead to DoS,26,https://github.com/code-423n4/2022-01-behodler-findings/issues/26,behodler,2022/01,bug;duplicate;1 (Low Risk);sponsor acknowledged
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Two Steps Verification before Transferring Ownership,27,https://github.com/code-423n4/2022-01-behodler-findings/issues/27,behodler,2022/01,bug;question;1 (Low Risk);sponsor acknowledged
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,In the following public update functions no value is returned,28,https://github.com/code-423n4/2022-01-behodler-findings/issues/28,behodler,2022/01,bug;invalid;question;sponsor disputed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Two arrays length mismatch,29,https://github.com/code-423n4/2022-01-behodler-findings/issues/29,behodler,2022/01,bug;invalid;sponsor disputed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,More efficient Struct packing of SecurityParameters in the contract FlashGovernanceArbiter.sol,3,https://github.com/code-423n4/2022-01-behodler-findings/issues/3,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Missing commenting,30,https://github.com/code-423n4/2022-01-behodler-findings/issues/30,behodler,2022/01,bug;invalid;disagree with severity
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Anyone can withdraw others,31,https://github.com/code-423n4/2022-01-behodler-findings/issues/31,behodler,2022/01,bug;invalid;sponsor disputed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Does not validate the input fee parameter,32,https://github.com/code-423n4/2022-01-behodler-findings/issues/32,behodler,2022/01,bug;invalid;sponsor disputed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Unbounded loop on array that can only grow can lead to DoS,33,https://github.com/code-423n4/2022-01-behodler-findings/issues/33,behodler,2022/01,bug;duplicate;1 (Low Risk);Needs input from sponsor
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Potential DoS,34,https://github.com/code-423n4/2022-01-behodler-findings/issues/34,behodler,2022/01,bug;duplicate;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Check transferFrom is from msg.sender,35,https://github.com/code-423n4/2022-01-behodler-findings/issues/35,behodler,2022/01,bug;duplicate;invalid;sponsor disputed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,approve return value is ignored,36,https://github.com/code-423n4/2022-01-behodler-findings/issues/36,behodler,2022/01,bug;invalid;resolved;sponsor confirmed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,3,transfer return value of a general ERC20 is ignored,37,https://github.com/code-423n4/2022-01-behodler-findings/issues/37,behodler,2022/01,bug;1 (Low Risk);resolved
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,3,Usage of an incorrect version of Ownbale library can potentially malfunction all onlyOwner functions,38,https://github.com/code-423n4/2022-01-behodler-findings/issues/38,behodler,2022/01,bug;invalid;sponsor disputed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,3,Unbounded loop on array can lead to DoS,39,https://github.com/code-423n4/2022-01-behodler-findings/issues/39,behodler,2022/01,bug;duplicate;1 (Low Risk)
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,More efficient Struct packing of FlashGovernanceConfig in the contract FlashGovernanceArbiter.sol,4,https://github.com/code-423n4/2022-01-behodler-findings/issues/4,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,More efficient Struct packing of UniVARS in the contract UniswapHelper.sol,5,https://github.com/code-423n4/2022-01-behodler-findings/issues/5,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Short the following require messages,6,https://github.com/code-423n4/2022-01-behodler-findings/issues/6,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Internal functions to private,7,https://github.com/code-423n4/2022-01-behodler-findings/issues/7,behodler,2022/01,bug;invalid;question;G (Gas Optimization);sponsor disputed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,8,https://github.com/code-423n4/2022-01-behodler-findings/issues/8,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor disputed
78,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,9,https://github.com/code-423n4/2022-01-behodler-findings/issues/9,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,`Governable` configuration can be backrun,78,https://github.com/code-423n4/2022-01-behodler-findings/issues/78,behodler,2022/01,bug;question;1 (Low Risk);resolved;sponsor disputed
78,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Remove duplicate call to save gas,79,https://github.com/code-423n4/2022-01-behodler-findings/issues/79,behodler,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
78,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,State variables should only be read once from storage to save gas,80,https://github.com/code-423n4/2022-01-behodler-findings/issues/80,behodler,2022/01,bug;duplicate;question;G (Gas Optimization);sponsor disputed
78,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Don't assign default zero value explicitly when declaring a variable,81,https://github.com/code-423n4/2022-01-behodler-findings/issues/81,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,`FlashGovernanceArbiter.enforceTolerance()` fails,82,https://github.com/code-423n4/2022-01-behodler-findings/issues/82,behodler,2022/01,bug;invalid;sponsor disputed
78,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,1,Use SafeERC or check return values when working with arbitrary tokens,83,https://github.com/code-423n4/2022-01-behodler-findings/issues/83,behodler,2022/01,bug;duplicate;1 (Low Risk);Needs input from sponsor
78,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,`!= 0` is cheaper than `> 0` when working with uints,85,https://github.com/code-423n4/2022-01-behodler-findings/issues/85,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,"`LimboDAO.killDAO()` doesn't update the DAO address of `FlanBackstop`, `UniswapHelper`, and `ProposalFactory`",86,https://github.com/code-423n4/2022-01-behodler-findings/issues/86,behodler,2022/01,bug;1 (Low Risk);disagree with severity;resolved;sponsor confirmed
78,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,1,Add emergency stop for specific stablecoins in `FlanBackstop`,88,https://github.com/code-423n4/2022-01-behodler-findings/issues/88,behodler,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
78,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Unnecessary if else in `UniswapHelper.configure()`,89,https://github.com/code-423n4/2022-01-behodler-findings/issues/89,behodler,2022/01,bug;disagree with severity;G (Gas Optimization);resolved;sponsor confirmed
78,shw,0xABb99042FAE2C86b8437585467a24a71b17d23bA,2,Use the SafeERC20 library to transfer ERC20 tokens,295,https://github.com/code-423n4/2022-01-behodler-findings/issues/295,behodler,2022/01,bug;duplicate;1 (Low Risk);G (Gas Optimization)
78,shw,0xABb99042FAE2C86b8437585467a24a71b17d23bA,2,Lack of access control in the `parameterize` function of proposal contracts,296,https://github.com/code-423n4/2022-01-behodler-findings/issues/296,behodler,2022/01,bug;duplicate;2 (Med Risk);resolved
78,shw,0xABb99042FAE2C86b8437585467a24a71b17d23bA,2,Missing the `enabled` modifier for the `unstakeFor` function of `Limbo`,298,https://github.com/code-423n4/2022-01-behodler-findings/issues/298,behodler,2022/01,bug;duplicate;invalid
78,shw,0xABb99042FAE2C86b8437585467a24a71b17d23bA,2,Lack of access control on `assertGovernanceApproved` can cause funds to be locked,300,https://github.com/code-423n4/2022-01-behodler-findings/issues/300,behodler,2022/01,bug;3 (High Risk);resolved
78,shw,0xABb99042FAE2C86b8437585467a24a71b17d23bA,2,Lack of access control of `generateFLNQuote` can lead to potential DoS attacks,301,https://github.com/code-423n4/2022-01-behodler-findings/issues/301,behodler,2022/01,bug;duplicate;2 (Med Risk);G (Gas Optimization)
78,shw,0xABb99042FAE2C86b8437585467a24a71b17d23bA,3,Double transfer in the `transferAndCall` function of `ERC677`,302,https://github.com/code-423n4/2022-01-behodler-findings/issues/302,behodler,2022/01,bug;3 (High Risk);resolved
78,shw,0xABb99042FAE2C86b8437585467a24a71b17d23bA,3,`Limbo` does not implement the `withdrawERC20` function,303,https://github.com/code-423n4/2022-01-behodler-findings/issues/303,behodler,2022/01,bug;duplicate;1 (Low Risk)
78,shw,0xABb99042FAE2C86b8437585467a24a71b17d23bA,3,LP pricing formula is vulnerable to flashloan manipulation,304,https://github.com/code-423n4/2022-01-behodler-findings/issues/304,behodler,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
78,shw,0xABb99042FAE2C86b8437585467a24a71b17d23bA,3,Logic error in `burnFlashGovernanceAsset` can cause locked assets to be stolen,305,https://github.com/code-423n4/2022-01-behodler-findings/issues/305,behodler,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
78,shw,0xABb99042FAE2C86b8437585467a24a71b17d23bA,3,Tolerance is not enforced during a flash governance decision,306,https://github.com/code-423n4/2022-01-behodler-findings/issues/306,behodler,2022/01,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
78,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Functions can be external,184,https://github.com/code-423n4/2022-01-behodler-findings/issues/184,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
78,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Revert string > 32 bytes,185,https://github.com/code-423n4/2022-01-behodler-findings/issues/185,behodler,2022/01,bug;G (Gas Optimization);resolved
78,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Add unchecked to ERC20Burnable.sol functions,186,https://github.com/code-423n4/2022-01-behodler-findings/issues/186,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor disputed
78,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,transferFrom gas improvement,187,https://github.com/code-423n4/2022-01-behodler-findings/issues/187,behodler,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
78,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,3,Wrong units in `convertFateToFlan()`,188,https://github.com/code-423n4/2022-01-behodler-findings/issues/188,behodler,2022/01,bug;0 (Non-critical);disagree with severity;resolved;sponsor confirmed
78,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,Proposal cost doesn't use votingDuration,189,https://github.com/code-423n4/2022-01-behodler-findings/issues/189,behodler,2022/01,bug;1 (Low Risk);disagree with severity;resolved;sponsor confirmed
78,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,Initialization function callable multiple times,190,https://github.com/code-423n4/2022-01-behodler-findings/issues/190,behodler,2022/01,bug;invalid;sponsor disputed
78,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Missing zero checks,191,https://github.com/code-423n4/2022-01-behodler-findings/issues/191,behodler,2022/01,bug;invalid;sponsor disputed
78,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Improper ERC677 casting,192,https://github.com/code-423n4/2022-01-behodler-findings/issues/192,behodler,2022/01,bug;invalid;sponsor disputed
78,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Useless logic operation,193,https://github.com/code-423n4/2022-01-behodler-findings/issues/193,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Duplicate line of code,194,https://github.com/code-423n4/2022-01-behodler-findings/issues/194,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,3,Flash loan price manipulation in `purchasePyroFlan()`,231,https://github.com/code-423n4/2022-01-behodler-findings/issues/231,behodler,2022/01,bug;3 (High Risk);sponsor acknowledged
78,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,Loss of precision in `purchasePyroFlan()`,232,https://github.com/code-423n4/2022-01-behodler-findings/issues/232,behodler,2022/01,bug;1 (Low Risk);sponsor acknowledged
78,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Preincrement in a loop is cheaper,233,https://github.com/code-423n4/2022-01-behodler-findings/issues/233,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Accessing array length in for loop is costly.,234,https://github.com/code-423n4/2022-01-behodler-findings/issues/234,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Assigning default values costs unnecessary gas.,235,https://github.com/code-423n4/2022-01-behodler-findings/issues/235,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,using `calldata` can save gas,170,https://github.com/code-423n4/2022-01-behodler-findings/issues/170,behodler,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
78,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,waste gas on external call if amount = 0,172,https://github.com/code-423n4/2022-01-behodler-findings/issues/172,behodler,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
78,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,1,consider adding modifier nonReentrant(),174,https://github.com/code-423n4/2022-01-behodler-findings/issues/174,behodler,2022/01,bug;invalid;sponsor disputed
78,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,3,Lacking access control on endConfiguration and setDAO,59,https://github.com/code-423n4/2022-01-behodler-findings/issues/59,behodler,2022/01,bug;duplicate;0 (Non-critical)
78,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,3,Wrong implementation of transferAndCall,60,https://github.com/code-423n4/2022-01-behodler-findings/issues/60,behodler,2022/01,bug;duplicate;3 (High Risk)
78,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,3,Lacking access control on endConfiguration and setDAO,61,https://github.com/code-423n4/2022-01-behodler-findings/issues/61,behodler,2022/01,bug;duplicate;0 (Non-critical)
78,wuwe1,https://polygonscan.com/address/0xA8022F2b43e4823B8286601329504001f8A78652,1,Lacking enforceTolerance ,64,https://github.com/code-423n4/2022-01-behodler-findings/issues/64,behodler,2022/01,bug;invalid;sponsor disputed
78,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,1,Unsafe downcast in `LamboDAO.setEYEBasedAssetStake`,229,https://github.com/code-423n4/2022-01-behodler-findings/issues/229,behodler,2022/01,bug;invalid;sponsor disputed
78,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Assignment Of Variables To Default (Flan.sol),100,https://github.com/code-423n4/2022-01-behodler-findings/issues/100,behodler,2022/01,bug;duplicate;G (Gas Optimization)
78,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,VARS.priceBoostOvershoot in function configure (UniswapHelper.sol) can not be set to 100%.,101,https://github.com/code-423n4/2022-01-behodler-findings/issues/101,behodler,2022/01,bug;invalid;disagree with severity;resolved;sponsor confirmed
78,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,VARS.precision in function configure (UniswapHelper.sol) is set in an incorrect or confusing way,99,https://github.com/code-423n4/2022-01-behodler-findings/issues/99,behodler,2022/01,bug;duplicate;G (Gas Optimization)
999999,0xsi-test,0x8887d92b863acc546cd7372b4627de39548f85c4,G,Gas Optimizations,32,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/32,dev test repo,2022/01,bug;G (Gas Optimization)
999999,0xsi-test,0x8887d92b863acc546cd7372b4627de39548f85c4,2,Test medium,33,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/33,dev test repo,2022/01,bug;2 (Med Risk)
999999,0xsi-test,0x8887d92b863acc546cd7372b4627de39548f85c4,3,test high,34,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/34,dev test repo,2022/01,bug;3 (High Risk)
89,BurgerTime,0x0,G,Gas Optimizations,10,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/10,dev test repo,2022/01,bug;G (Gas Optimization)
89,BurgerTime,0x0,1,QA Report,11,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/11,dev test repo,2022/01,bug;1 (Low Risk)
89,BurgerTime,0x0,3,Upgraded G -> H from 10 [1654286526568],17,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/17,dev test repo,2022/01,bug;3 (High Risk);upgraded by judge
2,BurgerTime,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,3,TEST,18,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/18,dev test repo,2022/01,bug;3 (High Risk)
89,BurgerTime,0x0,G,Gas Optimizations,4,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/4,dev test repo,2022/01,bug;G (Gas Optimization)
89,BurgerTime,0x0,2,Medium risk title,5,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/5,dev test repo,2022/01,bug;2 (Med Risk)
89,BurgerTime,0x0,3,High Risk Title,6,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/6,dev test repo,2022/01,bug;3 (High Risk)
89,BurgerTime,0x0,G,Gas Optimizations,7,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/7,dev test repo,2022/01,bug;G (Gas Optimization)
89,BurgerTime,0x0,G,Gas Optimizations,8,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/8,dev test repo,2022/01,bug;G (Gas Optimization)
89,BurgerTime,0x0,G,Gas Optimizations,9,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/9,dev test repo,2022/01,bug;G (Gas Optimization)
1,captainmango,xxx,1,All ,2,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/2,dev test repo,2022/01,bug;1 (Low Risk)
1,captainmango,xxx,1,All ,1,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/1,dev test repo,2022/01,bug;invalid
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,Q,QA Report,31,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/31,dev test repo,2022/01,bug;QA (Quality Assurance)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,2,TEST,35,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/35,dev test repo,2022/01,bug;2 (Med Risk)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,G,Gas Optimizations,39,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/39,dev test repo,2022/01,bug;G (Gas Optimization)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,2,TEST,40,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/40,dev test repo,2022/01,bug;2 (Med Risk)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,G,Gas Optimizations,43,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/43,dev test repo,2022/01,bug;G (Gas Optimization)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,2,4rqt4,47,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/47,dev test repo,2022/01,bug;2 (Med Risk)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,2,t4tq,48,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/48,dev test repo,2022/01,bug;2 (Med Risk)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,2,rwrvw,49,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/49,dev test repo,2022/01,bug;2 (Med Risk)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,Q,QA Report,50,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/50,dev test repo,2022/01,bug;QA (Quality Assurance)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,Q,QA Report,51,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/51,dev test repo,2022/01,bug;QA (Quality Assurance)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,Q,QA Report,52,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/52,dev test repo,2022/01,bug;QA (Quality Assurance)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,Q,QA Report,53,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/53,dev test repo,2022/01,bug;QA (Quality Assurance)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,Q,QA Report,54,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/54,dev test repo,2022/01,bug;QA (Quality Assurance)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,G,Gas Optimizations,55,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/55,dev test repo,2022/01,bug;G (Gas Optimization)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,G,Gas Optimizations,56,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/56,dev test repo,2022/01,bug;G (Gas Optimization)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,Q,QA Report,57,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/57,dev test repo,2022/01,bug;QA (Quality Assurance)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,Q,QA Report,58,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/58,dev test repo,2022/01,bug;QA (Quality Assurance)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,Q,QA Report,59,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/59,dev test repo,2022/01,bug;QA (Quality Assurance)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,Q,QA Report,60,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/60,dev test repo,2022/01,bug;QA (Quality Assurance)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,Q,QA Report,61,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/61,dev test repo,2022/01,bug;QA (Quality Assurance)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,2,rewaer,62,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/62,dev test repo,2022/01,bug;2 (Med Risk)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,2,test,63,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/63,dev test repo,2022/01,bug;2 (Med Risk)
999999,CaptainMango,0x948485988985906813Cb8BC3c389428FE0eed4aF,G,Gas Optimizations,64,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/64,dev test repo,2022/01,bug;G (Gas Optimization);old-submission-method
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,Q,QA Report,65,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/65,dev test repo,2022/01,bug;QA (Quality Assurance)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,3,TEST,66,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/66,dev test repo,2022/01,bug;3 (High Risk)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,Q,QA Report,67,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/67,dev test repo,2022/01,bug;QA (Quality Assurance)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,3,test,68,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/68,dev test repo,2022/01,bug;3 (High Risk)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,2,TEST,69,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/69,dev test repo,2022/01,bug;2 (Med Risk)
999999,CaptainMango,0x242abfb687141b75e4d7a271b839b2ced04bbb5d,2,TEST,70,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/70,dev test repo,2022/01,bug;2 (Med Risk)
999999,Chom,0xc4c459668fb29833d7dee997d7d347e2634c9cef,3,Gitignore too low,36,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/36,dev test repo,2022/01,bug;3 (High Risk)
999999,Chom,0xc4c459668fb29833d7dee997d7d347e2634c9cef,2,Just for test,37,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/37,dev test repo,2022/01,bug;2 (Med Risk)
999999,Chom,0xc4c459668fb29833d7dee997d7d347e2634c9cef,2,Test switch wallet,38,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/38,dev test repo,2022/01,bug;2 (Med Risk)
999999,MangoBurger,0x0000000000000000000000000000000000000000,3,test,41,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/41,dev test repo,2022/01,bug;3 (High Risk)
999999,MangoBurger,0x0000000000000000000000000000000000000000,G,Gas Optimizations,42,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/42,dev test repo,2022/01,bug;G (Gas Optimization)
999999,MangoBurger,0x0000000000000000000000000000000000000000,G,Gas Optimizations,44,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/44,dev test repo,2022/01,bug;G (Gas Optimization)
999999,MangoBurger,0x0000000000000000000000000000000000000000,Q,QA Report,45,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/45,dev test repo,2022/01,bug;QA (Quality Assurance)
999999,MangoBurger,0x0000000000000000000000000000000000000000,Q,QA Report,46,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/46,dev test repo,2022/01,bug;QA (Quality Assurance)
999999,nospaces,0x827b1da7b1df08328fa9791c2d6f55d10fe5f632,3,asdf,27,https://github.com/code-423n4/2022-01-dev-test-repo-findings/issues/27,dev test repo,2022/01,bug;3 (High Risk)
77,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Use bytes32 instead of string when possible,66,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/66,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
77,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Use calldata instead of memory for function parameters,67,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/67,elasticswap,2022/01,bug;invalid;G (Gas Optimization);sponsor acknowledged
77,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,1,block timestamp,69,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/69,elasticswap,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
77,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For uint `> 0` can be replaced with ` != 0` for gas optimization,91,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/91,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Shift rather than dividing with a power of 2,92,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/92,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,Description of `_expirationTimestamp` is not exact,93,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/93,elasticswap,2022/01,bug;1 (Low Risk);disagree with severity
77,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`removeLiquidity.sol#baseTokenQtyToRemoveFromInternalAccounting` should not be cached,94,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/94,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Running front that can encourage a scam,11,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/11,elasticswap,2022/01,bug;duplicate;0 (Non-critical)
77,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,bypass FEE_ON_TRANSFER_NOT_SUPPORTED,12,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/12,elasticswap,2022/01,bug;duplicate;1 (Low Risk)
77,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Improve require,13,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/13,elasticswap,2022/01,bug;duplicate;1 (Low Risk)
77,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Fee always is zero in the first addLiquidity call,14,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/14,elasticswap,2022/01,bug;invalid;3 (High Risk);sponsor disputed
77,bobi,0x8F24B7bEe60c5421101e2e596b1008522368920F,G,Gas optimization: Use != 0 instead of > 0 for uints,142,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/142,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
77,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,G,gas saving by using not equal comparison ,95,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/95,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,G,gas saving on math library by using != operator ,96,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/96,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,G,gas optimization by using shift operator on math library,97,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/97,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,G,Shift Right instead of Dividing by 2,100,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/100,elasticswap,2022/01,bug;G (Gas Optimization);sponsor acknowledged
77,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,G,Use != 0 instead of > 0 for Unsigned Integer Comparison,98,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/98,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,G,Long Revert Strings,99,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/99,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,1,"Users can grief name and symbol for a market, DAO unable to change",110,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/110,elasticswap,2022/01,bug;0 (Non-critical);sponsor confirmed
77,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,3,"Attacker can grief initial pool by providing 1 baseToken, 1 quoteToken, and manually transferring 1 baseToken",118,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/118,elasticswap,2022/01,bug;duplicate;2 (Med Risk);disagree with severity
77,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,No Transfer Ownership Pattern,73,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/73,elasticswap,2022/01,bug;duplicate;0 (Non-critical)
77,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Exchange assumes quoteToken is WETH or a stable coin,9,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/9,elasticswap,2022/01,bug;invalid;1 (Low Risk);disagree with severity
77,ckksec,0x961D63F796Aa1fb2218fa8B5d9c06d3354773Ccd,1,Users can pollute pair details,49,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/49,elasticswap,2022/01,bug;duplicate;0 (Non-critical)
77,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Fee-on-transfer rejection can be bypassed,104,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/104,elasticswap,2022/01,bug;duplicate;1 (Low Risk)
77,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`Factory.createNewExchange` can be frontrun with stupid names,105,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/105,elasticswap,2022/01,bug;duplicate;0 (Non-critical);sponsor acknowledged
77,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas saving,117,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/117,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
77,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,factory can have duplicates,101,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/101,elasticswap,2022/01,bug;duplicate;0 (Non-critical)
77,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,tokens with fee on transfer can still be added,102,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/102,elasticswap,2022/01,bug;duplicate;1 (Low Risk)
77,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,pairs names can be misleading/weird,103,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/103,elasticswap,2022/01,bug;duplicate;0 (Non-critical)
77,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,first liquidity provider can drain others,68,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/68,elasticswap,2022/01,bug;duplicate;2 (Med Risk);sponsor acknowledged
77,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,swap might fail unexpectedly,71,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/71,elasticswap,2022/01,bug;duplicate;1 (Low Risk)
77,defsec,securitytestfed4@protonmail.com,1,Create Exchange Function Is Missing Access Control,143,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/143,elasticswap,2022/01,bug;duplicate;0 (Non-critical);disagree with severity
77,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,`> 0 can be replaced with != 0 for gas optimization`,42,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/42,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Revert String Size Optimization,43,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/43,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,External call can be done earlier to save gas,56,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/56,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing zero-address check in constructor,57,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/57,elasticswap,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
77,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Adding unchecked directive can save gas,58,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/58,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,addLiquidity and removeLiquidity Timestamp Do Not Have Minimum Time Interval Defnition,64,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/64,elasticswap,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
77,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,transferOwnership should be two step process,65,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/65,elasticswap,2022/01,bug;duplicate;0 (Non-critical)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"Gas: ""constants"" expressions are expressions, not constants.",16,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/16,elasticswap,2022/01,bug;invalid;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `> 0` is less efficient than `!= 0` for unsigned integers,17,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/17,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Reduce the size of error messages (Long revert Strings),18,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/18,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Consider making some constants as non-public to save gas,19,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/19,elasticswap,2022/01,bug;invalid;G (Gas Optimization);sponsor confirmed
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Unnecessary checked arithmetic when no overflow/underflow possible,21,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/21,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Unnecessary return statements,22,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/22,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Internal function can be private if the contract is not herited,23,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/23,elasticswap,2022/01,bug;invalid;G (Gas Optimization);sponsor confirmed
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Use Custom Errors instead of Revert Strings to save Gas,24,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/24,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Use `calldata` instead of `memory` for external functions where the function argument is read-only.,25,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/25,elasticswap,2022/01,bug;duplicate;invalid;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `ExchangeFactory.feeAddress()` should be declared external,26,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/26,elasticswap,2022/01,bug;0 (Non-critical);sponsor confirmed
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Missing address(0) checks on immutable addresses in `Exchange.sol:constructor()`,27,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/27,elasticswap,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Conditional flow optimization in `Exchange.sol:removeLiquidity()`,28,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/28,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `MathLib.sol:calculateAddBaseTokenLiquidityQuantities()`: `>=` is cheaper than `>`,29,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/29,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `MathLib.sol:calculateAddBaseTokenLiquidityQuantities()` : `>=` is cheaper than `>`,30,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/30,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `MathLib.sol:calculateAddQuoteTokenLiquidityQuantities()`: `>=` is cheaper than `>`,31,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/31,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Unnecessary checked arithmetic when no overflow/underflow possible (2),32,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/32,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Reorder require statements `Exchange.sol:removeLiquidity()` to save gas on revert,33,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/33,elasticswap,2022/01,bug;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Reorder require statements `MathLib.sol:calculateAddLiquidityQuantities()` to save gas on revert,34,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/34,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `MathLib.sol` is importing `Exchange.sol`,35,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/35,elasticswap,2022/01,bug;0 (Non-critical);sponsor disputed
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `Exchange.sol` is importing `IERC20.sol`,36,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/36,elasticswap,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Exchange.sol:removeLiquidity()`: `this.totalSupply()` should get cached earlier,38,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/38,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G, Gas in `Exchange.sol:removeLiquidity()`: SLOAD minimization on `internalBalances`,40,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/40,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Mark `ExchangeFactory.sol:setFeeAddress()` as payable,41,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/41,elasticswap,2022/01,bug;G (Gas Optimization);sponsor acknowledged
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,"`MathLib.sol:wDiv(uint256 a, uint256 b)` should check that `b != 0`",44,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/44,elasticswap,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,"`MathLib.sol:roundToNearest(uint256 a, uint256 n)` should check that `n != 0`",45,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/45,elasticswap,2022/01,bug;invalid;1 (Low Risk);disagree with severity
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Add a timelock to `ExchangeFactory.sol:setFeeAddress()` (function that sets a key variable),46,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/46,elasticswap,2022/01,bug;invalid;2 (Med Risk);disagree with severity
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`MathLib.sol:calculateQtyToReturnAfterFees()`: divide by 0 check,47,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/47,elasticswap,2022/01,bug;invalid;1 (Low Risk);disagree with severity
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `MathLib.sol:calculateQtyToReturnAfterFees()`: Avoid expensive calculation by checking if `_tokenASwapQty == 0 || _tokenBReserveQty == 0`,48,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/48,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `MathLib.sol:calculateAddQuoteTokenLiquidityQuantities()`: SLOADs minimization,59,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/59,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `MathLib.sol:calculateAddLiquidityQuantities()`: SLOADs minimization,60,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/60,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `MathLib.sol:calculateAddTokenPairLiquidityQuantities()`: SLOADs minimization,61,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/61,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `MathLib.sol:calculateBaseTokenQty()`: SLOADs minimization,62,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/62,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `MathLib.sol:calculateQuoteTokenQty()`: SLOADs minimization,63,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/63,elasticswap,2022/01,bug;G (Gas Optimization)
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`ExchangeFactory.sol`'s `transferOwnership` should be a two-step process,81,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/81,elasticswap,2022/01,bug;0 (Non-critical);sponsor acknowledged
77,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Shift Right instead of Dividing by 2,89,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/89,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,egjlmn1,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,1,anyone can create an exchange can be a problem,70,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/70,elasticswap,2022/01,bug;duplicate;0 (Non-critical)
77,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: `> 0` is less efficient than `!= 0` for uint in require condition,161,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/161,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use deterministic contract address,163,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/163,elasticswap,2022/01,bug;G (Gas Optimization);sponsor acknowledged
77,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unchecked for safe math,164,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/164,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
77,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Duplicated checks,165,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/165,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
77,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,Inconsistent sanity check  ,166,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/166,elasticswap,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
77,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: float multiplication optimization,167,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/167,elasticswap,2022/01,bug;G (Gas Optimization);sponsor acknowledged
77,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Revert when K >= 2^256,172,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/172,elasticswap,2022/01,bug;1 (Low Risk);sponsor disputed
77,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Attacker can collect all positive rebase from the poll,180,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/180,elasticswap,2022/01,bug;invalid;3 (High Risk);sponsor disputed
77,haku,0xcC84F898DeC4169239A5b64d038DefC6813b7d4F,G,constant variables should not be public,135,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/135,elasticswap,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
77,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,2,Fee-on-transfer check can be avoided,119,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/119,elasticswap,2022/01,bug;duplicate;1 (Low Risk);disagree with severity
77,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,2,Should check for fee-on-transfer in quote token as well,125,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/125,elasticswap,2022/01,bug;duplicate;invalid
77,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,2,calculateBaseTokenQty will revert if the exact amount of desired tokens is returned,127,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/127,elasticswap,2022/01,bug;duplicate;1 (Low Risk);disagree with severity
77,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,2,calculateQuoteTokenQty will revert if the exact amount of desired tokens is used,128,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/128,elasticswap,2022/01,bug;duplicate;1 (Low Risk);disagree with severity
77,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Name and symbol of a new liquidity pool ERC20 aren't checked,106,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/106,elasticswap,2022/01,bug;duplicate;0 (Non-critical);sponsor confirmed
77,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Math base functions can be made internal,107,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/107,elasticswap,2022/01,bug;0 (Non-critical);sponsor acknowledged
77,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,LP inflation attack is possible as pools can be created with zero liquidity ,108,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/108,elasticswap,2022/01,bug;duplicate;2 (Med Risk);disagree with severity
77,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,User facing Exchange and ExchangeFactory miss emergency lever,109,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/109,elasticswap,2022/01,bug;duplicate;0 (Non-critical)
77,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Both quote and base tokens should be tested to have no fee on transfer on pool creation,132,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/132,elasticswap,2022/01,bug;duplicate;invalid;sponsor disputed
77,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Leftover tokens will be stuck in the contract with no ways to recover,136,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/136,elasticswap,2022/01,bug;0 (Non-critical);sponsor disputed
77,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,swapBaseTokenForQuoteToken and swapQuoteTokenForBaseToken do not check output quantities to be achievable,160,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/160,elasticswap,2022/01,bug;duplicate;0 (Non-critical);sponsor acknowledged
77,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,Remove liquidity LP token quantity and address arguments aren’t checked,168,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/168,elasticswap,2022/01,bug;duplicate;0 (Non-critical);disagree with severity
77,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,Exchange will become inoperable if internalBalances' quoteTokenReserveQty and K reach zero,179,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/179,elasticswap,2022/01,bug;invalid;3 (High Risk);disagree with severity;sponsor disputed
77,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,No check that _baseToken or _quoteToken address is not address(this),10,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/10,elasticswap,2022/01,bug;invalid;2 (Med Risk);disagree with severity;sponsor disputed
77,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Inclusive check,129,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/129,elasticswap,2022/01,bug;duplicate;1 (Low Risk);sponsor confirmed
77,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Long Revert Strings,130,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/130,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
77,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,> 0 can be replaced with != 0 for gas optimisation,131,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/131,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
77,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Cache  state variables ,133,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/133,elasticswap,2022/01,bug;invalid;G (Gas Optimization);sponsor confirmed
77,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,10 ** 18 can be changed to 1e18 ,134,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/134,elasticswap,2022/01,bug;0 (Non-critical)
77,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Long Revert Strings,72,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/72,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,> 0 can be replaced with != 0 for gas optimisation,74,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/74,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Adding unchecked directive can save gas ,75,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/75,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Caching variables,76,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/76,elasticswap,2022/01,bug;invalid;G (Gas Optimization);sponsor confirmed
77,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Variable is set on initialization should be immutable,78,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/78,elasticswap,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
77,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Inclusive check,88,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/88,elasticswap,2022/01,bug;duplicate;1 (Low Risk)
77,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Remove No Use Case Variable isValidExchangeAddress to Save Gas,82,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/82,elasticswap,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
77,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Long Revert Strings are Waste of Gas,83,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/83,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,createNewExchange() Possible to Add Elastic Token as Quote Token Due to No Validation,84,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/84,elasticswap,2022/01,bug;0 (Non-critical);sponsor disputed
77,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Use != 0 instead of > 0 to Save Gas,85,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/85,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,calculateQuoteTokenQty() Does Not Check Rebase Event May Cause MisPricing,86,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/86,elasticswap,2022/01,bug;invalid;3 (High Risk);sponsor disputed
77,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,removeLiquidity() _tokenRecipient Lack of Zero Address Check May Cause User Lose Fund Permanently,87,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/87,elasticswap,2022/01,bug;1 (Low Risk);disagree with severity
77,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,inlining a function to save gas,169,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/169,elasticswap,2022/01,bug;G (Gas Optimization);sponsor acknowledged
77,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,saving gas by calling a function once instead of calling it twice,170,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/170,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
77,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,saving gas by not returning the variables that was declared to be returned,171,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/171,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,using unchecked to save gas,90,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/90,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,p4st13r4,0x69e8A5b8e7EDF49AE726BC148FEe3c6A1BAEF31c,G,`MathLib` changes can optimize gas usage for `addLiquidity` and `removeLiquidity` methods,39,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/39,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Enforce FEE_ON_TRANSFER_NOT_SUPPORTED ,174,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/174,elasticswap,2022/01,bug;duplicate;1 (Low Risk);disagree with severity
77,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Inclusive conditions,175,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/175,elasticswap,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
77,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,quoteTokenQtyToReturn = internalBalances.quoteTokenReserveQty,176,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/176,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unchecked maths,177,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/177,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Repeated calls,178,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/178,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,using modifier instead of function can save gas,77,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/77,elasticswap,2022/01,bug;G (Gas Optimization);sponsor disputed
77,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,caching struct in memory cost more gas,79,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/79,elasticswap,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
77,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,&& operator on require can use more gas,80,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/80,elasticswap,2022/01,bug;invalid;G (Gas Optimization);sponsor acknowledged
77,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Constructor unused parameters,2,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/2,elasticswap,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
77,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Named return issue,3,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/3,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified function inputs of public / external functions,4,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/4,elasticswap,2022/01,bug;invalid;1 (Low Risk);disagree with severity
77,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use != 0 instead of > 0,5,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/5,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,6,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/6,elasticswap,2022/01,bug;invalid;G (Gas Optimization)
77,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,7,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/7,elasticswap,2022/01,bug;invalid;G (Gas Optimization);sponsor confirmed
77,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Short the following require messages,8,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/8,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,`Exchange.removeLiquidity()` call to `totalSupply()` can be cached,137,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/137,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
77,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Use `!= 0` instead of `> 0` when working with uints since it's cheaper,50,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/50,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Don't force the user to provide a minimum value in `Exchange.sol`,51,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/51,elasticswap,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
77,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,parameters are validated twice which uses up gas for no reason,52,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/52,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
77,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,1,quote token can have fees on transfer,53,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/53,elasticswap,2022/01,bug;duplicate;invalid
77,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,`Exchange.removeLiquidity()` repeatedly reads a state variable instead of caching it.,54,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/54,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,`internalBalance` state variable is read and written multiple times within a single transaction,55,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/55,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,3,Base token properties not verified,111,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/111,elasticswap,2022/01,bug;duplicate;0 (Non-critical);disagree with severity
77,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,3,calculateLiquidityTokenFees returns zero fee,112,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/112,elasticswap,2022/01,bug;invalid;3 (High Risk);sponsor disputed
77,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,Two pairs can have the same tokens,113,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/113,elasticswap,2022/01,bug;duplicate;0 (Non-critical);disagree with severity
77,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Comment missing function parameter,114,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/114,elasticswap,2022/01,bug;0 (Non-critical);sponsor confirmed
77,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Remove duplicate function call,115,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/115,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
77,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Revert string > 32 bytes,116,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/116,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
77,solgryn,0x2AD67e56D4Bbe60F042A7b288f2A1CEdD7708493,G,"""> 0"" is less efficient than ""!= 0"" for unsigned integers",37,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/37,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,2,Local variables are not initialized,15,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/15,elasticswap,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
77,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,1,Use of Similar variable names,20,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/20,elasticswap,2022/01,bug;0 (Non-critical);disagree with severity
77,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,G,Custom Errors,159,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/159,elasticswap,2022/01,bug;G (Gas Optimization);sponsor acknowledged
77,static,0x2e847AaE43C2d08BCE43195dee62Ab7cb63c7451,2,Possible Re-entrancy in _sendSherRewardsToOwner,1,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/1,elasticswap,2022/01,bug;invalid
77,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,less gas using unchecked,162,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/162,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
77,UncleGrandpa925,0x171ea6acDdA2Cb411E4763d71e91b10d96B64f81,2,Pools may be created with weird names,138,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/138,elasticswap,2022/01,bug;duplicate;0 (Non-critical);disagree with severity;sponsor acknowledged
77,UncleGrandpa925,0x171ea6acDdA2Cb411E4763d71e91b10d96B64f81,1,Lack of feeOnTransfer check for quoteTokens,139,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/139,elasticswap,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
77,UncleGrandpa925,0x171ea6acDdA2Cb411E4763d71e91b10d96B64f81,2,The amount of tokens received by the pool might be less than expected for feeOnTransfer tokens,140,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/140,elasticswap,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
77,UncleGrandpa925,0x171ea6acDdA2Cb411E4763d71e91b10d96B64f81,G,Making the MathLib internal,141,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/141,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"[WP-H0] In the case of Single Asset Entry, new liquidity providers will suffer fund loss due to wrong formula of ΔRo",144,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/144,elasticswap,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
77,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"[WP-H1] The value of LP token can be manipulated by the first minister, which allows the attacker to dilute future liquidity providers' shares",145,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/145,elasticswap,2022/01,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
77,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H2] Transferring `quoteToken` to the exchange pool contract will cause future liquidity providers to lose funds,146,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/146,elasticswap,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
77,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Simplify `MathLib#sqrt()` can save gas,147,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/147,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"""> 0"" is less efficient than ""!= 0"" for unsigned integers",148,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/148,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
77,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,149,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/149,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
77,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,150,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/150,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
77,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Redundant `return` for named returns,151,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/151,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`Exchange.sol#swap*TokenFor*Token()` Redundant input validation of `*TokenQty`,152,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/152,elasticswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
77,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,"Incorrect implementation of `_quoteTokenQtyMin`, `_baseTokenQtyMin`",153,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/153,elasticswap,2022/01,bug;1 (Low Risk);resolved;sponsor disputed
77,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unnecessary storage parameter can make the code simpler and save gas,154,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/154,elasticswap,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
77,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G, Outdated versions of OpenZeppelin library,155,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/155,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache and read storage variables from the stack can save gas,156,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/156,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unused code can save gas,157,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/157,elasticswap,2022/01,bug;G (Gas Optimization);sponsor acknowledged
77,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Initialize to default state is redundant,158,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/158,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,G,Redundant code,173,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/173,elasticswap,2022/01,bug;G (Gas Optimization);sponsor confirmed
77,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Assignment Of Variables To Default ,120,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/120,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Save Gas With The Unchecked Keyword,121,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/121,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Redundant Explicit Returns,122,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/122,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
77,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,function setFeeAddress can be made more efficient,123,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/123,elasticswap,2022/01,bug;invalid;G (Gas Optimization)
77,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Exchange.sol is not Pausable,124,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/124,elasticswap,2022/01,bug;0 (Non-critical);sponsor acknowledged
77,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Long revert strings,126,https://github.com/code-423n4/2022-01-elasticswap-findings/issues/126,elasticswap,2022/01,bug;duplicate;G (Gas Optimization)
71,0v3rf10w,0x765C91997511d6BAa28862a5dC5d5Ad651B106Ea,G,Gas Optimizations,362,https://github.com/code-423n4/2022-01-insure-findings/issues/362,insure,2022/01,bug;G (Gas Optimization)
71,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Replace + 1 with preincrement to save gas,254,https://github.com/code-423n4/2022-01-insure-findings/issues/254,insure,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
71,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,== true has no effect and waste gas,255,https://github.com/code-423n4/2022-01-insure-findings/issues/255,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Use negate(!) rather than == false,256,https://github.com/code-423n4/2022-01-insure-findings/issues/256,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For uint `> 0` can be replaced with ` != 0` for gas optimization,257,https://github.com/code-423n4/2022-01-insure-findings/issues/257,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Loops can be implemented more efficiently,258,https://github.com/code-423n4/2022-01-insure-findings/issues/258,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving with boolean optimization,115,https://github.com/code-423n4/2022-01-insure-findings/issues/115,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas optimization using inmutable,116,https://github.com/code-423n4/2022-01-insure-findings/issues/116,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving caching the value,118,https://github.com/code-423n4/2022-01-insure-findings/issues/118,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving using immutable in Factory,119,https://github.com/code-423n4/2022-01-insure-findings/issues/119,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Lack of inputs in Factory,120,https://github.com/code-423n4/2022-01-insure-findings/issues/120,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Signature replay,184,https://github.com/code-423n4/2022-01-insure-findings/issues/184,insure,2022/01,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
71,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,G,Replacing assert for require can save gas,105,https://github.com/code-423n4/2022-01-insure-findings/issues/105,insure,2022/01,bug;duplicate;1 (Low Risk)
71,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,G,Replacing == false to !condition and == true to condition is cheaper gas-wise,106,https://github.com/code-423n4/2022-01-insure-findings/issues/106,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,G,Moving Variable Declarations Before Error Checks Can Save Gas on Failure,170,https://github.com/code-423n4/2022-01-insure-findings/issues/170,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,G,Grouping Repeated Logic Into a Modifier To Save on Deployment Costs,172,https://github.com/code-423n4/2022-01-insure-findings/issues/172,insure,2022/01,bug;G (Gas Optimization);sponsor acknowledged
71,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,1,Edge case in withdrawValue may lead to failed transactions,174,https://github.com/code-423n4/2022-01-insure-findings/issues/174,insure,2022/01,bug;1 (Low Risk);sponsor acknowledged
71,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,1,Incorrect Natspec can lead to errors,176,https://github.com/code-423n4/2022-01-insure-findings/issues/176,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,G,Shorten Error Messages to Save Gas,87,https://github.com/code-423n4/2022-01-insure-findings/issues/87,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,G,!=0 is more efficient than >0 for uints,88,https://github.com/code-423n4/2022-01-insure-findings/issues/88,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,1,Withdraw is not really updating the request amount in CDSTemplate,95,https://github.com/code-423n4/2022-01-insure-findings/issues/95,insure,2022/01,bug;duplicate;1 (Low Risk)
71,bugwriter001,0x71e6B570A4CE5ab1AcE7BDF3Bb1E642955cbdacB,0,"too much centralization in the vault, the vault owner can withdraw all the value in the vault",65,https://github.com/code-423n4/2022-01-insure-findings/issues/65,insure,2022/01,bug;0 (Non-critical);sponsor acknowledged
71,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,1,Owner can call `applyCover` multiple times in `PoolTemplate.sol`,160,https://github.com/code-423n4/2022-01-insure-findings/issues/160,insure,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
71,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,1,Owner can withdraw all ERC20 tokens using withdrawRedundant,45,https://github.com/code-423n4/2022-01-insure-findings/issues/45,insure,2022/01,bug;duplicate;3 (High Risk)
71,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,1,Deprecated safeApprove used in Strategy contracts,49,https://github.com/code-423n4/2022-01-insure-findings/issues/49,insure,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
71,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,1,"PoolTemplate constructor sets initialized to true, breaking initialize function",93,https://github.com/code-423n4/2022-01-insure-findings/issues/93,insure,2022/01,bug;duplicate;0 (Non-critical)
71,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,1,"Uncontrolled call to controller, which can be the zero address",94,https://github.com/code-423n4/2022-01-insure-findings/issues/94,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,The fund function of the CDSTemplate contract does not match the description,161,https://github.com/code-423n4/2022-01-insure-findings/issues/161,insure,2022/01,bug;1 (Low Risk);disagree with severity;resolved;sponsor confirmed
71,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Parameters.sol lacks input validation,44,https://github.com/code-423n4/2022-01-insure-findings/issues/44,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,The initialize function does not work,46,https://github.com/code-423n4/2022-01-insure-findings/issues/46,insure,2022/01,bug;duplicate;0 (Non-critical);sponsor disputed
71,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,FRONT-RUNNABLE INITIALIZERS,92,https://github.com/code-423n4/2022-01-insure-findings/issues/92,insure,2022/01,bug;duplicate;0 (Non-critical)
71,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,withdrawal request amount not reduced,245,https://github.com/code-423n4/2022-01-insure-findings/issues/245,insure,2022/01,bug;duplicate;1 (Low Risk)
71,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Can create market without some conditions,246,https://github.com/code-423n4/2022-01-insure-findings/issues/246,insure,2022/01,bug;1 (Low Risk);sponsor acknowledged
71,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Future owner is not cleared,247,https://github.com/code-423n4/2022-01-insure-findings/issues/247,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Lower slack can be higher than upper slack,248,https://github.com/code-423n4/2022-01-insure-findings/issues/248,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed;sponsor disputed
71,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Premium payments can be timed,249,https://github.com/code-423n4/2022-01-insure-findings/issues/249,insure,2022/01,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
71,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Initial pool deposit can be stolen,250,https://github.com/code-423n4/2022-01-insure-findings/issues/250,insure,2022/01,bug;3 (High Risk);sponsor confirmed
71,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Vaults don't work with fee-on transfer tokens,251,https://github.com/code-423n4/2022-01-insure-findings/issues/251,insure,2022/01,bug;duplicate;2 (Med Risk)
71,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,backdoor in `withdrawRedundant`,252,https://github.com/code-423n4/2022-01-insure-findings/issues/252,insure,2022/01,bug;3 (High Risk);sponsor confirmed
71,csanuragjain,0xd295584135829d89427674b72560222b06e08a15,G,Gas savings,223,https://github.com/code-423n4/2022-01-insure-findings/issues/223,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,wring distribution of debts,180,https://github.com/code-423n4/2022-01-insure-findings/issues/180,insure,2022/01,bug;duplicate;3 (High Risk)
71,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,anyone can get money from an incident without paying beforehand,183,https://github.com/code-423n4/2022-01-insure-findings/issues/183,insure,2022/01,bug;0 (Non-critical);sponsor disputed
71,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,iteration over unbounded array,185,https://github.com/code-423n4/2022-01-insure-findings/issues/185,insure,2022/01,bug;duplicate;2 (Med Risk);sponsor disputed
71,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,the first depositor to an index can drain all users,260,https://github.com/code-423n4/2022-01-insure-findings/issues/260,insure,2022/01,bug;duplicate;3 (High Risk)
71,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,the first depositor to a pool can drain all users,263,https://github.com/code-423n4/2022-01-insure-findings/issues/263,insure,2022/01,bug;3 (High Risk);disagree with severity;sponsor acknowledged
71,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,pool can't be initialized,48,https://github.com/code-423n4/2022-01-insure-findings/issues/48,insure,2022/01,bug;0 (Non-critical);sponsor disputed
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Templates can not be initiliazed due to constructor is set to initiliazed true,100,https://github.com/code-423n4/2022-01-insure-findings/issues/100,insure,2022/01,bug;duplicate;0 (Non-critical)
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Front-runnable Initializers,101,https://github.com/code-423n4/2022-01-insure-findings/issues/101,insure,2022/01,bug;duplicate;invalid;1 (Low Risk)
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,109,https://github.com/code-423n4/2022-01-insure-findings/issues/109,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing validation of address argument could indefinitely lock Registry contract,110,https://github.com/code-423n4/2022-01-insure-findings/issues/110,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant Import,112,https://github.com/code-423n4/2022-01-insure-findings/issues/112,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,`> 0 can be replaced with != 0 for gas optimization`,143,https://github.com/code-423n4/2022-01-insure-findings/issues/143,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Cache array length in for loops can save gas,144,https://github.com/code-423n4/2022-01-insure-findings/issues/144,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use `calldata` instead of `memory` for function parameters,145,https://github.com/code-423n4/2022-01-insure-findings/issues/145,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Adding unchecked directive can save gas,146,https://github.com/code-423n4/2022-01-insure-findings/issues/146,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Changing function visibility from public to external can save gas,147,https://github.com/code-423n4/2022-01-insure-findings/issues/147,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Revert String Size Optimization,225,https://github.com/code-423n4/2022-01-insure-findings/issues/225,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Allowance checks not correctly implemented,226,https://github.com/code-423n4/2022-01-insure-findings/issues/226,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Implement check effect interaction to align with best practices,227,https://github.com/code-423n4/2022-01-insure-findings/issues/227,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Improper Upper Bound Definition on the Fee,229,https://github.com/code-423n4/2022-01-insure-findings/issues/229,insure,2022/01,bug;1 (Low Risk);resolved;sponsor acknowledged;sponsor confirmed
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,uint8 is cheaper than uint128,316,https://github.com/code-423n4/2022-01-insure-findings/issues/316,insure,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Multiple has ==true comparison in require statement,318,https://github.com/code-423n4/2022-01-insure-findings/issues/318,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant Sub Function,322,https://github.com/code-423n4/2022-01-insure-findings/issues/322,insure,2022/01,bug;duplicate;G (Gas Optimization);sponsor disputed
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Immutable variables,328,https://github.com/code-423n4/2022-01-insure-findings/issues/328,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use of assert() instead of require(),329,https://github.com/code-423n4/2022-01-insure-findings/issues/329,insure,2022/01,bug;duplicate;1 (Low Risk)
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Remove No Effect/Do Nothing Functions to Save Gas,336,https://github.com/code-423n4/2022-01-insure-findings/issues/336,insure,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Pause check missing on the several functions (PoolTemplate),339,https://github.com/code-423n4/2022-01-insure-findings/issues/339,insure,2022/01,bug;1 (Low Risk);sponsor acknowledged
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use of _msgSender(),97,https://github.com/code-423n4/2022-01-insure-findings/issues/97,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,++i is more gas efficient than i++ in loops forwarding,98,https://github.com/code-423n4/2022-01-insure-findings/issues/98,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,uint is always >= 0,99,https://github.com/code-423n4/2022-01-insure-findings/issues/99,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `++i` costs less gas compared to `i++`,28,https://github.com/code-423n4/2022-01-insure-findings/issues/28,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Optimize Conditional Statements in `CDSTemplate.sol:deposit()`,285,https://github.com/code-423n4/2022-01-insure-findings/issues/285,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Inconsistent divide by 0 checks for `totalSupply()`,287,https://github.com/code-423n4/2022-01-insure-findings/issues/287,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Spec error on function: `Factory:approveTemplate`,296,https://github.com/code-423n4/2022-01-insure-findings/issues/296,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Spec error on function: `Factory:setCondition` (difference with code comment),297,https://github.com/code-423n4/2022-01-insure-findings/issues/297,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`Factory:approveTemplate` could make 1 SSTORE instead of 3,298,https://github.com/code-423n4/2022-01-insure-findings/issues/298,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Consider making some constants as non-public to save gas,30,https://github.com/code-423n4/2022-01-insure-findings/issues/30,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Optimize Conditional Statements in `IndexTemplate.sol:deposit()`,300,https://github.com/code-423n4/2022-01-insure-findings/issues/300,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Cache `totalLiquidity()` in `IndexTemplate:leverage()`,301,https://github.com/code-423n4/2022-01-insure-findings/issues/301,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Cache `totalSupply()` in `IndexTemplate:rate()`,305,https://github.com/code-423n4/2022-01-insure-findings/issues/305,insure,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`targetLev` can be set to 0 in `IndexTemplate:setLeverage`,311,https://github.com/code-423n4/2022-01-insure-findings/issues/311,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Unbounded iteration over all pools,313,https://github.com/code-423n4/2022-01-insure-findings/issues/313,insure,2022/01,bug;duplicate;2 (Med Risk);sponsor disputed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Add a timelock to `Parameters:setFeeRate`,315,https://github.com/code-423n4/2022-01-insure-findings/issues/315,insure,2022/01,bug;1 (Low Risk);sponsor acknowledged
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Cache `_fee[_target]` in `Parameters.sol:getFeeRate()`,320,https://github.com/code-423n4/2022-01-insure-findings/issues/320,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Cache `_upperSlack[_target]` in `Parameters.sol:getUpperSlack()`,321,https://github.com/code-423n4/2022-01-insure-findings/issues/321,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Cache `_lowerSlack[_target]` in `Parameters.sol:getLowerSlack()`,323,https://github.com/code-423n4/2022-01-insure-findings/issues/323,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Cache `_lockup[_target]` in `Parameters.sol:getLockup()`,324,https://github.com/code-423n4/2022-01-insure-findings/issues/324,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Cache `_withdawable[_target]` in `Parameters.sol:getWithdrawable()`,325,https://github.com/code-423n4/2022-01-insure-findings/issues/325,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Cache `_min[_target]` in `Parameters.sol:getMinDate()`,326,https://github.com/code-423n4/2022-01-insure-findings/issues/326,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Cache `_maxList[_target]` in `Parameters.sol:getMaxList()`,327,https://github.com/code-423n4/2022-01-insure-findings/issues/327,insure,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Reduce the size of error messages (Long revert Strings),33,https://github.com/code-423n4/2022-01-insure-findings/issues/33,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Missing divide by 0 check on `_totalLiquidity`,330,https://github.com/code-423n4/2022-01-insure-findings/issues/330,insure,2022/01,bug;duplicate;1 (Low Risk);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Missing divide by 0 check on `_pool` (`valueAll()`),331,https://github.com/code-423n4/2022-01-insure-findings/issues/331,insure,2022/01,bug;duplicate;1 (Low Risk);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Accounting for non-standard ERC20 fees,338,https://github.com/code-423n4/2022-01-insure-findings/issues/338,insure,2022/01,bug;duplicate;2 (Med Risk)
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Inconsistent divide by 0 checks for `totalAttributions`,342,https://github.com/code-423n4/2022-01-insure-findings/issues/342,insure,2022/01,bug;duplicate;1 (Low Risk);sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Cache `attributions[_target]` in `Vault.sol:underlyingValue()`,343,https://github.com/code-423n4/2022-01-insure-findings/issues/343,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Avoid expensive calculation by checking if `valueAll() == 0`,344,https://github.com/code-423n4/2022-01-insure-findings/issues/344,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `PoolTemplate:initialize()::_conditions` should be a fixed array of size 2,345,https://github.com/code-423n4/2022-01-insure-findings/issues/345,insure,2022/01,bug;G (Gas Optimization);sponsor acknowledged
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `PoolTemplate:initialize()::_references` should be a fixed array of size 5,346,https://github.com/code-423n4/2022-01-insure-findings/issues/346,insure,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`PoolTemplate:redeem()::_insurance`'s data location should be `memory` ,348,https://github.com/code-423n4/2022-01-insure-findings/issues/348,insure,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `incident.payoutNumerator` is used only once. It shouldn't be stored in a variable.,349,https://github.com/code-423n4/2022-01-insure-findings/issues/349,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Use Custom Errors instead of Revert Strings to save Gas,35,https://github.com/code-423n4/2022-01-insure-findings/issues/35,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `incident.payoutDenominator` is used only once. It shouldn't be stored in a variable.,350,https://github.com/code-423n4/2022-01-insure-findings/issues/350,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Unbounded iteration over all indexes,351,https://github.com/code-423n4/2022-01-insure-findings/issues/351,insure,2022/01,bug;duplicate;2 (Med Risk)
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Unbounded iteration over all indexes (2),352,https://github.com/code-423n4/2022-01-insure-findings/issues/352,insure,2022/01,bug;2 (Med Risk);sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Optimize Conditional Statements in `PoolTemplate.sol:worth()`,355,https://github.com/code-423n4/2022-01-insure-findings/issues/355,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Inconsistent divide by 0 checks for `totalLiquidity()`,356,https://github.com/code-423n4/2022-01-insure-findings/issues/356,insure,2022/01,bug;duplicate;1 (Low Risk);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Missing divide by 0 checks for `_liquidity` (` == totalLiquidity()`),357,https://github.com/code-423n4/2022-01-insure-findings/issues/357,insure,2022/01,bug;duplicate;1 (Low Risk);sponsor disputed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Cache `totalSupply()` in `PoolTemplate.sol:rate()`,358,https://github.com/code-423n4/2022-01-insure-findings/issues/358,insure,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `> 0` is less efficient than `!= 0` for unsigned integers,36,https://github.com/code-423n4/2022-01-insure-findings/issues/36,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Cache `lockedAmount` in `PoolTemplate.sol:utilizationRate()`,360,https://github.com/code-423n4/2022-01-insure-findings/issues/360,insure,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Avoid expensive calculation by checking if `originalLiquidity() == 0`,361,https://github.com/code-423n4/2022-01-insure-findings/issues/361,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: SafeMath is not needed when using Solidity version 0.8.*,38,https://github.com/code-423n4/2022-01-insure-findings/issues/38,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: No need to initialize variables with default values,40,https://github.com/code-423n4/2022-01-insure-findings/issues/40,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Unnecessary checked arithmetic in for-loops,42,https://github.com/code-423n4/2022-01-insure-findings/issues/42,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: An array's length should be cached to save gas in for-loops,43,https://github.com/code-423n4/2022-01-insure-findings/issues/43,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Usage of a non-native 256 bits uint as a counter in for-loops increases gas cost,62,https://github.com/code-423n4/2022-01-insure-findings/issues/62,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Unused Named Returns,63,https://github.com/code-423n4/2022-01-insure-findings/issues/63,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Use `calldata` instead of `memory` for external functions where the function argument is read-only.,64,https://github.com/code-423n4/2022-01-insure-findings/issues/64,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Unnecessary checked arithmetic when no overflow/underflow possible,66,https://github.com/code-423n4/2022-01-insure-findings/issues/66,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Public functions that should be declared external,67,https://github.com/code-423n4/2022-01-insure-findings/issues/67,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Storage variable `IndexTemplate:pendingEnd#62` is never used and should be deleted,68,https://github.com/code-423n4/2022-01-insure-findings/issues/68,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Costly operations inside a loop (`IndexTemplate._adjustAlloc()`),69,https://github.com/code-423n4/2022-01-insure-findings/issues/69,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Missing address(0) checks (1),70,https://github.com/code-423n4/2022-01-insure-findings/issues/70,insure,2022/01,bug;duplicate;1 (Low Risk);sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Missing address(0) checks (2),71,https://github.com/code-423n4/2022-01-insure-findings/issues/71,insure,2022/01,bug;duplicate;1 (Low Risk);sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Consider making variables that aren't updated outside the constructor as `immutable`,72,https://github.com/code-423n4/2022-01-insure-findings/issues/72,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Optimization in `IndexTemplate:set`,73,https://github.com/code-423n4/2022-01-insure-findings/issues/73,insure,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,0,Usage of assert() instead of require(),77,https://github.com/code-423n4/2022-01-insure-findings/issues/77,insure,2022/01,bug;duplicate;1 (Low Risk)
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Contracts inheriting `InsureDAOERC20` don't need to import some dependencies *again*,78,https://github.com/code-423n4/2022-01-insure-findings/issues/78,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`CDSTemplate.sol:compensate` code optimization,79,https://github.com/code-423n4/2022-01-insure-findings/issues/79,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Avoid double assignment on variable,80,https://github.com/code-423n4/2022-01-insure-findings/issues/80,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Redundant if-statement with the for-loop condition,81,https://github.com/code-423n4/2022-01-insure-findings/issues/81,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Short-circuiting in an if-statement,82,https://github.com/code-423n4/2022-01-insure-findings/issues/82,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Use `else if` to save gas and simplify code,83,https://github.com/code-423n4/2022-01-insure-findings/issues/83,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Loss of precision and increased gas cost with double assignment on a calculation  ,84,https://github.com/code-423n4/2022-01-insure-findings/issues/84,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Cache values to avoid multiple SLOAD readings,85,https://github.com/code-423n4/2022-01-insure-findings/issues/85,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`_fee` can be 100% or above,86,https://github.com/code-423n4/2022-01-insure-findings/issues/86,insure,2022/01,bug;duplicate;1 (Low Risk)
71,egjlmn1,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,2,Increasing the array size and DOS the entire system,104,https://github.com/code-423n4/2022-01-insure-findings/issues/104,insure,2022/01,bug;duplicate;2 (Med Risk);sponsor acknowledged
71,egjlmn1,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,G,Initializing loop variable,74,https://github.com/code-423n4/2022-01-insure-findings/issues/74,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,egjlmn1,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,G,unnecessary storage access in loop iteration,75,https://github.com/code-423n4/2022-01-insure-findings/issues/75,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,egjlmn1,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,G,unnecessary checked postfix arithmetics,76,https://github.com/code-423n4/2022-01-insure-findings/issues/76,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,split one require to two require can save gas,113,https://github.com/code-423n4/2022-01-insure-findings/issues/113,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,change public to external can save gas,117,https://github.com/code-423n4/2022-01-insure-findings/issues/117,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,save Insurance data directly to storage can save gas,122,https://github.com/code-423n4/2022-01-insure-findings/issues/122,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,call emit from storage is more expensive,124,https://github.com/code-423n4/2022-01-insure-findings/issues/124,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,2,`initialize` function was disable by `constructor()`,275,https://github.com/code-423n4/2022-01-insure-findings/issues/275,insure,2022/01,bug;duplicate;0 (Non-critical)
71,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,2,using memory pointer inside a function didnt change the actual amount in the storage,276,https://github.com/code-423n4/2022-01-insure-findings/issues/276,insure,2022/01,bug;duplicate;1 (Low Risk)
71,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,1,Wrong comment on fund function,284,https://github.com/code-423n4/2022-01-insure-findings/issues/284,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,3,unlock function is callable by anyone,286,https://github.com/code-423n4/2022-01-insure-findings/issues/286,insure,2022/01,bug;invalid;3 (High Risk);disagree with severity;sponsor acknowledged
71,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,3,Looping from a long list of storage can impact other people paying more gas than it used to,288,https://github.com/code-423n4/2022-01-insure-findings/issues/288,insure,2022/01,bug;duplicate;2 (Med Risk)
71,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Cache array length in for loop,294,https://github.com/code-423n4/2022-01-insure-findings/issues/294,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,`requestWithdraw` without obligation to withdraw allow underwriter to avoid payout,295,https://github.com/code-423n4/2022-01-insure-findings/issues/295,insure,2022/01,bug;2 (Med Risk);sponsor acknowledged
71,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: `> 0` is less efficient than `!= 0` for uint,299,https://github.com/code-423n4/2022-01-insure-findings/issues/299,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Variables that could be set immutable ,302,https://github.com/code-423n4/2022-01-insure-findings/issues/302,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use unchecked for safe math,317,https://github.com/code-423n4/2022-01-insure-findings/issues/317,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use external keyword instead of public for some functions,319,https://github.com/code-423n4/2022-01-insure-findings/issues/319,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,1,Inconsistency in pragma solidity version definition in InsureDAOERC20.sol,242,https://github.com/code-423n4/2022-01-insure-findings/issues/242,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,1,Input validation not done in few important functions in Parameters.sol,243,https://github.com/code-423n4/2022-01-insure-findings/issues/243,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,1,Typo for withdawable in multiple places in Parameters.sol  ,244,https://github.com/code-423n4/2022-01-insure-findings/issues/244,insure,2022/01,bug;0 (Non-critical);disagree with severity;resolved;sponsor confirmed
71,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,PoolTemplate will fail to initialize,168,https://github.com/code-423n4/2022-01-insure-findings/issues/168,insure,2022/01,bug;duplicate;0 (Non-critical)
71,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,G,InsureDAOERC20 transfer and burn token subtractions can be unchecked,187,https://github.com/code-423n4/2022-01-insure-findings/issues/187,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,PoolTemplate worth function description is incorrect,189,https://github.com/code-423n4/2022-01-insure-findings/issues/189,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,Factory.createMarket doesn't check for sucessfull new market contract creation before using it,196,https://github.com/code-423n4/2022-01-insure-findings/issues/196,insure,2022/01,bug;duplicate;1 (Low Risk);resolved;sponsor confirmed
71,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,Vault. withdrawValue will fail on subtraction if there are not enough _attributions,197,https://github.com/code-423n4/2022-01-insure-findings/issues/197,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,Factory. createMarket doesn't check if input array length is too big,198,https://github.com/code-423n4/2022-01-insure-findings/issues/198,insure,2022/01,bug;1 (Low Risk);sponsor acknowledged
71,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,Assert is used instead of require in InsureDAOERC20 and Vault,199,https://github.com/code-423n4/2022-01-insure-findings/issues/199,insure,2022/01,bug;duplicate;1 (Low Risk)
71,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,"Keeper, not controller: Vault.setKeeper and utilize descriptions are incorrect",259,https://github.com/code-423n4/2022-01-insure-findings/issues/259,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,G,PoolTemplate's withdraw and withdrawCredit amount subtractions can be unchecked,261,https://github.com/code-423n4/2022-01-insure-findings/issues/261,insure,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
71,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,G,PoolTemplate.availableBalance calls totalLiquidity twice,262,https://github.com/code-423n4/2022-01-insure-findings/issues/262,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,PoolTemplate.sol initialize() can be called by attacker during deployment ,50,https://github.com/code-423n4/2022-01-insure-findings/issues/50,insure,2022/01,bug;invalid;3 (High Risk);sponsor disputed
71,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,_depositFrom() does not  ensure that _from arg is not the contract itself ,51,https://github.com/code-423n4/2022-01-insure-findings/issues/51,insure,2022/01,bug;0 (Non-critical);sponsor disputed
71,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,IndexTemplate.sol has a constructor() and init() function,52,https://github.com/code-423n4/2022-01-insure-findings/issues/52,insure,2022/01,bug;duplicate;0 (Non-critical)
71,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,CDSTemplate.sol constructor breaks initialize() function ,53,https://github.com/code-423n4/2022-01-insure-findings/issues/53,insure,2022/01,bug;duplicate;0 (Non-critical)
71,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,PoolTemplate.sol has a constructor function that breaks the initialize() function  ,54,https://github.com/code-423n4/2022-01-insure-findings/issues/54,insure,2022/01,bug;duplicate;0 (Non-critical)
71,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,No check that _conditions and _references  arrays are the same length,55,https://github.com/code-423n4/2022-01-insure-findings/issues/55,insure,2022/01,bug;invalid;sponsor disputed
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,A more efficient for loop index proceeding,165,https://github.com/code-423n4/2022-01-insure-findings/issues/165,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Unnecessary use of _msgSender(),166,https://github.com/code-423n4/2022-01-insure-findings/issues/166,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Long Revert Strings,167,https://github.com/code-423n4/2022-01-insure-findings/issues/167,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,> 0 can be replaced with != 0 for gas optimisation,169,https://github.com/code-423n4/2022-01-insure-findings/issues/169,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Cache array length in for loops can save gas,171,https://github.com/code-423n4/2022-01-insure-findings/issues/171,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Adding unchecked directive can save gas ,173,https://github.com/code-423n4/2022-01-insure-findings/issues/173,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Adding unchecked directive can save gas ,175,https://github.com/code-423n4/2022-01-insure-findings/issues/175,insure,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,"Variable is set on initialization, doesn't change afterwards and should be immutable",177,https://github.com/code-423n4/2022-01-insure-findings/issues/177,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Caching variables,178,https://github.com/code-423n4/2022-01-insure-findings/issues/178,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Useless imports,179,https://github.com/code-423n4/2022-01-insure-findings/issues/179,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Checking non-zero value can avoid an external call to save gas,181,https://github.com/code-423n4/2022-01-insure-findings/issues/181,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Avoid use of state variables in event emissions to save gas,182,https://github.com/code-423n4/2022-01-insure-findings/issues/182,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Use safeMath  in the  solc compiler  0.8.7 ,205,https://github.com/code-423n4/2022-01-insure-findings/issues/205,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,uint128 is less efficient than uint256 in loop iterations,206,https://github.com/code-423n4/2022-01-insure-findings/issues/206,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Consider making some constants as non-public to save gas,207,https://github.com/code-423n4/2022-01-insure-findings/issues/207,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Avoiding Initialization of Loop Index if it is 0,208,https://github.com/code-423n4/2022-01-insure-findings/issues/208,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Use else if for mutually exclusive conditions,209,https://github.com/code-423n4/2022-01-insure-findings/issues/209,insure,2022/01,bug;invalid;G (Gas Optimization);resolved;sponsor confirmed
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Avoid unnecessary code execution can save gas,210,https://github.com/code-423n4/2022-01-insure-findings/issues/210,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Avoid unnecessary code execution can save gas,211,https://github.com/code-423n4/2022-01-insure-findings/issues/211,insure,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Constructor not used,240,https://github.com/code-423n4/2022-01-insure-findings/issues/240,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Out of gas.,241,https://github.com/code-423n4/2022-01-insure-findings/issues/241,insure,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
71,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Struct layout,253,https://github.com/code-423n4/2022-01-insure-findings/issues/253,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Kumpirmafyas,0x5C02c82d2aE28D4c64c7b869c97682a8372Bc275,3,Ordering importance in a struct,334,https://github.com/code-423n4/2022-01-insure-findings/issues/334,insure,2022/01,bug;help wanted;0 (Non-critical);disagree with severity;resolved;sponsor confirmed
71,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,Malicious Market Creators Can Steal Tokens From Unsuspecting Approved Reference Accounts,224,https://github.com/code-423n4/2022-01-insure-findings/issues/224,insure,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
71,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,System Debt Is Not Handled When Insurance Pools Become Insolvent,228,https://github.com/code-423n4/2022-01-insure-findings/issues/228,insure,2022/01,bug;2 (Med Risk);sponsor acknowledged
71,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`applyCover()` Does Not Enforce Index Market Lock,335,https://github.com/code-423n4/2022-01-insure-findings/issues/335,insure,2022/01,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
71,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,Insurance Pool Locking Does Not Propagate To All Markets,347,https://github.com/code-423n4/2022-01-insure-findings/issues/347,insure,2022/01,bug;1 (Low Risk);sponsor acknowledged
71,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,1,Can't initialize markets due to initialize being set to true in constructor,190,https://github.com/code-423n4/2022-01-insure-findings/issues/190,insure,2022/01,bug;duplicate;0 (Non-critical)
71,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,2,Typo in PoolTemplate unlock function results in user being able to unlock multiple times,192,https://github.com/code-423n4/2022-01-insure-findings/issues/192,insure,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
71,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Multiple boolean comparrisons,194,https://github.com/code-423n4/2022-01-insure-findings/issues/194,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,loop,0xe88cAc4e10C4D316E0d52B82dd54f26ade3f0Bb2,G,Vault variables are only set in controller and can be immutable,195,https://github.com/code-423n4/2022-01-insure-findings/issues/195,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Long Revert Strings are Waste of Gas,200,https://github.com/code-423n4/2022-01-insure-findings/issues/200,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Avoid Initialization of Loop Index If It Is 0 to Save Gas,201,https://github.com/code-423n4/2022-01-insure-findings/issues/201,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Constructor Does Not Check for Zero Addresses,202,https://github.com/code-423n4/2022-01-insure-findings/issues/202,insure,2022/01,bug;duplicate;1 (Low Risk);resolved
71,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,initialize() Will Always Fail Because initialized was Set to true When Deploy Contract,203,https://github.com/code-423n4/2022-01-insure-findings/issues/203,insure,2022/01,bug;duplicate;0 (Non-critical)
71,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,loop unrolling ,162,https://github.com/code-423n4/2022-01-insure-findings/issues/162,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,prefix incrementing instead of postfix incrementing ,163,https://github.com/code-423n4/2022-01-insure-findings/issues/163,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,prevent calculating useless boolean expressions,164,https://github.com/code-423n4/2022-01-insure-findings/issues/164,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,ospwner,0xe1D476AEa1317357ca741b439d6052fa01502105,G,Remove unnecessary if statements for gas optimization ,186,https://github.com/code-423n4/2022-01-insure-findings/issues/186,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,ospwner,0xe1D476AEa1317357ca741b439d6052fa01502105,0,Lack of input validation,191,https://github.com/code-423n4/2022-01-insure-findings/issues/191,insure,2022/01,bug;duplicate;1 (Low Risk);resolved;sponsor confirmed
71,ospwner,0xe1D476AEa1317357ca741b439d6052fa01502105,G,Require statements can be reordered to save gas. ,193,https://github.com/code-423n4/2022-01-insure-findings/issues/193,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,3,Insurance funds are never unlocked,125,https://github.com/code-423n4/2022-01-insure-findings/issues/125,insure,2022/01,bug;duplicate;3 (High Risk)
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,2,repayDebt in Vault.sol could DOS functionality for markets,126,https://github.com/code-423n4/2022-01-insure-findings/issues/126,insure,2022/01,bug;2 (Med Risk);sponsor disputed
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,2,Withdrawals in PoolTemplate.sol go through even when contract is paused,127,https://github.com/code-423n4/2022-01-insure-findings/issues/127,insure,2022/01,bug;invalid;sponsor disputed
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,1,Wrong revert string in withdraw functions,128,https://github.com/code-423n4/2022-01-insure-findings/issues/128,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,1,resume() can be called by anyone in IndexTemplate.sol,129,https://github.com/code-423n4/2022-01-insure-findings/issues/129,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,1,No-op in CDSTemplate.sol' withdraw(),130,https://github.com/code-423n4/2022-01-insure-findings/issues/130,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,1,setKeeper() can be frontrun,131,https://github.com/code-423n4/2022-01-insure-findings/issues/131,insure,2022/01,bug;invalid;sponsor disputed
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Emit an event in setKeeper(),132,https://github.com/code-423n4/2022-01-insure-findings/issues/132,insure,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,"In PoolTemplate.sol, deposit() and _depositFrom() can re-use the same code",133,https://github.com/code-423n4/2022-01-insure-findings/issues/133,insure,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Save gas in Vault.sol by caching attributions,134,https://github.com/code-423n4/2022-01-insure-findings/issues/134,insure,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Cache available() result in Vault.sol,135,https://github.com/code-423n4/2022-01-insure-findings/issues/135,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Add if/else if/else in _adjustAlloc to save gas,136,https://github.com/code-423n4/2022-01-insure-findings/issues/136,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Avoid expensive storage reads in Parameters.sol,137,https://github.com/code-423n4/2022-01-insure-findings/issues/137,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,acceptTransferOwnership() could save gas by using msg.sender,138,https://github.com/code-423n4/2022-01-insure-findings/issues/138,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,commitTransferOwnership() could save gas 1,139,https://github.com/code-423n4/2022-01-insure-findings/issues/139,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,totalAllocPoint in IndexTemplate.sol can be cached,140,https://github.com/code-423n4/2022-01-insure-findings/issues/140,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Long revert strings,141,https://github.com/code-423n4/2022-01-insure-findings/issues/141,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Save gas in requestWithdraw(),142,https://github.com/code-423n4/2022-01-insure-findings/issues/142,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Eliminate else block,303,https://github.com/code-423n4/2022-01-insure-findings/issues/303,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Repeated external calls,304,https://github.com/code-423n4/2022-01-insure-findings/issues/304,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Repeated storage reads,306,https://github.com/code-423n4/2022-01-insure-findings/issues/306,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,repayDebt optimization,307,https://github.com/code-423n4/2022-01-insure-findings/issues/307,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Repeated math operations,308,https://github.com/code-423n4/2022-01-insure-findings/issues/308,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,deposit and _depositFrom are almost similar,309,https://github.com/code-423n4/2022-01-insure-findings/issues/309,insure,2022/01,bug;G (Gas Optimization);sponsor acknowledged
71,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Insurance NFT,310,https://github.com/code-423n4/2022-01-insure-findings/issues/310,insure,2022/01,bug;0 (Non-critical);sponsor acknowledged
71,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,getLockup and getWithdrawable can change after withdrawalReq is initiated,312,https://github.com/code-423n4/2022-01-insure-findings/issues/312,insure,2022/01,bug;1 (Low Risk);sponsor acknowledged
71,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Validate _to is not empty,314,https://github.com/code-423n4/2022-01-insure-findings/issues/314,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Order of statements,332,https://github.com/code-423n4/2022-01-insure-findings/issues/332,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Owner can grief with fees,333,https://github.com/code-423n4/2022-01-insure-findings/issues/333,insure,2022/01,bug;duplicate;1 (Low Risk)
71,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Misleading comments and documentation,337,https://github.com/code-423n4/2022-01-insure-findings/issues/337,insure,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
71,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,CDS Withdrawal changes are not persisted,341,https://github.com/code-423n4/2022-01-insure-findings/issues/341,insure,2022/01,bug;duplicate;1 (Low Risk)
71,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Index compensate is 0 when totalLiquidity() is enough to cover the whole amount,354,https://github.com/code-423n4/2022-01-insure-findings/issues/354,insure,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
71,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,1,Fee-on transfer tokens not supported,96,https://github.com/code-423n4/2022-01-insure-findings/issues/96,insure,2022/01,bug;duplicate;2 (Med Risk);sponsor acknowledged
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unused imports,1,https://github.com/code-423n4/2022-01-insure-findings/issues/1,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary index init,10,https://github.com/code-423n4/2022-01-insure-findings/issues/10,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,uint8 index,11,https://github.com/code-423n4/2022-01-insure-findings/issues/11,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Caching array length can save gas,12,https://github.com/code-423n4/2022-01-insure-findings/issues/12,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Check if amount is not zero to save gas,13,https://github.com/code-423n4/2022-01-insure-findings/issues/13,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unnecessary equals boolean,14,https://github.com/code-423n4/2022-01-insure-findings/issues/14,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Require with empty message,15,https://github.com/code-423n4/2022-01-insure-findings/issues/15,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Solidity compiler versions mismatch,16,https://github.com/code-423n4/2022-01-insure-findings/issues/16,insure,2022/01,bug;duplicate;1 (Low Risk);sponsor confirmed
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Not verified function inputs of public / external functions,17,https://github.com/code-423n4/2022-01-insure-findings/issues/17,insure,2022/01,bug;duplicate;1 (Low Risk);sponsor confirmed
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Named return issue,18,https://github.com/code-423n4/2022-01-insure-findings/issues/18,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Unbounded loop on array controlled by owner can lead to DoS,19,https://github.com/code-423n4/2022-01-insure-findings/issues/19,insure,2022/01,bug;duplicate;2 (Med Risk);sponsor acknowledged
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Use bytes32 instead of string to save gas whenever possible,2,https://github.com/code-423n4/2022-01-insure-findings/issues/2,insure,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Two Steps Verification before Transferring Ownership,20,https://github.com/code-423n4/2022-01-insure-findings/issues/20,insure,2022/01,bug;1 (Low Risk);sponsor disputed
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Assert instead require to validate user inputs,21,https://github.com/code-423n4/2022-01-insure-findings/issues/21,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,1,Never used parameters,22,https://github.com/code-423n4/2022-01-insure-findings/issues/22,insure,2022/01,bug;0 (Non-critical);sponsor disputed
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,Unbounded loop on array that can only grow can lead to DoS,23,https://github.com/code-423n4/2022-01-insure-findings/issues/23,insure,2022/01,bug;duplicate;2 (Med Risk)
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,2,Check transferFrom is from msg.sender,24,https://github.com/code-423n4/2022-01-insure-findings/issues/24,insure,2022/01,bug;invalid;sponsor disputed
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,3,Unbounded loop on array can lead to DoS,25,https://github.com/code-423n4/2022-01-insure-findings/issues/25,insure,2022/01,bug;duplicate;2 (Med Risk)
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Unused state variables,3,https://github.com/code-423n4/2022-01-insure-findings/issues/3,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Short the following require messages,4,https://github.com/code-423n4/2022-01-insure-findings/issues/4,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Storage double reading. Could save SLOAD,5,https://github.com/code-423n4/2022-01-insure-findings/issues/5,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Internal functions to private,6,https://github.com/code-423n4/2022-01-insure-findings/issues/6,insure,2022/01,bug;duplicate;help wanted;G (Gas Optimization);sponsor disputed
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Public functions to external,7,https://github.com/code-423n4/2022-01-insure-findings/issues/7,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,State variables that could be set immutable,8,https://github.com/code-423n4/2022-01-insure-findings/issues/8,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,robee,0xdf8E030c3BE481be8aAd7D40F34A09524269266A,G,Prefix increments are cheaper than postfix increments,9,https://github.com/code-423n4/2022-01-insure-findings/issues/9,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Looping over dynamic array might result in DoS through the block gas limit,289,https://github.com/code-423n4/2022-01-insure-findings/issues/289,insure,2022/01,bug;duplicate;2 (Med Risk)
71,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,1,`Vault.withdrawRedundant()` allows the owner to accidentally take out the vault's whole balance,290,https://github.com/code-423n4/2022-01-insure-findings/issues/290,insure,2022/01,bug;duplicate;3 (High Risk)
71,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,If Vault contains tokens that charge a fee on transfer the internally kept balance will be wrong,291,https://github.com/code-423n4/2022-01-insure-findings/issues/291,insure,2022/01,bug;duplicate;2 (Med Risk);sponsor confirmed
71,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,`Factory` still has the `hardhat/console` import,292,https://github.com/code-423n4/2022-01-insure-findings/issues/292,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,For `uint` checking `!= 0` is cheaper than `> 0`,293,https://github.com/code-423n4/2022-01-insure-findings/issues/293,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,0,Unused import statement,204,https://github.com/code-423n4/2022-01-insure-findings/issues/204,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Unused state variable,148,https://github.com/code-423n4/2022-01-insure-findings/issues/148,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Unused function parameters,149,https://github.com/code-423n4/2022-01-insure-findings/issues/149,insure,2022/01,bug;duplicate;0 (Non-critical)
71,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Revert string > 32 bytes,150,https://github.com/code-423n4/2022-01-insure-findings/issues/150,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Using unchecked math saves gas,151,https://github.com/code-423n4/2022-01-insure-findings/issues/151,insure,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
71,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,Approve() should happen before transferFrom(),152,https://github.com/code-423n4/2022-01-insure-findings/issues/152,insure,2022/01,bug;duplicate;1 (Low Risk)
71,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,No slippage control in CDSTemplate.sol = frontrun or sandwich,153,https://github.com/code-423n4/2022-01-insure-findings/issues/153,insure,2022/01,bug;1 (Low Risk);sponsor disputed
71,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,No slippage control in IndexTemplate.sol = frontrun or sandwich,154,https://github.com/code-423n4/2022-01-insure-findings/issues/154,insure,2022/01,bug;duplicate;1 (Low Risk);sponsor disputed
71,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Inaccurate return value from `getCDS()` possible,155,https://github.com/code-423n4/2022-01-insure-findings/issues/155,insure,2022/01,bug;0 (Non-critical);sponsor disputed
71,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Inaccurate return value from Parameters.sol functions,156,https://github.com/code-423n4/2022-01-insure-findings/issues/156,insure,2022/01,bug;duplicate;0 (Non-critical);sponsor disputed
71,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Incorrect return value comment,157,https://github.com/code-423n4/2022-01-insure-findings/issues/157,insure,2022/01,bug;1 (Low Risk);disagree with severity;resolved;sponsor confirmed
71,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,3,Tokens can be burned with no access control,158,https://github.com/code-423n4/2022-01-insure-findings/issues/158,insure,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
71,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Remove unnecessary address cast in Vault.sol,159,https://github.com/code-423n4/2022-01-insure-findings/issues/159,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,solgryn,0xc1B412F45a9702cc401259C6e3D9ef68d7e95575,G,"""> 0"" is less efficient than ""!= 0"" for unsigned integers",353,https://github.com/code-423n4/2022-01-insure-findings/issues/353,insure,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
71,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,sqrt can be made unchecked to save gas,26,https://github.com/code-423n4/2022-01-insure-findings/issues/26,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Withdrawal struct can be packed to save gas,27,https://github.com/code-423n4/2022-01-insure-findings/issues/27,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Insurance struct can be safely packed to save gas,29,https://github.com/code-423n4/2022-01-insure-findings/issues/29,insure,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
71,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,1,Skip balance check in _beforeTokenTransfer if no withdrawalRequest exists,31,https://github.com/code-423n4/2022-01-insure-findings/issues/31,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Unnecessary market status check on redemption,32,https://github.com/code-423n4/2022-01-insure-findings/issues/32,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,`token` variable in Vault can be made immutable,34,https://github.com/code-423n4/2022-01-insure-findings/issues/34,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,allocatedCredit and availableBalance are always read together so should be returned together.,37,https://github.com/code-423n4/2022-01-insure-findings/issues/37,insure,2022/01,bug;G (Gas Optimization);sponsor confirmed
71,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Redundant tracking of markets in factory,39,https://github.com/code-423n4/2022-01-insure-findings/issues/39,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Redundant if statements in market deployment function,41,https://github.com/code-423n4/2022-01-insure-findings/issues/41,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,Update to solc-0.8.10+,47,https://github.com/code-423n4/2022-01-insure-findings/issues/47,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,unnecessary check on require in function createMarket,102,https://github.com/code-423n4/2022-01-insure-findings/issues/102,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,redeclare 0 value in uint256 cost a bit more gas,103,https://github.com/code-423n4/2022-01-insure-findings/issues/103,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,avoid using initialization = 0 on IndexTemplate.sol,107,https://github.com/code-423n4/2022-01-insure-findings/issues/107,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,"in function _sub, less gas used using unchecked",108,https://github.com/code-423n4/2022-01-insure-findings/issues/108,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,avoid using 'else' code can save gas in function pendingPremium,111,https://github.com/code-423n4/2022-01-insure-findings/issues/111,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,avoid using `else` code in function valueOfUnderlying can save gas,114,https://github.com/code-423n4/2022-01-insure-findings/issues/114,insure,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
71,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,unnecessary double `totalLiquidity()` call in function availableBalance,121,https://github.com/code-423n4/2022-01-insure-findings/issues/121,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,avoid using `else` code in function availableBalance can save gas,123,https://github.com/code-423n4/2022-01-insure-findings/issues/123,insure,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
71,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,set  `_mintAmount = _amount;` in the memory can save gas,188,https://github.com/code-423n4/2022-01-insure-findings/issues/188,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor acknowledged
71,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,using operator `&&` used more gas,274,https://github.com/code-423n4/2022-01-insure-findings/issues/274,insure,2022/01,bug;G (Gas Optimization);sponsor acknowledged
71,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Gas optimization in IndexTemplate.requestWithdraw(),56,https://github.com/code-423n4/2022-01-insure-findings/issues/56,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Gas optimization in IndexTemplate.withdraw(),57,https://github.com/code-423n4/2022-01-insure-findings/issues/57,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Gas optimization in IndexTemplate._adjustAlloc(),58,https://github.com/code-423n4/2022-01-insure-findings/issues/58,insure,2022/01,bug;G (Gas Optimization);sponsor disputed
71,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Gas optimization in PoolTemplate.withdraw(),59,https://github.com/code-423n4/2022-01-insure-findings/issues/59,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Gas optimization in CDSTemplate.withdraw(),60,https://github.com/code-423n4/2022-01-insure-findings/issues/60,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,1,`withdrawalReq[msg.sender]` not updated in CDSTemplate.withdraw(),61,https://github.com/code-423n4/2022-01-insure-findings/issues/61,insure,2022/01,bug;duplicate;1 (Low Risk)
71,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Gas optimization in Vault.addValueBatch(),89,https://github.com/code-423n4/2022-01-insure-findings/issues/89,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Long revert reason strings (>32 bytes),90,https://github.com/code-423n4/2022-01-insure-findings/issues/90,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,For loops with variables initialized to 0 and postincrement,91,https://github.com/code-423n4/2022-01-insure-findings/issues/91,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,[WP-N0] Race condition on ERC20 approval,212,https://github.com/code-423n4/2022-01-insure-findings/issues/212,insure,2022/01,bug;0 (Non-critical);sponsor acknowledged
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G1] `InsureDAOERC20#transferFrom()` Do not reduce approval on transferFrom if current allowance is type(uint256).max,213,https://github.com/code-423n4/2022-01-insure-findings/issues/213,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G2] Unused imports,214,https://github.com/code-423n4/2022-01-insure-findings/issues/214,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G3] `AuctionBurnReserveSkew.sol#deposit()` Implementation can be simpler and save some gas,215,https://github.com/code-423n4/2022-01-insure-findings/issues/215,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G4] Remove unnecessary variables can save gas,216,https://github.com/code-423n4/2022-01-insure-findings/issues/216,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,[WP-N5] Missing error messages in require statements,217,https://github.com/code-423n4/2022-01-insure-findings/issues/217,insure,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G6] Remove redundant code can save gas,218,https://github.com/code-423n4/2022-01-insure-findings/issues/218,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G7] `InsureDAOERC20#transferFrom()` Check of allowance can be done earlier to save gas,219,https://github.com/code-423n4/2022-01-insure-findings/issues/219,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G8] `++i` is more efficient than `i++`,220,https://github.com/code-423n4/2022-01-insure-findings/issues/220,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G9] Cache array length in for loops can save gas,221,https://github.com/code-423n4/2022-01-insure-findings/issues/221,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G10] Making use of storage packing can save gas,222,https://github.com/code-423n4/2022-01-insure-findings/issues/222,insure,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G11] Check of `_amount > 0` can be done earlier to save gas,230,https://github.com/code-423n4/2022-01-insure-findings/issues/230,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G12] Cache function call results in the stack can save gas,231,https://github.com/code-423n4/2022-01-insure-findings/issues/231,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G13] Adding unchecked directive can save gas,232,https://github.com/code-423n4/2022-01-insure-findings/issues/232,insure,2022/01,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G14] `AuctionBurnReserveSkew.sol#deposit()` Implementation can be simpler and save some gas,233,https://github.com/code-423n4/2022-01-insure-findings/issues/233,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,[WP-N15] Use of assert() instead of require(),234,https://github.com/code-423n4/2022-01-insure-findings/issues/234,insure,2022/01,bug;duplicate;1 (Low Risk);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"[WP-G16] ""> 0"" is less efficient than ""!= 0"" for unsigned integers",235,https://github.com/code-423n4/2022-01-insure-findings/issues/235,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M17] `Vault.sol` Tokens with fee on transfer are not supported,236,https://github.com/code-423n4/2022-01-insure-findings/issues/236,insure,2022/01,bug;2 (Med Risk)
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G18] Avoiding repeated `marketStatus` checks can save gas,237,https://github.com/code-423n4/2022-01-insure-findings/issues/237,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G19] Changing bool to uint256 can save gas,238,https://github.com/code-423n4/2022-01-insure-findings/issues/238,insure,2022/01,bug;G (Gas Optimization);sponsor acknowledged
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H20] Wrong implementation of `withdrawRedundant()` allows the Vault owner to drain all the funds,239,https://github.com/code-423n4/2022-01-insure-findings/issues/239,insure,2022/01,bug;duplicate;3 (High Risk)
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G21] Cache external call results can save gas,264,https://github.com/code-423n4/2022-01-insure-findings/issues/264,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G23] Avoiding unnecessary storage read can save gas,265,https://github.com/code-423n4/2022-01-insure-findings/issues/265,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H24] Wrong design/implementation of permission control allows malicious/compromised Registry or Factory admin to steal funds from users' wallet balances,266,https://github.com/code-423n4/2022-01-insure-findings/issues/266,insure,2022/01,bug;3 (High Risk);disagree with severity;sponsor acknowledged
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,[WP-L25] `CDSTemplate.sol#fund()` User may lose funds due to misleading comment,267,https://github.com/code-423n4/2022-01-insure-findings/issues/267,insure,2022/01,bug;duplicate;1 (Low Risk)
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,[WP-L26] `Vault#setController()` Lack of validation for the amount of migrated funds,268,https://github.com/code-423n4/2022-01-insure-findings/issues/268,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H27] `IndexTemplate.sol#compensate()` will most certainly fail,269,https://github.com/code-423n4/2022-01-insure-findings/issues/269,insure,2022/01,bug;3 (High Risk);disagree with severity;resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,[WP-L28] `Vault#_unutilize()` Lack of validation for the amount of funds received,270,https://github.com/code-423n4/2022-01-insure-findings/issues/270,insure,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H29] `Vault#setController()` owner of the Vault contracts can drain funds from the Vault,271,https://github.com/code-423n4/2022-01-insure-findings/issues/271,insure,2022/01,bug;3 (High Risk);disagree with severity;sponsor acknowledged
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H30] A malicious/compromised Registry or Factory admin can drain all the funds from the Vault contracts,272,https://github.com/code-423n4/2022-01-insure-findings/issues/272,insure,2022/01,bug;3 (High Risk);disagree with severity;sponsor acknowledged
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G31] Unnecessary checked arithmetic in for loops,273,https://github.com/code-423n4/2022-01-insure-findings/issues/273,insure,2022/01,bug;duplicate;G (Gas Optimization)
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H32] `PoolTemplate.sol` Attacker can call `Factory#createMarket()` and transfer funds from another user's wallet to the pool,277,https://github.com/code-423n4/2022-01-insure-findings/issues/277,insure,2022/01,bug;duplicate;3 (High Risk)
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H33] `IndexTemplate.sol` Wrong implementation allows lp of the index pool to resume a locked `PayingOut` pool and escape the responsibility for the compensation,278,https://github.com/code-423n4/2022-01-insure-findings/issues/278,insure,2022/01,bug;3 (High Risk)
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,"[WP-L34] PoolTemplate, IndexTemplate, CDSTemplate withdrawal timelock can be bypassed",279,https://github.com/code-423n4/2022-01-insure-findings/issues/279,insure,2022/01,bug;invalid;sponsor disputed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,"[WP-M35] `PoolTemplate#applyCover` Unbounded for loops allows an attacker to malfunction `applyCover()`, making it impossible to change the marketStatus of the Pool to Payingout status",280,https://github.com/code-423n4/2022-01-insure-findings/issues/280,insure,2022/01,bug;duplicate;2 (Med Risk)
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H36] Admin of the index pool can `withdrawCredit()` after `applyCover()` to avoid taking loss for the compensation paid for a certain pool,281,https://github.com/code-423n4/2022-01-insure-findings/issues/281,insure,2022/01,bug;3 (High Risk);sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,[WP-G37] Change `public` constant variables to `private` / `internal` can save gas,282,https://github.com/code-423n4/2022-01-insure-findings/issues/282,insure,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
71,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H39] `PoolTemplate.sol#resume()` Wrong implementation of `resume()` will compensate overmuch redeem amount from index pools,283,https://github.com/code-423n4/2022-01-insure-findings/issues/283,insure,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
71,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,3,Expired insurance status set incorrectly after unlock of funds,359,https://github.com/code-423n4/2022-01-insure-findings/issues/359,insure,2022/01,bug;duplicate;3 (High Risk)
73,0v3rf10w,Sharp ville zwanestreet,G,All ,162,https://github.com/code-423n4/2022-01-livepeer-findings/issues/162,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Optimisation,181,https://github.com/code-423n4/2022-01-livepeer-findings/issues/181,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Optimisation,182,https://github.com/code-423n4/2022-01-livepeer-findings/issues/182,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,Incorrect erc20 interface,183,https://github.com/code-423n4/2022-01-livepeer-findings/issues/183,livepeer,2022/01,bug;invalid;2 (Med Risk)
73,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,1,Potential DoS,185,https://github.com/code-423n4/2022-01-livepeer-findings/issues/185,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,Potential Reentrancy at multiple places,187,https://github.com/code-423n4/2022-01-livepeer-findings/issues/187,livepeer,2022/01,bug;invalid;2 (Med Risk)
73,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,Incorrect erc20 interface,188,https://github.com/code-423n4/2022-01-livepeer-findings/issues/188,livepeer,2022/01,bug;invalid;2 (Med Risk)
73,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,1,Events-check,189,https://github.com/code-423n4/2022-01-livepeer-findings/issues/189,livepeer,2022/01,bug;duplicate;0 (Non-critical)
73,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,1,Lack of zero checks,212,https://github.com/code-423n4/2022-01-livepeer-findings/issues/212,livepeer,2022/01,bug;duplicate;0 (Non-critical)
73,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Optimisation,94,https://github.com/code-423n4/2022-01-livepeer-findings/issues/94,livepeer,2022/01,bug;invalid;G (Gas Optimization);sponsor confirmed
73,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,Unchecked returns in multiple place,96,https://github.com/code-423n4/2022-01-livepeer-findings/issues/96,livepeer,2022/01,bug;invalid;2 (Med Risk)
73,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Loops can be implemented more efficiently,214,https://github.com/code-423n4/2022-01-livepeer-findings/issues/214,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Don't assign default values,215,https://github.com/code-423n4/2022-01-livepeer-findings/issues/215,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For uint `> 0` can be replaced with ` != 0` for gas optimization,216,https://github.com/code-423n4/2022-01-livepeer-findings/issues/216,livepeer,2022/01,bug;invalid;G (Gas Optimization);sponsor confirmed
73,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving,101,https://github.com/code-423n4/2022-01-livepeer-findings/issues/101,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Lack of input validation,82,https://github.com/code-423n4/2022-01-livepeer-findings/issues/82,livepeer,2022/01,bug;duplicate;0 (Non-critical)
73,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Lack of event,83,https://github.com/code-423n4/2022-01-livepeer-findings/issues/83,livepeer,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
73,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Wrong logic in L2ArbitrumMessenger,84,https://github.com/code-423n4/2022-01-livepeer-findings/issues/84,livepeer,2022/01,bug;invalid;3 (High Risk)
73,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,ERC20 Approval Race Condition,85,https://github.com/code-423n4/2022-01-livepeer-findings/issues/85,livepeer,2022/01,bug;0 (Non-critical);sponsor acknowledged
73,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Proof could be used for non expected values.,86,https://github.com/code-423n4/2022-01-livepeer-findings/issues/86,livepeer,2022/01,bug;invalid;0 (Non-critical)
73,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Possible frozen gateway,87,https://github.com/code-423n4/2022-01-livepeer-findings/issues/87,livepeer,2022/01,bug;1 (Low Risk);sponsor acknowledged
73,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,requireValidMigration bypass,88,https://github.com/code-423n4/2022-01-livepeer-findings/issues/88,livepeer,2022/01,bug;duplicate;1 (Low Risk)
73,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Duplicate total in getMigrateUnbondingLocksParams,89,https://github.com/code-423n4/2022-01-livepeer-findings/issues/89,livepeer,2022/01,bug;invalid;3 (High Risk)
73,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Front running in LivepeerToken,91,https://github.com/code-423n4/2022-01-livepeer-findings/issues/91,livepeer,2022/01,bug;1 (Low Risk);sponsor acknowledged
73,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas optimization - remove method in DelegatorPool,92,https://github.com/code-423n4/2022-01-livepeer-findings/issues/92,livepeer,2022/01,bug;G (Gas Optimization);sponsor acknowledged
73,aga7hokakological,0xE41B989ce8cF92E265995A5cCcb2C5c9C2981184,G,Revert strings are too long,201,https://github.com/code-423n4/2022-01-livepeer-findings/issues/201,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,aga7hokakological,0xE41B989ce8cF92E265995A5cCcb2C5c9C2981184,1,Incorrect ERC20 interface in L1Escrow.sol,93,https://github.com/code-423n4/2022-01-livepeer-findings/issues/93,livepeer,2022/01,bug;invalid;1 (Low Risk);sponsor acknowledged
73,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,1,Don't use deprecated library functions,207,https://github.com/code-423n4/2022-01-livepeer-findings/issues/207,livepeer,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
73,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,G,Don't make unnecessary library calls,208,https://github.com/code-423n4/2022-01-livepeer-findings/issues/208,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,G,Use `immutable` for `AccessControl`'s role declarations,209,https://github.com/code-423n4/2022-01-livepeer-findings/issues/209,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,G,Cache length of array outside for-loop,210,https://github.com/code-423n4/2022-01-livepeer-findings/issues/210,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,1,Unsafe ERC20 transfer,211,https://github.com/code-423n4/2022-01-livepeer-findings/issues/211,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,LivepeerToken.burn function could burn tokens of any user ,106,https://github.com/code-423n4/2022-01-livepeer-findings/issues/106,livepeer,2022/01,bug;duplicate;2 (Med Risk)
73,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Missing event & timelock for critical only* functions,107,https://github.com/code-423n4/2022-01-livepeer-findings/issues/107,livepeer,2022/01,bug;0 (Non-critical);resolved
73,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,FRONT-RUNNABLE INITIALIZERS,3,https://github.com/code-423n4/2022-01-livepeer-findings/issues/3,livepeer,2022/01,bug;duplicate;1 (Low Risk)
73,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Missing 0 address check,4,https://github.com/code-423n4/2022-01-livepeer-findings/issues/4,livepeer,2022/01,bug;0 (Non-critical);sponsor acknowledged
73,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,L1Escrow.approve should be called before calling L1LPTGateway.finalizeInboundTransfer,40,https://github.com/code-423n4/2022-01-livepeer-findings/issues/40,livepeer,2022/01,bug;0 (Non-critical);sponsor acknowledged
73,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,wrong check,206,https://github.com/code-423n4/2022-01-livepeer-findings/issues/206,livepeer,2022/01,bug;duplicate;1 (Low Risk)
73,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,recoverSigner might return address(0),98,https://github.com/code-423n4/2022-01-livepeer-findings/issues/98,livepeer,2022/01,bug;duplicate;1 (Low Risk)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing zero-address check in constructors,166,https://github.com/code-423n4/2022-01-livepeer-findings/issues/166,livepeer,2022/01,bug;duplicate;0 (Non-critical)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing setter function for l2MigratorAddr,167,https://github.com/code-423n4/2022-01-livepeer-findings/issues/167,livepeer,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing input validation on array lengths,168,https://github.com/code-423n4/2022-01-livepeer-findings/issues/168,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,PREVENT DIV BY 0,169,https://github.com/code-423n4/2022-01-livepeer-findings/issues/169,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G, Immutable variables,213,https://github.com/code-423n4/2022-01-livepeer-findings/issues/213,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Low-level calls don't check the success return value,224,https://github.com/code-423n4/2022-01-livepeer-findings/issues/224,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use abi.encodePacked for gas optimization,225,https://github.com/code-423n4/2022-01-livepeer-findings/issues/225,livepeer,2022/01,bug;G (Gas Optimization);sponsor acknowledged
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Changing function visibility from public to external can save gas,237,https://github.com/code-423n4/2022-01-livepeer-findings/issues/237,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,L2Migrator Allows to Deposit Ether And Ether Will be Locked in the contract,239,https://github.com/code-423n4/2022-01-livepeer-findings/issues/239,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,68,https://github.com/code-423n4/2022-01-livepeer-findings/issues/68,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use of constant keccak variables results in extra hashing (and so gas).,69,https://github.com/code-423n4/2022-01-livepeer-findings/issues/69,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Front-runnable Initializers,70,https://github.com/code-423n4/2022-01-livepeer-findings/issues/70,livepeer,2022/01,bug;duplicate;1 (Low Risk)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,The Contract Should Approve(0) first,71,https://github.com/code-423n4/2022-01-livepeer-findings/issues/71,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Incompatibility With Rebasing/Deflationary/Inflationary tokens,72,https://github.com/code-423n4/2022-01-livepeer-findings/issues/72,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,73,https://github.com/code-423n4/2022-01-livepeer-findings/issues/73,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,`> 0 can be replaced with != 0 for gas optimization`,74,https://github.com/code-423n4/2022-01-livepeer-findings/issues/74,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,++i is more gas efficient than i++ in loops forwarding,75,https://github.com/code-423n4/2022-01-livepeer-findings/issues/75,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,uint is always >= 0,76,https://github.com/code-423n4/2022-01-livepeer-findings/issues/76,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Cache array length in for loops can save gas,77,https://github.com/code-423n4/2022-01-livepeer-findings/issues/77,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Revert String Size Optimization,78,https://github.com/code-423n4/2022-01-livepeer-findings/issues/78,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Adding unchecked directive can save gas,79,https://github.com/code-423n4/2022-01-livepeer-findings/issues/79,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use `calldata` instead of `memory` for function parameters,80,https://github.com/code-423n4/2022-01-livepeer-findings/issues/80,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use of _msgSender(),81,https://github.com/code-423n4/2022-01-livepeer-findings/issues/81,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Migrator Functions Is Not Dependent To Governor Role,90,https://github.com/code-423n4/2022-01-livepeer-findings/issues/90,livepeer,2022/01,bug;invalid;1 (Low Risk);sponsor acknowledged
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,110,https://github.com/code-423n4/2022-01-livepeer-findings/issues/110,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Prevent accidentally burning tokens,111,https://github.com/code-423n4/2022-01-livepeer-findings/issues/111,livepeer,2022/01,bug;0 (Non-critical);sponsor acknowledged
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,`initialize` function can be called by everyone and front-run in `DelegatorPool.sol`,112,https://github.com/code-423n4/2022-01-livepeer-findings/issues/112,livepeer,2022/01,bug;1 (Low Risk);sponsor acknowledged
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`BridgeMinter.sol:migrateToNewMinter()`'s `transferOwnership` should be a two-step process,122,https://github.com/code-423n4/2022-01-livepeer-findings/issues/122,livepeer,2022/01,bug;0 (Non-critical);sponsor acknowledged
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Control flow optimization in `L2LPTDataCache.sol:decreaseL2SupplyFromL1()`,137,https://github.com/code-423n4/2022-01-livepeer-findings/issues/137,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Group related data into separate structs,138,https://github.com/code-423n4/2022-01-livepeer-findings/issues/138,livepeer,2022/01,bug;0 (Non-critical);sponsor acknowledged
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Missing address(0) checks on all immutable addresses,139,https://github.com/code-423n4/2022-01-livepeer-findings/issues/139,livepeer,2022/01,bug;duplicate;0 (Non-critical)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Missing `_from` param comment on `LivepeerToken.sol:burn()`,140,https://github.com/code-423n4/2022-01-livepeer-findings/issues/140,livepeer,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Missing checks for non-zero transfer value calls,141,https://github.com/code-423n4/2022-01-livepeer-findings/issues/141,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`Manager.sol:setController()` should be a two-step process,143,https://github.com/code-423n4/2022-01-livepeer-findings/issues/143,livepeer,2022/01,bug;0 (Non-critical);sponsor acknowledged
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `DelegatorPool.sol:claim()`'s `claimedInitialStake` variable should get cached,144,https://github.com/code-423n4/2022-01-livepeer-findings/issues/144,livepeer,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `DelegatorPool.sol:claim()`'s `initialStake` variable should get cached,145,https://github.com/code-423n4/2022-01-livepeer-findings/issues/145,livepeer,2022/01,bug;invalid;G (Gas Optimization);sponsor confirmed
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"Gas: `DelegatorPool.sol:claim()`, a repetitive arithmetic operation should be cached",146,https://github.com/code-423n4/2022-01-livepeer-findings/issues/146,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `DelegatorPool.sol:claim()`'s `currTotalStake` variable is only used once,147,https://github.com/code-423n4/2022-01-livepeer-findings/issues/147,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `DelegatorPool.sol:claim()`'s `currTotalFees` variable is only used once,148,https://github.com/code-423n4/2022-01-livepeer-findings/issues/148,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,"In `L2Migrator.sol:finalizeMigrateDelegator()`, Account `l2Addr`'s existence should be checked before call",149,https://github.com/code-423n4/2022-01-livepeer-findings/issues/149,livepeer,2022/01,bug;1 (Low Risk);sponsor acknowledged
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"Gas: `L2LPTDataCache.sol:l1CirculatingSupply()`, strict comparison can avoid expensive operation",150,https://github.com/code-423n4/2022-01-livepeer-findings/issues/150,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"Gas: `L2LPTDataCache.sol:l1CirculatingSupply()`, Storage variables should be cached",151,https://github.com/code-423n4/2022-01-livepeer-findings/issues/151,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Mark functions as payable when users can't mistakenly send ETH,163,https://github.com/code-423n4/2022-01-livepeer-findings/issues/163,livepeer,2022/01,bug;G (Gas Optimization);sponsor acknowledged
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`BridgeMinter.sol`: Trust but verify for re-entrancy,164,https://github.com/code-423n4/2022-01-livepeer-findings/issues/164,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: use `msg.sender` instead of OpenZeppelin's `_msgSender()` when GSN capabilities aren't used,243,https://github.com/code-423n4/2022-01-livepeer-findings/issues/243,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Use `msg.sender` directly instead of caching it in a variable,244,https://github.com/code-423n4/2022-01-livepeer-findings/issues/244,livepeer,2022/01,bug;G (Gas Optimization);sponsor acknowledged
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `++i` costs less gas compared to `i++`,52,https://github.com/code-423n4/2022-01-livepeer-findings/issues/52,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas `arbitrum-lpt-bridge`: Upgrade pragma from 0.8.0 to at least 0.8.4,53,https://github.com/code-423n4/2022-01-livepeer-findings/issues/53,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas `protocol`: Upgrade pragma from 0.5.11 to at least 0.8.4,54,https://github.com/code-423n4/2022-01-livepeer-findings/issues/54,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: No need to initialize variables with default values,55,https://github.com/code-423n4/2022-01-livepeer-findings/issues/55,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: An array's length should be cached to save gas in for-loops,56,https://github.com/code-423n4/2022-01-livepeer-findings/issues/56,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `> 0` is less efficient than `!= 0` for unsigned integers,57,https://github.com/code-423n4/2022-01-livepeer-findings/issues/57,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Unnecessary checked arithmetic in for-loops,58,https://github.com/code-423n4/2022-01-livepeer-findings/issues/58,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"Gas: ""constant"" `keccak256` expressions are expressions, not constants. Use ""immutable"" instead.",59,https://github.com/code-423n4/2022-01-livepeer-findings/issues/59,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Reduce the size of error messages (Long revert Strings),60,https://github.com/code-423n4/2022-01-livepeer-findings/issues/60,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Use `calldata` instead of `memory` for external functions where the function argument is read-only.,61,https://github.com/code-423n4/2022-01-livepeer-findings/issues/61,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Internal functions can be private if the contract is not herited,62,https://github.com/code-423n4/2022-01-livepeer-findings/issues/62,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Consider making some constants as non-public to save gas,63,https://github.com/code-423n4/2022-01-livepeer-findings/issues/63,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Unused Named Returns,64,https://github.com/code-423n4/2022-01-livepeer-findings/issues/64,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"Gas: `L2LPTDataCache.sol:l1CirculatingSupply()`, unnecessary checked arithmetic when no underflow possible",65,https://github.com/code-423n4/2022-01-livepeer-findings/issues/65,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Missing inheritances,66,https://github.com/code-423n4/2022-01-livepeer-findings/issues/66,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Public functions that should be declared external,67,https://github.com/code-423n4/2022-01-livepeer-findings/issues/67,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,egjlmn1,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,G,redundant function argument,192,https://github.com/code-423n4/2022-01-livepeer-findings/issues/192,livepeer,2022/01,bug;G (Gas Optimization);sponsor acknowledged
73,gpersoon,0x00000000000000000000000,0,Testing Testing,158,https://github.com/code-423n4/2022-01-livepeer-findings/issues/158,livepeer,2022/01,invalid;withdrawn by warden
73,gpersoon,0x000000000000000000,0,Testing,159,https://github.com/code-423n4/2022-01-livepeer-findings/issues/159,livepeer,2022/01,invalid;withdrawn by warden
73,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Long revert string,226,https://github.com/code-423n4/2022-01-livepeer-findings/issues/226,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Upgrade to Solidity ^0.8.4,227,https://github.com/code-423n4/2022-01-livepeer-findings/issues/227,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Struct layout,228,https://github.com/code-423n4/2022-01-livepeer-findings/issues/228,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: `> 0` is less efficient than `!= 0` for uint,229,https://github.com/code-423n4/2022-01-livepeer-findings/issues/229,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use external keyword instead of public for some functions,230,https://github.com/code-423n4/2022-01-livepeer-findings/issues/230,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use unchecked for safe math,231,https://github.com/code-423n4/2022-01-livepeer-findings/issues/231,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use cached value,233,https://github.com/code-423n4/2022-01-livepeer-findings/issues/233,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Anyone can freeze fund in BridgeMinter,235,https://github.com/code-423n4/2022-01-livepeer-findings/issues/235,livepeer,2022/01,bug;duplicate;2 (Med Risk)
73,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,`migrateETH` will not work,236,https://github.com/code-423n4/2022-01-livepeer-findings/issues/236,livepeer,2022/01,bug;duplicate;3 (High Risk)
73,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Fund loss when insufficient call value to cover fee,238,https://github.com/code-423n4/2022-01-livepeer-findings/issues/238,livepeer,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
73,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,L1Migrator have no payable receive function to receive ETH from BridgeMinter,240,https://github.com/code-423n4/2022-01-livepeer-findings/issues/240,livepeer,2022/01,bug;duplicate;2 (Med Risk)
73,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Anyone can migrate address(0),242,https://github.com/code-423n4/2022-01-livepeer-findings/issues/242,livepeer,2022/01,bug;duplicate;1 (Low Risk)
73,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,2,Admin can rug L2 Escrow tokens leading to reputation risk,165,https://github.com/code-423n4/2022-01-livepeer-findings/issues/165,livepeer,2022/01,bug;2 (Med Risk);sponsor acknowledged
73,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,3,Incorrect params in migrateETH leads to function not working,179,https://github.com/code-423n4/2022-01-livepeer-findings/issues/179,livepeer,2022/01,bug;duplicate;3 (High Risk)
73,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,3,Griefing attack on migrateLPT can prevent token transfer to L2,186,https://github.com/code-423n4/2022-01-livepeer-findings/issues/186,livepeer,2022/01,bug;duplicate;2 (Med Risk)
73,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,3,L2Migrator calls wrong function on bondingManager,223,https://github.com/code-423n4/2022-01-livepeer-findings/issues/223,livepeer,2022/01,bug;invalid;3 (High Risk)
73,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,3,fundDepositAndReserveFor function does not exist in protocol,241,https://github.com/code-423n4/2022-01-livepeer-findings/issues/241,livepeer,2022/01,bug;invalid;3 (High Risk)
73,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,l1CirculatingSupply may not give correct value after a mass withdrawal from L2,199,https://github.com/code-423n4/2022-01-livepeer-findings/issues/199,livepeer,2022/01,bug;invalid;2 (Med Risk)
73,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,L2Migrator.setL1Migrator and setDelegatorPoolImpl functions allow for setting zero addresses,152,https://github.com/code-423n4/2022-01-livepeer-findings/issues/152,livepeer,2022/01,bug;duplicate;0 (Non-critical)
73,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,L2Migrator.claimStake attempts fee transfer without checking its possibility,153,https://github.com/code-423n4/2022-01-livepeer-findings/issues/153,livepeer,2022/01,bug;1 (Low Risk);sponsor acknowledged
73,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,DelegatorPool.claim subtraction can be unchecked and done once,154,https://github.com/code-423n4/2022-01-livepeer-findings/issues/154,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,MixinWrappers.batchRedeemWinningTickets doesn't check for supplied arrays length,155,https://github.com/code-423n4/2022-01-livepeer-findings/issues/155,livepeer,2022/01,bug;0 (Non-critical);sponsor acknowledged
73,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,BridgeMinter.withdrawETHToL1Migrator asks for ETH balance twice,156,https://github.com/code-423n4/2022-01-livepeer-findings/issues/156,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,0,L2LPTGateway descriptions to be corrected,157,https://github.com/code-423n4/2022-01-livepeer-findings/issues/157,livepeer,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
73,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,LIP-73 contracts employ unsafe practice of unlocked pragma,245,https://github.com/code-423n4/2022-01-livepeer-findings/issues/245,livepeer,2022/01,bug;duplicate;0 (Non-critical)
73,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,No check that DEFAULT_ADMIN_ROLE is not the LivepeerToken contract itself ,1,https://github.com/code-423n4/2022-01-livepeer-findings/issues/1,livepeer,2022/01,bug;invalid;2 (Med Risk)
73,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,No check that the amount arg that is being minted is larger than 0,2,https://github.com/code-423n4/2022-01-livepeer-findings/issues/2,livepeer,2022/01,bug;0 (Non-critical);sponsor acknowledged
73,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,burn() function does not check that _amount is larger than 0,25,https://github.com/code-423n4/2022-01-livepeer-findings/issues/25,livepeer,2022/01,bug;0 (Non-critical);sponsor acknowledged
73,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,no check that DEFAULT_ADMIN_ROLE is not the contract itself in L1Escrow.sol,26,https://github.com/code-423n4/2022-01-livepeer-findings/issues/26,livepeer,2022/01,bug;invalid;2 (Med Risk)
73,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,value argument in approve() function not required to be greater than 0,27,https://github.com/code-423n4/2022-01-livepeer-findings/issues/27,livepeer,2022/01,bug;0 (Non-critical);sponsor acknowledged
73,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,approve() function does not require that _token and _spender args are unique,28,https://github.com/code-423n4/2022-01-livepeer-findings/issues/28,livepeer,2022/01,bug;invalid;2 (Med Risk)
73,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,_token arg should be from a whitelisted group to avoid use of malicious tokens,38,https://github.com/code-423n4/2022-01-livepeer-findings/issues/38,livepeer,2022/01,bug;0 (Non-critical);sponsor acknowledged
73,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,L1LPTGateway.sol does not make use of safeTransferFrom,39,https://github.com/code-423n4/2022-01-livepeer-findings/issues/39,livepeer,2022/01,bug;invalid;3 (High Risk)
73,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,No validation checks on constructor addresses in L1LPTGateway.sol ,41,https://github.com/code-423n4/2022-01-livepeer-findings/issues/41,livepeer,2022/01,bug;duplicate;0 (Non-critical)
73,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,No check that _to and from are different addresses in outboundTransfer() function ,42,https://github.com/code-423n4/2022-01-livepeer-findings/issues/42,livepeer,2022/01,bug;invalid;3 (High Risk)
73,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,no check that _amount arg is greater than 0 in outboundTransfer() function ,44,https://github.com/code-423n4/2022-01-livepeer-findings/issues/44,livepeer,2022/01,bug;0 (Non-critical);sponsor acknowledged
73,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Protocol uses floating pragmas ,47,https://github.com/code-423n4/2022-01-livepeer-findings/issues/47,livepeer,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
73,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,No reentrancy guards on functions using .call ,50,https://github.com/code-423n4/2022-01-livepeer-findings/issues/50,livepeer,2022/01,bug;invalid;2 (Med Risk);sponsor acknowledged
73,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Adding unchecked directive can save gas ,174,https://github.com/code-423n4/2022-01-livepeer-findings/issues/174,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Caching variables,175,https://github.com/code-423n4/2022-01-livepeer-findings/issues/175,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Cache the TokenLike(l1Token) state variable,176,https://github.com/code-423n4/2022-01-livepeer-findings/issues/176,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Unnecessary receive(),177,https://github.com/code-423n4/2022-01-livepeer-findings/issues/177,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Use safeTransferFrom consistently instead of transferFrom,178,https://github.com/code-423n4/2022-01-livepeer-findings/issues/178,livepeer,2022/01,bug;invalid;2 (Med Risk)
73,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,The    initialize    function   does   not   check   for   non-zero   address and emit event,200,https://github.com/code-423n4/2022-01-livepeer-findings/issues/200,livepeer,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
73,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Use of constant keccak variables results in extra hashing (and so gas).,43,https://github.com/code-423n4/2022-01-livepeer-findings/issues/43,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Long Revert Strings,45,https://github.com/code-423n4/2022-01-livepeer-findings/issues/45,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,> 0 can be replaced with != 0 for gas optimisation,46,https://github.com/code-423n4/2022-01-livepeer-findings/issues/46,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,A more efficient for loop index proceeding,48,https://github.com/code-423n4/2022-01-livepeer-findings/issues/48,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Avoiding Initialization of Loop Index if it is 0,49,https://github.com/code-423n4/2022-01-livepeer-findings/issues/49,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,kemmio,0xb1E261C37Fd29c27de80cc0d1fb9Ca2f151D0C1d,3,Signature authentication bypass for ZERO address,142,https://github.com/code-423n4/2022-01-livepeer-findings/issues/142,livepeer,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
73,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Loop index prefix incrementing instead of postfix incrementing,104,https://github.com/code-423n4/2022-01-livepeer-findings/issues/104,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,1,Not checking addresses that can be equal to address(0),105,https://github.com/code-423n4/2022-01-livepeer-findings/issues/105,livepeer,2022/01,bug;duplicate;0 (Non-critical)
73,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Keccak functions in constants waste gas,160,https://github.com/code-423n4/2022-01-livepeer-findings/issues/160,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Long revert strings,161,https://github.com/code-423n4/2022-01-livepeer-findings/issues/161,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,pants,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,approve return value is ignored,100,https://github.com/code-423n4/2022-01-livepeer-findings/issues/100,livepeer,2022/01,bug;invalid;2 (Med Risk)
73,pants,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,3,transfer return value of a general ERC20 is ignored,99,https://github.com/code-423n4/2022-01-livepeer-findings/issues/99,livepeer,2022/01,bug;invalid;3 (High Risk)
73,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,setController 2-step process,219,https://github.com/code-423n4/2022-01-livepeer-findings/issues/219,livepeer,2022/01,bug;duplicate;0 (Non-critical)
73,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Assigned operations to constant variables,220,https://github.com/code-423n4/2022-01-livepeer-findings/issues/220,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Assign to 0 when _amount = l2SupplyFromL1,221,https://github.com/code-423n4/2022-01-livepeer-findings/issues/221,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Repeated math operations,222,https://github.com/code-423n4/2022-01-livepeer-findings/issues/222,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,recoverSigner returns an empty address when the signature is empty,232,https://github.com/code-423n4/2022-01-livepeer-findings/issues/232,livepeer,2022/01,bug;duplicate;1 (Low Risk)
73,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Migrate old balance on setToken,234,https://github.com/code-423n4/2022-01-livepeer-findings/issues/234,livepeer,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
73,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,unnecessary gas usage by using msg.sender(),29,https://github.com/code-423n4/2022-01-livepeer-findings/issues/29,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Solidity compiler versions mismatch,10,https://github.com/code-423n4/2022-01-livepeer-findings/issues/10,livepeer,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove of openZeppelin is deprecated,11,https://github.com/code-423n4/2022-01-livepeer-findings/issues/11,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Must approve 0 first,12,https://github.com/code-423n4/2022-01-livepeer-findings/issues/12,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use != 0 instead of > 0,13,https://github.com/code-423n4/2022-01-livepeer-findings/issues/13,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Upgrade pragma to at least 0.8.4,14,https://github.com/code-423n4/2022-01-livepeer-findings/issues/14,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,transfer return value of a custom ERC20 is ignored,15,https://github.com/code-423n4/2022-01-livepeer-findings/issues/15,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary payable,16,https://github.com/code-423n4/2022-01-livepeer-findings/issues/16,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Caching array length can save gas,17,https://github.com/code-423n4/2022-01-livepeer-findings/issues/17,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary index init,18,https://github.com/code-423n4/2022-01-livepeer-findings/issues/18,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Prefix increments are cheaper than postfix increments,19,https://github.com/code-423n4/2022-01-livepeer-findings/issues/19,livepeer,2022/01,bug;G (Gas Optimization);sponsor acknowledged
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,20,https://github.com/code-423n4/2022-01-livepeer-findings/issues/20,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,21,https://github.com/code-423n4/2022-01-livepeer-findings/issues/21,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Internal functions to private,22,https://github.com/code-423n4/2022-01-livepeer-findings/issues/22,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,"The following require messages are of length more than 32 and we think are short enough to short them into exactly 32 characters such that it will be placed in one slot of memory and the require  function will cost less gas.  The list:           Solidity file: L2Migrator.sol, In line 267, Require message length to shorten: 36, The message: L2Migrator#claimStake: INVALID_PROOF         Solidity file: L2Migrator.sol, In line 272, Require message length to shorten: 39, The message: L2Migrator#claimStake: ALREADY_MIGRATED         Solidity file: DelegatorPool.sol, In line 59, Require message length to shorten: 34, The message: DelegatorPool#claim: FULLY_CLAIMED",23,https://github.com/code-423n4/2022-01-livepeer-findings/issues/23,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused imports,24,https://github.com/code-423n4/2022-01-livepeer-findings/issues/24,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Never used parameters,5,https://github.com/code-423n4/2022-01-livepeer-findings/issues/5,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Named return issue,6,https://github.com/code-423n4/2022-01-livepeer-findings/issues/6,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Init frontrun,7,https://github.com/code-423n4/2022-01-livepeer-findings/issues/7,livepeer,2022/01,bug;duplicate;1 (Low Risk)
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified function inputs of public / external functions,8,https://github.com/code-423n4/2022-01-livepeer-findings/issues/8,livepeer,2022/01,bug;0 (Non-critical);sponsor acknowledged
73,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Use safe math for solidity version <8,9,https://github.com/code-423n4/2022-01-livepeer-findings/issues/9,livepeer,2022/01,bug;invalid;1 (Low Risk)
73,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Checking for != 0 instead of > 0 is cheaper when working with uints,102,https://github.com/code-423n4/2022-01-livepeer-findings/issues/102,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Drop the token parameter from since it can only be the same value,103,https://github.com/code-423n4/2022-01-livepeer-findings/issues/103,livepeer,2022/01,bug;G (Gas Optimization);sponsor acknowledged
73,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,`L2Migrator` allows a user to migrate once through `claimStake()` and once through `finalizeMigrateDelegator()`,108,https://github.com/code-423n4/2022-01-livepeer-findings/issues/108,livepeer,2022/01,bug;invalid;3 (High Risk)
73,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,1,Gateway contracts are not paused at the start,109,https://github.com/code-423n4/2022-01-livepeer-findings/issues/109,livepeer,2022/01,bug;duplicate;1 (Low Risk)
73,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,`L1Migrator.migrateETH` can be used to take away protocol's access to funds,95,https://github.com/code-423n4/2022-01-livepeer-findings/issues/95,livepeer,2022/01,bug;duplicate;3 (High Risk)
73,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,L1Migrator.migrateLPT` can be used to take away protocol's access to LPT tokens in BridgeMinter,97,https://github.com/code-423n4/2022-01-livepeer-findings/issues/97,livepeer,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
73,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,0,Missing event for migrate function,113,https://github.com/code-423n4/2022-01-livepeer-findings/issues/113,livepeer,2022/01,bug;invalid;0 (Non-critical)
73,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,0,Inconsistency in getOutboundCalldata,114,https://github.com/code-423n4/2022-01-livepeer-findings/issues/114,livepeer,2022/01,bug;invalid;0 (Non-critical)
73,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Revert string > 32 bytes,115,https://github.com/code-423n4/2022-01-livepeer-findings/issues/115,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Custom GOVERNOR_ROLE unnecessary,116,https://github.com/code-423n4/2022-01-livepeer-findings/issues/116,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Unnecessary uint zero initialization,117,https://github.com/code-423n4/2022-01-livepeer-findings/issues/117,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,EIP2612 in token problematic,118,https://github.com/code-423n4/2022-01-livepeer-findings/issues/118,livepeer,2022/01,bug;0 (Non-critical);sponsor acknowledged
73,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Name reuse,119,https://github.com/code-423n4/2022-01-livepeer-findings/issues/119,livepeer,2022/01,bug;0 (Non-critical);sponsor acknowledged
73,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Inaccurate comment,120,https://github.com/code-423n4/2022-01-livepeer-findings/issues/120,livepeer,2022/01,bug;duplicate;0 (Non-critical)
73,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,3,No checks around poll voting mechanism,121,https://github.com/code-423n4/2022-01-livepeer-findings/issues/121,livepeer,2022/01,bug;1 (Low Risk);sponsor acknowledged
73,solgryn,0xc1B412F45a9702cc401259C6e3D9ef68d7e95575,G,l1CirculatingSupply function should be declared external to save gas,34,https://github.com/code-423n4/2022-01-livepeer-findings/issues/34,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,solgryn,0xc1B412F45a9702cc401259C6e3D9ef68d7e95575,G,outboundTransfer function in L2LPTGateway should be declared external to save gas,35,https://github.com/code-423n4/2022-01-livepeer-findings/issues/35,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,solgryn,0xc1B412F45a9702cc401259C6e3D9ef68d7e95575,G,getOutboundCalldata function in L2LPTGateway should be declared external to save gas,36,https://github.com/code-423n4/2022-01-livepeer-findings/issues/36,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,solgryn,0xc1B412F45a9702cc401259C6e3D9ef68d7e95575,G,"""> 0"" is less efficient than ""!= 0"" for unsigned integers",37,https://github.com/code-423n4/2022-01-livepeer-findings/issues/37,livepeer,2022/01,bug;invalid;G (Gas Optimization);sponsor confirmed
73,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,2,Missing zero address in constructor L1LPTDataCache.sol#L20-L27,217,https://github.com/code-423n4/2022-01-livepeer-findings/issues/217,livepeer,2022/01,bug;duplicate;0 (Non-critical)
73,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,G,Function should be declared as external to save gas,218,https://github.com/code-423n4/2022-01-livepeer-findings/issues/218,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,double call address(this).balance in function `withdrawETHToL1Migrator`,191,https://github.com/code-423n4/2022-01-livepeer-findings/issues/191,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,using empty String which is already default 0x,30,https://github.com/code-423n4/2022-01-livepeer-findings/issues/30,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,1,Missing check for address(0),31,https://github.com/code-423n4/2022-01-livepeer-findings/issues/31,livepeer,2022/01,bug;duplicate;0 (Non-critical)
73,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,too many `balanceOf` call in function withdrawRedundant,32,https://github.com/code-423n4/2022-01-livepeer-findings/issues/32,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,double storage call in function decreaseL2SupplyFromL1,51,https://github.com/code-423n4/2022-01-livepeer-findings/issues/51,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,123,https://github.com/code-423n4/2022-01-livepeer-findings/issues/123,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Setting `uint256` variables to `0` is redundant,124,https://github.com/code-423n4/2022-01-livepeer-findings/issues/124,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`++i` is more efficient than `i++`,125,https://github.com/code-423n4/2022-01-livepeer-findings/issues/125,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,126,https://github.com/code-423n4/2022-01-livepeer-findings/issues/126,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Check of `!migratedDelegators[delegator]` can be done earlier to save gas,127,https://github.com/code-423n4/2022-01-livepeer-findings/issues/127,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"""> 0"" is less efficient than ""!= 0"" for unsigned integers",128,https://github.com/code-423n4/2022-01-livepeer-findings/issues/128,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Changing bool to uint256 can save gas,129,https://github.com/code-423n4/2022-01-livepeer-findings/issues/129,livepeer,2022/01,bug;G (Gas Optimization);sponsor acknowledged
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,130,https://github.com/code-423n4/2022-01-livepeer-findings/issues/130,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`DelegatorPool.sol#claim()` Use inline expression can save gas,131,https://github.com/code-423n4/2022-01-livepeer-findings/issues/131,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Redundant `return` for named returns,132,https://github.com/code-423n4/2022-01-livepeer-findings/issues/132,livepeer,2022/01,bug;invalid;G (Gas Optimization)
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Inline unnecessary internal function can make the code simpler and save some gas,133,https://github.com/code-423n4/2022-01-livepeer-findings/issues/133,livepeer,2022/01,bug;G (Gas Optimization);sponsor acknowledged
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Critical operations should emit events,134,https://github.com/code-423n4/2022-01-livepeer-findings/issues/134,livepeer,2022/01,bug;duplicate;0 (Non-critical)
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoiding unnecessary repeated account balance read can save gas,135,https://github.com/code-423n4/2022-01-livepeer-findings/issues/135,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused named returns,136,https://github.com/code-423n4/2022-01-livepeer-findings/issues/136,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Using immutable variables rather than local variables is cheaper,180,https://github.com/code-423n4/2022-01-livepeer-findings/issues/180,livepeer,2022/01,bug;G (Gas Optimization);sponsor disputed
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache and read storage variables from the stack can save gas,184,https://github.com/code-423n4/2022-01-livepeer-findings/issues/184,livepeer,2022/01,bug;G (Gas Optimization);resolved
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`DelegatorPool.sol#claim()` Inaccurate check of `claimedInitialStake < initialStake`,190,https://github.com/code-423n4/2022-01-livepeer-findings/issues/190,livepeer,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M0] `MINTER_ROLE` can be granted by the deployer of L2LivepeerToken and mint arbitrary amount of tokens,193,https://github.com/code-423n4/2022-01-livepeer-findings/issues/193,livepeer,2022/01,bug;2 (Med Risk);sponsor acknowledged
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M1] `BURNER_ROLE` can burn any amount of L2LivepeerToken from an arbitrary address,194,https://github.com/code-423n4/2022-01-livepeer-findings/issues/194,livepeer,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M2] `DEFAULT_ADMIN_ROLE` can approve arbitrary address to spend any amount from the `L1Escrow` contract,195,https://github.com/code-423n4/2022-01-livepeer-findings/issues/195,livepeer,2022/01,bug;2 (Med Risk);sponsor acknowledged
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove redundant `_setRoleAdmin()` can save gas,196,https://github.com/code-423n4/2022-01-livepeer-findings/issues/196,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary arithmetic operations and storage reads can save gas,197,https://github.com/code-423n4/2022-01-livepeer-findings/issues/197,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"[WP-H3] `L1Migrator.sol#migrateETH()` Improper implementation of `L1Migrator` causing `migrateETH()` always reverts, can lead to ETH in `BridgeMinter` getting stuck in the contract",198,https://github.com/code-423n4/2022-01-livepeer-findings/issues/198,livepeer,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,"[WP-M4] Unable to use `L2GatewayRouter` to withdraw LPT from L2 to L1, as `L2LPTGateway` does not implement `L2GatewayRouter` expected method",202,https://github.com/code-423n4/2022-01-livepeer-findings/issues/202,livepeer,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,"`L1LPTGateway`, `L2LPTGateway` should start off paused after deployed",203,https://github.com/code-423n4/2022-01-livepeer-findings/issues/203,livepeer,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unnecessary checked arithmetic in for loops,204,https://github.com/code-423n4/2022-01-livepeer-findings/issues/204,livepeer,2022/01,bug;G (Gas Optimization);sponsor acknowledged
73,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H5] `L1Migrator.sol#migrateETH()` dose not send `bridgeMinter`'s ETH to L2 causing ETH get frozen in the contract,205,https://github.com/code-423n4/2022-01-livepeer-findings/issues/205,livepeer,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
73,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused/Underutilized Named Returns,170,https://github.com/code-423n4/2022-01-livepeer-findings/issues/170,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Assignment Of Variables To Default ,171,https://github.com/code-423n4/2022-01-livepeer-findings/issues/171,livepeer,2022/01,bug;duplicate;G (Gas Optimization)
73,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Constant variables using keccak can be immutable,172,https://github.com/code-423n4/2022-01-livepeer-findings/issues/172,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
73,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Save Gas With The Unchecked Keyword (L2LPTDataCache.sol),173,https://github.com/code-423n4/2022-01-livepeer-findings/issues/173,livepeer,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
81,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,1,Missing zero checks at multiple places,217,https://github.com/code-423n4/2022-01-notional-findings/issues/217,notional,2022/01,bug;duplicate;0 (Non-critical)
81,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Lack of checks,32,https://github.com/code-423n4/2022-01-notional-findings/issues/32,notional,2022/01,bug;invalid;sponsor disputed
81,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unsafe approve,33,https://github.com/code-423n4/2022-01-notional-findings/issues/33,notional,2022/01,bug;duplicate;0 (Non-critical)
81,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas optimization with structs,34,https://github.com/code-423n4/2022-01-notional-findings/issues/34,notional,2022/01,bug;invalid;sponsor disputed
81,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Inconsistent solidity pragma,35,https://github.com/code-423n4/2022-01-notional-findings/issues/35,notional,2022/01,bug;invalid
81,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,_getToken not resilient to errors,36,https://github.com/code-423n4/2022-01-notional-findings/issues/36,notional,2022/01,bug;0 (Non-critical);sponsor confirmed
81,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Use of deprecated Chainlink API,37,https://github.com/code-423n4/2022-01-notional-findings/issues/37,notional,2022/01,bug;duplicate;2 (Med Risk)
81,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,1,Incorrect comment on cooldown check,45,https://github.com/code-423n4/2022-01-notional-findings/issues/45,notional,2022/01,bug;0 (Non-critical);disagree with severity
81,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,G,Math simplification in TreasuryManager,46,https://github.com/code-423n4/2022-01-notional-findings/issues/46,notional,2022/01,bug;duplicate;invalid;G (Gas Optimization)
81,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,TreasuryAction is missing initialize function and should set owner address in initialize function,1,https://github.com/code-423n4/2022-01-notional-findings/issues/1,notional,2022/01,bug;duplicate;invalid;sponsor disputed
81,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Must approve 0 first,47,https://github.com/code-423n4/2022-01-notional-findings/issues/47,notional,2022/01,bug;duplicate;invalid
81,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,FRONT-RUNNABLE INITIALIZERS,48,https://github.com/code-423n4/2022-01-notional-findings/issues/48,notional,2022/01,bug;duplicate;invalid
81,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Missing input checks,49,https://github.com/code-423n4/2022-01-notional-findings/issues/49,notional,2022/01,bug;duplicate;0 (Non-critical)
81,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Incorrect use of initializer modifier,50,https://github.com/code-423n4/2022-01-notional-findings/issues/50,notional,2022/01,bug;duplicate;invalid
81,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Shortfall: Redeeming BPT without slippage check,187,https://github.com/code-423n4/2022-01-notional-findings/issues/187,notional,2022/01,bug;duplicate;invalid
81,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`_mintFromAssets`: no slippage check,188,https://github.com/code-423n4/2022-01-notional-findings/issues/188,notional,2022/01,bug;duplicate;2 (Med Risk)
81,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,redeem window is one second short of `REDEEM_WINDOW_SECONDS`,189,https://github.com/code-423n4/2022-01-notional-findings/issues/189,notional,2022/01,bug;duplicate;0 (Non-critical)
81,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,BPT donations can be gamed,190,https://github.com/code-423n4/2022-01-notional-findings/issues/190,notional,2022/01,bug;duplicate;1 (Low Risk);sponsor confirmed
81,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`getVotingPower` division by zero,191,https://github.com/code-423n4/2022-01-notional-findings/issues/191,notional,2022/01,bug;duplicate;1 (Low Risk)
81,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Treasury cannot claim COMP tokens & COMP tokens are stuck,192,https://github.com/code-423n4/2022-01-notional-findings/issues/192,notional,2022/01,bug;3 (High Risk);disagree with severity
81,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Cannot transfer to treasury if no reserve buffer defined,193,https://github.com/code-423n4/2022-01-notional-findings/issues/193,notional,2022/01,bug;invalid;sponsor disputed
81,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,No `safeApprove`,194,https://github.com/code-423n4/2022-01-notional-findings/issues/194,notional,2022/01,bug;duplicate;0 (Non-critical)
81,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Missing parameter validation,195,https://github.com/code-423n4/2022-01-notional-findings/issues/195,notional,2022/01,bug;0 (Non-critical);sponsor confirmed
81,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`StorageId` enums may never be shuffled,196,https://github.com/code-423n4/2022-01-notional-findings/issues/196,notional,2022/01,bug;0 (Non-critical);sponsor disputed
81,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Usage of deprecated ChainLink API in `EIP1271Wallet`,197,https://github.com/code-423n4/2022-01-notional-findings/issues/197,notional,2022/01,bug;2 (Med Risk)
81,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`makerPrice` assumes oracle price is always in 18 decimals,198,https://github.com/code-423n4/2022-01-notional-findings/issues/198,notional,2022/01,bug;1 (Low Risk);sponsor confirmed
81,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `reserveInternal.subNoNeg(bufferInternal)` can be unchecked,199,https://github.com/code-423n4/2022-01-notional-findings/issues/199,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas saving,76,https://github.com/code-423n4/2022-01-notional-findings/issues/76,notional,2022/01,bug;duplicate;invalid
81,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Front-runnable Initializers,136,https://github.com/code-423n4/2022-01-notional-findings/issues/136,notional,2022/01,bug;duplicate;invalid
81,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,++i is more gas efficient than i++ in loops forwarding,137,https://github.com/code-423n4/2022-01-notional-findings/issues/137,notional,2022/01,bug;duplicate;G (Gas Optimization)
81,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Cache array length in for loops can save gas,138,https://github.com/code-423n4/2022-01-notional-findings/issues/138,notional,2022/01,bug;duplicate;invalid
81,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Oracle Time Interval Is Small,150,https://github.com/code-423n4/2022-01-notional-findings/issues/150,notional,2022/01,bug;0 (Non-critical);sponsor disputed
81,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,The Contract Should Approve(0) first,153,https://github.com/code-423n4/2022-01-notional-findings/issues/153,notional,2022/01,bug;invalid;sponsor acknowledged
81,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Delete - ABI Coder V2 For Gas Optimization,154,https://github.com/code-423n4/2022-01-notional-findings/issues/154,notional,2022/01,bug;invalid;sponsor disputed
81,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,155,https://github.com/code-423n4/2022-01-notional-findings/issues/155,notional,2022/01,bug;duplicate;invalid
81,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Use of deprecated Chainlink API,156,https://github.com/code-423n4/2022-01-notional-findings/issues/156,notional,2022/01,bug;duplicate;2 (Med Risk)
81,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Owner can extend coolDownPeriod to indefinitely - Improper Upper Bound Definition on the coolDownPeriod,173,https://github.com/code-423n4/2022-01-notional-findings/issues/173,notional,2022/01,bug;duplicate;2 (Med Risk);sponsor confirmed
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`SafeInt256.sol:div()`'s divide by 0 handling doesn't revert,100,https://github.com/code-423n4/2022-01-notional-findings/issues/100,notional,2022/01,bug;duplicate;invalid;sponsor confirmed
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Divide by 0 error as `totalSupply()` can be equal to 0,102,https://github.com/code-423n4/2022-01-notional-findings/issues/102,notional,2022/01,bug;duplicate;1 (Low Risk)
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `TreasuryAction.sol:claimCOMPAndTransfer()`: `amountClaimed` can't underflow,104,https://github.com/code-423n4/2022-01-notional-findings/issues/104,notional,2022/01,bug;invalid;sponsor disputed
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`TreasuryAction.sol`:`modifier onlyOwner()`'s revert message is confusing,106,https://github.com/code-423n4/2022-01-notional-findings/issues/106,notional,2022/01,bug;0 (Non-critical);disagree with severity
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Timelock for `sNOTE.sol:setCoolDownTime()`,107,https://github.com/code-423n4/2022-01-notional-findings/issues/107,notional,2022/01,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`TreasuryManager.sol:approveToken()`: Use SafeERC20.safeApprove(),108,https://github.com/code-423n4/2022-01-notional-findings/issues/108,notional,2022/01,bug;duplicate;invalid
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Begin & End of redeem window should be inclusive,109,https://github.com/code-423n4/2022-01-notional-findings/issues/109,notional,2022/01,bug;duplicate;0 (Non-critical)
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`TreasuryAction.sol:transferReserveToTreasury()`: Missing @return comment ,111,https://github.com/code-423n4/2022-01-notional-findings/issues/111,notional,2022/01,bug;0 (Non-critical);disagree with severity
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Begin & End of redeem window should be inclusive (2),118,https://github.com/code-423n4/2022-01-notional-findings/issues/118,notional,2022/01,bug;duplicate;invalid;sponsor confirmed
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `TokenHandler.sol`: unused import `CEtherInterface.sol`,122,https://github.com/code-423n4/2022-01-notional-findings/issues/122,notional,2022/01,bug;invalid;sponsor disputed
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`TokenHandler.sol:_getToken()`: `store` is used only once and shouldn't get cached,123,https://github.com/code-423n4/2022-01-notional-findings/issues/123,notional,2022/01,bug;invalid;G (Gas Optimization);sponsor confirmed
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `BalanceHandler.sol:_setBalanceStorage()`: `store` is used only once and shouldn't get cached,124,https://github.com/code-423n4/2022-01-notional-findings/issues/124,notional,2022/01,bug;invalid;G (Gas Optimization);sponsor confirmed
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`BalanceHandler.sol:getBalanceStorage()`: `store` is used only once and shouldn't get cached,125,https://github.com/code-423n4/2022-01-notional-findings/issues/125,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G, Gas in `SafeInt256.sol:max()`: Non-strict inequalities are cheaper than strict ones,126,https://github.com/code-423n4/2022-01-notional-findings/issues/126,notional,2022/01,bug;duplicate;invalid
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G, Gas in `SafeInt256.sol:min()`: Non-strict inequalities are cheaper than strict ones,127,https://github.com/code-423n4/2022-01-notional-findings/issues/127,notional,2022/01,bug;duplicate;invalid
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Bitmap.sol:getMSB()`: unnecessary arithmetic operation,128,https://github.com/code-423n4/2022-01-notional-findings/issues/128,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `TreasuryManager.sol`: Inline function `_investWETHToBuyNOTE()`,129,https://github.com/code-423n4/2022-01-notional-findings/issues/129,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `EIP1271Wallet.sol`: Inline function `_validateOrder()`,130,https://github.com/code-423n4/2022-01-notional-findings/issues/130,notional,2022/01,bug;invalid;sponsor acknowledged
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Front-Runnable Initializers & no default `owner`,134,https://github.com/code-423n4/2022-01-notional-findings/issues/134,notional,2022/01,bug;duplicate;invalid
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `++i` costs less gas compared to `i++`,85,https://github.com/code-423n4/2022-01-notional-findings/issues/85,notional,2022/01,bug;duplicate;G (Gas Optimization)
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Use Custom Errors instead of Revert Strings to save Gas,86,https://github.com/code-423n4/2022-01-notional-findings/issues/86,notional,2022/01,bug;G (Gas Optimization);sponsor acknowledged
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: No need to initialize variables with default values,87,https://github.com/code-423n4/2022-01-notional-findings/issues/87,notional,2022/01,bug;invalid;sponsor disputed
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: An array's length should be cached to save gas in for-loops,88,https://github.com/code-423n4/2022-01-notional-findings/issues/88,notional,2022/01,bug;duplicate;invalid
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Consider making some constants as non-public to save gas,89,https://github.com/code-423n4/2022-01-notional-findings/issues/89,notional,2022/01,bug;invalid;sponsor disputed
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Mark functions as payable when users can't mistakenly send ETH,91,https://github.com/code-423n4/2022-01-notional-findings/issues/91,notional,2022/01,bug;invalid;sponsor disputed
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Upgrade pragma to at least 0.8.4,92,https://github.com/code-423n4/2022-01-notional-findings/issues/92,notional,2022/01,bug;duplicate;invalid
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Missing checks for non-zero transfer value calls,94,https://github.com/code-423n4/2022-01-notional-findings/issues/94,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Places where both the `return` statement and a named `returns` are used,95,https://github.com/code-423n4/2022-01-notional-findings/issues/95,notional,2022/01,bug;G (Gas Optimization)
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"Gas: When a function use the `onlyOwner` modifier, use `msg.sender` instead of `owner`",97,https://github.com/code-423n4/2022-01-notional-findings/issues/97,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"Gas: When a function uses the `onlyManagerContract` modifier, use `msg.sender` instead of `treasuryManagerContract`",98,https://github.com/code-423n4/2022-01-notional-findings/issues/98,notional,2022/01,bug;invalid;G (Gas Optimization);sponsor confirmed
81,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimization: Tight variable packing in `Types.sol:Token`,99,https://github.com/code-423n4/2022-01-notional-findings/issues/99,notional,2022/01,bug;invalid;sponsor disputed
81,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,1,Missing check on newOwner and owner,215,https://github.com/code-423n4/2022-01-notional-findings/issues/215,notional,2022/01,bug;invalid;sponsor disputed
81,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,1,newOwner can be updated to zero address,216,https://github.com/code-423n4/2022-01-notional-findings/issues/216,notional,2022/01,bug;invalid;sponsor disputed
81,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,1,Unnecessary wrapToWETH(),219,https://github.com/code-423n4/2022-01-notional-findings/issues/219,notional,2022/01,bug;invalid;sponsor disputed
81,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,2,setReserveCashBalance can only set less reserves,103,https://github.com/code-423n4/2022-01-notional-findings/issues/103,notional,2022/01,bug;1 (Low Risk);sponsor confirmed
81,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,1,Formulas in comments are unused,105,https://github.com/code-423n4/2022-01-notional-findings/issues/105,notional,2022/01,bug;invalid;sponsor disputed
81,gellej,0xF9a50271150FAFF01c6a702E0BB79C2412eAcD25,2,MAX_SHORTFALL_WITHDRAW limit on BTP extraction is not enforced,209,https://github.com/code-423n4/2022-01-notional-findings/issues/209,notional,2022/01,bug;2 (Med Risk);sponsor confirmed
81,gellej,0xF9a50271150FAFF01c6a702E0BB79C2412eAcD25,0,"_burn function has non-standard interpretation (gas savings, clarity)",211,https://github.com/code-423n4/2022-01-notional-findings/issues/211,notional,2022/01,bug;duplicate;1 (Low Risk);sponsor confirmed
81,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Struct layout,157,https://github.com/code-423n4/2022-01-notional-findings/issues/157,notional,2022/01,bug;duplicate;invalid
81,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unused variable,158,https://github.com/code-423n4/2022-01-notional-findings/issues/158,notional,2022/01,bug;duplicate;G (Gas Optimization)
81,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,extractTokensForCollateralShortfall can be called repeated to extract more than 50% of BPT,159,https://github.com/code-423n4/2022-01-notional-findings/issues/159,notional,2022/01,bug;duplicate;2 (Med Risk)
81,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unchecked math,160,https://github.com/code-423n4/2022-01-notional-findings/issues/160,notional,2022/01,bug;invalid;sponsor disputed
81,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unnecessary comparison,161,https://github.com/code-423n4/2022-01-notional-findings/issues/161,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unnecessary conversions,163,https://github.com/code-423n4/2022-01-notional-findings/issues/163,notional,2022/01,bug;duplicate;1 (Low Risk)
81,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: getVotingPower from pool balance,164,https://github.com/code-423n4/2022-01-notional-findings/issues/164,notional,2022/01,bug;invalid;sponsor disputed
81,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,TreasuryManager and sNOTE events aren't indexed,131,https://github.com/code-423n4/2022-01-notional-findings/issues/131,notional,2022/01,bug;0 (Non-critical);sponsor confirmed
81,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,0,sNOTE _requireAccountNotInCoolDown comment isn't correct,132,https://github.com/code-423n4/2022-01-notional-findings/issues/132,notional,2022/01,bug;duplicate;0 (Non-critical);sponsor confirmed
81,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,sNOTE.getVotingPower lose some precision in note amount calculations,133,https://github.com/code-423n4/2022-01-notional-findings/issues/133,notional,2022/01,bug;duplicate;1 (Low Risk)
81,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,TreasuryManager._investWETHToBuyNOTE use only relative price slippage control,142,https://github.com/code-423n4/2022-01-notional-findings/issues/142,notional,2022/01,bug;invalid;sponsor disputed
81,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,sNote one sided LP provisions are vulnerable to sandwich attacks,144,https://github.com/code-423n4/2022-01-notional-findings/issues/144,notional,2022/01,bug;duplicate;2 (Med Risk)
81,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,User facing and asset bearing sNOTE contract miss emergency lever,79,https://github.com/code-423n4/2022-01-notional-findings/issues/79,notional,2022/01,bug;duplicate;0 (Non-critical)
81,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,TreasuryManager and sNOTE contracts use unlocked pragma,80,https://github.com/code-423n4/2022-01-notional-findings/issues/80,notional,2022/01,bug;duplicate;invalid
81,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,"Missing core TreasuryManager, sNOTE parameters validation in their setters",81,https://github.com/code-423n4/2022-01-notional-findings/issues/81,notional,2022/01,bug;duplicate;0 (Non-critical)
81,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,TreasuryManager.initialize can be front run,82,https://github.com/code-423n4/2022-01-notional-findings/issues/82,notional,2022/01,bug;duplicate;invalid
81,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,"Prefix (`++i`), rather than postfix (`i++`), increment/decrement operators should be used in for-loops",228,https://github.com/code-423n4/2022-01-notional-findings/issues/228,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Unused constant `BPT_TOKEN_PRECISION` ,101,https://github.com/code-423n4/2022-01-notional-findings/issues/101,notional,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Unused named return variables,135,https://github.com/code-423n4/2022-01-notional-findings/issues/135,notional,2022/01,bug;duplicate;G (Gas Optimization)
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,3,Proxies cannot call the constructor,149,https://github.com/code-423n4/2022-01-notional-findings/issues/149,notional,2022/01,bug;invalid;sponsor disputed
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Long Revert Strings,51,https://github.com/code-423n4/2022-01-notional-findings/issues/51,notional,2022/01,bug;duplicate;G (Gas Optimization)
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,> 0 can be replaced with != 0 for gas optimisation,52,https://github.com/code-423n4/2022-01-notional-findings/issues/52,notional,2022/01,bug;duplicate;invalid
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Adding unchecked directive can save gas ,53,https://github.com/code-423n4/2022-01-notional-findings/issues/53,notional,2022/01,bug;invalid;sponsor acknowledged
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Upgrading the solc compiler to >=0.8 may save gas,54,https://github.com/code-423n4/2022-01-notional-findings/issues/54,notional,2022/01,bug;duplicate;invalid
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Placement of require statement,55,https://github.com/code-423n4/2022-01-notional-findings/issues/55,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Caching variables,56,https://github.com/code-423n4/2022-01-notional-findings/issues/56,notional,2022/01,bug;invalid;sponsor disputed
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Default value,57,https://github.com/code-423n4/2022-01-notional-findings/issues/57,notional,2022/01,bug;duplicate;G (Gas Optimization)
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,uint32 is less efficient than uint256,58,https://github.com/code-423n4/2022-01-notional-findings/issues/58,notional,2022/01,bug;invalid;sponsor disputed
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Checking non-zero value can avoid an external call to save gas,66,https://github.com/code-423n4/2022-01-notional-findings/issues/66,notional,2022/01,bug;duplicate;G (Gas Optimization);sponsor disputed
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,`bptBalance` assignment,67,https://github.com/code-423n4/2022-01-notional-findings/issues/67,notional,2022/01,bug;invalid;sponsor disputed
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Consider making some constants as non-public to save gas,72,https://github.com/code-423n4/2022-01-notional-findings/issues/72,notional,2022/01,bug;invalid;sponsor disputed
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Gas Optimization on the Public Function,73,https://github.com/code-423n4/2022-01-notional-findings/issues/73,notional,2022/01,bug;duplicate;invalid
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Use else if for mutually exclusive conditions,74,https://github.com/code-423n4/2022-01-notional-findings/issues/74,notional,2022/01,bug;invalid;sponsor disputed
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Change encode to encodePacked,75,https://github.com/code-423n4/2022-01-notional-findings/issues/75,notional,2022/01,bug;invalid;sponsor disputed
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,`TreasuryManager.sol` does not use safeApprove,83,https://github.com/code-423n4/2022-01-notional-findings/issues/83,notional,2022/01,bug;duplicate;invalid
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Add zero-address checkers,84,https://github.com/code-423n4/2022-01-notional-findings/issues/84,notional,2022/01,bug;duplicate;0 (Non-critical)
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Consider making contracts Pausable,90,https://github.com/code-423n4/2022-01-notional-findings/issues/90,notional,2022/01,bug;0 (Non-critical);sponsor acknowledged
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Upper limit for set `CoolDownTime`,93,https://github.com/code-423n4/2022-01-notional-findings/issues/93,notional,2022/01,bug;duplicate;2 (Med Risk)
81,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,No upper bound definition for the swap fee,96,https://github.com/code-423n4/2022-01-notional-findings/issues/96,notional,2022/01,bug;duplicate;1 (Low Risk);disagree with severity
81,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,Users Can Deny The Treasury Manager Contract From Claiming `COMP` Incentives,151,https://github.com/code-423n4/2022-01-notional-findings/issues/151,notional,2022/01,bug;duplicate;3 (High Risk);disagree with severity
81,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`_validateOrder` Does Not Allow Anyone To Be A Taker Of An Off-Chain Order,152,https://github.com/code-423n4/2022-01-notional-findings/issues/152,notional,2022/01,bug;2 (Med Risk);sponsor confirmed
81,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Improper Validation Of Chainlink's `latestAnswer` Function,162,https://github.com/code-423n4/2022-01-notional-findings/issues/162,notional,2022/01,bug;duplicate;2 (Med Risk)
81,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`getVotingPower` Is Not Equipped To Handle On-Chain Voting,165,https://github.com/code-423n4/2022-01-notional-findings/issues/165,notional,2022/01,bug;2 (Med Risk);sponsor confirmed
81,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,`getVotingPower` Truncates Result Leading To Inaccuracies In Voting Power,222,https://github.com/code-423n4/2022-01-notional-findings/issues/222,notional,2022/01,bug;1 (Low Risk);sponsor confirmed
81,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,Improper Contract Upgrades Can Lead To Loss Of Contract Ownership,223,https://github.com/code-423n4/2022-01-notional-findings/issues/223,notional,2022/01,bug;0 (Non-critical);sponsor disputed
81,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,`extractTokensForCollateralShortfall` Can Be Frontrun By Non-Stakers,227,https://github.com/code-423n4/2022-01-notional-findings/issues/227,notional,2022/01,bug;1 (Low Risk);sponsor disputed
81,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`sNOTE` Holders Are Not Incetivized To Vote On Proposals To Call `extractTokensForCollateralShortfall`,229,https://github.com/code-423n4/2022-01-notional-findings/issues/229,notional,2022/01,bug;2 (Med Risk);sponsor acknowledged
81,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,A Malicious Treasury Manager Can Burn Treasury Tokens By Setting `makerFee` To The Amount The Maker Receives,230,https://github.com/code-423n4/2022-01-notional-findings/issues/230,notional,2022/01,bug;3 (High Risk);sponsor confirmed
81,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,Users Can Game `sNOTE` Minting If Buybacks Occur Infrequently,231,https://github.com/code-423n4/2022-01-notional-findings/issues/231,notional,2022/01,bug;1 (Low Risk);sponsor acknowledged
81,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use != 0 instead of > 0,13,https://github.com/code-423n4/2022-01-notional-findings/issues/13,notional,2022/01,bug;duplicate;invalid
81,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused inheritance,14,https://github.com/code-423n4/2022-01-notional-findings/issues/14,notional,2022/01,bug;invalid;sponsor disputed
81,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary constructor,15,https://github.com/code-423n4/2022-01-notional-findings/issues/15,notional,2022/01,bug;invalid;sponsor disputed
81,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary default assignment,16,https://github.com/code-423n4/2022-01-notional-findings/issues/16,notional,2022/01,bug;invalid;sponsor disputed
81,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use calldata instead of memory,17,https://github.com/code-423n4/2022-01-notional-findings/issues/17,notional,2022/01,bug;invalid;sponsor disputed
81,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,latestAnswer doesn't check if the value is up to date,200,https://github.com/code-423n4/2022-01-notional-findings/issues/200,notional,2022/01,bug;duplicate;2 (Med Risk)
81,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,slippageLimit = SLIPPAGE_LIMIT_PRECISION,201,https://github.com/code-423n4/2022-01-notional-findings/issues/201,notional,2022/01,bug;invalid;sponsor disputed
81,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Inclusive conditions,202,https://github.com/code-423n4/2022-01-notional-findings/issues/202,notional,2022/01,bug;0 (Non-critical)
81,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Slippage protection,203,https://github.com/code-423n4/2022-01-notional-findings/issues/203,notional,2022/01,bug;duplicate;2 (Med Risk)
81,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unused state variables,204,https://github.com/code-423n4/2022-01-notional-findings/issues/204,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Repeated calculations of the same values,205,https://github.com/code-423n4/2022-01-notional-findings/issues/205,notional,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
81,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Math in _getNOTESpotPrice could consume less gas,206,https://github.com/code-423n4/2022-01-notional-findings/issues/206,notional,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
81,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,Upgrade pragma to save gas,212,https://github.com/code-423n4/2022-01-notional-findings/issues/212,notional,2022/01,bug;duplicate;invalid
81,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,!= 0 is cheaper than 0< for uint,218,https://github.com/code-423n4/2022-01-notional-findings/issues/218,notional,2022/01,bug;duplicate;invalid
81,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Approve won't work if using USDT as token,220,https://github.com/code-423n4/2022-01-notional-findings/issues/220,notional,2022/01,bug;duplicate;invalid;disagree with severity;sponsor confirmed
81,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,3,TreasuryManager uses the eth balance for core functionalities but doesn't have any payable function,224,https://github.com/code-423n4/2022-01-notional-findings/issues/224,notional,2022/01,bug;duplicate;invalid;sponsor disputed
81,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,Check is made twice,225,https://github.com/code-423n4/2022-01-notional-findings/issues/225,notional,2022/01,bug;invalid;sponsor confirmed
81,PranavG,0xFcBA1fEad1fab64228ae26dd3049fd6685a00030,2,TreasuryManager.approveToken ERC20 missing return value check,77,https://github.com/code-423n4/2022-01-notional-findings/issues/77,notional,2022/01,bug;duplicate;0 (Non-critical)
81,PranavG,0xFcBA1fEad1fab64228ae26dd3049fd6685a00030,1,The `TreasuryManager` contract will never have ETH balance,78,https://github.com/code-423n4/2022-01-notional-findings/issues/78,notional,2022/01,bug;invalid;sponsor disputed
81,Randyyy,0x8a59f36d7d44460418781ded3d1cA45e19F2Ab02,G,save pendingOwner to memry first,145,https://github.com/code-423n4/2022-01-notional-findings/issues/145,notional,2022/01,bug;invalid;sponsor disputed
81,Randyyy,0x8a59f36d7d44460418781ded3d1cA45e19F2Ab02,2,"use safeApprove, instead of approve",146,https://github.com/code-423n4/2022-01-notional-findings/issues/146,notional,2022/01,bug;invalid;disagree with severity
81,Randyyy,0x8a59f36d7d44460418781ded3d1cA45e19F2Ab02,1,transaction must revert on fail signature,147,https://github.com/code-423n4/2022-01-notional-findings/issues/147,notional,2022/01,bug;invalid;sponsor disputed
81,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,gas optimisation on nonReentant() modifier,207,https://github.com/code-423n4/2022-01-notional-findings/issues/207,notional,2022/01,bug;invalid;sponsor disputed
81,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,using multiple require rather than &&,208,https://github.com/code-423n4/2022-01-notional-findings/issues/208,notional,2022/01,bug;invalid;sponsor disputed
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Caching array length can save gas,10,https://github.com/code-423n4/2022-01-notional-findings/issues/10,notional,2022/01,bug;duplicate;invalid
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Upgrade pragma to at least 0.8.4,11,https://github.com/code-423n4/2022-01-notional-findings/issues/11,notional,2022/01,bug;duplicate;invalid
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Check if amount is not zero to save gas,12,https://github.com/code-423n4/2022-01-notional-findings/issues/12,notional,2022/01,bug;invalid;sponsor disputed
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with empty message,18,https://github.com/code-423n4/2022-01-notional-findings/issues/18,notional,2022/01,bug;0 (Non-critical);disagree with severity
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Must approve 0 first,19,https://github.com/code-423n4/2022-01-notional-findings/issues/19,notional,2022/01,bug;duplicate;invalid
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove of openZeppelin is deprecated,20,https://github.com/code-423n4/2022-01-notional-findings/issues/20,notional,2022/01,bug;duplicate;0 (Non-critical)
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Solidity compiler versions mismatch,21,https://github.com/code-423n4/2022-01-notional-findings/issues/21,notional,2022/01,bug;invalid;sponsor disputed
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Use safe math for solidity version <8,22,https://github.com/code-423n4/2022-01-notional-findings/issues/22,notional,2022/01,bug;invalid;sponsor disputed
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Init frontrun,23,https://github.com/code-423n4/2022-01-notional-findings/issues/23,notional,2022/01,bug;duplicate;invalid
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Named return issue,24,https://github.com/code-423n4/2022-01-notional-findings/issues/24,notional,2022/01,bug;duplicate;disagree with severity;G (Gas Optimization)
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Two Steps Verification before Transferring Ownership,25,https://github.com/code-423n4/2022-01-notional-findings/issues/25,notional,2022/01,bug;invalid;sponsor disputed
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Missing non reentrancy modifier,26,https://github.com/code-423n4/2022-01-notional-findings/issues/26,notional,2022/01,bug;invalid;sponsor disputed
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Never used parameters,27,https://github.com/code-423n4/2022-01-notional-findings/issues/27,notional,2022/01,bug;invalid;sponsor confirmed
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Anyone can withdraw others,28,https://github.com/code-423n4/2022-01-notional-findings/issues/28,notional,2022/01,bug;invalid;sponsor disputed
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified input,29,https://github.com/code-423n4/2022-01-notional-findings/issues/29,notional,2022/01,bug;duplicate;0 (Non-critical)
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused imports,3,https://github.com/code-423n4/2022-01-notional-findings/issues/3,notional,2022/01,bug;invalid;sponsor disputed
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,approve return value is ignored,30,https://github.com/code-423n4/2022-01-notional-findings/issues/30,notional,2022/01,bug;duplicate;0 (Non-critical)
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,3,Usage of an incorrect version of Ownbale library can potentially malfunction all onlyOwner functions,31,https://github.com/code-423n4/2022-01-notional-findings/issues/31,notional,2022/01,bug;duplicate;0 (Non-critical);sponsor disputed
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused state variables,4,https://github.com/code-423n4/2022-01-notional-findings/issues/4,notional,2022/01,bug;invalid;sponsor disputed
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused declared local variables,5,https://github.com/code-423n4/2022-01-notional-findings/issues/5,notional,2022/01,bug;invalid;sponsor disputed
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Internal functions to private,6,https://github.com/code-423n4/2022-01-notional-findings/issues/6,notional,2022/01,bug;invalid;sponsor disputed
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,7,https://github.com/code-423n4/2022-01-notional-findings/issues/7,notional,2022/01,bug;duplicate;invalid
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,8,https://github.com/code-423n4/2022-01-notional-findings/issues/8,notional,2022/01,bug;invalid;sponsor disputed
81,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Prefix increments are cheaper than postfix increments,9,https://github.com/code-423n4/2022-01-notional-findings/issues/9,notional,2022/01,bug;duplicate;G (Gas Optimization)
81,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,TreasuryAction doesn't set the owner state variable but uses `onlyOwner()` modifier,139,https://github.com/code-423n4/2022-01-notional-findings/issues/139,notional,2022/01,bug;duplicate;invalid
81,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Can't call `initializer` modifier twice within a contract,140,https://github.com/code-423n4/2022-01-notional-findings/issues/140,notional,2022/01,bug;duplicate;invalid
81,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,1,Attacker can front-run calls to the `initialize()` function.,141,https://github.com/code-423n4/2022-01-notional-findings/issues/141,notional,2022/01,bug;invalid
81,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,TreasuryManager seems to expect to have ETH but has no payable function,143,https://github.com/code-423n4/2022-01-notional-findings/issues/143,notional,2022/01,bug;duplicate;invalid;sponsor disputed
81,samruna,0x25Ef4a7B846Fe7ad6cFE2609EE8196C4627AAf99,3,Reservebuffer can be infinite amount,117,https://github.com/code-423n4/2022-01-notional-findings/issues/117,notional,2022/01,bug;invalid;sponsor disputed
81,samruna,0x25Ef4a7B846Fe7ad6cFE2609EE8196C4627AAf99,3,Gas fee exortion,119,https://github.com/code-423n4/2022-01-notional-findings/issues/119,notional,2022/01,bug;invalid;sponsor disputed
81,samruna,0x25Ef4a7B846Fe7ad6cFE2609EE8196C4627AAf99,2,Usage of onlyOwner,120,https://github.com/code-423n4/2022-01-notional-findings/issues/120,notional,2022/01,bug;invalid;sponsor disputed
81,samruna,0x25Ef4a7B846Fe7ad6cFE2609EE8196C4627AAf99,3,Permission control implementation for safeTransferFrom,121,https://github.com/code-423n4/2022-01-notional-findings/issues/121,notional,2022/01,bug;invalid;sponsor disputed
81,samruna,0x9aDA3Ba6A2C82152564dF7A22238E286E10e0A6B,2,zero check for cooldownperiod,148,https://github.com/code-423n4/2022-01-notional-findings/issues/148,notional,2022/01,bug;invalid;sponsor disputed
81,samruna,0x9aDA3Ba6A2C82152564dF7A22238E286E10e0A6B,3,No upper limit check on swap fee Percentage,182,https://github.com/code-423n4/2022-01-notional-findings/issues/182,notional,2022/01,bug;1 (Low Risk);disagree with severity
81,samruna,0xf683FD3207e0882E6B27021620f873E79f6fe689,2,Improper use of public,183,https://github.com/code-423n4/2022-01-notional-findings/issues/183,notional,2022/01,bug;duplicate;invalid;disagree with severity
81,samruna,0xf683FD3207e0882E6B27021620f873E79f6fe689,2,Remove unused code,184,https://github.com/code-423n4/2022-01-notional-findings/issues/184,notional,2022/01,bug;duplicate;disagree with severity;G (Gas Optimization)
81,samruna,0xf683FD3207e0882E6B27021620f873E79f6fe689,3,Reentrant nature of setReservealance can lead to gas fee exhaustion,185,https://github.com/code-423n4/2022-01-notional-findings/issues/185,notional,2022/01,bug;invalid;sponsor disputed
81,samruna,0xf683FD3207e0882E6B27021620f873E79f6fe689,3,Overflow not handled,186,https://github.com/code-423n4/2022-01-notional-findings/issues/186,notional,2022/01,bug;invalid;sponsor disputed
81,ShippooorDAO,0xac201e6de08a7b08ba0f7c08313d5655300cceef,0,TreasuryManager.refundGasPrice is unset,38,https://github.com/code-423n4/2022-01-notional-findings/issues/38,notional,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
81,ShippooorDAO,0xac201e6de08a7b08ba0f7c08313d5655300cceef,1,Cooldown and redeem windows can be rendered useless.,68,https://github.com/code-423n4/2022-01-notional-findings/issues/68,notional,2022/01,bug;3 (High Risk);disagree with severity;sponsor confirmed
81,ShippooorDAO,0xac201e6de08a7b08ba0f7c08313d5655300cceef,1,Cooldown and redeem window can be rendered useless,69,https://github.com/code-423n4/2022-01-notional-findings/issues/69,notional,2022/01,bug;duplicate;invalid
81,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Revert string > 32 bytes,110,https://github.com/code-423n4/2022-01-notional-findings/issues/110,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Remove unnecessary super._beforeTokenTransfer(),112,https://github.com/code-423n4/2022-01-notional-findings/issues/112,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,`stopCoolDown()` function can be external,113,https://github.com/code-423n4/2022-01-notional-findings/issues/113,notional,2022/01,bug;invalid;sponsor confirmed
81,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,safeApprove deprecated,114,https://github.com/code-423n4/2022-01-notional-findings/issues/114,notional,2022/01,bug;duplicate;0 (Non-critical)
81,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,`approve()` return value not checked,115,https://github.com/code-423n4/2022-01-notional-findings/issues/115,notional,2022/01,bug;0 (Non-critical)
81,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,Use of deprecated Chainlink `latestAnswer()`,116,https://github.com/code-423n4/2022-01-notional-findings/issues/116,notional,2022/01,bug;duplicate;2 (Med Risk)
81,solgryn,0x2AD67e56D4Bbe60F042A7b288f2A1CEdD7708493,G,"""> 0"" is less efficient than ""!= 0"" for unsigned integers",2,https://github.com/code-423n4/2022-01-notional-findings/issues/2,notional,2022/01,bug;invalid;sponsor confirmed
81,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,1,Missing validation check in totalSupply(),170,https://github.com/code-423n4/2022-01-notional-findings/issues/170,notional,2022/01,bug;1 (Low Risk);sponsor confirmed
81,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,2,Multiple Missing zero address checks ,174,https://github.com/code-423n4/2022-01-notional-findings/issues/174,notional,2022/01,bug;0 (Non-critical);disagree with severity
81,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,1,Missing return value check in approve for approveToken function call,175,https://github.com/code-423n4/2022-01-notional-findings/issues/175,notional,2022/01,bug;duplicate;0 (Non-critical)
81,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,G,Functions can marked as external for transferOwnership and claimOwnership instead of public to save gas,176,https://github.com/code-423n4/2022-01-notional-findings/issues/176,notional,2022/01,bug;invalid;sponsor confirmed
81,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,G,Multiple Unused variables ,180,https://github.com/code-423n4/2022-01-notional-findings/issues/180,notional,2022/01,bug;duplicate;G (Gas Optimization);sponsor disputed
81,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Preincrement in for loop saves gas,166,https://github.com/code-423n4/2022-01-notional-findings/issues/166,notional,2022/01,bug;duplicate;G (Gas Optimization)
81,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Accessing array length in for loop is costly.,167,https://github.com/code-423n4/2022-01-notional-findings/issues/167,notional,2022/01,bug;duplicate;invalid
81,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Unnecessary default value assignments cost gas.,168,https://github.com/code-423n4/2022-01-notional-findings/issues/168,notional,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
81,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,1,Unused storage variables may indicate flaws or oversight in smart contract implementation.,169,https://github.com/code-423n4/2022-01-notional-findings/issues/169,notional,2022/01,bug;duplicate;G (Gas Optimization)
81,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Require statement on nonzero pool address is impossible to fail ,39,https://github.com/code-423n4/2022-01-notional-findings/issues/39,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,2,No upper limit on `coolDownTimeInSeconds` allows funds to be locked sNOTE owner.,40,https://github.com/code-423n4/2022-01-notional-findings/issues/40,notional,2022/01,bug;2 (Med Risk)
81,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,0,"`mintFromNOTE`, `mintFromETH` and `mintFromWETH` can be merged into two functions to give users better experience.",41,https://github.com/code-423n4/2022-01-notional-findings/issues/41,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,0,Comment refers to NOTE when it means WETH,42,https://github.com/code-423n4/2022-01-notional-findings/issues/42,notional,2022/01,bug;0 (Non-critical);sponsor confirmed
81,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,coolDown.redeemWindowEnd serves no purpose,43,https://github.com/code-423n4/2022-01-notional-findings/issues/43,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Calculation of spot price can be simplified further,44,https://github.com/code-423n4/2022-01-notional-findings/issues/44,notional,2022/01,bug;duplicate;invalid;G (Gas Optimization)
81,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Initialisation of zero entries in arrays is unnecessary,59,https://github.com/code-423n4/2022-01-notional-findings/issues/59,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Duplicated cooldown check in _mint,60,https://github.com/code-423n4/2022-01-notional-findings/issues/60,notional,2022/01,bug;duplicate;G (Gas Optimization)
81,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Unnecessary check on cooldown status of zero address,61,https://github.com/code-423n4/2022-01-notional-findings/issues/61,notional,2022/01,bug;invalid;sponsor confirmed
81,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,0,Unnecessary inheritance messing with inheritance tree.,62,https://github.com/code-423n4/2022-01-notional-findings/issues/62,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,2,Lack of slippage protection on minting sNOTE from underlying assets.,64,https://github.com/code-423n4/2022-01-notional-findings/issues/64,notional,2022/01,bug;duplicate;2 (Med Risk)
81,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,`_investWETHToBuyNOTE` is unnecessarily roundabout.,65,https://github.com/code-423n4/2022-01-notional-findings/issues/65,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,2,Chainlink oracle query in `_validateOrder` does not check that response is fresh,70,https://github.com/code-423n4/2022-01-notional-findings/issues/70,notional,2022/01,bug;duplicate;2 (Med Risk)
81,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,1,Conversions between sNOTE and BPT when burning cause less sNOTE to be burned than expected,71,https://github.com/code-423n4/2022-01-notional-findings/issues/71,notional,2022/01,bug;1 (Low Risk);sponsor confirmed
81,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,considered changing it to storage ,210,https://github.com/code-423n4/2022-01-notional-findings/issues/210,notional,2022/01,bug;G (Gas Optimization);sponsor disputed
81,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Optimization on _redeemAndTransfer,213,https://github.com/code-423n4/2022-01-notional-findings/issues/213,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Double _requireAccountNotInCoolDown,214,https://github.com/code-423n4/2022-01-notional-findings/issues/214,notional,2022/01,bug;G (Gas Optimization);sponsor confirmed
81,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,call currencies.length from memory can save gas,221,https://github.com/code-423n4/2022-01-notional-findings/issues/221,notional,2022/01,bug;invalid;sponsor confirmed
81,UncleGrandpa925,0x171ea6acDdA2Cb411E4763d71e91b10d96B64f81,2,"Possible Sandwich attack on mintFromNOTE, mintFromETH & mintFromWETH in sNOTE.sol",171,https://github.com/code-423n4/2022-01-notional-findings/issues/171,notional,2022/01,bug;duplicate;2 (Med Risk)
81,UncleGrandpa925,0x171ea6acDdA2Cb411E4763d71e91b10d96B64f81,3,Lack of receive & payable fallback causes redemption of cEther in TreasuryAction to always revert,172,https://github.com/code-423n4/2022-01-notional-findings/issues/172,notional,2022/01,bug;invalid;sponsor disputed
81,UncleGrandpa925,0x171ea6acDdA2Cb411E4763d71e91b10d96B64f81,2,Use of deprecated Chainlink's latestAnswer API,177,https://github.com/code-423n4/2022-01-notional-findings/issues/177,notional,2022/01,bug;duplicate;2 (Med Risk)
81,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Use of deprecated Chainlink function `latestAnswer`,178,https://github.com/code-423n4/2022-01-notional-findings/issues/178,notional,2022/01,bug;duplicate;2 (Med Risk);sponsor confirmed
81,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused constant variable,179,https://github.com/code-423n4/2022-01-notional-findings/issues/179,notional,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
81,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`sNOTE.sol#_mintFromAssets()` Lack of slippage control,181,https://github.com/code-423n4/2022-01-notional-findings/issues/181,notional,2022/01,bug;2 (Med Risk);sponsor confirmed
81,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,2,Missing owner setting in TreasuryAction,63,https://github.com/code-423n4/2022-01-notional-findings/issues/63,notional,2022/01,bug;invalid;sponsor disputed
72,0v3rf10w,0x2c722A1F2f78105DBD5523292B735242Bd90B8Ed,0,Tidak ada bug sama sekali,1,https://github.com/code-423n4/2022-01-openleverage-findings/issues/1,openleverage,2022/01,bug;invalid;0 (Non-critical)
72,0v3rf10w,0x0009871B9ffDE5D94ad98bb5880c7EBB8314fB2b,G,Wallet issue to many tine,188,https://github.com/code-423n4/2022-01-openleverage-findings/issues/188,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,1,Missing zero checks at multiple places,267,https://github.com/code-423n4/2022-01-openleverage-findings/issues/267,openleverage,2022/01,bug;duplicate;0 (Non-critical)
72,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,1,Incorrect require(),268,https://github.com/code-423n4/2022-01-openleverage-findings/issues/268,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,1,variable shadowing,269,https://github.com/code-423n4/2022-01-openleverage-findings/issues/269,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,1,Multiple potential reentrancies,270,https://github.com/code-423n4/2022-01-openleverage-findings/issues/270,openleverage,2022/01,bug;0 (Non-critical);sponsor acknowledged
72,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,1,Returns ingnored,271,https://github.com/code-423n4/2022-01-openleverage-findings/issues/271,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Optimize `OpenLevV1.sol#addMarket`,250,https://github.com/code-423n4/2022-01-openleverage-findings/issues/250,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving optimizing for,113,https://github.com/code-423n4/2022-01-openleverage-findings/issues/113,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving using immutable,114,https://github.com/code-423n4/2022-01-openleverage-findings/issues/114,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving optimizing setImplementation,115,https://github.com/code-423n4/2022-01-openleverage-findings/issues/115,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving optimizing storage,116,https://github.com/code-423n4/2022-01-openleverage-findings/issues/116,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unchecked returns,192,https://github.com/code-423n4/2022-01-openleverage-findings/issues/192,openleverage,2022/01,bug;invalid;1 (Low Risk);sponsor acknowledged
72,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Safe transfers are vulnerable to EOA calls,194,https://github.com/code-423n4/2022-01-openleverage-findings/issues/194,openleverage,2022/01,bug;invalid;3 (High Risk)
72,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Admin can initialize the contracts multiple times,196,https://github.com/code-423n4/2022-01-openleverage-findings/issues/196,openleverage,2022/01,bug;duplicate;0 (Non-critical)
72,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Wrong reward calculation,197,https://github.com/code-423n4/2022-01-openleverage-findings/issues/197,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Misc,198,https://github.com/code-423n4/2022-01-openleverage-findings/issues/198,openleverage,2022/01,bug;0 (Non-critical);sponsor acknowledged
72,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Drain of funds by reentrancy in OpenLevV1.addMarket,199,https://github.com/code-423n4/2022-01-openleverage-findings/issues/199,openleverage,2022/01,bug;invalid;3 (High Risk)
72,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Controller can drain OpenLevV1 funds,200,https://github.com/code-423n4/2022-01-openleverage-findings/issues/200,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,ACai,0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,G,The visibility of some functions should be changed to external.,90,https://github.com/code-423n4/2022-01-openleverage-findings/issues/90,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Acuel,0x383fB5E4D0EE6bD11B4b9053e45d255B2197a5F1,2,Open Leverage,166,https://github.com/code-423n4/2022-01-openleverage-findings/issues/166,openleverage,2022/01,bug;invalid
72,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,No Transfer Ownership Pattern,65,https://github.com/code-423n4/2022-01-openleverage-findings/issues/65,openleverage,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
72,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,The initialize function can be called multiple times,67,https://github.com/code-423n4/2022-01-openleverage-findings/issues/67,openleverage,2022/01,bug;0 (Non-critical)
72,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Race condition in approve(),87,https://github.com/code-423n4/2022-01-openleverage-findings/issues/87,openleverage,2022/01,bug;1 (Low Risk);sponsor acknowledged
72,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Missing 0 address check,89,https://github.com/code-423n4/2022-01-openleverage-findings/issues/89,openleverage,2022/01,bug;duplicate;0 (Non-critical)
72,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Anyone can claim airdrop amounts on behalf of anyone,107,https://github.com/code-423n4/2022-01-openleverage-findings/issues/107,openleverage,2022/01,bug;1 (Low Risk);sponsor acknowledged
72,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas savings and corrections,212,https://github.com/code-423n4/2022-01-openleverage-findings/issues/212,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,Fund loss,213,https://github.com/code-423n4/2022-01-openleverage-findings/issues/213,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,Extra reward will be given,214,https://github.com/code-423n4/2022-01-openleverage-findings/issues/214,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,User reward can get stuck,215,https://github.com/code-423n4/2022-01-openleverage-findings/issues/215,openleverage,2022/01,bug;1 (Low Risk);sponsor acknowledged
72,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Checks missing while adding rewards,216,https://github.com/code-423n4/2022-01-openleverage-findings/issues/216,openleverage,2022/01,bug;invalid;2 (Med Risk)
72,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,0,Last reward is discarded when reward added twice,218,https://github.com/code-423n4/2022-01-openleverage-findings/issues/218,openleverage,2022/01,bug;0 (Non-critical);sponsor acknowledged
72,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Funds can be lost,220,https://github.com/code-423n4/2022-01-openleverage-findings/issues/220,openleverage,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
72,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Delete - ABI Coder V2 For Gas Optimization,224,https://github.com/code-423n4/2022-01-openleverage-findings/issues/224,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Use of ecrecover is susceptible to signature malleability,226,https://github.com/code-423n4/2022-01-openleverage-findings/issues/226,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Redundant code (updateV3Observation function),227,https://github.com/code-423n4/2022-01-openleverage-findings/issues/227,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Safe Approve Function Is Deprecated - safeIncreaseAllowance and safeDecreaseAllowance commented out,229,https://github.com/code-423n4/2022-01-openleverage-findings/issues/229,openleverage,2022/01,bug;duplicate;1 (Low Risk)
72,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Token Lock Contract Missing Sanity Check On The Time Interval,230,https://github.com/code-423n4/2022-01-openleverage-findings/issues/230,openleverage,2022/01,bug;duplicate;1 (Low Risk)
72,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Unused Re-entrancy Guard,232,https://github.com/code-423n4/2022-01-openleverage-findings/issues/232,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Eth sent to Timelock will be locked in current implementation,80,https://github.com/code-423n4/2022-01-openleverage-findings/issues/80,openleverage,2022/01,bug;2 (Med Risk);sponsor acknowledged
72,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,81,https://github.com/code-423n4/2022-01-openleverage-findings/issues/81,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,++i is more gas efficient than i++ in loops forwarding,91,https://github.com/code-423n4/2022-01-openleverage-findings/issues/91,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Cache array length in for loops can save gas,92,https://github.com/code-423n4/2022-01-openleverage-findings/issues/92,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use `calldata` instead of `memory` for function parameters,93,https://github.com/code-423n4/2022-01-openleverage-findings/issues/93,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Improper Use of assert Keyword,94,https://github.com/code-423n4/2022-01-openleverage-findings/issues/94,openleverage,2022/01,bug;duplicate;1 (Low Risk)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `++i` costs less gas compared to `i++`,118,https://github.com/code-423n4/2022-01-openleverage-findings/issues/118,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Usage of assert() instead of require(),119,https://github.com/code-423n4/2022-01-openleverage-findings/issues/119,openleverage,2022/01,bug;duplicate;1 (Low Risk)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Prevent accidentally burning tokens,120,https://github.com/code-423n4/2022-01-openleverage-findings/issues/120,openleverage,2022/01,bug;invalid;0 (Non-critical)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`Airdrop.sol`: `transferOwnership` should be a two-step process,122,https://github.com/code-423n4/2022-01-openleverage-findings/issues/122,openleverage,2022/01,bug;duplicate;0 (Non-critical)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"Gas: ""constants"" expressions are expressions, not constants. Use ""immutable"" instead.",123,https://github.com/code-423n4/2022-01-openleverage-findings/issues/123,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Bytes constants are more efficient than string constants,124,https://github.com/code-423n4/2022-01-openleverage-findings/issues/124,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: No need to initialize variables with default values,125,https://github.com/code-423n4/2022-01-openleverage-findings/issues/125,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: An array's length should be cached to save gas in for-loops,126,https://github.com/code-423n4/2022-01-openleverage-findings/issues/126,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Reduce the size of error messages (Long revert Strings),127,https://github.com/code-423n4/2022-01-openleverage-findings/issues/127,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Mark functions as payable when users can't mistakenly send ETH,128,https://github.com/code-423n4/2022-01-openleverage-findings/issues/128,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Upgrade pragma to at least 0.8.4,129,https://github.com/code-423n4/2022-01-openleverage-findings/issues/129,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Use safeTransfer/safeTransferFrom instead of transfer/transferFrom,130,https://github.com/code-423n4/2022-01-openleverage-findings/issues/130,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Shift Right instead of Dividing by 2,131,https://github.com/code-423n4/2022-01-openleverage-findings/issues/131,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"Gas: Tautology on ""variable >= 0"" which is always true as variable is uint",132,https://github.com/code-423n4/2022-01-openleverage-findings/issues/132,openleverage,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `> 0` is less efficient than `!= 0` for unsigned integers (with proof),133,https://github.com/code-423n4/2022-01-openleverage-findings/issues/133,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Missing checks for non-zero transfer value calls,134,https://github.com/code-423n4/2022-01-openleverage-findings/issues/134,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Use `calldata` instead of `memory` for external functions where the function argument is read-only.,135,https://github.com/code-423n4/2022-01-openleverage-findings/issues/135,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `OpenLevV1Lib.sol`: Avoid expensive calculation with a strict inequality,136,https://github.com/code-423n4/2022-01-openleverage-findings/issues/136,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Adminable.sol:acceptAdmin()`: SLOADs minimization,137,https://github.com/code-423n4/2022-01-openleverage-findings/issues/137,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimization: Tight variable packing in `ControllerStorage.sol`,138,https://github.com/code-423n4/2022-01-openleverage-findings/issues/138,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimization: Tight variable packing in `Timelock.sol`,139,https://github.com/code-423n4/2022-01-openleverage-findings/issues/139,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimization: Tight variable packing in `LPoolStorage.sol`,140,https://github.com/code-423n4/2022-01-openleverage-findings/issues/140,openleverage,2022/01,bug;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimization: Tight variable packing in `struct CloseTradeVars`,141,https://github.com/code-423n4/2022-01-openleverage-findings/issues/141,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimization: Tight variable packing in `struct LiquidateVars`,142,https://github.com/code-423n4/2022-01-openleverage-findings/issues/142,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimization: Tight variable packing in `struct MarginRatioVars`,143,https://github.com/code-423n4/2022-01-openleverage-findings/issues/143,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimization: Tight variable packing in `struct Proposal`,144,https://github.com/code-423n4/2022-01-openleverage-findings/issues/144,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimization in `ControllerV1.sol:initDistribution()`,145,https://github.com/code-423n4/2022-01-openleverage-findings/issues/145,openleverage,2022/01,bug;invalid;G (Gas Optimization);sponsor acknowledged
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`ControllerStorage`: related market data should be grouped in a struct,146,https://github.com/code-423n4/2022-01-openleverage-findings/issues/146,openleverage,2022/01,bug;0 (Non-critical)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Initializers are callable multiple times accross the solution,147,https://github.com/code-423n4/2022-01-openleverage-findings/issues/147,openleverage,2022/01,bug;duplicate;0 (Non-critical)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LPool.sol:availableForBorrow()`: Avoid expensive calculation with an inclusive inequality,148,https://github.com/code-423n4/2022-01-openleverage-findings/issues/148,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`NewPendingAdmin` event is emitting a storage value,149,https://github.com/code-423n4/2022-01-openleverage-findings/issues/149,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`NewAdmin` event is emitting a storage value,150,https://github.com/code-423n4/2022-01-openleverage-findings/issues/150,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`NewDelay` event is emitting a storage value,151,https://github.com/code-423n4/2022-01-openleverage-findings/issues/151,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `OLEToken.sol:constructor()`: `totalSupply` should get cached,152,https://github.com/code-423n4/2022-01-openleverage-findings/issues/152,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `// Shh - currently unused`,153,https://github.com/code-423n4/2022-01-openleverage-findings/issues/153,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `ControllerV1.updateDistribution()`: `distribution.duration` should get cached,154,https://github.com/code-423n4/2022-01-openleverage-findings/issues/154,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `GovernorAlpha.propose()`: `proposalCount` should get cached,161,https://github.com/code-423n4/2022-01-openleverage-findings/issues/161,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,The check for ignoring `hAvgPrice` should be inclusive,162,https://github.com/code-423n4/2022-01-openleverage-findings/issues/162,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`UniV3Dex.calcAvgPrices()` can get inlined,163,https://github.com/code-423n4/2022-01-openleverage-findings/issues/163,openleverage,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,The check for `max rate 1000 ole` should be inclusive,164,https://github.com/code-423n4/2022-01-openleverage-findings/issues/164,openleverage,2022/01,bug;1 (Low Risk);sponsor acknowledged
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `FarmingPools.lastTimeRewardApplicable()`: `periodFinish` should get cached,165,https://github.com/code-423n4/2022-01-openleverage-findings/issues/165,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `XOLE.totalSupplyAt()`: `totalSupplyNumCheckpoints` should get cached,167,https://github.com/code-423n4/2022-01-openleverage-findings/issues/167,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `XOLE.create_lock()`: `WEEK` should get cached,168,https://github.com/code-423n4/2022-01-openleverage-findings/issues/168,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `XOLE.increase_unlock_time()`: `WEEK` should get cached,169,https://github.com/code-423n4/2022-01-openleverage-findings/issues/169,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `OpenLevV1Lib.updatePrice()`: `market.token0` and `market.token1` should get cached,170,https://github.com/code-423n4/2022-01-openleverage-findings/issues/170,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `OpenLevV1.marginTrade()`: SLOADs minimization,171,https://github.com/code-423n4/2022-01-openleverage-findings/issues/171,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `OpenLevV1.closeTrade()`: `trade.held` should get cached,172,https://github.com/code-423n4/2022-01-openleverage-findings/issues/172,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `OpenLevV1.toMarketVar()`: `market.token0` and `market.token1` should get cached,173,https://github.com/code-423n4/2022-01-openleverage-findings/issues/173,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `OpenLevV1.moveInsurance()`: `market.token0` and `market.token1` should get cached,174,https://github.com/code-423n4/2022-01-openleverage-findings/issues/174,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`NewImplementation` event is emitting a storage value,175,https://github.com/code-423n4/2022-01-openleverage-findings/issues/175,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`LPoolDelegator:NewImplementation` event is emitting a storage value,176,https://github.com/code-423n4/2022-01-openleverage-findings/issues/176,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`NewBorrowCapFactorMantissa` event is emitting a storage value,177,https://github.com/code-423n4/2022-01-openleverage-findings/issues/177,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`DexAggregatorDelegator:NewImplementation` event is emitting a storage value,178,https://github.com/code-423n4/2022-01-openleverage-findings/issues/178,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Airdrop.newTranche()`: calculation should be done in cache,179,https://github.com/code-423n4/2022-01-openleverage-findings/issues/179,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `ControllerV1.createLPoolPair()`: SLOADs minimization,180,https://github.com/code-423n4/2022-01-openleverage-findings/issues/180,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `OLETokenLock.releaseInternal()`: `releaseVars[beneficiary].endTime` should get cached,181,https://github.com/code-423n4/2022-01-openleverage-findings/issues/181,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `OLETokenLock.transferTo()`: `releaseVars[beneficiary].startTime` should get cached,182,https://github.com/code-423n4/2022-01-openleverage-findings/issues/182,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `GovernorAlpha.state()`: `proposal.startBlock` and `proposal.eta` should get cached,183,https://github.com/code-423n4/2022-01-openleverage-findings/issues/183,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LPool.availableForBorrow()`: `totalBorrows` should get cached,184,https://github.com/code-423n4/2022-01-openleverage-findings/issues/184,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LPool.calCurrentBorrowIndex()`: `borrowIndex` should get cached,185,https://github.com/code-423n4/2022-01-openleverage-findings/issues/185,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LPool.getBorrowRateInternal()`: `kink` should get cached,186,https://github.com/code-423n4/2022-01-openleverage-findings/issues/186,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LPool.initialize()`: `underlying_` should be used instead of `underlying`,187,https://github.com/code-423n4/2022-01-openleverage-findings/issues/187,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,TransferHelper: safeTransfer/safeTransferFrom are not safe,189,https://github.com/code-423n4/2022-01-openleverage-findings/issues/189,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Missing zero address validation,190,https://github.com/code-423n4/2022-01-openleverage-findings/issues/190,openleverage,2022/01,bug;duplicate;0 (Non-critical)
72,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Using the logical NOT operator `!` is cheaper than a comparison to the constant boolean value `false`,191,https://github.com/code-423n4/2022-01-openleverage-findings/issues/191,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,cheaper to change require to toSend,235,https://github.com/code-423n4/2022-01-openleverage-findings/issues/235,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,1,function initialize can be call multipletime,256,https://github.com/code-423n4/2022-01-openleverage-findings/issues/256,openleverage,2022/01,bug;duplicate;0 (Non-critical)
72,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,2,transferAllowed does not fail,83,https://github.com/code-423n4/2022-01-openleverage-findings/issues/83,openleverage,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
72,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,1,misleading comment in accrueInterest(),84,https://github.com/code-423n4/2022-01-openleverage-findings/issues/84,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,G,totalSupply doesn't need to be reassigned in exchangeRateStoredInternal(),85,https://github.com/code-423n4/2022-01-openleverage-findings/issues/85,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unnecessary check,217,https://github.com/code-423n4/2022-01-openleverage-findings/issues/217,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: `> 0` is less efficient than `!= 0` for uint in require condition,219,https://github.com/code-423n4/2022-01-openleverage-findings/issues/219,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Variables that could be set immutable,222,https://github.com/code-423n4/2022-01-openleverage-findings/issues/222,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Upgrade to Solidity ^0.8.4,223,https://github.com/code-423n4/2022-01-openleverage-findings/issues/223,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: No need to use SafeMath everywhere,225,https://github.com/code-423n4/2022-01-openleverage-findings/issues/225,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,transfer() may break in future ETH upgrade,228,https://github.com/code-423n4/2022-01-openleverage-findings/issues/228,openleverage,2022/01,bug;1 (Low Risk);sponsor confirmed
72,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,anti-flashloan mechanism may lead to protocol default,233,https://github.com/code-423n4/2022-01-openleverage-findings/issues/233,openleverage,2022/01,bug;2 (Med Risk)
72,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Redundant check,236,https://github.com/code-423n4/2022-01-openleverage-findings/issues/236,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Unable to withdraw if block.number > 32-bit,252,https://github.com/code-423n4/2022-01-openleverage-findings/issues/252,openleverage,2022/01,bug;invalid;2 (Med Risk)
72,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,G,OpenLevV1.closeTrade can save trade.deposited to memory,102,https://github.com/code-423n4/2022-01-openleverage-findings/issues/102,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,DEX sell taxes are unused and can be removed,103,https://github.com/code-423n4/2022-01-openleverage-findings/issues/103,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,2,OpenLevV1.closeTrade with V3 DEX doesn't correctly accounts fee on transfer tokens for repayments,104,https://github.com/code-423n4/2022-01-openleverage-findings/issues/104,openleverage,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
72,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,UniV2Dex and UniV2ClassDex use hard coded factory addresses for Pair and PairFees getters,64,https://github.com/code-423n4/2022-01-openleverage-findings/issues/64,openleverage,2022/01,bug;1 (Low Risk);sponsor acknowledged
72,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,3,OpenLevV1 and XOLE contracts can be reinitialized,74,https://github.com/code-423n4/2022-01-openleverage-findings/issues/74,openleverage,2022/01,bug;duplicate;0 (Non-critical)
72,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,3,"OpenLevV1Lib's and LPool's doTransferOut functions call native payable.transfer, which can be unusable for smart contract calls",75,https://github.com/code-423n4/2022-01-openleverage-findings/issues/75,openleverage,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
72,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,FarmingPools' notifyRewardAmounts and initDistributions do not check the lengths of input arrays,76,https://github.com/code-423n4/2022-01-openleverage-findings/issues/76,openleverage,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
72,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,Missing zero address checks and core configuration variables checks in most contracts,78,https://github.com/code-423n4/2022-01-openleverage-findings/issues/78,openleverage,2022/01,bug;duplicate;0 (Non-critical)
72,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,Unused parameters in OpenLevV1 and ControllerV1 functions,79,https://github.com/code-423n4/2022-01-openleverage-findings/issues/79,openleverage,2022/01,bug;0 (Non-critical);sponsor acknowledged
72,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,G,"uniV2Buy calls buyAmount.toAmountBeforeTax twice, while it's constant",86,https://github.com/code-423n4/2022-01-openleverage-findings/issues/86,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,UniV3Dex uniV3Buy slippage check error message is misleading,88,https://github.com/code-423n4/2022-01-openleverage-findings/issues/88,openleverage,2022/01,bug;1 (Low Risk)
72,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,"Assert is used instead of require in XOLE, FarmingPools and Exponential",95,https://github.com/code-423n4/2022-01-openleverage-findings/issues/95,openleverage,2022/01,bug;duplicate;1 (Low Risk)
72,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,User facing and asset bearing OpenLevV1 contract miss emergency lever,96,https://github.com/code-423n4/2022-01-openleverage-findings/issues/96,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,0,OpenLevV1Lib updatePrice comments are not relevant,97,https://github.com/code-423n4/2022-01-openleverage-findings/issues/97,openleverage,2022/01,bug;invalid;0 (Non-critical)
72,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,2,OpenLevV1 runs price update for UniV2Class DEXes only,98,https://github.com/code-423n4/2022-01-openleverage-findings/issues/98,openleverage,2022/01,bug;invalid;2 (Med Risk)
72,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,"Missing core OpenLevV1, ControllerV1 parameters validation in their setters",99,https://github.com/code-423n4/2022-01-openleverage-findings/issues/99,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,"Prefix (`++i`), rather than postfix (`i++`), increment/decrement operators should be used in for-loops",265,https://github.com/code-423n4/2022-01-openleverage-findings/issues/265,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,No validation for constructor arguments in OLEToken.sol,53,https://github.com/code-423n4/2022-01-openleverage-findings/issues/53,openleverage,2022/01,bug;0 (Non-critical);sponsor acknowledged
72,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,G,unnecessary NewPendingAdmin event emitted again ,54,https://github.com/code-423n4/2022-01-openleverage-findings/issues/54,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,mint() function doesn't require 0 to be larger than 0,55,https://github.com/code-423n4/2022-01-openleverage-findings/issues/55,openleverage,2022/01,bug;0 (Non-critical);sponsor acknowledged
72,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Anyone can call release() in OLETokenLock.sol,56,https://github.com/code-423n4/2022-01-openleverage-findings/issues/56,openleverage,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
72,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,no validation checks in ControllerV1.sol initialize function(),57,https://github.com/code-423n4/2022-01-openleverage-findings/issues/57,openleverage,2022/01,bug;0 (Non-critical);sponsor acknowledged
72,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,G,constructor can be removed in ControllerV1.sol,58,https://github.com/code-423n4/2022-01-openleverage-findings/issues/58,openleverage,2022/01,bug;invalid;G (Gas Optimization);sponsor acknowledged
72,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,transferAllowed() function can be called by anyone,59,https://github.com/code-423n4/2022-01-openleverage-findings/issues/59,openleverage,2022/01,bug;invalid;3 (High Risk)
72,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Use of tx.origin in ControllerV1.sol,60,https://github.com/code-423n4/2022-01-openleverage-findings/issues/60,openleverage,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
72,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,_supportDexs array length not checked in constructor,62,https://github.com/code-423n4/2022-01-openleverage-findings/issues/62,openleverage,2022/01,bug;invalid;2 (Med Risk)
72,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Bad actor may steal deposit return when liquidating a trade,195,https://github.com/code-423n4/2022-01-openleverage-findings/issues/195,openleverage,2022/01,bug;1 (Low Risk)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,10,https://github.com/code-423n4/2022-01-openleverage-findings/issues/10,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,11,https://github.com/code-423n4/2022-01-openleverage-findings/issues/11,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary array boundaries check when loading an array element twice,12,https://github.com/code-423n4/2022-01-openleverage-findings/issues/12,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Prefix increments are cheaper than postfix increments,13,https://github.com/code-423n4/2022-01-openleverage-findings/issues/13,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary index init,14,https://github.com/code-423n4/2022-01-openleverage-findings/issues/14,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Caching array length can save gas,15,https://github.com/code-423n4/2022-01-openleverage-findings/issues/15,openleverage,2022/01,bug;G (Gas Optimization)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Unnecessary payable,16,https://github.com/code-423n4/2022-01-openleverage-findings/issues/16,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,transfer return value of a custom ERC20 is ignored,17,https://github.com/code-423n4/2022-01-openleverage-findings/issues/17,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Upgrade pragma to at least 0.8.4,18,https://github.com/code-423n4/2022-01-openleverage-findings/issues/18,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Check if amount is not zero to save gas,19,https://github.com/code-423n4/2022-01-openleverage-findings/issues/19,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused imports,2,https://github.com/code-423n4/2022-01-openleverage-findings/issues/2,openleverage,2022/01,bug;0 (Non-critical)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary equals boolean,20,https://github.com/code-423n4/2022-01-openleverage-findings/issues/20,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use != 0 instead of > 0,21,https://github.com/code-423n4/2022-01-openleverage-findings/issues/21,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused inheritance,22,https://github.com/code-423n4/2022-01-openleverage-findings/issues/22,openleverage,2022/01,bug;G (Gas Optimization)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Mult instead div in compares,23,https://github.com/code-423n4/2022-01-openleverage-findings/issues/23,openleverage,2022/01,bug;1 (Low Risk);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Consider inline the following functions to save gas,24,https://github.com/code-423n4/2022-01-openleverage-findings/issues/24,openleverage,2022/01,bug;invalid;G (Gas Optimization);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary constructor,25,https://github.com/code-423n4/2022-01-openleverage-findings/issues/25,openleverage,2022/01,bug;invalid;G (Gas Optimization);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Inline one time use functions,26,https://github.com/code-423n4/2022-01-openleverage-findings/issues/26,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Rearrange state variables,28,https://github.com/code-423n4/2022-01-openleverage-findings/issues/28,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use calldata instead of memory,29,https://github.com/code-423n4/2022-01-openleverage-findings/issues/29,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use bytes32 instead of string to save gas whenever possible,3,https://github.com/code-423n4/2022-01-openleverage-findings/issues/3,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with empty message,30,https://github.com/code-423n4/2022-01-openleverage-findings/issues/30,openleverage,2022/01,bug;0 (Non-critical);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with not comprehensive message,31,https://github.com/code-423n4/2022-01-openleverage-findings/issues/31,openleverage,2022/01,bug;0 (Non-critical)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Loss Of Precision,32,https://github.com/code-423n4/2022-01-openleverage-findings/issues/32,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Loss Of Precision,33,https://github.com/code-423n4/2022-01-openleverage-findings/issues/33,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Must approve 0 first,34,https://github.com/code-423n4/2022-01-openleverage-findings/issues/34,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove of openZeppelin is deprecated,35,https://github.com/code-423n4/2022-01-openleverage-findings/issues/35,openleverage,2022/01,bug;duplicate;1 (Low Risk)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Solidity compiler versions mismatch,36,https://github.com/code-423n4/2022-01-openleverage-findings/issues/36,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Use safe math for solidity version <8,37,https://github.com/code-423n4/2022-01-openleverage-findings/issues/37,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified owner input can lead to undesired behavior,38,https://github.com/code-423n4/2022-01-openleverage-findings/issues/38,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Named return issue,39,https://github.com/code-423n4/2022-01-openleverage-findings/issues/39,openleverage,2022/01,bug;0 (Non-critical);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused state variables,4,https://github.com/code-423n4/2022-01-openleverage-findings/issues/4,openleverage,2022/01,bug;invalid;G (Gas Optimization);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,3,Unsafe Cast,40,https://github.com/code-423n4/2022-01-openleverage-findings/issues/40,openleverage,2022/01,bug;invalid;3 (High Risk)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Two Steps Verification before Transferring Ownership,41,https://github.com/code-423n4/2022-01-openleverage-findings/issues/41,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Missing non reentrancy modifier,42,https://github.com/code-423n4/2022-01-openleverage-findings/issues/42,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Assert instead require to validate user inputs,43,https://github.com/code-423n4/2022-01-openleverage-findings/issues/43,openleverage,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,In the following public update functions no value is returned,44,https://github.com/code-423n4/2022-01-openleverage-findings/issues/44,openleverage,2022/01,bug;1 (Low Risk);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Never used parameters,45,https://github.com/code-423n4/2022-01-openleverage-findings/issues/45,openleverage,2022/01,bug;0 (Non-critical);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Two arrays length mismatch,46,https://github.com/code-423n4/2022-01-openleverage-findings/issues/46,openleverage,2022/01,bug;0 (Non-critical)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Missing commenting,47,https://github.com/code-423n4/2022-01-openleverage-findings/issues/47,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Anyone can withdraw others,48,https://github.com/code-423n4/2022-01-openleverage-findings/issues/48,openleverage,2022/01,bug;invalid;2 (Med Risk)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified input,49,https://github.com/code-423n4/2022-01-openleverage-findings/issues/49,openleverage,2022/01,bug;0 (Non-critical);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Does not validate the input fee parameter,50,https://github.com/code-423n4/2022-01-openleverage-findings/issues/50,openleverage,2022/01,bug;0 (Non-critical);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Check transferFrom is from msg.sender,51,https://github.com/code-423n4/2022-01-openleverage-findings/issues/51,openleverage,2022/01,bug;invalid;2 (Med Risk)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,3,transfer return value of a general ERC20 is ignored,52,https://github.com/code-423n4/2022-01-openleverage-findings/issues/52,openleverage,2022/01,bug;invalid;3 (High Risk)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,save gas by making message shorter,7,https://github.com/code-423n4/2022-01-openleverage-findings/issues/7,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,8,https://github.com/code-423n4/2022-01-openleverage-findings/issues/8,openleverage,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
72,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Internal functions to private,9,https://github.com/code-423n4/2022-01-openleverage-findings/issues/9,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,m_smirnova2020,0x7054825962369C4C1EEF19B0f1D9148c0324Ec7A,G,Gaz report OpenLeverage contest,221,https://github.com/code-423n4/2022-01-openleverage-findings/issues/221,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,1,Admin can initialize XOLE multiple times,155,https://github.com/code-423n4/2022-01-openleverage-findings/issues/155,openleverage,2022/01,bug;duplicate;0 (Non-critical)
72,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Avoid storage read in Timelock.sol,156,https://github.com/code-423n4/2022-01-openleverage-findings/issues/156,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Avoid storage read in setImplementation when emitting,157,https://github.com/code-423n4/2022-01-openleverage-findings/issues/157,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Using ++i consumes less gas than i++ (1),158,https://github.com/code-423n4/2022-01-openleverage-findings/issues/158,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Rewrite acceptAdmin to save gas,159,https://github.com/code-423n4/2022-01-openleverage-findings/issues/159,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,.transfer is used for transferring ether,238,https://github.com/code-423n4/2022-01-openleverage-findings/issues/238,openleverage,2022/01,bug;duplicate;1 (Low Risk)
72,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Repeated access of storage,239,https://github.com/code-423n4/2022-01-openleverage-findings/issues/239,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Immutable variables,240,https://github.com/code-423n4/2022-01-openleverage-findings/issues/240,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,.length in a loop,243,https://github.com/code-423n4/2022-01-openleverage-findings/issues/243,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Assigned operations to constant variables,246,https://github.com/code-423n4/2022-01-openleverage-findings/issues/246,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Correct conditions,257,https://github.com/code-423n4/2022-01-openleverage-findings/issues/257,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Anyone can crash transferTo,261,https://github.com/code-423n4/2022-01-openleverage-findings/issues/261,openleverage,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
72,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,using > instead of >=,100,https://github.com/code-423n4/2022-01-openleverage-findings/issues/100,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,3,admin is not set in any function,101,https://github.com/code-423n4/2022-01-openleverage-findings/issues/101,openleverage,2022/01,bug;invalid;3 (High Risk)
72,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,unset the the value because it was set the default value,105,https://github.com/code-423n4/2022-01-openleverage-findings/issues/105,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,unnecessary uint declaration,117,https://github.com/code-423n4/2022-01-openleverage-findings/issues/117,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,use require instead if/else,121,https://github.com/code-423n4/2022-01-openleverage-findings/issues/121,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,2,the initialize function should be a constructor,262,https://github.com/code-423n4/2022-01-openleverage-findings/issues/262,openleverage,2022/01,bug;duplicate;0 (Non-critical);sponsor acknowledged
72,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,set pancakeFactory to constant,66,https://github.com/code-423n4/2022-01-openleverage-findings/issues/66,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,unnecessary _unsedFactory call,68,https://github.com/code-423n4/2022-01-openleverage-findings/issues/68,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,replace memory with calldata,69,https://github.com/code-423n4/2022-01-openleverage-findings/issues/69,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,&& operator use more gas fee,70,https://github.com/code-423n4/2022-01-openleverage-findings/issues/70,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,pass the `dexInfo[dexName[i]` value without caching `DexInfo struct`,71,https://github.com/code-423n4/2022-01-openleverage-findings/issues/71,openleverage,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
72,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,caching struct data type in memory cost more gas,72,https://github.com/code-423n4/2022-01-openleverage-findings/issues/72,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,declaring that contract is using `Utils` lib can use more gas,73,https://github.com/code-423n4/2022-01-openleverage-findings/issues/73,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,unnecessary msg.sender cache,77,https://github.com/code-423n4/2022-01-openleverage-findings/issues/77,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Inline functions that are used only once,27,https://github.com/code-423n4/2022-01-openleverage-findings/issues/27,openleverage,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
72,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused declared local variables,5,https://github.com/code-423n4/2022-01-openleverage-findings/issues/5,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Short the following require messages,6,https://github.com/code-423n4/2022-01-openleverage-findings/issues/6,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Missing payable,61,https://github.com/code-423n4/2022-01-openleverage-findings/issues/61,openleverage,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
72,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Make `Adminable.developer` immutable since it's set only once in the constructor,255,https://github.com/code-423n4/2022-01-openleverage-findings/issues/255,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Use `calldata` for array parameters that aren't modified,258,https://github.com/code-423n4/2022-01-openleverage-findings/issues/258,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,samruna,0x32A9A2a64bD23e69730839A341431d2fF7C039Bc,1,Unused function parameters,106,https://github.com/code-423n4/2022-01-openleverage-findings/issues/106,openleverage,2022/01,bug;duplicate;0 (Non-critical)
72,samruna,0x9aDA3Ba6A2C82152564dF7A22238E286E10e0A6B,3,endTime can be before startTime,160,https://github.com/code-423n4/2022-01-openleverage-findings/issues/160,openleverage,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
72,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Revert string > 32 bytes,241,https://github.com/code-423n4/2022-01-openleverage-findings/issues/241,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,XOLE.sol initialization function callable multiple times,242,https://github.com/code-423n4/2022-01-openleverage-findings/issues/242,openleverage,2022/01,bug;duplicate;0 (Non-critical)
72,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,OpenLevV1.sol initialization function callable multiple times,244,https://github.com/code-423n4/2022-01-openleverage-findings/issues/244,openleverage,2022/01,bug;invalid;2 (Med Risk)
72,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,ControllerV1.sol initialization function callable multiple times,245,https://github.com/code-423n4/2022-01-openleverage-findings/issues/245,openleverage,2022/01,bug;invalid;2 (Med Risk)
72,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Timelock.sol modification removes logic checks,247,https://github.com/code-423n4/2022-01-openleverage-findings/issues/247,openleverage,2022/01,bug;0 (Non-critical)
72,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Comment missing function parameter,248,https://github.com/code-423n4/2022-01-openleverage-findings/issues/248,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1, OLEToken ERC20 missing increase/decreaseAllowance,249,https://github.com/code-423n4/2022-01-openleverage-findings/issues/249,openleverage,2022/01,bug;duplicate;1 (Low Risk)
72,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,3,Two pairs can have same tokens,259,https://github.com/code-423n4/2022-01-openleverage-findings/issues/259,openleverage,2022/01,bug;invalid;3 (High Risk)
72,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,OpenLevV1.sol comment missing function parameter,260,https://github.com/code-423n4/2022-01-openleverage-findings/issues/260,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Unused input parameters,263,https://github.com/code-423n4/2022-01-openleverage-findings/issues/263,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Non-standard safe ERC20 functions,264,https://github.com/code-423n4/2022-01-openleverage-findings/issues/264,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Using preincrement ina for loop can save gas,201,https://github.com/code-423n4/2022-01-openleverage-findings/issues/201,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Accessing array length in for loop is costly.,202,https://github.com/code-423n4/2022-01-openleverage-findings/issues/202,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Assigning default values costs unnecessary gas.,203,https://github.com/code-423n4/2022-01-openleverage-findings/issues/203,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Some variables can be set immutable,204,https://github.com/code-423n4/2022-01-openleverage-findings/issues/204,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,empty constructor,108,https://github.com/code-423n4/2022-01-openleverage-findings/issues/108,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,save gas using require,109,https://github.com/code-423n4/2022-01-openleverage-findings/issues/109,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,unused constructor in contract OpenLevV1,110,https://github.com/code-423n4/2022-01-openleverage-findings/issues/110,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,avoid using initialization = 0 ,111,https://github.com/code-423n4/2022-01-openleverage-findings/issues/111,openleverage,2022/01,bug;invalid;G (Gas Optimization)
72,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Considered changing memory to storage,231,https://github.com/code-423n4/2022-01-openleverage-findings/issues/231,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,considered using calldata and save stakeTokens.length to memory can save gas,251,https://github.com/code-423n4/2022-01-openleverage-findings/issues/251,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,1,Missing check on existing txhash,253,https://github.com/code-423n4/2022-01-openleverage-findings/issues/253,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,1,Unnecessary fallback(),254,https://github.com/code-423n4/2022-01-openleverage-findings/issues/254,openleverage,2022/01,bug;invalid;1 (Low Risk)
72,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Using `require` instead of `&&` can save gas,63,https://github.com/code-423n4/2022-01-openleverage-findings/issues/63,openleverage,2022/01,bug;G (Gas Optimization);sponsor acknowledged
72,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Gas saving by caching state variables,82,https://github.com/code-423n4/2022-01-openleverage-findings/issues/82,openleverage,2022/01,bug;G (Gas Optimization)
72,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,205,https://github.com/code-423n4/2022-01-openleverage-findings/issues/205,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use `calldata` rather than `memory` for parameters can save gas,206,https://github.com/code-423n4/2022-01-openleverage-findings/issues/206,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache storage variables in the stack can save gas,207,https://github.com/code-423n4/2022-01-openleverage-findings/issues/207,openleverage,2022/01,bug;duplicate;G (Gas Optimization)
72,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`UniV2ClassDex.sol#uniClassSell()` Tokens with fee on transfer are not fully supported,208,https://github.com/code-423n4/2022-01-openleverage-findings/issues/208,openleverage,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
72,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused library `ReentrancyGuard`,209,https://github.com/code-423n4/2022-01-openleverage-findings/issues/209,openleverage,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
72,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Lack of input validation of `releaseVar.endTime > releaseVar.startTime`,210,https://github.com/code-423n4/2022-01-openleverage-findings/issues/210,openleverage,2022/01,bug;duplicate;1 (Low Risk)
72,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`FarmingPools.sol` Some users may not be able to get back their funds for tokens with tax on transfer,211,https://github.com/code-423n4/2022-01-openleverage-findings/issues/211,openleverage,2022/01,bug;invalid;3 (High Risk)
72,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,1,initialize can be call multiple times,234,https://github.com/code-423n4/2022-01-openleverage-findings/issues/234,openleverage,2022/01,bug;duplicate;0 (Non-critical)
67,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Lack of inputs,61,https://github.com/code-423n4/2022-01-sandclock-findings/issues/61,sandclock,2022/01,bug;0 (Non-critical);sponsor confirmed;sponsor strategy
67,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Open TODO,63,https://github.com/code-423n4/2022-01-sandclock-findings/issues/63,sandclock,2022/01,bug;duplicate;1 (Low Risk)
67,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Lack of checks,64,https://github.com/code-423n4/2022-01-sandclock-findings/issues/64,sandclock,2022/01,bug;1 (Low Risk);disagree with severity;sponsor confirmed;sponsor vault
67,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,_minLockPeriod could be zero,65,https://github.com/code-423n4/2022-01-sandclock-findings/issues/65,sandclock,2022/01,bug;duplicate;2 (Med Risk);sponsor disputed
67,ACai,0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,0,Incorrect use of modifier,89,https://github.com/code-423n4/2022-01-sandclock-findings/issues/89,sandclock,2022/01,bug;0 (Non-critical);sponsor confirmed;sponsor strategy
67,ACai,0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,2,"When a user performs a withdrawal operation, a rollback that is not considered by the program may be triggered.",90,https://github.com/code-423n4/2022-01-sandclock-findings/issues/90,sandclock,2022/01,bug;duplicate;2 (Med Risk)
67,bugwriter001,0x71e6B570A4CE5ab1AcE7BDF3Bb1E642955cbdacB,0,not compatible with ERC721 standard in Vaults/Claimer.sol,35,https://github.com/code-423n4/2022-01-sandclock-findings/issues/35,sandclock,2022/01,bug;duplicate;2 (Med Risk)
67,bugwriter001,0x71e6B570A4CE5ab1AcE7BDF3Bb1E642955cbdacB,1,Vault/Depositor mint can be re-entered,36,https://github.com/code-423n4/2022-01-sandclock-findings/issues/36,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,3,Depositors can gain more shares than expected through reentrant call,31,https://github.com/code-423n4/2022-01-sandclock-findings/issues/31,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,3,Withdrawers can get more value returned than expected with reentrant call,32,https://github.com/code-423n4/2022-01-sandclock-findings/issues/32,sandclock,2022/01,bug;3 (High Risk);sponsor confirmed;sponsor vault
67,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,2,Users can perform a reentrant call into unsponsor before sponsor has finished executing,33,https://github.com/code-423n4/2022-01-sandclock-findings/issues/33,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,1,Bad comment in _computeAmount,34,https://github.com/code-423n4/2022-01-sandclock-findings/issues/34,sandclock,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor vault
67,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,1,Inconsistent use of _mint and _safeMint for Claimers and Depositors,43,https://github.com/code-423n4/2022-01-sandclock-findings/issues/43,sandclock,2022/01,bug;duplicate;2 (Med Risk)
67,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,3,Vaults with non-UST underlying asset vulnerable to flash loan attack on curve pool,7,https://github.com/code-423n4/2022-01-sandclock-findings/issues/7,sandclock,2022/01,bug;3 (High Risk);sponsor confirmed;sponsor strategy
67,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,3,NonUSTStrategy has finishRedeemStable publicly exposed,8,https://github.com/code-423n4/2022-01-sandclock-findings/issues/8,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,1,Incorrect comment in BaseStrategy,9,https://github.com/code-423n4/2022-01-sandclock-findings/issues/9,sandclock,2022/01,bug;1 (Low Risk);disagree with severity;sponsor strategy
67,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,No slippage control on _swapUstToUnderlying of NonUSTStrategy.sol,100,https://github.com/code-423n4/2022-01-sandclock-findings/issues/100,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,No slippage control on _swapUnderlyingToUst of NonUSTStrategy.sol,101,https://github.com/code-423n4/2022-01-sandclock-findings/issues/101,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,Users can use the reentrancy vulnerability to get more share tokens,5,https://github.com/code-423n4/2022-01-sandclock-findings/issues/5,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Vault.sol lacks input validation,6,https://github.com/code-423n4/2022-01-sandclock-findings/issues/6,sandclock,2022/01,bug;invalid;sponsor disputed
67,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Open TODOs,88,https://github.com/code-423n4/2022-01-sandclock-findings/issues/88,sandclock,2022/01,bug;duplicate;1 (Low Risk);disagree with severity
67,certora,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,1,unimplemented todo task ,118,https://github.com/code-423n4/2022-01-sandclock-findings/issues/118,sandclock,2022/01,bug;duplicate;1 (Low Risk)
67,certora,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,0,forgot to remove todo comment,121,https://github.com/code-423n4/2022-01-sandclock-findings/issues/121,sandclock,2022/01,bug;duplicate;1 (Low Risk)
67,certora,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,0,typo miskate in comment,129,https://github.com/code-423n4/2022-01-sandclock-findings/issues/129,sandclock,2022/01,bug;0 (Non-critical);sponsor acknowledged
67,certora,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,3,bug in claimers contract dissable users from claiming yield and more.,131,https://github.com/code-423n4/2022-01-sandclock-findings/issues/131,sandclock,2022/01,bug;invalid;sponsor disputed;sponsor vault
67,certora,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,0,forgot to remove TODO comment,169,https://github.com/code-423n4/2022-01-sandclock-findings/issues/169,sandclock,2022/01,bug;duplicate;1 (Low Risk)
67,certora,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,0,forgot to remove a TODO comment.,170,https://github.com/code-423n4/2022-01-sandclock-findings/issues/170,sandclock,2022/01,bug;duplicate;1 (Low Risk);sponsor disputed
67,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Re-entrancy in _withdraw allows stealing tokens,133,https://github.com/code-423n4/2022-01-sandclock-findings/issues/133,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Re-entrancy in _createDeposit allows stealing tokens,134,https://github.com/code-423n4/2022-01-sandclock-findings/issues/134,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,DoS on finishing deposits,135,https://github.com/code-423n4/2022-01-sandclock-findings/issues/135,sandclock,2022/01,bug;invalid;sponsor disputed
67,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Depositors are at mercy of admins to get their funds back,136,https://github.com/code-423n4/2022-01-sandclock-findings/issues/136,sandclock,2022/01,bug;duplicate;2 (Med Risk)
67,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,NonUST strategies lose value with swap fees,137,https://github.com/code-423n4/2022-01-sandclock-findings/issues/137,sandclock,2022/01,bug;1 (Low Risk);sponsor confirmed;sponsor strategy
67,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Missing slippage/min-return check in `NonUSTStrategy`,138,https://github.com/code-423n4/2022-01-sandclock-findings/issues/138,sandclock,2022/01,bug;duplicate;3 (High Risk);sponsor strategy
67,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`NonUSTStrategy` invested assets can be manipulated,139,https://github.com/code-423n4/2022-01-sandclock-findings/issues/139,sandclock,2022/01,bug;duplicate;3 (High Risk);sponsor strategy
67,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,fees amounts are wrong,120,https://github.com/code-423n4/2022-01-sandclock-findings/issues/120,sandclock,2022/01,bug;invalid;sponsor disputed
67,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,strategy change can be prevented,124,https://github.com/code-423n4/2022-01-sandclock-findings/issues/124,sandclock,2022/01,bug;duplicate;2 (Med Risk)
67,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,drain vault by price manipulation,38,https://github.com/code-423n4/2022-01-sandclock-findings/issues/38,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,no protection from sandwich attacks,39,https://github.com/code-423n4/2022-01-sandclock-findings/issues/39,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,reentrancy might mess up _depositGroupIds,40,https://github.com/code-423n4/2022-01-sandclock-findings/issues/40,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,redundant function,44,https://github.com/code-423n4/2022-01-sandclock-findings/issues/44,sandclock,2022/01,bug;invalid;sponsor disputed
67,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,redundant variable,45,https://github.com/code-423n4/2022-01-sandclock-findings/issues/45,sandclock,2022/01,bug;0 (Non-critical);disagree with severity;resolved
67,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,"unsponsor, claimYield and withdraw might fail unexpectadly",76,https://github.com/code-423n4/2022-01-sandclock-findings/issues/76,sandclock,2022/01,bug;2 (Med Risk);sponsor confirmed;sponsor vault
67,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,investedAssets ignores fees and can cause insolvency,92,https://github.com/code-423n4/2022-01-sandclock-findings/issues/92,sandclock,2022/01,bug;duplicate;2 (Med Risk)
67,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Open TODOs,171,https://github.com/code-423n4/2022-01-sandclock-findings/issues/171,sandclock,2022/01,bug;duplicate;1 (Low Risk)
67,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Improper Upper Bound Definition on the Fee,172,https://github.com/code-423n4/2022-01-sandclock-findings/issues/172,sandclock,2022/01,bug;invalid;disagree with severity;sponsor acknowledged;sponsor strategy
67,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Incompatibility With Rebasing/Deflationary/Inflationary tokens,179,https://github.com/code-423n4/2022-01-sandclock-findings/issues/179,sandclock,2022/01,bug;2 (Med Risk);sponsor disputed
67,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing Re-entrancy Guard,184,https://github.com/code-423n4/2022-01-sandclock-findings/issues/184,sandclock,2022/01,bug;duplicate;3 (High Risk);sponsor strategy
67,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Missing slippage/min-return check in the `curve Pool`,185,https://github.com/code-423n4/2022-01-sandclock-findings/issues/185,sandclock,2022/01,bug;duplicate;3 (High Risk);sponsor strategy
67,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Misdefinition of _minLockPeriod will lock funds indefinitely,190,https://github.com/code-423n4/2022-01-sandclock-findings/issues/190,sandclock,2022/01,bug;invalid;sponsor disputed
67,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Add a timelock to `BaseStrategy:setPerfFeePct`,178,https://github.com/code-423n4/2022-01-sandclock-findings/issues/178,sandclock,2022/01,bug;2 (Med Risk);sponsor acknowledged;sponsor strategy
67,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Unclear require statement,180,https://github.com/code-423n4/2022-01-sandclock-findings/issues/180,sandclock,2022/01,bug;1 (Low Risk);disagree with severity;sponsor vault
67,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`BaseStrategy:perfFeePct` can be 100%,182,https://github.com/code-423n4/2022-01-sandclock-findings/issues/182,sandclock,2022/01,bug;1 (Low Risk);sponsor acknowledged;sponsor strategy
67,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Missing zero-checks on `vault` (`Claimers.sol` and `Depositors.sol`),93,https://github.com/code-423n4/2022-01-sandclock-findings/issues/93,sandclock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
67,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`Vault.sol:_withdraw()` doesn't check for 0 address,94,https://github.com/code-423n4/2022-01-sandclock-findings/issues/94,sandclock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
67,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Open TODOs,96,https://github.com/code-423n4/2022-01-sandclock-findings/issues/96,sandclock,2022/01,bug;1 (Low Risk);disagree with severity
67,egjlmn1,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,3,first user in the system can steal all incoming assets,146,https://github.com/code-423n4/2022-01-sandclock-findings/issues/146,sandclock,2022/01,bug;invalid;sponsor disputed
67,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,3,"Missing reentrant check can be abused by increasing total share, before transfering underlying token",143,https://github.com/code-423n4/2022-01-sandclock-findings/issues/143,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,1,the order of the tokenids is different between the `Depositors` and `Claimers`,144,https://github.com/code-423n4/2022-01-sandclock-findings/issues/144,sandclock,2022/01,bug;invalid;sponsor disputed;sponsor vault
67,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Incorrect share accounting ,192,https://github.com/code-423n4/2022-01-sandclock-findings/issues/192,sandclock,2022/01,bug;1 (Low Risk);disagree with severity;sponsor strategy
67,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Hard to collect fee,193,https://github.com/code-423n4/2022-01-sandclock-findings/issues/193,sandclock,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor confirmed;sponsor strategy
67,harleythedog,0x3BD8fb2fB0b11789F8885143D6f14FA3D69f6FC9,2,Possible griefing attack on vault setStrategy,102,https://github.com/code-423n4/2022-01-sandclock-findings/issues/102,sandclock,2022/01,bug;duplicate;2 (Med Risk)
67,harleythedog,0x3BD8fb2fB0b11789F8885143D6f14FA3D69f6FC9,2,Vault withdraws should withdraw from strategy if necessary,126,https://github.com/code-423n4/2022-01-sandclock-findings/issues/126,sandclock,2022/01,bug;duplicate;2 (Med Risk)
67,harleythedog,0x3BD8fb2fB0b11789F8885143D6f14FA3D69f6FC9,2,No slippage protection on _swapUnderlyingToUst can lead to lost funds,127,https://github.com/code-423n4/2022-01-sandclock-findings/issues/127,sandclock,2022/01,bug;duplicate;3 (High Risk);sponsor strategy
67,harleythedog,0x3BD8fb2fB0b11789F8885143D6f14FA3D69f6FC9,2,No slippage protection on _swapUstToUnderlying can lead to lost funds,128,https://github.com/code-423n4/2022-01-sandclock-findings/issues/128,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,harleythedog,0x3BD8fb2fB0b11789F8885143D6f14FA3D69f6FC9,2,_transferAndCheckUnderlying doesn't work with fee-on-transfer tokens,97,https://github.com/code-423n4/2022-01-sandclock-findings/issues/97,sandclock,2022/01,bug;duplicate;2 (Med Risk);sponsor disputed
67,harleythedog,0x3BD8fb2fB0b11789F8885143D6f14FA3D69f6FC9,3,Reentrancy vulnerability allows attacker to gain more shares than deserved,98,https://github.com/code-423n4/2022-01-sandclock-findings/issues/98,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,harleythedog,0x3BD8fb2fB0b11789F8885143D6f14FA3D69f6FC9,3,Reentrancy vulnerability allows attacker to steal underlying tokens with withdraw,99,https://github.com/code-423n4/2022-01-sandclock-findings/issues/99,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Vault: onDepositMinted() reentrancy causes users’ deposits to be erroneously accounted as yield,147,https://github.com/code-423n4/2022-01-sandclock-findings/issues/147,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Vault: onDepositBurn() causes users to unfairly have their deposits allocated as yield,148,https://github.com/code-423n4/2022-01-sandclock-findings/issues/148,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,Vault: Reduce reliance on manual rebalances from strategy to vault,149,https://github.com/code-423n4/2022-01-sandclock-findings/issues/149,sandclock,2022/01,bug;duplicate;2 (Med Risk)
67,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,Medium: Consider alternative price feed + ensure _minLockPeriod > 0 to prevent flash loan attacks,150,https://github.com/code-423n4/2022-01-sandclock-findings/issues/150,sandclock,2022/01,bug;2 (Med Risk)
67,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,NonUSTStrategy: Ensure correct underlying index,151,https://github.com/code-423n4/2022-01-sandclock-findings/issues/151,sandclock,2022/01,bug;duplicate;1 (Low Risk);sponsor strategy
67,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,1,NonUSTStrategy: Ensure correct UST index,152,https://github.com/code-423n4/2022-01-sandclock-findings/issues/152,sandclock,2022/01,bug;1 (Low Risk);sponsor acknowledged;sponsor confirmed;sponsor strategy
67,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,0,Vault: Spelling Error in comment,153,https://github.com/code-423n4/2022-01-sandclock-findings/issues/153,sandclock,2022/01,bug;0 (Non-critical);sponsor acknowledged
67,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,1,Prevent deposit and sponsor for value of 0 amount,155,https://github.com/code-423n4/2022-01-sandclock-findings/issues/155,sandclock,2022/01,bug;duplicate;1 (Low Risk);sponsor vault
67,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,3,Vault._withdraw miscalculates shares and amounts for second and subsequent deposits being withdrawn,125,https://github.com/code-423n4/2022-01-sandclock-findings/issues/125,sandclock,2022/01,bug;invalid;sponsor disputed;sponsor vault
67,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,User facing and asset bearing Vault and BaseStrategy contracts miss emergency lever,154,https://github.com/code-423n4/2022-01-sandclock-findings/issues/154,sandclock,2022/01,bug;invalid;1 (Low Risk);sponsor acknowledged;sponsor vault;sponsor strategy
67,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,Depositors nextId variable isn't used and its comment is incorrect,59,https://github.com/code-423n4/2022-01-sandclock-findings/issues/59,sandclock,2022/01,bug;duplicate;0 (Non-critical);disagree with severity
67,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,Claimers do not check for non-zero vault,77,https://github.com/code-423n4/2022-01-sandclock-findings/issues/77,sandclock,2022/01,bug;invalid;sponsor disputed
67,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,NonUSTStrategy doesn’t allow for swap slippage checks,78,https://github.com/code-423n4/2022-01-sandclock-findings/issues/78,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,IVault underlying() description is wrong,79,https://github.com/code-423n4/2022-01-sandclock-findings/issues/79,sandclock,2022/01,bug;1 (Low Risk);disagree with severity;sponsor vault
67,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,BaseStrategy.finishRedeemStable can produce a low-level division revert,95,https://github.com/code-423n4/2022-01-sandclock-findings/issues/95,sandclock,2022/01,bug;0 (Non-critical);sponsor disputed
67,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Use of floating pragma statement ,1,https://github.com/code-423n4/2022-01-sandclock-findings/issues/1,sandclock,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed;sponsor vault
67,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Vault.sol constructor doesn't ensure that both addresses passed in are unique ,2,https://github.com/code-423n4/2022-01-sandclock-findings/issues/2,sandclock,2022/01,bug;invalid;disagree with severity;sponsor acknowledged;sponsor vault
67,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Open Todos should be resolved and removed ,28,https://github.com/code-423n4/2022-01-sandclock-findings/issues/28,sandclock,2022/01,bug;duplicate;1 (Low Risk);sponsor disputed
67,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,no use of safeMint() as safe guard for users ,29,https://github.com/code-423n4/2022-01-sandclock-findings/issues/29,sandclock,2022/01,bug;2 (Med Risk);disagree with severity;sponsor vault
67,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,deposit() function is open to reentrancy attacks,3,https://github.com/code-423n4/2022-01-sandclock-findings/issues/3,sandclock,2022/01,bug;3 (High Risk);sponsor confirmed;sponsor vault
67,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,sponsor() function in open to reentrancy attacks,4,https://github.com/code-423n4/2022-01-sandclock-findings/issues/4,sandclock,2022/01,bug;3 (High Risk);sponsor confirmed;sponsor vault
67,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,deployVault() function does not validate bytes code arg passed in,47,https://github.com/code-423n4/2022-01-sandclock-findings/issues/47,sandclock,2022/01,bug;invalid;sponsor disputed
67,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,deployDCA() function does not validate code arg,48,https://github.com/code-423n4/2022-01-sandclock-findings/issues/48,sandclock,2022/01,bug;invalid;sponsor disputed
67,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,pendingRedeems can be made incorrect by attacker,49,https://github.com/code-423n4/2022-01-sandclock-findings/issues/49,sandclock,2022/01,bug;invalid;sponsor disputed
67,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,USTStrategy.sol does not run validation on constructor address args ,50,https://github.com/code-423n4/2022-01-sandclock-findings/issues/50,sandclock,2022/01,bug;invalid;sponsor disputed
67,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,claimYield() does not validate _amount and _share arguments against whats available ,51,https://github.com/code-423n4/2022-01-sandclock-findings/issues/51,sandclock,2022/01,bug;invalid;sponsor disputed
67,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,_beforeTokenTransfer() does not check if _from and _to addresses are the same ,52,https://github.com/code-423n4/2022-01-sandclock-findings/issues/52,sandclock,2022/01,bug;invalid;sponsor disputed
67,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,No reentrancy guard on mint() function with state updates after callback ,53,https://github.com/code-423n4/2022-01-sandclock-findings/issues/53,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,NonUSTStrategy uses manipulatable Curve spot price,68,https://github.com/code-423n4/2022-01-sandclock-findings/issues/68,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,0,Inaccurate comments regarding invested and sponsored underlying amount,69,https://github.com/code-423n4/2022-01-sandclock-findings/issues/69,sandclock,2022/01,bug;duplicate;1 (Low Risk);sponsor confirmed;sponsor vault
67,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,0,Incomplete natspec comments,70,https://github.com/code-423n4/2022-01-sandclock-findings/issues/70,sandclock,2022/01,bug;0 (Non-critical);sponsor confirmed;sponsor vault
67,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,"No setter for exchangeRateFeeder, whose address might change in future",71,https://github.com/code-423n4/2022-01-sandclock-findings/issues/71,sandclock,2022/01,bug;2 (Med Risk);sponsor confirmed;sponsor strategy
67,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,0,Wrong revert message at Depositors' onlyVault modifier,72,https://github.com/code-423n4/2022-01-sandclock-findings/issues/72,sandclock,2022/01,bug;1 (Low Risk);sponsor confirmed;sponsor vault
67,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,0,Inconvenient retrieval of depositors token IDs,73,https://github.com/code-423n4/2022-01-sandclock-findings/issues/73,sandclock,2022/01,bug;0 (Non-critical);sponsor confirmed;sponsor vault
67,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,NonUSTStrategy swaps without sandwich protection at _swapUnderlyingToUst,74,https://github.com/code-423n4/2022-01-sandclock-findings/issues/74,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,NonUSTStrategy swaps without sandwich protection at _swapUstToUnderlying,75,https://github.com/code-423n4/2022-01-sandclock-findings/issues/75,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Claimer can reenter contract on deposit withdrawal,85,https://github.com/code-423n4/2022-01-sandclock-findings/issues/85,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Claimer can reenter contract on claim creation,86,https://github.com/code-423n4/2022-01-sandclock-findings/issues/86,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Depositor can reenter contract on claim creation,87,https://github.com/code-423n4/2022-01-sandclock-findings/issues/87,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Changing a strategy can be bricked,91,https://github.com/code-423n4/2022-01-sandclock-findings/issues/91,sandclock,2022/01,bug;2 (Med Risk);sponsor confirmed
67,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Well-Funded Sponsors Can Severely Inhibit The Availability Of The Protocol,130,https://github.com/code-423n4/2022-01-sandclock-findings/issues/130,sandclock,2022/01,bug;duplicate;2 (Med Risk);sponsor disputed
67,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,A Single Malicious Trusted Account Can Takeover Parent Contract,132,https://github.com/code-423n4/2022-01-sandclock-findings/issues/132,sandclock,2022/01,bug;2 (Med Risk);sponsor confirmed;sponsor vault;sponsor strategy
67,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,`Vault.deposit()` Does Not Prevent Zero Amount Deposits,142,https://github.com/code-423n4/2022-01-sandclock-findings/issues/142,sandclock,2022/01,bug;duplicate;1 (Low Risk);sponsor vault
67,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,`Vault.sponsor()` Does Not Prevent Sponsoring The Zero Amount ,145,https://github.com/code-423n4/2022-01-sandclock-findings/issues/145,sandclock,2022/01,bug;1 (Low Risk);disagree with severity;sponsor confirmed;sponsor vault
67,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,Curve Token Swaps Are Prone To Sandwich Attacks,60,https://github.com/code-423n4/2022-01-sandclock-findings/issues/60,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,Malicious Users Can Deposit Tokens At A Better Exchange Rate As Compared To Other Users,62,https://github.com/code-423n4/2022-01-sandclock-findings/issues/62,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`investedAssets()` Does Not Take Into Consideration The Performance Fee Charged On Strategy Withdrawals,66,https://github.com/code-423n4/2022-01-sandclock-findings/issues/66,sandclock,2022/01,bug;2 (Med Risk);sponsor confirmed;sponsor strategy
67,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,Curve Pools Can Be Manipulated Using Flashloans Which Affects `investedAssets()` Calculations,67,https://github.com/code-423n4/2022-01-sandclock-findings/issues/67,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,onewayfunction,0x660f9D529F01DAfF0A7F15213a8fA39F42FCFe62,3,Attackers can steal yield via reentrancy,30,https://github.com/code-423n4/2022-01-sandclock-findings/issues/30,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Account for future reentrancy attacks,56,https://github.com/code-423n4/2022-01-sandclock-findings/issues/56,sandclock,2022/01,bug;0 (Non-critical);sponsor confirmed;sponsor vault
67,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Open TODOs,57,https://github.com/code-423n4/2022-01-sandclock-findings/issues/57,sandclock,2022/01,bug;duplicate;1 (Low Risk)
67,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Wrong revert string in Vault’ Depositors.sol,58,https://github.com/code-423n4/2022-01-sandclock-findings/issues/58,sandclock,2022/01,bug;duplicate;1 (Low Risk);resolved;sponsor confirmed;sponsor vault
67,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,2,Some Strategy functions can't be called from the Vault,103,https://github.com/code-423n4/2022-01-sandclock-findings/issues/103,sandclock,2022/01,bug;1 (Low Risk);disagree with severity;sponsor acknowledged;sponsor strategy
67,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,2,Possibility of insufficient funds in Vault ,104,https://github.com/code-423n4/2022-01-sandclock-findings/issues/104,sandclock,2022/01,bug;duplicate;2 (Med Risk)
67,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,2,No slippage tolerance set in NonUSTStrategy,105,https://github.com/code-423n4/2022-01-sandclock-findings/issues/105,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,2,BaseStrategy implements USTStrategy and is risky to inherit from,106,https://github.com/code-423n4/2022-01-sandclock-findings/issues/106,sandclock,2022/01,bug;0 (Non-critical);disagree with severity;sponsor strategy
67,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,1,Missing validation in constructors,107,https://github.com/code-423n4/2022-01-sandclock-findings/issues/107,sandclock,2022/01,bug;1 (Low Risk);sponsor acknowledged
67,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,1,Ensure that EthAnchor processed funds successfully,108,https://github.com/code-423n4/2022-01-sandclock-findings/issues/108,sandclock,2022/01,bug;invalid;sponsor disputed
67,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,1,`Depositor` and `Sponsor` are used interchangeably,109,https://github.com/code-423n4/2022-01-sandclock-findings/issues/109,sandclock,2022/01,bug;0 (Non-critical);disagree with severity;sponsor vault
67,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,1,Both _mint and _safeMint are used to mint NFTs,110,https://github.com/code-423n4/2022-01-sandclock-findings/issues/110,sandclock,2022/01,bug;duplicate;2 (Med Risk)
67,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,0,Event ProfitShared in IStrategy is never used,111,https://github.com/code-423n4/2022-01-sandclock-findings/issues/111,sandclock,2022/01,bug;0 (Non-critical);sponsor confirmed;sponsor strategy
67,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,0,Unused `nextId` variable,112,https://github.com/code-423n4/2022-01-sandclock-findings/issues/112,sandclock,2022/01,bug;duplicate;0 (Non-critical);sponsor disputed
67,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,0,Different Solidity versions used,113,https://github.com/code-423n4/2022-01-sandclock-findings/issues/113,sandclock,2022/01,bug;duplicate;1 (Low Risk)
67,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,0,Non-informative error messages in require(),114,https://github.com/code-423n4/2022-01-sandclock-findings/issues/114,sandclock,2022/01,bug;duplicate;1 (Low Risk);sponsor disputed
67,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,0,TODO Comments,115,https://github.com/code-423n4/2022-01-sandclock-findings/issues/115,sandclock,2022/01,bug;duplicate;1 (Low Risk)
67,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,0,Missing topic in Unsponsored event,116,https://github.com/code-423n4/2022-01-sandclock-findings/issues/116,sandclock,2022/01,bug;0 (Non-critical);sponsor confirmed;sponsor vault
67,palina,0xFDf01E09b9bd3f3bE062a3085fa2c945a263F5a7,0,Sensitive actions in BaseStrategy don't emit events,117,https://github.com/code-423n4/2022-01-sandclock-findings/issues/117,sandclock,2022/01,bug;duplicate;0 (Non-critical);sponsor confirmed;sponsor strategy
67,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Strategy could have a pausing mechanism,173,https://github.com/code-423n4/2022-01-sandclock-findings/issues/173,sandclock,2022/01,bug;duplicate;invalid
67,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Open TODOs in Codebase,174,https://github.com/code-423n4/2022-01-sandclock-findings/issues/174,sandclock,2022/01,bug;duplicate;1 (Low Risk)
67,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,_lockedUntil is not deterministic and does not have an upper boundary,175,https://github.com/code-423n4/2022-01-sandclock-findings/issues/175,sandclock,2022/01,bug;1 (Low Risk);sponsor confirmed
67,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Slippage protection,176,https://github.com/code-423n4/2022-01-sandclock-findings/issues/176,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,A precision loss when creating deposits,177,https://github.com/code-423n4/2022-01-sandclock-findings/issues/177,sandclock,2022/01,bug;1 (Low Risk);sponsor confirmed;sponsor vault
67,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Check _to is not empty,183,https://github.com/code-423n4/2022-01-sandclock-findings/issues/183,sandclock,2022/01,bug;2 (Med Risk);disagree with severity;sponsor vault
67,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Authorities can grief with fees,189,https://github.com/code-423n4/2022-01-sandclock-findings/issues/189,sandclock,2022/01,bug;invalid;sponsor disputed
67,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Unsafe mint is a reentrancy door,181,https://github.com/code-423n4/2022-01-sandclock-findings/issues/181,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,1,Lack of input check in deposit amount,186,https://github.com/code-423n4/2022-01-sandclock-findings/issues/186,sandclock,2022/01,bug;duplicate;1 (Low Risk);sponsor vault
67,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,1,No input check : claim.pct = 0,187,https://github.com/code-423n4/2022-01-sandclock-findings/issues/187,sandclock,2022/01,bug;1 (Low Risk);disagree with severity;sponsor vault
67,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,1,Function spec is wrong (copy paste issue),188,https://github.com/code-423n4/2022-01-sandclock-findings/issues/188,sandclock,2022/01,bug;duplicate;1 (Low Risk);sponsor vault
67,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Race condition to withdraw funds,191,https://github.com/code-423n4/2022-01-sandclock-findings/issues/191,sandclock,2022/01,bug;duplicate;2 (Med Risk);sponsor vault
67,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,3,Withdrawals cause higher risk ,194,https://github.com/code-423n4/2022-01-sandclock-findings/issues/194,sandclock,2022/01,bug;invalid;sponsor disputed
67,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,2,`NonUSTStrategy` is vulnerable to sandwich attacks,37,https://github.com/code-423n4/2022-01-sandclock-findings/issues/37,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused state variables,10,https://github.com/code-423n4/2022-01-sandclock-findings/issues/10,sandclock,2022/01,bug;invalid
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Unused imports,11,https://github.com/code-423n4/2022-01-sandclock-findings/issues/11,sandclock,2022/01,bug;0 (Non-critical);sponsor disputed
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused declared local variables,12,https://github.com/code-423n4/2022-01-sandclock-findings/issues/12,sandclock,2022/01,bug;invalid;sponsor disputed
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Short the following require messages,13,https://github.com/code-423n4/2022-01-sandclock-findings/issues/13,sandclock,2022/01,bug;invalid
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,14,https://github.com/code-423n4/2022-01-sandclock-findings/issues/14,sandclock,2022/01,bug;invalid
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,15,https://github.com/code-423n4/2022-01-sandclock-findings/issues/15,sandclock,2022/01,bug;invalid
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,16,https://github.com/code-423n4/2022-01-sandclock-findings/issues/16,sandclock,2022/01,bug;invalid
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Prefix increments are cheaper than postfix increments,17,https://github.com/code-423n4/2022-01-sandclock-findings/issues/17,sandclock,2022/01,bug;invalid
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary index init,18,https://github.com/code-423n4/2022-01-sandclock-findings/issues/18,sandclock,2022/01,bug;invalid
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,uint8 index,19,https://github.com/code-423n4/2022-01-sandclock-findings/issues/19,sandclock,2022/01,bug;invalid
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Caching array length can save gas,20,https://github.com/code-423n4/2022-01-sandclock-findings/issues/20,sandclock,2022/01,bug;invalid
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with empty message,21,https://github.com/code-423n4/2022-01-sandclock-findings/issues/21,sandclock,2022/01,bug;invalid;sponsor disputed
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with not comprehensive message,22,https://github.com/code-423n4/2022-01-sandclock-findings/issues/22,sandclock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Must approve 0 first,23,https://github.com/code-423n4/2022-01-sandclock-findings/issues/23,sandclock,2022/01,bug;invalid;1 (Low Risk)
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove of openZeppelin is deprecated,24,https://github.com/code-423n4/2022-01-sandclock-findings/issues/24,sandclock,2022/01,bug;0 (Non-critical);disagree with severity
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Open TODOs,25,https://github.com/code-423n4/2022-01-sandclock-findings/issues/25,sandclock,2022/01,bug;duplicate;1 (Low Risk);sponsor disputed
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,In the following public update functions no value is returned,26,https://github.com/code-423n4/2022-01-sandclock-findings/issues/26,sandclock,2022/01,bug;invalid;sponsor disputed
67,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Never used parameters,27,https://github.com/code-423n4/2022-01-sandclock-findings/issues/27,sandclock,2022/01,bug;invalid;sponsor disputed
67,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,`Vault._withdraw()` uses cached totalShares instead of the updated value in for loop,119,https://github.com/code-423n4/2022-01-sandclock-findings/issues/119,sandclock,2022/01,bug;invalid;sponsor disputed;sponsor vault
67,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,No slippage check when converting underlying to UST,54,https://github.com/code-423n4/2022-01-sandclock-findings/issues/54,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Vault can't receive deposits if underlying token charges fees on transfer,55,https://github.com/code-423n4/2022-01-sandclock-findings/issues/55,sandclock,2022/01,bug;2 (Med Risk);sponsor disputed
67,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,1,Wrong comment on `IVault.sol`,41,https://github.com/code-423n4/2022-01-sandclock-findings/issues/41,sandclock,2022/01,bug;1 (Low Risk);disagree with severity;sponsor vault
67,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,0,Remove `hardhat/console.sol`,42,https://github.com/code-423n4/2022-01-sandclock-findings/issues/42,sandclock,2022/01,bug;duplicate;0 (Non-critical);sponsor disputed
67,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,safeApprove deprecated,80,https://github.com/code-423n4/2022-01-sandclock-findings/issues/80,sandclock,2022/01,bug;duplicate;0 (Non-critical);disagree with severity
67,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Incorrect require message,81,https://github.com/code-423n4/2022-01-sandclock-findings/issues/81,sandclock,2022/01,bug;1 (Low Risk);sponsor disputed
67,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Inaccurate comment in Depositors.sol,82,https://github.com/code-423n4/2022-01-sandclock-findings/issues/82,sandclock,2022/01,bug;1 (Low Risk);disagree with severity
67,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Claimers.sol mint() should use safeMint(),83,https://github.com/code-423n4/2022-01-sandclock-findings/issues/83,sandclock,2022/01,bug;duplicate;2 (Med Risk);disagree with severity
67,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,0,Deprecated Trust.sol dependency,84,https://github.com/code-423n4/2022-01-sandclock-findings/issues/84,sandclock,2022/01,bug;0 (Non-critical);sponsor confirmed
67,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,3,require check doesnt comply with an underlying token that implemented fee in the transfer and transferFrom function,140,https://github.com/code-423n4/2022-01-sandclock-findings/issues/140,sandclock,2022/01,bug;duplicate;2 (Med Risk);sponsor vault
67,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,1,it is better to make the `salt` non user input,141,https://github.com/code-423n4/2022-01-sandclock-findings/issues/141,sandclock,2022/01,bug;invalid;sponsor disputed
67,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,0,"Unused includes in Vault.sol, Depositors.sol, Claimers.sol",46,https://github.com/code-423n4/2022-01-sandclock-findings/issues/46,sandclock,2022/01,bug;duplicate;0 (Non-critical);sponsor acknowledged
67,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H0] Late users will take more losses than expected when the underlying contract (`EthAnchor`) suffers investment losses,156,https://github.com/code-423n4/2022-01-sandclock-findings/issues/156,sandclock,2022/01,bug;2 (Med Risk);disagree with severity;sponsor confirmed;sponsor vault
67,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M1] `withdraw()` transactions can often fail,157,https://github.com/code-423n4/2022-01-sandclock-findings/issues/157,sandclock,2022/01,bug;duplicate;2 (Med Risk)
67,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H2] `NonUSTStrategy.sol` Improper handling of swap fees allows attacker to steal funds from other users,158,https://github.com/code-423n4/2022-01-sandclock-findings/issues/158,sandclock,2022/01,bug;2 (Med Risk);disagree with severity;sponsor confirmed;sponsor strategy
67,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H3] `NonUSTStrategy.sol` A malicious user/attacker can game the system by `claimYield()` or `withdraw()` based on price changes,159,https://github.com/code-423n4/2022-01-sandclock-findings/issues/159,sandclock,2022/01,bug;1 (Low Risk);sponsor disputed
67,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M4] `NonUSTStrategy.sol` Lack of slippage control,160,https://github.com/code-423n4/2022-01-sandclock-findings/issues/160,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,[WP-L5] Use of deprecated `safeApprove`,161,https://github.com/code-423n4/2022-01-sandclock-findings/issues/161,sandclock,2022/01,bug;duplicate;0 (Non-critical);disagree with severity;sponsor strategy
67,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,[WP-L6] Critical operations should emit events,162,https://github.com/code-423n4/2022-01-sandclock-findings/issues/162,sandclock,2022/01,bug;0 (Non-critical);disagree with severity;sponsor vault
67,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,[WP-N7] `Vault.sol` Tokens with fee on transfer are not supported,163,https://github.com/code-423n4/2022-01-sandclock-findings/issues/163,sandclock,2022/01,bug;duplicate;2 (Med Risk);sponsor acknowledged
67,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M8] `totalUnderlyingMinusSponsored()` may revert on underflow and malfunction the contract,164,https://github.com/code-423n4/2022-01-sandclock-findings/issues/164,sandclock,2022/01,bug;2 (Med Risk);sponsor confirmed
67,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H9] Centralization Risk: Funds can be frozen when critical key holders lose access to their keys,165,https://github.com/code-423n4/2022-01-sandclock-findings/issues/165,sandclock,2022/01,bug;2 (Med Risk);disagree with severity;sponsor confirmed;sponsor strategy
67,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H10] A malicious early user/attacker can manipulate the pps to freeze users' funds at a certain deposit amount,166,https://github.com/code-423n4/2022-01-sandclock-findings/issues/166,sandclock,2022/01,bug;duplicate;3 (High Risk)
67,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,[WP-L11] `_createDeposit()` `_lockedUntil` should be upper-bounded,167,https://github.com/code-423n4/2022-01-sandclock-findings/issues/167,sandclock,2022/01,bug;invalid;sponsor disputed
67,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H12] `forceUnsponsor()` may open a window for attackers to manipulate the `_totalShares` and freeze users' funds at a certain deposit amount,168,https://github.com/code-423n4/2022-01-sandclock-findings/issues/168,sandclock,2022/01,bug;3 (High Risk);sponsor confirmed;sponsor vault
67,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,2,Lack of slippage checks during swap,122,https://github.com/code-423n4/2022-01-sandclock-findings/issues/122,sandclock,2022/01,bug;duplicate;3 (High Risk);sponsor strategy
67,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Typos,123,https://github.com/code-423n4/2022-01-sandclock-findings/issues/123,sandclock,2022/01,bug;duplicate;0 (Non-critical);sponsor acknowledged
76,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,1,Repeated calls might lead to DoS,247,https://github.com/code-423n4/2022-01-sherlock-findings/issues/247,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,Multiple Reentrancy,282,https://github.com/code-423n4/2022-01-sherlock-findings/issues/282,sherlock,2022/01,bug;duplicate;invalid
76,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`SherDistributionManager.sol#slopeRewardsAvailable` can be calculated later to save gas,44,https://github.com/code-423n4/2022-01-sherlock-findings/issues/44,sherlock,2022/01,bug;G (Gas Optimization)
76,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Use negate(!) rather than == false,45,https://github.com/code-423n4/2022-01-sherlock-findings/issues/45,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Loops can be implemented more efficiently,46,https://github.com/code-423n4/2022-01-sherlock-findings/issues/46,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`Sherlock.sol#_beforeTokenTransfer()` has not needed if statements,48,https://github.com/code-423n4/2022-01-sherlock-findings/issues/48,sherlock,2022/01,bug;G (Gas Optimization)
76,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,Wrong comment on `SherBuy.sol`'s introduction,49,https://github.com/code-423n4/2022-01-sherlock-findings/issues/49,sherlock,2022/01,bug;documentation;duplicate;0 (Non-critical);disagree with severity
76,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,1,Wrong comment about `PERIOD`,55,https://github.com/code-423n4/2022-01-sherlock-findings/issues/55,sherlock,2022/01,bug;documentation;duplicate;0 (Non-critical);disagree with severity
76,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,gas optimization I,25,https://github.com/code-423n4/2022-01-sherlock-findings/issues/25,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,gas saving II,28,https://github.com/code-423n4/2022-01-sherlock-findings/issues/28,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unsafe approve,29,https://github.com/code-423n4/2022-01-sherlock-findings/issues/29,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor acknowledged
76,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Outdated OpenZeppelin packages,30,https://github.com/code-423n4/2022-01-sherlock-findings/issues/30,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,gas saving III,31,https://github.com/code-423n4/2022-01-sherlock-findings/issues/31,sherlock,2022/01,bug;G (Gas Optimization)
76,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Zero division,33,https://github.com/code-423n4/2022-01-sherlock-findings/issues/33,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,gas saving IV,35,https://github.com/code-423n4/2022-01-sherlock-findings/issues/35,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving V,38,https://github.com/code-423n4/2022-01-sherlock-findings/issues/38,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,2,Zero value shown for stake & price in SherBuy.viewCapitalRequirements() when SherAmount between 1~1000 SherTokens. ,42,https://github.com/code-423n4/2022-01-sherlock-findings/issues/42,sherlock,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
76,ACai,0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,1,There is a deviation in the parameter value setting.,174,https://github.com/code-423n4/2022-01-sherlock-findings/issues/174,sherlock,2022/01,bug;documentation;0 (Non-critical);disagree with severity
76,Afanasyevich,0x728dC35758C79c54389ddf5Da1D6Eb55a502f698,2,No transfer ownership pattern,127,https://github.com/code-423n4/2022-01-sherlock-findings/issues/127,sherlock,2022/01,bug;duplicate;0 (Non-critical)
76,Afanasyevich,0x728dC35758C79c54389ddf5Da1D6Eb55a502f698,G,Optimizing for loops by using unchecked{++i} over i++,128,https://github.com/code-423n4/2022-01-sherlock-findings/issues/128,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Afanasyevich,0x728dC35758C79c54389ddf5Da1D6Eb55a502f698,G,Using ++i consumes less gas than i++,129,https://github.com/code-423n4/2022-01-sherlock-findings/issues/129,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Afanasyevich,0x728dC35758C79c54389ddf5Da1D6Eb55a502f698,G,If condition can be removed from SherlockClaimManager.cleanUp function,130,https://github.com/code-423n4/2022-01-sherlock-findings/issues/130,sherlock,2022/01,bug;G (Gas Optimization)
76,Afanasyevich,0x728dC35758C79c54389ddf5Da1D6Eb55a502f698,G,Unnecessary modifier in SherlockProtocolManager contract,131,https://github.com/code-423n4/2022-01-sherlock-findings/issues/131,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,bobi,0x8F24B7bEe60c5421101e2e596b1008522368920F,G,Redundant SLOAD/ MLOAD calls in for-loops.,108,https://github.com/code-423n4/2022-01-sherlock-findings/issues/108,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,bobi,0x8f24b7bee60c5421101e2e596b1008522368920f,1,Unchecked ERC20 tokens approve() return value.,51,https://github.com/code-423n4/2022-01-sherlock-findings/issues/51,sherlock,2022/01,bug;invalid
76,bobi,0x8f24b7bee60c5421101e2e596b1008522368920f,G,Add unchecked directive to save gas.,52,https://github.com/code-423n4/2022-01-sherlock-findings/issues/52,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,bobi,0x8f24b7bee60c5421101e2e596b1008522368920f,G,Function call can be done after required check.,54,https://github.com/code-423n4/2022-01-sherlock-findings/issues/54,sherlock,2022/01,bug;G (Gas Optimization)
76,bobi,0x8F24B7bEe60c5421101e2e596b1008522368920F,1,Usage of deprecated SafeERC20's`safeApprove` .,81,https://github.com/code-423n4/2022-01-sherlock-findings/issues/81,sherlock,2022/01,bug;duplicate;0 (Non-critical)
76,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,G,Cache Array Length Outside of Loop,175,https://github.com/code-423n4/2022-01-sherlock-findings/issues/175,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,G,Shift Right instead of Dividing by 2,176,https://github.com/code-423n4/2022-01-sherlock-findings/issues/176,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,1,Don't use deprecated library functions,177,https://github.com/code-423n4/2022-01-sherlock-findings/issues/177,sherlock,2022/01,bug;duplicate;0 (Non-critical)
76,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,No Transfer Ownership Pattern,100,https://github.com/code-423n4/2022-01-sherlock-findings/issues/100,sherlock,2022/01,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
76,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Usage of deprecated safeApprove,101,https://github.com/code-423n4/2022-01-sherlock-findings/issues/101,sherlock,2022/01,bug;duplicate;0 (Non-critical)
76,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Reentrancy,102,https://github.com/code-423n4/2022-01-sherlock-findings/issues/102,sherlock,2022/01,bug;invalid;1 (Low Risk)
76,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Should add reentrancy guard modifiers.,27,https://github.com/code-423n4/2022-01-sherlock-findings/issues/27,sherlock,2022/01,bug;invalid
76,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"Should call want.safeApprove(address(lp), 0);",57,https://github.com/code-423n4/2022-01-sherlock-findings/issues/57,sherlock,2022/01,bug;duplicate;1 (Low Risk);disagree with severity
76,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Need to add zero address check in the constructor of AaveV2Strategy contract,58,https://github.com/code-423n4/2022-01-sherlock-findings/issues/58,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Sher* assume the input address is sher or usdc,91,https://github.com/code-423n4/2022-01-sherlock-findings/issues/91,sherlock,2022/01,bug;duplicate;1 (Low Risk);sponsor disputed
76,cryptphi,0x0DF54150a3E76f559f7699E343cf9D9FF0Cc043f,3,Hardcoded seed phrase in  sherlock-v2-core repo,43,https://github.com/code-423n4/2022-01-sherlock-findings/issues/43,sherlock,2022/01,bug;invalid;3 (High Risk);sponsor disputed
76,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,Incorrect condition allows malicious sherlockCore address,103,https://github.com/code-423n4/2022-01-sherlock-findings/issues/103,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,missing whenNotPaused,280,https://github.com/code-423n4/2022-01-sherlock-findings/issues/280,sherlock,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
76,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,++i is more gas efficient than i++ in loops forwarding,210,https://github.com/code-423n4/2022-01-sherlock-findings/issues/210,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Cache array length in for loops can save gas,231,https://github.com/code-423n4/2022-01-sherlock-findings/issues/231,sherlock,2022/01,bug;G (Gas Optimization)
76,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Adding unchecked directive can save gas,253,https://github.com/code-423n4/2022-01-sherlock-findings/issues/253,sherlock,2022/01,bug;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Use of the reserved keyword `error` as a variable name,110,https://github.com/code-423n4/2022-01-sherlock-findings/issues/110,sherlock,2022/01,bug;0 (Non-critical);disagree with severity
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `++i` costs less gas compared to `i++`,111,https://github.com/code-423n4/2022-01-sherlock-findings/issues/111,sherlock,2022/01,bug;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"Gas: ""constants"" expressions are expressions, not constants. Use ""immutable"" instead.",113,https://github.com/code-423n4/2022-01-sherlock-findings/issues/113,sherlock,2022/01,bug;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: An array's length should be cached to save gas in for-loops,114,https://github.com/code-423n4/2022-01-sherlock-findings/issues/114,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Unnecessary checked arithmetic in for-loops,115,https://github.com/code-423n4/2022-01-sherlock-findings/issues/115,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Consider making some constants as non-public to save gas,116,https://github.com/code-423n4/2022-01-sherlock-findings/issues/116,sherlock,2022/01,bug;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Unused Named Returns,118,https://github.com/code-423n4/2022-01-sherlock-findings/issues/118,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Public functions that should be declared external,119,https://github.com/code-423n4/2022-01-sherlock-findings/issues/119,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Shift Right instead of Dividing by 2,125,https://github.com/code-423n4/2022-01-sherlock-findings/issues/125,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Mark functions as payable when users can't mistakenly send ETH,126,https://github.com/code-423n4/2022-01-sherlock-findings/issues/126,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Using the logical NOT operator `!` is cheaper than a comparison to the constant boolean value `false`,132,https://github.com/code-423n4/2022-01-sherlock-findings/issues/132,sherlock,2022/01,bug;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`Sherlock.sol`: Missing divide by 0 checks on `totalStakeShares` at 2 places,144,https://github.com/code-423n4/2022-01-sherlock-findings/issues/144,sherlock,2022/01,bug;invalid;1 (Low Risk)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `SherlockClaimManager.sol:addCallback()`: SLOADs minimization,145,https://github.com/code-423n4/2022-01-sherlock-findings/issues/145,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `SherlockClaimManager.sol:priceDisputed():`: a value used only once shouldn't get cached,146,https://github.com/code-423n4/2022-01-sherlock-findings/issues/146,sherlock,2022/01,bug;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `SherlockClaimManager.sol:priceSettled():`: a value used only once shouldn't get cached,148,https://github.com/code-423n4/2022-01-sherlock-findings/issues/148,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Sherlock.sol:removeSherDistributionManager()`: SLOADs minimization,149,https://github.com/code-423n4/2022-01-sherlock-findings/issues/149,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Sherlock.sol:updateNonStakersAddress()`: SLOADs minimization,150,https://github.com/code-423n4/2022-01-sherlock-findings/issues/150,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Sherlock.sol:initialStake()`: Use the cached variable for calculation and then assign it to storage,151,https://github.com/code-423n4/2022-01-sherlock-findings/issues/151,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Sherlock.sol:updateSherlockProtocolManager()`: SLOADs minimization,152,https://github.com/code-423n4/2022-01-sherlock-findings/issues/152,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Sherlock.sol:updateSherlockClaimManager()`: SLOADs minimization,153,https://github.com/code-423n4/2022-01-sherlock-findings/issues/153,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Sherlock.sol:_transferTokensOut()`: Unnecessary checked arithmetic,155,https://github.com/code-423n4/2022-01-sherlock-findings/issues/155,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `SherDistributionManager.sol:calcReward()`: Unnecessary checked arithmetic,156,https://github.com/code-423n4/2022-01-sherlock-findings/issues/156,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `SherlockClaimManager.sol:payoutClaim()`: Unnecessary checked arithmetic,157,https://github.com/code-423n4/2022-01-sherlock-findings/issues/157,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `SherlockProtocolManager.sol:_activeBalance()`: Unnecessary checked arithmetic,158,https://github.com/code-423n4/2022-01-sherlock-findings/issues/158,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `SherlockProtocolManager.sol:_activeBalance()`: Control flow optimization,159,https://github.com/code-423n4/2022-01-sherlock-findings/issues/159,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `SherlockProtocolManager.sol:_settleProtocolDebt()`: Unnecessary checked arithmetic,160,https://github.com/code-423n4/2022-01-sherlock-findings/issues/160,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `SherlockProtocolManager.sol:_settleProtocolDebt()`: Unnecessary checked arithmetic (2),161,https://github.com/code-423n4/2022-01-sherlock-findings/issues/161,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `SherlockProtocolManager.sol:nonStakersClaim()`: Unnecessary checked arithmetic,163,https://github.com/code-423n4/2022-01-sherlock-findings/issues/163,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `SherlockProtocolManager.sol:withdrawActiveBalance()`: Unnecessary checked arithmetic,164,https://github.com/code-423n4/2022-01-sherlock-findings/issues/164,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `SherDistributionManager.sol:calcReward()`: Unnecessary checked arithmetic (2),178,https://github.com/code-423n4/2022-01-sherlock-findings/issues/178,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,`SherDistributionManager.sol:calcReward()` wrong conditional statement,179,https://github.com/code-423n4/2022-01-sherlock-findings/issues/179,sherlock,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `SherlockProtocolManager.sol:_settleProtocolDebt()`: Unnecessary checked arithmetic (3),180,https://github.com/code-423n4/2022-01-sherlock-findings/issues/180,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,USDC is upgradeable: received amount should be calculated,188,https://github.com/code-423n4/2022-01-sherlock-findings/issues/188,sherlock,2022/01,bug;0 (Non-critical);sponsor disputed
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`transferOwnership` should be a two-step process,190,https://github.com/code-423n4/2022-01-sherlock-findings/issues/190,sherlock,2022/01,bug;duplicate;0 (Non-critical)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,`SherlockProtocolManager.sol`: `setMinActiveBalance()` and `forceRemoveByActiveBalance()` should be put behind a timelock,191,https://github.com/code-423n4/2022-01-sherlock-findings/issues/191,sherlock,2022/01,bug;documentation;0 (Non-critical);disagree with severity
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,3,`forceRemoveByActiveBalance()` is callable by anyone and is front-runnable,192,https://github.com/code-423n4/2022-01-sherlock-findings/issues/192,sherlock,2022/01,bug;invalid;sponsor disputed
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Non-strict inequalities are cheaper than strict ones,193,https://github.com/code-423n4/2022-01-sherlock-findings/issues/193,sherlock,2022/01,bug;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Sherlock.sol:updateSherDistributionManager()`: SLOADs minimization,194,https://github.com/code-423n4/2022-01-sherlock-findings/issues/194,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Sherlock.sol:updateYieldStrategy()`: SLOADs minimization,195,https://github.com/code-423n4/2022-01-sherlock-findings/issues/195,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Sherlock.sol:pause()`: SLOADs minimization,196,https://github.com/code-423n4/2022-01-sherlock-findings/issues/196,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Sherlock.sol:unpause()`: SLOADs minimization,197,https://github.com/code-423n4/2022-01-sherlock-findings/issues/197,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`block.chainid` should be stored in a constant variable for more configuration visibility at deployment,199,https://github.com/code-423n4/2022-01-sherlock-findings/issues/199,sherlock,2022/01,bug;invalid;sponsor disputed
76,egjlmn1,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,1,Lack of precision in `allPremiumsPerSecToStakers` may cause reward denying,202,https://github.com/code-423n4/2022-01-sherlock-findings/issues/202,sherlock,2022/01,bug;invalid;sponsor disputed
76,egjlmn1,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,3,first user can steal everyone else's tokens,39,https://github.com/code-423n4/2022-01-sherlock-findings/issues/39,sherlock,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
76,egjlmn1,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,1,`usdc` decimals are much lower than `sher` decimals,59,https://github.com/code-423n4/2022-01-sherlock-findings/issues/59,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,cheaper to use `!active()`,251,https://github.com/code-423n4/2022-01-sherlock-findings/issues/251,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,cheaper to use !active(),254,https://github.com/code-423n4/2022-01-sherlock-findings/issues/254,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G, double delete in forceRemoveByActiveBalance() is expensive,255,https://github.com/code-423n4/2022-01-sherlock-findings/issues/255,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,cheaper to calculate stakeShares first then do the transfer,256,https://github.com/code-423n4/2022-01-sherlock-findings/issues/256,sherlock,2022/01,bug;G (Gas Optimization)
76,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,cheaper to use negation (!) than use require false for if ,257,https://github.com/code-423n4/2022-01-sherlock-findings/issues/257,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,cheaper to use negation to require if ,258,https://github.com/code-423n4/2022-01-sherlock-findings/issues/258,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,Looping through storage is expensive,278,https://github.com/code-423n4/2022-01-sherlock-findings/issues/278,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,using ++i for saving more gas,133,https://github.com/code-423n4/2022-01-sherlock-findings/issues/133,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Saving gas by used length,200,https://github.com/code-423n4/2022-01-sherlock-findings/issues/200,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,3,SherlockClaimManager may set contract to State.UmaDenied even if UMA Approves the dispute,92,https://github.com/code-423n4/2022-01-sherlock-findings/issues/92,sherlock,2022/01,bug;invalid;sponsor disputed
76,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,1,executeHalt() missing check,93,https://github.com/code-423n4/2022-01-sherlock-findings/issues/93,sherlock,2022/01,bug;invalid;1 (Low Risk);disagree with severity
76,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,1,Incorrect comparison for prevCoverage in startClaim(),94,https://github.com/code-423n4/2022-01-sherlock-findings/issues/94,sherlock,2022/01,bug;documentation;0 (Non-critical);disagree with severity
76,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,1,_isEscalateState Comment Improvement,95,https://github.com/code-423n4/2022-01-sherlock-findings/issues/95,sherlock,2022/01,bug;documentation;0 (Non-critical);disagree with severity
76,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,2,startClaim() allows higher than covered amounts to submit claims,96,https://github.com/code-423n4/2022-01-sherlock-findings/issues/96,sherlock,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
76,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,1,coverageAmounts() comment correction,97,https://github.com/code-423n4/2022-01-sherlock-findings/issues/97,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,G,Unneeded reassignment of totalStakeShares,98,https://github.com/code-423n4/2022-01-sherlock-findings/issues/98,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,G,Unneeded reassignment of totalStakeShares in initialStake(),99,https://github.com/code-423n4/2022-01-sherlock-findings/issues/99,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,G,Manager: Check non-zero ETH balance before sending,211,https://github.com/code-423n4/2022-01-sherlock-findings/issues/211,sherlock,2022/01,bug;G (Gas Optimization)
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,G,Skip checking booleans against true / false,212,https://github.com/code-423n4/2022-01-sherlock-findings/issues/212,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,G,SherBuy: Redundant ZeroArgument check for _sherlockPosition,213,https://github.com/code-423n4/2022-01-sherlock-findings/issues/213,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,G,SherlockClaimManager: Cache array length,214,https://github.com/code-423n4/2022-01-sherlock-findings/issues/214,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,G,SherDistributionManager: Cheaper to assign than add _tvl,215,https://github.com/code-423n4/2022-01-sherlock-findings/issues/215,sherlock,2022/01,bug;G (Gas Optimization)
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,0,Spelling Errors,216,https://github.com/code-423n4/2022-01-sherlock-findings/issues/216,sherlock,2022/01,bug;documentation;0 (Non-critical)
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,0,SherlockClaimManager: reentrancy comment for priceProposed() and priceDisputed() can be phrased better,217,https://github.com/code-423n4/2022-01-sherlock-findings/issues/217,sherlock,2022/01,bug;documentation;0 (Non-critical)
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,0,Inconsistent Acronym of UmaHaltOperator,218,https://github.com/code-423n4/2022-01-sherlock-findings/issues/218,sherlock,2022/01,bug;documentation;0 (Non-critical)
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,0,Grammar,219,https://github.com/code-423n4/2022-01-sherlock-findings/issues/219,sherlock,2022/01,bug;documentation;0 (Non-critical)
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,0,SherlockClaimManager: Clarify why sherlockCore is used as proposer in UMA.requestAndProposePriceFor(),220,https://github.com/code-423n4/2022-01-sherlock-findings/issues/220,sherlock,2022/01,bug;documentation;0 (Non-critical)
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,Sherlock: arbRestake() doesnt reduce addressShares of owner,221,https://github.com/code-423n4/2022-01-sherlock-findings/issues/221,sherlock,2022/01,bug;duplicate;2 (Med Risk)
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,SherBuy: SHER and USDC token addresses should be derived from _sherlockPosition,222,https://github.com/code-423n4/2022-01-sherlock-findings/issues/222,sherlock,2022/01,bug;1 (Low Risk);sponsor acknowledged
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,Sherlock: Decouple yield strategy with withdrawals,223,https://github.com/code-423n4/2022-01-sherlock-findings/issues/223,sherlock,2022/01,bug;duplicate;2 (Med Risk)
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,SherBuy: Verify SHERClaim’s SHER token is equal to that of SherlockPosition’s,224,https://github.com/code-423n4/2022-01-sherlock-findings/issues/224,sherlock,2022/01,bug;duplicate;1 (Low Risk);sponsor acknowledged
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,Sherlock: Revert for non-existent ID in viewRewardForArbRestake,225,https://github.com/code-423n4/2022-01-sherlock-findings/issues/225,sherlock,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,SherlockClaimManager: startClaim() has outdated comment,226,https://github.com/code-423n4/2022-01-sherlock-findings/issues/226,sherlock,2022/01,bug;documentation;0 (Non-critical)
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,SherlockClaimManager: Sanity check on _amount in escalate() should be stricter,227,https://github.com/code-423n4/2022-01-sherlock-findings/issues/227,sherlock,2022/01,bug;duplicate;1 (Low Risk)
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,SherlockClaimManager: Confusing comment on BOND,228,https://github.com/code-423n4/2022-01-sherlock-findings/issues/228,sherlock,2022/01,bug;documentation;0 (Non-critical);disagree with severity
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,1,ISherlockClaimManager: Outdated example on claims process,229,https://github.com/code-423n4/2022-01-sherlock-findings/issues/229,sherlock,2022/01,bug;documentation;0 (Non-critical);disagree with severity
76,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,3,SherlockClaimManager: Incorrect amounts needed and paid for escalated claims ,230,https://github.com/code-423n4/2022-01-sherlock-findings/issues/230,sherlock,2022/01,bug;documentation;2 (Med Risk);disagree with severity
76,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: fmul optimization,235,https://github.com/code-423n4/2022-01-sherlock-findings/issues/235,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Struct layout,236,https://github.com/code-423n4/2022-01-sherlock-findings/issues/236,sherlock,2022/01,bug;G (Gas Optimization)
76,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: cache array length,237,https://github.com/code-423n4/2022-01-sherlock-findings/issues/237,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Unnecessary check,238,https://github.com/code-423n4/2022-01-sherlock-findings/issues/238,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,Name collision in `SherlockProtocolManager`,239,https://github.com/code-423n4/2022-01-sherlock-findings/issues/239,sherlock,2022/01,bug;0 (Non-critical);disagree with severity
76,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,Hardcoded AAVE LendingPoolAddressesProvider,241,https://github.com/code-423n4/2022-01-sherlock-findings/issues/241,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Non-transferable critical privileged role,242,https://github.com/code-423n4/2022-01-sherlock-findings/issues/242,sherlock,2022/01,bug;invalid;3 (High Risk);sponsor disputed
76,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,Name collision in SherlockClaimManager,243,https://github.com/code-423n4/2022-01-sherlock-findings/issues/243,sherlock,2022/01,bug;duplicate;0 (Non-critical);sponsor disputed
76,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,2,addressShare is not updated on arbRestake,281,https://github.com/code-423n4/2022-01-sherlock-findings/issues/281,sherlock,2022/01,bug;duplicate;2 (Med Risk)
76,hagrid,0x3A46FeD37cAcd52a6DACc4a49f520AdaD0e51D61,2,Potential Reentrancy with ERC777-kind tokens,104,https://github.com/code-423n4/2022-01-sherlock-findings/issues/104,sherlock,2022/01,bug;invalid;sponsor disputed
76,hagrid,0x3A46FeD37cAcd52a6DACc4a49f520AdaD0e51D61,2,USE SafeApprove() instead of approve(),105,https://github.com/code-423n4/2022-01-sherlock-findings/issues/105,sherlock,2022/01,bug;invalid;sponsor disputed
76,hagrid,0x3A46FeD37cAcd52a6DACc4a49f520AdaD0e51D61,1,It is not possible to set AaveV2Strategy Core as Sherlock Address on Mainnet,106,https://github.com/code-423n4/2022-01-sherlock-findings/issues/106,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,hagrid,0x3A46FeD37cAcd52a6DACc4a49f520AdaD0e51D61,G,Unused Function or Parameters,107,https://github.com/code-423n4/2022-01-sherlock-findings/issues/107,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,haku,0xcC84F898DeC4169239A5b64d038DefC6813b7d4F,G,inheriting contracts don't have to import dependencies again.,207,https://github.com/code-423n4/2022-01-sherlock-findings/issues/207,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,haku,0xcC84F898DeC4169239A5b64d038DefC6813b7d4F,G,constant value should be private or internal.,208,https://github.com/code-423n4/2022-01-sherlock-findings/issues/208,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,haku,0xcC84F898DeC4169239A5b64d038DefC6813b7d4F,G,Replacing condition == false for !condition can saves gas.,209,https://github.com/code-423n4/2022-01-sherlock-findings/issues/209,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,2,Owner should be able to choose to not ignore failures in updateYieldStrategy ,203,https://github.com/code-423n4/2022-01-sherlock-findings/issues/203,sherlock,2022/01,bug;duplicate;2 (Med Risk)
76,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,2,Users shouldn't be forced into a specific strategy (possible rug pull),204,https://github.com/code-423n4/2022-01-sherlock-findings/issues/204,sherlock,2022/01,bug;invalid;2 (Med Risk);disagree with severity
76,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,1,SherBuy.sol should use increaseAllowance on sher instead of approve,205,https://github.com/code-423n4/2022-01-sherlock-findings/issues/205,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,2,Contracts will break if USDC ever upgrades to fee-on-transfer,206,https://github.com/code-423n4/2022-01-sherlock-findings/issues/206,sherlock,2022/01,bug;duplicate;0 (Non-critical)
76,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,tokenBalanceOfAddress of nftOwner becomes permanently incorrect after arbRestake,109,https://github.com/code-423n4/2022-01-sherlock-findings/issues/109,sherlock,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
76,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,yieldStrategyDeposit doesn't check that there is enough USDC to deposit,141,https://github.com/code-423n4/2022-01-sherlock-findings/issues/141,sherlock,2022/01,bug;0 (Non-critical);disagree with severity
76,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,2,Manager contract has debug values left hardcoded,50,https://github.com/code-423n4/2022-01-sherlock-findings/issues/50,sherlock,2022/01,bug;invalid;sponsor disputed
76,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,addressShares introduction made further shares accounting error prone,53,https://github.com/code-423n4/2022-01-sherlock-findings/issues/53,sherlock,2022/01,bug;0 (Non-critical);disagree with severity
76,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,ISherlockGov.removeSherDistributionManager description is incorrect,56,https://github.com/code-423n4/2022-01-sherlock-findings/issues/56,sherlock,2022/01,bug;documentation;0 (Non-critical)
76,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,updateYieldStrategy will freeze some funds with the old Strategy if yieldStrategy fails to withdraw all the funds because of liquidity issues,76,https://github.com/code-423n4/2022-01-sherlock-findings/issues/76,sherlock,2022/01,bug;enhancement;2 (Med Risk);disagree with severity
76,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,Pause/unpause functions descriptions aren't fully correct ,90,https://github.com/code-423n4/2022-01-sherlock-findings/issues/90,sherlock,2022/01,bug;documentation;0 (Non-critical);disagree with severity
76,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,No validation to make sure usdc address is correct before setting max approval ,26,https://github.com/code-423n4/2022-01-sherlock-findings/issues/26,sherlock,2022/01,bug;invalid;sponsor disputed
76,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,execute() function has reentrancy vulnerability ,32,https://github.com/code-423n4/2022-01-sherlock-findings/issues/32,sherlock,2022/01,bug;invalid;disagree with severity;resolved;sponsor confirmed
76,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,the amount of sher to be sold can be manipulated ,34,https://github.com/code-423n4/2022-01-sherlock-findings/issues/34,sherlock,2022/01,bug;invalid;sponsor disputed
76,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,possibility of griefer should not at all be allowed in viewCapitalRequirements(),36,https://github.com/code-423n4/2022-01-sherlock-findings/issues/36,sherlock,2022/01,bug;invalid;sponsor disputed
76,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Cross function reentrancy is possible in SherClaim.sol ,37,https://github.com/code-423n4/2022-01-sherlock-findings/issues/37,sherlock,2022/01,bug;duplicate;invalid;sponsor disputed
76,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Cache state variable,181,https://github.com/code-423n4/2022-01-sherlock-findings/issues/181,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Change memory to calldata,182,https://github.com/code-423n4/2022-01-sherlock-findings/issues/182,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Cache array length in for loops can save gas,183,https://github.com/code-423n4/2022-01-sherlock-findings/issues/183,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,A more efficient for loop index proceeding,184,https://github.com/code-423n4/2022-01-sherlock-findings/issues/184,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,10 ** 18 can be changed to 1e18 and save some gas,185,https://github.com/code-423n4/2022-01-sherlock-findings/issues/185,sherlock,2022/01,bug;G (Gas Optimization)
76,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Avoid unnecessary arithmetic operations ,186,https://github.com/code-423n4/2022-01-sherlock-findings/issues/186,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,`sweepTokens`loop does not check for zero transfer amount ,187,https://github.com/code-423n4/2022-01-sherlock-findings/issues/187,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,Wrong user input check of incoming USDC when escalating claim,112,https://github.com/code-423n4/2022-01-sherlock-findings/issues/112,sherlock,2022/01,bug;1 (Low Risk);disagree with severity
76,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,"Claim escalation bond price is hardcoded, though it might change",117,https://github.com/code-423n4/2022-01-sherlock-findings/issues/117,sherlock,2022/01,bug;documentation;duplicate;0 (Non-critical);disagree with severity
76,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,3,Reenterancy in `_sendSherRewardsToOwner()`,60,https://github.com/code-423n4/2022-01-sherlock-findings/issues/60,sherlock,2022/01,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
76,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,G,Gas Optimisations - Reduce SLOADs,61,https://github.com/code-423n4/2022-01-sherlock-findings/issues/61,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,0,emitting claim payouts with amount = 0,134,https://github.com/code-423n4/2022-01-sherlock-findings/issues/134,sherlock,2022/01,bug;invalid;0 (Non-critical)
76,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,3,DoS and stealing users' USDC,135,https://github.com/code-423n4/2022-01-sherlock-findings/issues/135,sherlock,2022/01,bug;documentation;duplicate;3 (High Risk);sponsor disputed
76,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,prefix incrementing to save gas,136,https://github.com/code-423n4/2022-01-sherlock-findings/issues/136,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,inlining a function to save gas,137,https://github.com/code-423n4/2022-01-sherlock-findings/issues/137,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,saving length of an array before the loop to save gas,138,https://github.com/code-423n4/2022-01-sherlock-findings/issues/138,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,delete a mapping value instead of setting it to false to save gas,139,https://github.com/code-423n4/2022-01-sherlock-findings/issues/139,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,use unchecked to save gas,140,https://github.com/code-423n4/2022-01-sherlock-findings/issues/140,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,saving gas on reverted transactions,142,https://github.com/code-423n4/2022-01-sherlock-findings/issues/142,sherlock,2022/01,bug;G (Gas Optimization)
76,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,preventing calculations by changing code lines order,143,https://github.com/code-423n4/2022-01-sherlock-findings/issues/143,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,1,Add reentrancy guard in SherBuy.execute(),63,https://github.com/code-423n4/2022-01-sherlock-findings/issues/63,sherlock,2022/01,bug;invalid;1 (Low Risk)
76,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Avoid assigning _claim to a storage variable,64,https://github.com/code-423n4/2022-01-sherlock-findings/issues/64,sherlock,2022/01,bug;invalid;0 (Non-critical)
76,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Typo in pullReward(),65,https://github.com/code-423n4/2022-01-sherlock-findings/issues/65,sherlock,2022/01,bug;documentation;duplicate;0 (Non-critical)
76,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Never-used ETH transfers in _sweep,66,https://github.com/code-423n4/2022-01-sherlock-findings/issues/66,sherlock,2022/01,bug;0 (Non-critical)
76,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Hardhat references in Manager.sol code,67,https://github.com/code-423n4/2022-01-sherlock-findings/issues/67,sherlock,2022/01,bug;0 (Non-critical)
76,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Useless parameter validation in AaveV2Strategy.sol,68,https://github.com/code-423n4/2022-01-sherlock-findings/issues/68,sherlock,2022/01,bug;invalid;0 (Non-critical)
76,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Use structs instead of three mappings in Sherlock.sol,69,https://github.com/code-423n4/2022-01-sherlock-findings/issues/69,sherlock,2022/01,bug;0 (Non-critical)
76,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Cache state variables in calcReward(),70,https://github.com/code-423n4/2022-01-sherlock-findings/issues/70,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Governance functions could cache state variables in Sherlock.sol,71,https://github.com/code-423n4/2022-01-sherlock-findings/issues/71,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Using ++i consumes less gas than i++,72,https://github.com/code-423n4/2022-01-sherlock-findings/issues/72,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Call approve with local parameter in SherBuy.sol,73,https://github.com/code-423n4/2022-01-sherlock-findings/issues/73,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,pants,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,use require instead if then revert,2,https://github.com/code-423n4/2022-01-sherlock-findings/issues/2,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,safeApprove will fail if the current approval is not 0,269,https://github.com/code-423n4/2022-01-sherlock-findings/issues/269,sherlock,2022/01,bug;1 (Low Risk)
76,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Slippage parameter for SherBuy,270,https://github.com/code-423n4/2022-01-sherlock-findings/issues/270,sherlock,2022/01,bug;1 (Low Risk);disagree with severity
76,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Claim SHER on behalf of others,271,https://github.com/code-423n4/2022-01-sherlock-findings/issues/271,sherlock,2022/01,bug;help wanted;0 (Non-critical);disagree with severity
76,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Re-try withdrawAll from inactive strategy,272,https://github.com/code-423n4/2022-01-sherlock-findings/issues/272,sherlock,2022/01,bug;duplicate;2 (Med Risk)
76,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Pausable paused() is not enforced to be present,273,https://github.com/code-423n4/2022-01-sherlock-findings/issues/273,sherlock,2022/01,bug;1 (Low Risk);sponsor acknowledged
76,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Re-entrancy protection,274,https://github.com/code-423n4/2022-01-sherlock-findings/issues/274,sherlock,2022/01,bug;0 (Non-critical)
76,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unchecked math operations,275,https://github.com/code-423n4/2022-01-sherlock-findings/issues/275,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,debt = balance,276,https://github.com/code-423n4/2022-01-sherlock-findings/issues/276,sherlock,2022/01,bug;G (Gas Optimization)
76,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Order of operations,277,https://github.com/code-423n4/2022-01-sherlock-findings/issues/277,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,1,Staking period required to buy sher tokens can be disabled,260,https://github.com/code-423n4/2022-01-sherlock-findings/issues/260,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,1,Unsafe reentrancy door,261,https://github.com/code-423n4/2022-01-sherlock-findings/issues/261,sherlock,2022/01,bug;invalid
76,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,++i is more gas efficient than i++,262,https://github.com/code-423n4/2022-01-sherlock-findings/issues/262,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Restaking period could be disabled,265,https://github.com/code-423n4/2022-01-sherlock-findings/issues/265,sherlock,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
76,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,Impossible check wastes gas,266,https://github.com/code-423n4/2022-01-sherlock-findings/issues/266,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Withrawals will fail if the market has high utilization,267,https://github.com/code-423n4/2022-01-sherlock-findings/issues/267,sherlock,2022/01,bug;0 (Non-critical);disagree with severity
76,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Big deposits will revert,268,https://github.com/code-423n4/2022-01-sherlock-findings/issues/268,sherlock,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
76,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,Same check is made twice,279,https://github.com/code-423n4/2022-01-sherlock-findings/issues/279,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,RamiRond,0xC814c6E5863bf4e3702Fc97D0c08eF3eC3c4e573,G,Avoid unneeded SLOADs by caching values in memory,77,https://github.com/code-423n4/2022-01-sherlock-findings/issues/77,sherlock,2022/01,bug;G (Gas Optimization)
76,RamiRond,0xC814c6E5863bf4e3702Fc97D0c08eF3eC3c4e573,G,Use return value of assignments to save gas,78,https://github.com/code-423n4/2022-01-sherlock-findings/issues/78,sherlock,2022/01,bug;G (Gas Optimization)
76,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,1,checks effect interaction on execute function,252,https://github.com/code-423n4/2022-01-sherlock-findings/issues/252,sherlock,2022/01,bug;invalid
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified function inputs of public / external functions,10,https://github.com/code-423n4/2022-01-sherlock-findings/issues/10,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove of openZeppelin is deprecated,11,https://github.com/code-423n4/2022-01-sherlock-findings/issues/11,sherlock,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Must approve 0 first,12,https://github.com/code-423n4/2022-01-sherlock-findings/issues/12,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use != 0 instead of > 0,13,https://github.com/code-423n4/2022-01-sherlock-findings/issues/13,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary equals boolean,14,https://github.com/code-423n4/2022-01-sherlock-findings/issues/14,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Check if amount is not zero to save gas,15,https://github.com/code-423n4/2022-01-sherlock-findings/issues/15,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Cache powers of 10 used several times,16,https://github.com/code-423n4/2022-01-sherlock-findings/issues/16,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Caching array length can save gas,17,https://github.com/code-423n4/2022-01-sherlock-findings/issues/17,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Prefix increments are cheaper than postfix increments,18,https://github.com/code-423n4/2022-01-sherlock-findings/issues/18,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary array boundaries check when loading an array element twice,19,https://github.com/code-423n4/2022-01-sherlock-findings/issues/19,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,20,https://github.com/code-423n4/2022-01-sherlock-findings/issues/20,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,21,https://github.com/code-423n4/2022-01-sherlock-findings/issues/21,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Internal functions to private,22,https://github.com/code-423n4/2022-01-sherlock-findings/issues/22,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary Reentrancy Guards,23,https://github.com/code-423n4/2022-01-sherlock-findings/issues/23,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,"    Inline one time use functions,",232,https://github.com/code-423n4/2022-01-sherlock-findings/issues/232,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary default assignment,233,https://github.com/code-423n4/2022-01-sherlock-findings/issues/233,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Inline one time use functions,234,https://github.com/code-423n4/2022-01-sherlock-findings/issues/234,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,24,https://github.com/code-423n4/2022-01-sherlock-findings/issues/24,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Check if amount is not zero to save gas,240,https://github.com/code-423n4/2022-01-sherlock-findings/issues/240,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use calldata instead of memory,263,https://github.com/code-423n4/2022-01-sherlock-findings/issues/263,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Anyone can withdraw others,264,https://github.com/code-423n4/2022-01-sherlock-findings/issues/264,sherlock,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,approve return value is ignored,3,https://github.com/code-423n4/2022-01-sherlock-findings/issues/3,sherlock,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Unbounded loop on array that can only grow can lead to DoS,4,https://github.com/code-423n4/2022-01-sherlock-findings/issues/4,sherlock,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Missing commenting,47,https://github.com/code-423n4/2022-01-sherlock-findings/issues/47,sherlock,2022/01,bug;invalid;1 (Low Risk)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,After emit error should come revert,5,https://github.com/code-423n4/2022-01-sherlock-findings/issues/5,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Never used parameters,6,https://github.com/code-423n4/2022-01-sherlock-findings/issues/6,sherlock,2022/01,bug;invalid;1 (Low Risk)
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,In the following public update functions no value is returned,7,https://github.com/code-423n4/2022-01-sherlock-findings/issues/7,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Missing non reentrancy modifier,8,https://github.com/code-423n4/2022-01-sherlock-findings/issues/8,sherlock,2022/01,bug;duplicate;invalid
76,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Named return issue,9,https://github.com/code-423n4/2022-01-sherlock-findings/issues/9,sherlock,2022/01,bug;invalid;sponsor disputed
76,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Cache state variables to reduce gas,79,https://github.com/code-423n4/2022-01-sherlock-findings/issues/79,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Don't save a struct to storage if it's not going to be modified,80,https://github.com/code-423n4/2022-01-sherlock-findings/issues/80,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Array length read in for loop consumes more gas,244,https://github.com/code-423n4/2022-01-sherlock-findings/issues/244,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,0,Unnecessary typcasting,245,https://github.com/code-423n4/2022-01-sherlock-findings/issues/245,sherlock,2022/01,bug;0 (Non-critical);sponsor acknowledged
76,samruna,0xB2cb56c049Ea868C3A22B0a6a47AA6608372eD3E,2,transferTokenOut does not restrict withdraw to requested amount of token,40,https://github.com/code-423n4/2022-01-sherlock-findings/issues/40,sherlock,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
76,samruna,0xB2cb56c049Ea868C3A22B0a6a47AA6608372eD3E,1,StackingPeriod can exhaust gas limit,41,https://github.com/code-423n4/2022-01-sherlock-findings/issues/41,sherlock,2022/01,bug;invalid;1 (Low Risk)
76,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,Bond price not controlled by Sherlock,166,https://github.com/code-423n4/2022-01-sherlock-findings/issues/166,sherlock,2022/01,bug;documentation;0 (Non-critical);disagree with severity
76,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,safeApprove deprecated,167,https://github.com/code-423n4/2022-01-sherlock-findings/issues/167,sherlock,2022/01,bug;duplicate;1 (Low Risk)
76,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,0,Remove `_isCleanupState()` function,168,https://github.com/code-423n4/2022-01-sherlock-findings/issues/168,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Incorrect comment about callback call,169,https://github.com/code-423n4/2022-01-sherlock-findings/issues/169,sherlock,2022/01,bug;documentation;0 (Non-critical);disagree with severity
76,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Protocol arb functions can be frontrun,170,https://github.com/code-423n4/2022-01-sherlock-findings/issues/170,sherlock,2022/01,bug;invalid;sponsor disputed
76,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,Many `protocolUpdate()` calls erase historic previousCoverage,171,https://github.com/code-423n4/2022-01-sherlock-findings/issues/171,sherlock,2022/01,bug;1 (Low Risk);disagree with severity
76,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Agent can game coverage amount,172,https://github.com/code-423n4/2022-01-sherlock-findings/issues/172,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,static,0x2e847aae43c2d08bce43195dee62ab7cb63c7451,3,Possible Re-entrancy in _sendSherRewardsToOwner,1,https://github.com/code-423n4/2022-01-sherlock-findings/issues/1,sherlock,2022/01,bug;duplicate;2 (Med Risk)
76,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,cheaper gas to use `claim.state` and `claim.updated`,246,https://github.com/code-423n4/2022-01-sherlock-findings/issues/246,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,unnecessary check on `block.chainid`,248,https://github.com/code-423n4/2022-01-sherlock-findings/issues/248,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Cheaper to use calldata than memory,249,https://github.com/code-423n4/2022-01-sherlock-findings/issues/249,sherlock,2022/01,bug;G (Gas Optimization)
76,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,3,anyone can call forceRemoveByActiveBalance(),250,https://github.com/code-423n4/2022-01-sherlock-findings/issues/250,sherlock,2022/01,bug;invalid;3 (High Risk);sponsor disputed
76,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Cheaper gas to check `address(this).balance` first then do the transfer ,259,https://github.com/code-423n4/2022-01-sherlock-findings/issues/259,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,G,remove constant boolean expression block.chainid != 31337,147,https://github.com/code-423n4/2022-01-sherlock-findings/issues/147,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,1,Implementation is not align with documentation #2,154,https://github.com/code-423n4/2022-01-sherlock-findings/issues/154,sherlock,2022/01,bug;documentation;0 (Non-critical);disagree with severity
76,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,2,Owner can set arbitrary premium which allow nonStakers drain funds,162,https://github.com/code-423n4/2022-01-sherlock-findings/issues/162,sherlock,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
76,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,G,remove boolean constant expression block.chianId != 31337,165,https://github.com/code-423n4/2022-01-sherlock-findings/issues/165,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,G,Cleaned state can be removed,173,https://github.com/code-423n4/2022-01-sherlock-findings/issues/173,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,1,Arbitrager can potentially take more arbReward than expected.,198,https://github.com/code-423n4/2022-01-sherlock-findings/issues/198,sherlock,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
76,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,3,"isActive doesn't prevent owner from sweeping token from AaveV2Strategy, SDM and SPM",84,https://github.com/code-423n4/2022-01-sherlock-findings/issues/84,sherlock,2022/01,bug;invalid;3 (High Risk);disagree with severity;sponsor acknowledged
76,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,3,DEPLOYER can drain underlying asset deposited by AaveV2Strategy and drain SHER token in SherDistributionManager,85,https://github.com/code-423n4/2022-01-sherlock-findings/issues/85,sherlock,2022/01,bug;invalid;3 (High Risk);sponsor disputed
76,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,0,Boolean equality,86,https://github.com/code-423n4/2022-01-sherlock-findings/issues/86,sherlock,2022/01,bug;invalid;0 (Non-critical)
76,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,0,Unused parameter,87,https://github.com/code-423n4/2022-01-sherlock-findings/issues/87,sherlock,2022/01,bug;invalid;0 (Non-critical)
76,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,1,Implementation is not align with documentation,88,https://github.com/code-423n4/2022-01-sherlock-findings/issues/88,sherlock,2022/01,bug;documentation;0 (Non-critical);disagree with severity
76,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,0,Boolean equality,89,https://github.com/code-423n4/2022-01-sherlock-findings/issues/89,sherlock,2022/01,bug;invalid;0 (Non-critical)
76,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,G,Redundant check in `SherBuy.execute`,189,https://github.com/code-423n4/2022-01-sherlock-findings/issues/189,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,2,Updating Manager contract could destruct Sherlock core functionalities   ,201,https://github.com/code-423n4/2022-01-sherlock-findings/issues/201,sherlock,2022/01,bug;documentation;0 (Non-critical);disagree with severity
76,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,0,Funny wrong information in contest description ,62,https://github.com/code-423n4/2022-01-sherlock-findings/issues/62,sherlock,2022/01,bug;invalid;0 (Non-critical)
76,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,0,Code  not following Best practices,74,https://github.com/code-423n4/2022-01-sherlock-findings/issues/74,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,0,Code not following Best practices,75,https://github.com/code-423n4/2022-01-sherlock-findings/issues/75,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Comparison with literal boolean values,120,https://github.com/code-423n4/2022-01-sherlock-findings/issues/120,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Unused Named Returns,121,https://github.com/code-423n4/2022-01-sherlock-findings/issues/121,sherlock,2022/01,bug;invalid;G (Gas Optimization)
76,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Save Gas With The Unchecked Keyword (SherlockProtocolmanager.sol),122,https://github.com/code-423n4/2022-01-sherlock-findings/issues/122,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
76,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Missing parameter check or confusing comment in function protocolRemove (SherlockProtocolManager.sol),123,https://github.com/code-423n4/2022-01-sherlock-findings/issues/123,sherlock,2022/01,bug;help wanted;1 (Low Risk)
76,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Function _isCleanupState (SherlockClaimManager.sol) can be refactored for efficiency and clarity,124,https://github.com/code-423n4/2022-01-sherlock-findings/issues/124,sherlock,2022/01,bug;duplicate;G (Gas Optimization)
74,0v3rf10w,0x348f11eAa649b796F80B68961d98fA0DF6377F68,2,100,12,https://github.com/code-423n4/2022-01-timeswap-findings/issues/12,timeswap,2022/01,bug;invalid;2 (Med Risk)
74,0v3rf10w,0x7b84F7a588bb3d1C5294Aba2b7dDa95E7E985466,G,Speed of Time Travelers,3,https://github.com/code-423n4/2022-01-timeswap-findings/issues/3,timeswap,2022/01,bug;invalid
74,0v3rf10w,0xC18A0bcd3C597B5f6be70d1AC1d30d42C390b4D8,2,"Dashboard is not working , lend positiona are still loading, the same is for Lend button, Lend Amount to lend is not refresjing",40,https://github.com/code-423n4/2022-01-timeswap-findings/issues/40,timeswap,2022/01,bug;invalid;2 (Med Risk)
74,0v3rf10w,0x3a01aeAf23cAA39d85e8E06b1938f4F1af282fA7,2,23,47,https://github.com/code-423n4/2022-01-timeswap-findings/issues/47,timeswap,2022/01,bug;invalid;2 (Med Risk)
74,0v3rf10w,0x3585C5691D442442685623F071E0Fcc9f5AE1e8E,2,vulnerability ,75,https://github.com/code-423n4/2022-01-timeswap-findings/issues/75,timeswap,2022/01,bug;invalid;2 (Med Risk)
74,0v3rf10w,0x7466ebF3B8aF67511f7163Ab1E31f928b2E60330,1,Sometimes you can’t enter when adding a flow cell,79,https://github.com/code-423n4/2022-01-timeswap-findings/issues/79,timeswap,2022/01,bug;invalid;1 (Low Risk)
74,0x0x0x,0x32C82e7AdA8C03A90ef477C5F27682E71aa3C062,1,There are different claiming times on the test net. ,103,https://github.com/code-423n4/2022-01-timeswap-findings/issues/103,timeswap,2022/01,bug;invalid;1 (Low Risk)
74,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For uint `> 0` can be replaced with ` != 0` for gas optimization,172,https://github.com/code-423n4/2022-01-timeswap-findings/issues/172,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Loops can be implemented more efficiently,175,https://github.com/code-423n4/2022-01-timeswap-findings/issues/175,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,0x0x0x,0x3585C5691D442442685623F071E0Fcc9f5AE1e8E,2, MATIC/AVAX and AVAX/MATIC pools,60,https://github.com/code-423n4/2022-01-timeswap-findings/issues/60,timeswap,2022/01,bug;invalid;2 (Med Risk)
74,0x1f8b,0x9815F476ED6Abc217E85464862EAC7214CfED36a,2,timeswap testnet,118,https://github.com/code-423n4/2022-01-timeswap-findings/issues/118,timeswap,2022/01,bug;invalid;2 (Med Risk)
74,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving,51,https://github.com/code-423n4/2022-01-timeswap-findings/issues/51,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving II,52,https://github.com/code-423n4/2022-01-timeswap-findings/issues/52,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving by for increment,54,https://github.com/code-423n4/2022-01-timeswap-findings/issues/54,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,0,Lack of inputs,55,https://github.com/code-423n4/2022-01-timeswap-findings/issues/55,timeswap,2022/01,bug;invalid;0 (Non-critical);sponsor disputed
74,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Drain burned tokens,57,https://github.com/code-423n4/2022-01-timeswap-findings/issues/57,timeswap,2022/01,bug;invalid;sponsor disputed
74,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,XSS in uri token,68,https://github.com/code-423n4/2022-01-timeswap-findings/issues/68,timeswap,2022/01,bug;duplicate;2 (Med Risk)
74,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Wrong Safe implementation,69,https://github.com/code-423n4/2022-01-timeswap-findings/issues/69,timeswap,2022/01,bug;1 (Low Risk);sponsor acknowledged
74,0x6672,0x9815F476ED6Abc217E85464862EAC7214CfED36a,2,timeswap testnet,117,https://github.com/code-423n4/2022-01-timeswap-findings/issues/117,timeswap,2022/01,bug;invalid;2 (Med Risk)
74,0xJoker,0x0511B3dc8262AcCc906A1fB92E05848bD979aa1f,G,5,1,https://github.com/code-423n4/2022-01-timeswap-findings/issues/1,timeswap,2022/01,bug;invalid
74,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,1,LendMath.sol(this contract is not in scope but will affect  TimeswapPair.lend() ),181,https://github.com/code-423n4/2022-01-timeswap-findings/issues/181,timeswap,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
74,ACai,0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,2,TimeswapPair.pools not be assigned.,58,https://github.com/code-423n4/2022-01-timeswap-findings/issues/58,timeswap,2022/01,bug;invalid;sponsor disputed
74,ACai,0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,2,TimeswapPair does not have ITimeswapMintCallback function,59,https://github.com/code-423n4/2022-01-timeswap-findings/issues/59,timeswap,2022/01,bug;invalid;sponsor disputed
74,AmitN,0x79D7BbF2b0dAFFaA191EfAc437BF26288Ebb9940,2,MsNik,184,https://github.com/code-423n4/2022-01-timeswap-findings/issues/184,timeswap,2022/01,bug;invalid;2 (Med Risk)
74,bitbopper,0xe15f11FF2364311E0b7250AaA51A2bB4D7FBA37F,G,"TimeswapPair.sol modifier lock: Switching between 1, 2 instead of 0, 1 is more gas efficient",87,https://github.com/code-423n4/2022-01-timeswap-findings/issues/87,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,Cashualday,0x4a4cc2e440C9B2458Ee6ec8df46cbeB1b939B503,0,Borrow can't claim,66,https://github.com/code-423n4/2022-01-timeswap-findings/issues/66,timeswap,2022/01,bug;invalid;0 (Non-critical)
74,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Open TODOs,134,https://github.com/code-423n4/2022-01-timeswap-findings/issues/134,timeswap,2022/01,bug;duplicate;0 (Non-critical)
74,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,TimeswapFactory.sol lacks input validation,48,https://github.com/code-423n4/2022-01-timeswap-findings/issues/48,timeswap,2022/01,bug;invalid;sponsor disputed
74,certora,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,1,frontrun Temporary Dos attack,119,https://github.com/code-423n4/2022-01-timeswap-findings/issues/119,timeswap,2022/01,bug;1 (Low Risk);sponsor acknowledged
74,certora,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,0,messing with the dues ids for victim user ,129,https://github.com/code-423n4/2022-01-timeswap-findings/issues/129,timeswap,2022/01,bug;0 (Non-critical);sponsor acknowledged
74,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,# Pending owner is not cleared,143,https://github.com/code-423n4/2022-01-timeswap-findings/issues/143,timeswap,2022/01,bug;duplicate;1 (Low Risk)
74,csanuragjain,0xd295584135829d89427674b72560222b06e08a15,G,Gas savings,90,https://github.com/code-423n4/2022-01-timeswap-findings/issues/90,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,dangerous receive function,35,https://github.com/code-423n4/2022-01-timeswap-findings/issues/35,timeswap,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
74,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,G,gas,36,https://github.com/code-423n4/2022-01-timeswap-findings/issues/36,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,waste of gas,37,https://github.com/code-423n4/2022-01-timeswap-findings/issues/37,timeswap,2022/01,bug;G (Gas Optimization);sponsor acknowledged
74,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,users might pay enormous amouts of gas,74,https://github.com/code-423n4/2022-01-timeswap-findings/issues/74,timeswap,2022/01,bug;2 (Med Risk);sponsor acknowledged
74,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing Decimal Check When adding pairs,100,https://github.com/code-423n4/2022-01-timeswap-findings/issues/100,timeswap,2022/01,bug;invalid;sponsor disputed
74,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Revert String Size Optimization,101,https://github.com/code-423n4/2022-01-timeswap-findings/issues/101,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Less than 256 uints are not gas efficient,102,https://github.com/code-423n4/2022-01-timeswap-findings/issues/102,timeswap,2022/01,bug;G (Gas Optimization);sponsor acknowledged
74,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Asset and Collateral Should Not Be Same,182,https://github.com/code-423n4/2022-01-timeswap-findings/issues/182,timeswap,2022/01,bug;invalid;sponsor disputed
74,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Restrict funds receivable to be only from wrapped native token,28,https://github.com/code-423n4/2022-01-timeswap-findings/issues/28,timeswap,2022/01,bug;duplicate;1 (Low Risk)
74,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,++i is more gas efficient than i++ in loops forwarding,29,https://github.com/code-423n4/2022-01-timeswap-findings/issues/29,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Cache array length in for loops can save gas,30,https://github.com/code-423n4/2022-01-timeswap-findings/issues/30,timeswap,2022/01,bug;duplicate;G (Gas Optimization);sponsor disputed
74,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use `calldata` instead of `memory` for function parameters,32,https://github.com/code-423n4/2022-01-timeswap-findings/issues/32,timeswap,2022/01,bug;G (Gas Optimization);sponsor acknowledged
74,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Improper Upper Bound Definition on the Fee,33,https://github.com/code-423n4/2022-01-timeswap-findings/issues/33,timeswap,2022/01,bug;0 (Non-critical);sponsor disputed
74,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,`> 0 can be replaced with != 0 for gas optimization`,71,https://github.com/code-423n4/2022-01-timeswap-findings/issues/71,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Openzeppelin Contract Vulnerability,99,https://github.com/code-423n4/2022-01-timeswap-findings/issues/99,timeswap,2022/01,bug;invalid;sponsor disputed
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: No need to initialize variables with default values,120,https://github.com/code-423n4/2022-01-timeswap-findings/issues/120,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `> 0` is less efficient than `!= 0` for unsigned integers,122,https://github.com/code-423n4/2022-01-timeswap-findings/issues/122,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,immutable variables `fee` and `protocolFee` are unbounded,128,https://github.com/code-423n4/2022-01-timeswap-findings/issues/128,timeswap,2022/01,bug;duplicate;0 (Non-critical)
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Break out of loop to save gas,130,https://github.com/code-423n4/2022-01-timeswap-findings/issues/130,timeswap,2022/01,bug;G (Gas Optimization);sponsor disputed
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Immutable variable `TimeswapConvenience:factory` should be 0 address checked,179,https://github.com/code-423n4/2022-01-timeswap-findings/issues/179,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Immutable variable `TimeswapConvenience:weth` should be 0 address checked,180,https://github.com/code-423n4/2022-01-timeswap-findings/issues/180,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Use Custom Errors instead of Revert Strings to save Gas,61,https://github.com/code-423n4/2022-01-timeswap-findings/issues/61,timeswap,2022/01,bug;G (Gas Optimization);sponsor acknowledged
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"""constants"" expressions are expressions, not constants. Use ""immutable"" instead.",62,https://github.com/code-423n4/2022-01-timeswap-findings/issues/62,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,An array's length should be cached to save gas in for-loops,63,https://github.com/code-423n4/2022-01-timeswap-findings/issues/63,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Caching calculation to save gas in for-loops,64,https://github.com/code-423n4/2022-01-timeswap-findings/issues/64,timeswap,2022/01,bug;duplicate;invalid;G (Gas Optimization)
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Unnecessary checked arithmetic in for-loops,65,https://github.com/code-423n4/2022-01-timeswap-findings/issues/65,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`++i` costs less gass compared to `i++`,70,https://github.com/code-423n4/2022-01-timeswap-findings/issues/70,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Use `calldata` instead of `memory` for external functions where the function argument is read-only.,72,https://github.com/code-423n4/2022-01-timeswap-findings/issues/72,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,The override of variable `Liquidity:decimals` isn't necessary,73,https://github.com/code-423n4/2022-01-timeswap-findings/issues/73,timeswap,2022/01,bug;invalid;sponsor disputed
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Unnecessary checked arithmetic when no overflow/underflow possible (1),76,https://github.com/code-423n4/2022-01-timeswap-findings/issues/76,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Unnecessary checked arithmetic when no overflow/underflow possible (2),77,https://github.com/code-423n4/2022-01-timeswap-findings/issues/77,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`TimeswapPair.sol:mint` code optimization,78,https://github.com/code-423n4/2022-01-timeswap-findings/issues/78,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas optimization: Placement of require statements in `TimeswapPair:pay()`,80,https://github.com/code-423n4/2022-01-timeswap-findings/issues/80,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Unused Named Returns,81,https://github.com/code-423n4/2022-01-timeswap-findings/issues/81,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Unnecessary imports,82,https://github.com/code-423n4/2022-01-timeswap-findings/issues/82,timeswap,2022/01,bug;invalid;G (Gas Optimization);sponsor confirmed;sponsor disputed
74,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`pendingOwner` should be reset to `address(0)` after `acceptOwner()` is successfully called,83,https://github.com/code-423n4/2022-01-timeswap-findings/issues/83,timeswap,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
74,egjlmn1,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,2,DOS pay function,86,https://github.com/code-423n4/2022-01-timeswap-findings/issues/86,timeswap,2022/01,bug;2 (Med Risk);sponsor acknowledged
74,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,G,Use !=0 instead of >0 in require condition to save gas.,41,https://github.com/code-423n4/2022-01-timeswap-findings/issues/41,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,1,Missing noreentrant check on mint function,147,https://github.com/code-423n4/2022-01-timeswap-findings/issues/147,timeswap,2022/01,bug;duplicate;2 (Med Risk)
74,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Cache result of `BlockNumber.get()`,142,https://github.com/code-423n4/2022-01-timeswap-findings/issues/142,timeswap,2022/01,bug;G (Gas Optimization);sponsor disputed
74,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Reuse code,186,https://github.com/code-423n4/2022-01-timeswap-findings/issues/186,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,harleythedog,0x3BD8fb2fB0b11789F8885143D6f14FA3D69f6FC9,3,Griefing attack can prevent almost all activity in a pool,133,https://github.com/code-423n4/2022-01-timeswap-findings/issues/133,timeswap,2022/01,bug;duplicate;3 (High Risk)
74,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,2,Debt created during mint is arbitragable,115,https://github.com/code-423n4/2022-01-timeswap-findings/issues/115,timeswap,2022/01,bug;invalid
74,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,2,Debt created during mint is arbitragable,116,https://github.com/code-423n4/2022-01-timeswap-findings/issues/116,timeswap,2022/01,bug;duplicate;3 (High Risk)
74,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,G,TimeswapPair.pay retrieves the same block number in cycle,31,https://github.com/code-423n4/2022-01-timeswap-findings/issues/31,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,Core configuration variables aren't checked for operational mistakes on construction,34,https://github.com/code-423n4/2022-01-timeswap-findings/issues/34,timeswap,2022/01,bug;1 (Low Risk);sponsor acknowledged
74,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,Mint library uses wrong error code for max collateral check,56,https://github.com/code-423n4/2022-01-timeswap-findings/issues/56,timeswap,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
74,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,G,Pool’s totalLiquidity is accessed from storage twice in TimeswapPair.mint,67,https://github.com/code-423n4/2022-01-timeswap-findings/issues/67,timeswap,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
74,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,G,"Pool.state.x, y, z are read from storage twice in TimeswapPair’s mint, lend and borrow functions",84,https://github.com/code-423n4/2022-01-timeswap-findings/issues/84,timeswap,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
74,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,TimeswapConvenience params structure components are not validated before usage,88,https://github.com/code-423n4/2022-01-timeswap-findings/issues/88,timeswap,2022/01,bug;1 (Low Risk);sponsor acknowledged
74,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,TimeswapPair's burn miss current pool liquidity check,94,https://github.com/code-423n4/2022-01-timeswap-findings/issues/94,timeswap,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
74,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,G,WithdrawMath.getCollateral reads storage repetitively for the same state variables that don’t change,95,https://github.com/code-423n4/2022-01-timeswap-findings/issues/95,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,Borrowing of the whole asset supply can yield a low-level division revert,96,https://github.com/code-423n4/2022-01-timeswap-findings/issues/96,timeswap,2022/01,bug;1 (Low Risk);sponsor acknowledged
74,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,TimeswapPair.pay doesn't check for non-existent debt owner,97,https://github.com/code-423n4/2022-01-timeswap-findings/issues/97,timeswap,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
74,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,0,WETH9 example uses payable.transfer,98,https://github.com/code-423n4/2022-01-timeswap-findings/issues/98,timeswap,2022/01,bug;0 (Non-critical);sponsor acknowledged
74,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,1,missing check  in constructor ,10,https://github.com/code-423n4/2022-01-timeswap-findings/issues/10,timeswap,2022/01,bug;0 (Non-critical);sponsor disputed
74,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,2,missing a function,27,https://github.com/code-423n4/2022-01-timeswap-findings/issues/27,timeswap,2022/01,bug;invalid;sponsor disputed
74,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,1,pendingOwner is not set to zero ,9,https://github.com/code-423n4/2022-01-timeswap-findings/issues/9,timeswap,2022/01,bug;duplicate;1 (Low Risk)
74,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,G,SafeTransfer library called from pay() function is not needed ,11,https://github.com/code-423n4/2022-01-timeswap-findings/issues/11,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Anyone can call barrow() without providing collateral to receive the asset,38,https://github.com/code-423n4/2022-01-timeswap-findings/issues/38,timeswap,2022/01,bug;invalid;sponsor disputed
74,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Liquidity constructor doesn't check that addresses are unique ,39,https://github.com/code-423n4/2022-01-timeswap-findings/issues/39,timeswap,2022/01,bug;0 (Non-critical);sponsor acknowledged
74,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Important state updates are made after the callback in the mint() function ,4,https://github.com/code-423n4/2022-01-timeswap-findings/issues/4,timeswap,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
74,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Insurance.sol constructor doesn't check if addresses passed are unique ,42,https://github.com/code-423n4/2022-01-timeswap-findings/issues/42,timeswap,2022/01,bug;0 (Non-critical);sponsor acknowledged
74,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,no reentrancy guard on mint() function that has a callback ,43,https://github.com/code-423n4/2022-01-timeswap-findings/issues/43,timeswap,2022/01,bug;2 (Med Risk);sponsor confirmed
74,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,no guard against zero addresses in TimeswapConvenience.sol constructor ,44,https://github.com/code-423n4/2022-01-timeswap-findings/issues/44,timeswap,2022/01,bug;duplicate;1 (Low Risk)
74,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,No check that _factory and _weth are different addresses in constructor ,45,https://github.com/code-423n4/2022-01-timeswap-findings/issues/45,timeswap,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
74,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,"Invalid type ""this"" used in function call could lead to unsuspected breaking behavior ",46,https://github.com/code-423n4/2022-01-timeswap-findings/issues/46,timeswap,2022/01,bug;invalid;sponsor disputed
74,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,In the lend() function state updates are made after the callback ,5,https://github.com/code-423n4/2022-01-timeswap-findings/issues/5,timeswap,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
74,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,borrow() function has state updates after a callback to msg.sender ,6,https://github.com/code-423n4/2022-01-timeswap-findings/issues/6,timeswap,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
74,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,pay() function has callback to msg.sender before important state updates ,7,https://github.com/code-423n4/2022-01-timeswap-findings/issues/7,timeswap,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
74,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,No check that liquidityTo and dueTo addresses are unique ,8,https://github.com/code-423n4/2022-01-timeswap-findings/issues/8,timeswap,2022/01,bug;invalid;sponsor disputed
74,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,A more efficient for loop index proceeding,49,https://github.com/code-423n4/2022-01-timeswap-findings/issues/49,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,> 0 can be replaced with != 0 for gas optimisation,50,https://github.com/code-423n4/2022-01-timeswap-findings/issues/50,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,kenzo,0x5B80a5A66A22438997e8F83689ec8432fd448D25,0,"This is an exceptional project, it's gonna be one of the best in town",53,https://github.com/code-423n4/2022-01-timeswap-findings/issues/53,timeswap,2022/01,bug;invalid;0 (Non-critical)
74,mds1,2B Westren Plaza 12th comm street,1,mdssiddiqui,2,https://github.com/code-423n4/2022-01-timeswap-findings/issues/2,timeswap,2022/01,bug;invalid;1 (Low Risk)
74,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Constructor Does Not Check for Zero Addresses for _factory and _weth,104,https://github.com/code-423n4/2022-01-timeswap-findings/issues/104,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,Nikolay,0x79D7BbF2b0dAFFaA191EfAc437BF26288Ebb9940,2,MsNik,185,https://github.com/code-423n4/2022-01-timeswap-findings/issues/185,timeswap,2022/01,bug;invalid
74,Omik,0x970A49b663Fc8Db67d36eD62f49B5bd7CB296703,3,"The swap shows success, but the tokens did not interact successfully, unable to do tasks, and the game could not be played",13,https://github.com/code-423n4/2022-01-timeswap-findings/issues/13,timeswap,2022/01,bug;invalid
74,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,loop index prefix instead of postfix,121,https://github.com/code-423n4/2022-01-timeswap-findings/issues/121,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,saving array elements in a variable to prevent multiple accessing to the memory,123,https://github.com/code-423n4/2022-01-timeswap-findings/issues/123,timeswap,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
74,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,subtract values in the if statement to avoid a useless operation,124,https://github.com/code-423n4/2022-01-timeswap-findings/issues/124,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,call a function and save its return value before the loop instead of calling it in every iteration ,125,https://github.com/code-423n4/2022-01-timeswap-findings/issues/125,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,calculate a condition before the loop instead of calculating it in every iteration,126,https://github.com/code-423n4/2022-01-timeswap-findings/issues/126,timeswap,2022/01,bug;G (Gas Optimization);sponsor acknowledged
74,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,acceptOwner should reset pendingOwner,105,https://github.com/code-423n4/2022-01-timeswap-findings/issues/105,timeswap,2022/01,bug;duplicate;1 (Low Risk)
74,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Caching pair in timeswapPayCallback can save gas,106,https://github.com/code-423n4/2022-01-timeswap-findings/issues/106,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Caching weth in timeswapMintCallback can save gas,107,https://github.com/code-423n4/2022-01-timeswap-findings/issues/107,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,1,TimeswapFactory::pendingOwner is not cleared,85,https://github.com/code-423n4/2022-01-timeswap-findings/issues/85,timeswap,2022/01,bug;duplicate;1 (Low Risk)
74,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,2,Liquidity Provider can optionally call pay(...) before burn(...),146,https://github.com/code-423n4/2022-01-timeswap-findings/issues/146,timeswap,2022/01,bug;invalid;sponsor disputed
74,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,0,TimeswapPair.mint() needs minor refactoring.,148,https://github.com/code-423n4/2022-01-timeswap-findings/issues/148,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,G,.length should be extracted into a variable,149,https://github.com/code-423n4/2022-01-timeswap-findings/issues/149,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,using storage instead of memory to declare struct variable inside the function,141,https://github.com/code-423n4/2022-01-timeswap-findings/issues/141,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,more efficient gas usage by removing && operator,89,https://github.com/code-423n4/2022-01-timeswap-findings/issues/89,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,using '!=' instead of '<' or '>' ,91,https://github.com/code-423n4/2022-01-timeswap-findings/issues/91,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,more efficient lock() modifier,92,https://github.com/code-423n4/2022-01-timeswap-findings/issues/92,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,Rhynorater,0xF84f301891Fe36BAF4B056290B528814dCD83B51,G,Adding Unchecked Directive will Save Gas for BurnMath.sol#getAsset and BurnMath.sol#getCollateral functions,183,https://github.com/code-423n4/2022-01-timeswap-findings/issues/183,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,Rhynorater,0xF84f301891Fe36BAF4B056290B528814dCD83B51,3,Manipulation of the Y State Results in Interest Rate Manipulation,187,https://github.com/code-423n4/2022-01-timeswap-findings/issues/187,timeswap,2022/01,bug;3 (High Risk);sponsor confirmed
74,Rhynorater,0xF84f301891Fe36BAF4B056290B528814dCD83B51,0,Can I submit this after the time is up?,188,https://github.com/code-423n4/2022-01-timeswap-findings/issues/188,timeswap,2022/01,bug;invalid;0 (Non-critical)
74,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused state variables,14,https://github.com/code-423n4/2022-01-timeswap-findings/issues/14,timeswap,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
74,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,15,https://github.com/code-423n4/2022-01-timeswap-findings/issues/15,timeswap,2022/01,bug;invalid;sponsor disputed
74,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,16,https://github.com/code-423n4/2022-01-timeswap-findings/issues/16,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,17,https://github.com/code-423n4/2022-01-timeswap-findings/issues/17,timeswap,2022/01,bug;invalid;sponsor disputed
74,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary array boundaries check when loading an array element twice,18,https://github.com/code-423n4/2022-01-timeswap-findings/issues/18,timeswap,2022/01,bug;invalid;sponsor disputed
74,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Prefix increments are cheaper than postfix increments,19,https://github.com/code-423n4/2022-01-timeswap-findings/issues/19,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Caching array length can save gas,20,https://github.com/code-423n4/2022-01-timeswap-findings/issues/20,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Unnecessary payable,21,https://github.com/code-423n4/2022-01-timeswap-findings/issues/21,timeswap,2022/01,bug;invalid;sponsor disputed
74,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Check if amount is not zero to save gas,22,https://github.com/code-423n4/2022-01-timeswap-findings/issues/22,timeswap,2022/01,bug;invalid;sponsor disputed
74,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified function inputs of public / external functions,23,https://github.com/code-423n4/2022-01-timeswap-findings/issues/23,timeswap,2022/01,bug;0 (Non-critical);sponsor disputed
74,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Named return issue,24,https://github.com/code-423n4/2022-01-timeswap-findings/issues/24,timeswap,2022/01,bug;1 (Low Risk)
74,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Two Steps Verification before Transferring Ownership,25,https://github.com/code-423n4/2022-01-timeswap-findings/issues/25,timeswap,2022/01,bug;invalid;sponsor disputed
74,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Modifier side-effect,26,https://github.com/code-423n4/2022-01-timeswap-findings/issues/26,timeswap,2022/01,bug;invalid;sponsor acknowledged
74,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,`TimeswapConvenience.payETHAsset()` allows the user to pay with the contract's own funds,127,https://github.com/code-423n4/2022-01-timeswap-findings/issues/127,timeswap,2022/01,bug;invalid;sponsor disputed
74,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Convenience contract fails to function if asset or collateral is an ERC20 token with fees,93,https://github.com/code-423n4/2022-01-timeswap-findings/issues/93,timeswap,2022/01,bug;2 (Med Risk);sponsor acknowledged
74,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Incorrect Q in comment,108,https://github.com/code-423n4/2022-01-timeswap-findings/issues/108,timeswap,2022/01,bug;1 (Low Risk);sponsor acknowledged
74,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Remove salt from createPair(),109,https://github.com/code-423n4/2022-01-timeswap-findings/issues/109,timeswap,2022/01,bug;G (Gas Optimization);sponsor acknowledged
74,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,3,Two pairs can have same ERC20 tokens,110,https://github.com/code-423n4/2022-01-timeswap-findings/issues/110,timeswap,2022/01,bug;invalid;sponsor disputed
74,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,`burn()` doesn't call ERC721 `_burn()`,111,https://github.com/code-423n4/2022-01-timeswap-findings/issues/111,timeswap,2022/01,bug;2 (Med Risk);sponsor acknowledged
74,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,safeDecimals can revert causing DoS,112,https://github.com/code-423n4/2022-01-timeswap-findings/issues/112,timeswap,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
74,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,`safeName()` can revert causing DoS,113,https://github.com/code-423n4/2022-01-timeswap-findings/issues/113,timeswap,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
74,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,`safeSymbol()` can revert causing DoS,114,https://github.com/code-423n4/2022-01-timeswap-findings/issues/114,timeswap,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
74,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,0,Outdated OpenZeppelin dependency,132,https://github.com/code-423n4/2022-01-timeswap-findings/issues/132,timeswap,2022/01,bug;0 (Non-critical)
74,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,No slippage control causes sandwich attack,178,https://github.com/code-423n4/2022-01-timeswap-findings/issues/178,timeswap,2022/01,bug;invalid;sponsor disputed
74,thank_you,0x22f2a6be015a3951cf75d4883167b9f79699cd4b,2,XSS via SVG Construction contract,131,https://github.com/code-423n4/2022-01-timeswap-findings/issues/131,timeswap,2022/01,bug;2 (Med Risk);sponsor confirmed
74,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,can reduce gas in function createPair by replacing interface with address,144,https://github.com/code-423n4/2022-01-timeswap-findings/issues/144,timeswap,2022/01,bug;G (Gas Optimization);sponsor acknowledged
74,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,1,no contract check in function createPair ,145,https://github.com/code-423n4/2022-01-timeswap-findings/issues/145,timeswap,2022/01,bug;1 (Low Risk);sponsor acknowledged
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"`TimeswapPair.sol#lock()` Switching between 1, 2 instead of 0, 1 is more gas efficient",150,https://github.com/code-423n4/2022-01-timeswap-findings/issues/150,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache array length in for loops can save gas,151,https://github.com/code-423n4/2022-01-timeswap-findings/issues/151,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`++i` is more efficient than `i++`,152,https://github.com/code-423n4/2022-01-timeswap-findings/issues/152,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary storage read can save gas,153,https://github.com/code-423n4/2022-01-timeswap-findings/issues/153,timeswap,2022/01,bug;G (Gas Optimization);sponsor acknowledged
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`TimeswapPair.sol#mint()` Implementation can be simpler and save some gas,154,https://github.com/code-423n4/2022-01-timeswap-findings/issues/154,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`TimeswapPair.sol#mint()` Avoiding unnecessary code execution using checks can save gas,155,https://github.com/code-423n4/2022-01-timeswap-findings/issues/155,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,156,https://github.com/code-423n4/2022-01-timeswap-findings/issues/156,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`NFTTokenURIScaffold.sol#_isLtoStringTrimmedeapYear()` Check of `flag == 0` can be done earlier,157,https://github.com/code-423n4/2022-01-timeswap-findings/issues/157,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`BurnMath.sol#getAsset()` Implementation can be simpler and save some gas,158,https://github.com/code-423n4/2022-01-timeswap-findings/issues/158,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused imports,159,https://github.com/code-423n4/2022-01-timeswap-findings/issues/159,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"""> 0"" is less efficient than ""!= 0"" for unsigned integers",160,https://github.com/code-423n4/2022-01-timeswap-findings/issues/160,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unnecessary variables can save gas,161,https://github.com/code-423n4/2022-01-timeswap-findings/issues/161,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`TimeswapPair.sol#borrow()` Improper implementation allows attacker to increase `pool.state.z` to a large value,162,https://github.com/code-423n4/2022-01-timeswap-findings/issues/162,timeswap,2022/01,bug;3 (High Risk);sponsor confirmed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Inline unnecessary internal function can save gas,163,https://github.com/code-423n4/2022-01-timeswap-findings/issues/163,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Caching arithmetic results can avoid redundant storage reads and save gas,164,https://github.com/code-423n4/2022-01-timeswap-findings/issues/164,timeswap,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`TimeswapPair.sol#mint()` Malicious user/attacker can mint new liquidity with an extremely small amount of `yIncrease` and malfunction the pair with the maturity,165,https://github.com/code-423n4/2022-01-timeswap-findings/issues/165,timeswap,2022/01,bug;2 (Med Risk);sponsor confirmed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`TimeswapPair.sol#borrow()` Attacker can increase `pool.state.y` to an arbitrary target value,166,https://github.com/code-423n4/2022-01-timeswap-findings/issues/166,timeswap,2022/01,bug;duplicate;3 (High Risk)
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`TimeswapPair.sol#mint()` Lack of input validation allows attacker to set `pool.state.y` to an arbitrary target value,167,https://github.com/code-423n4/2022-01-timeswap-findings/issues/167,timeswap,2022/01,bug;duplicate;3 (High Risk)
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Race condition on ERC20 approval,168,https://github.com/code-423n4/2022-01-timeswap-findings/issues/168,timeswap,2022/01,bug;0 (Non-critical);sponsor acknowledged
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`TimeswapConvenience.sol#borrowGivenDebt()` Attacker can increase `state.y` to an extremely large value with a dust amount of `assetOut`,169,https://github.com/code-423n4/2022-01-timeswap-findings/issues/169,timeswap,2022/01,bug;3 (High Risk);sponsor confirmed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unnecessary checked arithmetic in for loops,170,https://github.com/code-423n4/2022-01-timeswap-findings/issues/170,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,171,https://github.com/code-423n4/2022-01-timeswap-findings/issues/171,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`SafeCast.sol#toUint128()` Validation of input value can be done earlier to save gas,173,https://github.com/code-423n4/2022-01-timeswap-findings/issues/173,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Simplify `SquareRoot#sqrt()` can save gas,174,https://github.com/code-423n4/2022-01-timeswap-findings/issues/174,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`SquareRoot#sqrtUp()` Wrong implementation,176,https://github.com/code-423n4/2022-01-timeswap-findings/issues/176,timeswap,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
74,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`10 ** 9` can be changed to `1e9` and save some gas,177,https://github.com/code-423n4/2022-01-timeswap-findings/issues/177,timeswap,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
74,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Typos,135,https://github.com/code-423n4/2022-01-timeswap-findings/issues/135,timeswap,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
74,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Use assignment not += in function mint (TimeswapPair.sol),136,https://github.com/code-423n4/2022-01-timeswap-findings/issues/136,timeswap,2022/01,bug;G (Gas Optimization);sponsor acknowledged
74,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Missing input validation on array lengths (PayMath.sol),137,https://github.com/code-423n4/2022-01-timeswap-findings/issues/137,timeswap,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
74,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Open TODOs,138,https://github.com/code-423n4/2022-01-timeswap-findings/issues/138,timeswap,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
74,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Save Gas With The Unchecked Keyword ,139,https://github.com/code-423n4/2022-01-timeswap-findings/issues/139,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
74,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,"""> 0"" is less efficient than ""!= 0"" for unsigned integers",140,https://github.com/code-423n4/2022-01-timeswap-findings/issues/140,timeswap,2022/01,bug;duplicate;G (Gas Optimization)
79,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,Multiple Reentrancy possibilities ,249,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/249,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,1,Missing zero address check,250,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/250,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,`RocketJoeStaking.sol#withdraw` has an unneeded require statement,160,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/160,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,For uint `> 0` can be replaced with ` != 0` for gas optimization,161,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/161,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Use const,104,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/104,trader joe,2022/01,bug;invalid
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Edit [Use const],105,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/105,trader joe,2022/01,bug;invalid
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,not consistent LaunchEvent ,107,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/107,trader joe,2022/01,bug;invalid;sponsor disputed
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Modify [not consistent LaunchEvent],108,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/108,trader joe,2022/01,bug;invalid;sponsor disputed
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving,24,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/24,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Admin Deny of Service,25,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/25,trader joe,2022/01,bug;1 (Low Risk);disagree with severity;sponsor confirmed
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unsafe transfer,26,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/26,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Lack of ownership check,27,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/27,trader joe,2022/01,bug;1 (Low Risk);sponsor acknowledged
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Wrong design for RocketJoeToken,28,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/28,trader joe,2022/01,bug;invalid;sponsor disputed
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving in RocketJoeFactory,29,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/29,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unsafe transfer in `RocketJoeFactory`,30,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/30,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Lack of checks in RocketJoeFactory,31,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/31,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Unneeded cast,33,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/33,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unsafe approve,34,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/34,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Bypass rJoe burn,35,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/35,trader joe,2022/01,bug;invalid;sponsor disputed
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Multiple unsafe transfers in LaunchEvent,36,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/36,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Deny of Service,37,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/37,trader joe,2022/01,bug;invalid;sponsor disputed
79,bobi,0x8f24b7bee60c5421101e2e596b1008522368920f,1,Unspecific solidity compiler version pragma.,110,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/110,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,bobi,0x8f24b7bee60c5421101e2e596b1008522368920f,2,Unchecked transfers may lead to funds lost.,183,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/183,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,bobi,0x8f24b7bee60c5421101e2e596b1008522368920f,1,Unchecked `approve()` calls.,188,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/188,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,bobi,0x8f24b7bee60c5421101e2e596b1008522368920f,G,Variables should be marked as immutable.,190,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/190,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,bobi,0x8f24b7bee60c5421101e2e596b1008522368920f,2,No slippage check on `deposit()` of `RocketJoeStaking.sol`,226,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/226,trader joe,2022/01,bug;invalid;sponsor disputed
79,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,1,Unsafe ERC20 Operation(s),100,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/100,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,1,Unspecific Compiler Version Pragma,101,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/101,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,G,Cache `pair` address to save gas,106,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/106,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,G,Use != 0 instead of > 0 for Unsigned Integer Comparison,97,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/97,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,G,Long Revert Strings,98,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/98,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,byterocket,0xee680e5c2C5251261061F12BA3a5c470D2B6AE83,G,Use Shift Right/Left instead of Division/Multiplication if possible,99,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/99,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,1,Incorrect pair for LiquidityPoolCreated event,92,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/92,trader joe,2022/01,bug;invalid;sponsor disputed
79,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,G,user allocations can be removed,93,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/93,trader joe,2022/01,bug;duplicate;invalid
79,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,G,Remove isRJLaunchEvent,94,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/94,trader joe,2022/01,bug;invalid;sponsor disputed
79,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,G,Remove allRJLaunchEvents,95,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/95,trader joe,2022/01,bug;invalid
79,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,1,Issuer / Owner can withdraw all incentives after pair created,96,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/96,trader joe,2022/01,bug;invalid;sponsor disputed
79,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,No Transfer Ownership Pattern,10,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/10,trader joe,2022/01,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
79,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Missing 0 address check,11,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/11,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,12,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/12,trader joe,2022/01,bug;2 (Med Risk);sponsor confirmed
79,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Must approve 0 first,22,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/22,trader joe,2022/01,bug;1 (Low Risk);sponsor acknowledged
79,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,RocketJoeFactory assume the input address is WAVAX,23,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/23,trader joe,2022/01,bug;1 (Low Risk);sponsor acknowledged
79,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,FRONT-RUNNABLE INITIALIZERS,8,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/8,trader joe,2022/01,bug;1 (Low Risk);sponsor acknowledged
79,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Wrong token allocation computation for token decimals != 18 if floor price not reached,193,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/193,trader joe,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
79,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Launch event creation can be denied,194,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/194,trader joe,2022/01,bug;duplicate;2 (Med Risk);sponsor acknowledged
79,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Launch event creation can be denied 2,195,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/195,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Pair creation can be denied,197,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/197,trader joe,2022/01,bug;2 (Med Risk);disagree with severity;sponsor confirmed
79,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,ERC20 return values not checked,198,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/198,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Users can lose value in emergency state,199,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/199,trader joe,2022/01,bug;3 (High Risk);sponsor confirmed
79,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`rJoeAmount` can never be less than the `_avaxAmount`,201,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/201,trader joe,2022/01,bug;1 (Low Risk);sponsor confirmed
79,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Uninitialized `RocketJoeStaking.lastRewardTimestamp` can inflate `rJoe` supply,202,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/202,trader joe,2022/01,bug;2 (Med Risk);sponsor confirmed
79,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`IssuingTokenDeposited` event not emitted,203,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/203,trader joe,2022/01,bug;duplicate;0 (Non-critical)
79,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`UserWithdrawn` event not emitted,204,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/204,trader joe,2022/01,bug;duplicate;0 (Non-critical)
79,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Penalty Collector must be trusted,206,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/206,trader joe,2022/01,bug;1 (Low Risk);sponsor acknowledged
79,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,`LaunchEvent.tokenIncentivesPercent` wrong docs,208,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/208,trader joe,2022/01,bug;1 (Low Risk);disagree with severity;sponsor confirmed
79,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,1,Misleading comment in `LaunchEvent.getReserves`,209,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/209,trader joe,2022/01,bug;1 (Low Risk);disagree with severity;sponsor confirmed
79,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas: `RocketJoeStaking.withdraw`,210,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/210,trader joe,2022/01,bug;G (Gas Optimization);sponsor confirmed
79,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas saving,168,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/168,trader joe,2022/01,bug;invalid
79,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas savings,171,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/171,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas savings,172,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/172,trader joe,2022/01,bug;invalid
79,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas savings,174,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/174,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,owner has excess power,175,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/175,trader joe,2022/01,bug;invalid;sponsor disputed
79,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,Allowance set incorrectly,176,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/176,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,user.allocation is not decreasing,177,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/177,trader joe,2022/01,bug;invalid
79,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Use != 0 instead of > 0 for Unsigned Integer Comparison,269,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/269,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Long Revert Strings,270,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/270,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Use Shift Right/Left instead of Division/Multiplication if possible,271,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/271,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,2,Unsafe ERC20 Operation(s),272,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/272,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,1,Unspecific Compiler Version Pragma,273,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/273,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Mark unchanging variables immutable,274,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/274,trader joe,2022/01,bug;G (Gas Optimization)
79,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Mark constant variables constant,275,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/275,trader joe,2022/01,bug;invalid
79,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,Owner can DoS `withdrawAVAX()` function,276,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/276,trader joe,2022/01,bug;invalid;sponsor disputed
79,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Minimize operations,277,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/277,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Error never thrown,278,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/278,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Cache internal call result,279,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/279,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,2,Possible trolling during deployemnt,280,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/280,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Use constructors,282,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/282,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,0,Remove unused variable,286,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/286,trader joe,2022/01,bug;invalid
79,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Cache storage variables,297,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/297,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,d4rk,0x9f07Dc0F363a088BE82974e04AECb3C610C31fdd,G,Use SHR instead of DIV to save gas,1,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/1,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,The staking contract should have pause/unpause functionality.,109,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/109,trader joe,2022/01,bug;0 (Non-critical);sponsor disputed
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Front-runnable Initializers,15,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/15,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Upgrade pragma to at least 0.8.4,16,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/16,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,transferOwnership should be two step process,17,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/17,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Incompatibility With Rebasing/Deflationary/Inflationary tokens,18,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/18,trader joe,2022/01,bug;2 (Med Risk);sponsor disputed
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Adding unchecked directive can save gas,19,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/19,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Revert String Size Optimization,20,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/20,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing zero-address check in the setter functions and constructor,21,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/21,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Event Is Defined But Not Used On The Contract (IssuingTokenDeposited),307,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/307,trader joe,2022/01,bug;duplicate;0 (Non-critical)
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,`> 0 can be replaced with != 0 for gas optimization`,38,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/38,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,State variables could be declared constant,55,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/55,trader joe,2022/01,bug;invalid
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Unchecked Transfer,56,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/56,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Event Is Defined But Not Used On The Contract,57,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/57,trader joe,2022/01,bug;duplicate;0 (Non-critical)
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Immutable variables,58,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/58,trader joe,2022/01,bug;invalid
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Initialization Function Is Missing If Token is Equals To WAVAX On the LaunchEvent,64,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/64,trader joe,2022/01,bug;1 (Low Risk);sponsor confirmed
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,ERC20 approve method missing return value check,65,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/65,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,The Contract Should Approve(0) first,66,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/66,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Missing Sanity Checks Will Cause To Revert On the Function,71,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/71,trader joe,2022/01,bug;disagree with severity;G (Gas Optimization);sponsor confirmed
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Prevent accidentally burning excess tokens by checking `penaltyCollector` for 0 address,129,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/129,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Upgrade pragma to at least 0.8.4,130,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/130,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Reduce the size of error messages (Long revert Strings),131,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/131,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Mark functions as payable when users can't mistakenly send ETH,132,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/132,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,133,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/133,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Shift Right instead of Dividing by 2,134,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/134,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `> 0` is less efficient than `!= 0` for unsigned integers,135,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/135,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Unnecessary checked arithmetic when no underflow possible,136,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/136,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `LaunchEvent.sol` is Ownable but owner capabilites are not used,137,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/137,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,`RocketJoeFactory.sol:setPhaseOneNoFeeDuration` should be put behind a timelock and emit an event,138,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/138,trader joe,2022/01,bug;invalid;sponsor disputed
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Missing 0 checks on floorPrice,139,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/139,trader joe,2022/01,bug;invalid;sponsor disputed
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Missing divide by 0 check on tokenAllocated,140,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/140,trader joe,2022/01,bug;1 (Low Risk);sponsor confirmed
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`LaunchEvent.sol`: Use `SafeERC20.safeApprove` in `createPair()`,154,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/154,trader joe,2022/01,bug;1 (Low Risk);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`PHASE_ONE_NO_FEE_DURATION == PHASE_ONE_DURATION` should be possible,156,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/156,trader joe,2022/01,bug;invalid;sponsor disputed
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Inclusive checks in LaunchEvent.sol for time-management,157,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/157,trader joe,2022/01,bug;1 (Low Risk);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Tight variable packing in `LaunchEvent.sol`,159,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/159,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Missing address(0) checks,163,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/163,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Missing inheritances,164,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/164,trader joe,2022/01,bug;1 (Low Risk);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Public functions that should be declared external,165,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/165,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Missing checks for non-zero transfer value calls,166,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/166,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Non-strict inequalities are cheaper than strict ones,178,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/178,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LaunchEvent.sol:createPair()`: calculation should get cached,179,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/179,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LaunchEvent.sol:withdrawLiquidity()`: `address(pair)` should get cached,180,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/180,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LaunchEvent.sol:emergencyWithdraw()`: `user.balance` should get cached earlier,182,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/182,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `RocketJoeFactory.sol:_emitLaunchedEvent()`: a value used only once shouldn't get cached,184,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/184,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `RocketJoeStaking.sol:deposit()`: `user.amount` should get cached and used for calculation,185,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/185,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `RocketJoeStaking.sol:withdraw()`: `user.amount` should get cached and used for calculation,187,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/187,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `RocketJoeStaking.sol:withdraw()`: `accRJoePerShare` should get cached,192,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/192,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `RocketJoeStaking.sol:deposit()`: `accRJoePerShare` should get cached,196,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/196,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `RocketJoeStaking.sol:updatePool()`: `lastRewardTimestamp` should get cached,207,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/207,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `RocketJoeFactory.sol:createRJLaunchEvent()`: `wavax` should get cached,211,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/211,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LaunchEvent.sol:currentPhase()`: `auctionStart` and `PHASE_ONE_DURATION` should get cached,214,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/214,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LaunchEvent.sol:createPair()`: `wavaxReserve` should get cached,215,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/215,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LaunchEvent.sol:withdrawLiquidity()`: `tokenReserve` should get cached earlier,216,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/216,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LaunchEvent.sol:emergencyWithdraw()`: `issuer` should get cached,217,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/217,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LaunchEvent.sol:getPenalty()`: `PHASE_ONE_DURATION` and `PHASE_ONE_NO_FEE_DURATION` should get cached,218,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/218,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `LaunchEvent.sol:pairBalance()`: `wavaxAllocated` should get cached,219,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/219,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Use Precision value for saving gas ,102,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/102,trader joe,2022/01,bug;invalid
79,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,1,Incorecct calculation between actual code and comment,186,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/186,trader joe,2022/01,bug;1 (Low Risk);disagree with severity
79,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,1,Missing Zero Addresss Check,189,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/189,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,2,"Needed to be check, so not to got 0 value",213,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/213,trader joe,2022/01,bug;invalid;sponsor disputed
79,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Saving more gas by using `immutable phase`,229,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/229,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Saving more gas by using immutable for `floorprice`,268,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/268,trader joe,2022/01,bug;invalid
79,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,3,Unsuspecting users calling emergencyWithdraw() will lose rewards,151,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/151,trader joe,2022/01,bug;invalid;sponsor disputed
79,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,G,Unused variable in RocketJoeToken.sol,152,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/152,trader joe,2022/01,bug;invalid;sponsor disputed
79,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: `> 0` is less efficient than `!= 0` for uint in require condition,283,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/283,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Variables that could be set immutable,284,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/284,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: fmul optimization,290,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/290,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Variables that could be set constant,293,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/293,trader joe,2022/01,bug;invalid
79,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,penaltyCollector can be set to address(0),304,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/304,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,router can be set to address(0),305,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/305,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,1,factory can be set to address(0),306,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/306,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimization: Use type(uint256).max instead of block.timestamp,309,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/309,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimziation: Unnecessary pairBalance call,310,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/310,trader joe,2022/01,bug;G (Gas Optimization);sponsor confirmed
79,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,3,user can withdraw avax without paying penalty fees,312,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/312,trader joe,2022/01,bug;invalid;sponsor disputed
79,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,3,transferFrom return value unchecked,315,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/315,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,2,ERC20 transfer might fail,320,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/320,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,2,Failed transfer with low level call could be overlooked,170,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/170,trader joe,2022/01,bug;2 (Med Risk);sponsor acknowledged
79,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,3,createPair can be griefed to never work,173,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/173,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,possibility of minting rJOE tokens before ownership  is changed to RocketJoeStaking,261,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/261,trader joe,2022/01,bug;2 (Med Risk);sponsor acknowledged
79,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,The contracts use unlocked pragma,181,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/181,trader joe,2022/01,bug;G (Gas Optimization);sponsor confirmed
79,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,2,Unchecked token transfers are used in LaunchEvent and RocketJoeFactory,205,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/205,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,G,withdrawAVAX and withdraw can do unchecked subtraction,257,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/257,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,G,LaunchEvent's createPair calls token.decimals() twice,264,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/264,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,1,RocketJoeStaking.initialize arguments need to be checked,266,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/266,trader joe,2022/01,bug;1 (Low Risk);sponsor confirmed
79,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,RocketJoeToken.sol initialize function can be called by attacker during deployment ,2,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/2,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Use of floating pragma statements ,3,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/3,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,withdrawAVAX() function has call to sender without reentrancy protection ,32,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/32,trader joe,2022/01,bug;2 (Med Risk);sponsor confirmed
79,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,RocketJoeStaking.sol initialize() function can be called by an attacker first,4,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/4,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,rJoe rewards can be manipulated for all users ,5,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/5,trader joe,2022/01,bug;1 (Low Risk);disagree with severity
79,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,deposit() function does not require that _amount is larger than 0,6,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/6,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,A user can keep withdrawing rewards without their balance changing,7,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/7,trader joe,2022/01,bug;invalid
79,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,_beforeTokenTransfer() hook will cause deposit() and withdraw() functions to fail ,9,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/9,trader joe,2022/01,bug;invalid;sponsor disputed
79,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Long Revert Strings,191,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/191,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Upgrade pragma to at least 0.8.4 ,200,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/200,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Adding unchecked directive can save gas ,212,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/212,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,> 0 can be replaced with != 0 for gas optimisation,220,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/220,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Caching `rJoe` variable,227,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/227,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Setting the `rocketJoeFactory` address  in the ` initialize()`  can be frontrun by an attacker,253,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/253,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Improper Upper Bound Definition on the Fee,255,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/255,trader joe,2022/01,bug;2 (Med Risk);disagree with severity;sponsor confirmed
79,kirk-baird,0xc07ab0222713175389fd105bb85fa82d8510d13e,2,Re-enterable Code When Making a Deposit to Stake,127,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/127,trader joe,2022/01,bug;2 (Med Risk);disagree with severity;sponsor confirmed
79,kirk-baird,0xc07ab0222713175389fd105bb85fa82d8510d13e,G,Gas Optimisation - Reduce storage loads,128,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/128,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,1,Denial of Service by Front Runing `setRJoe()`,155,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/155,trader joe,2022/01,bug;duplicate;1 (Low Risk);sponsor confirmed
79,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,G,Gas Optimisation - Unnecessary External Calls in `LaunchEvent.initialize()`,158,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/158,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,G,Gas Optimisation - Simplify `_atPhase()` Logic,162,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/162,trader joe,2022/01,bug;G (Gas Optimization);sponsor confirmed
79,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,G,Gas Optimisation - Duplicate External Calls,167,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/167,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,LP Tokens May Be Locked in Contract Due to `allowEmergencyWithdraw()` in Stage 3,169,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/169,trader joe,2022/01,bug;2 (Med Risk);sponsor confirmed
79,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Long Revert Strings are Waste of Gas,221,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/221,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Use != 0 instead of > 0 to Save Gas,222,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/222,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Mint() by OnlyOwner Lack of Zero Address Check for Address _to,223,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/223,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,Privilege Escalation by Front Run LaunchEvent initialize() and Replace address _issuer,224,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/224,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,depositAVAX() Require msg.sender != issuer is Waste of Gas,225,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/225,trader joe,2022/01,bug;invalid;sponsor disputed
79,moose-code,0x2999Fe533BC08A03304C96E8668BfA17D9D0D35b,3,accRJoePerShare can stay constant rendering staking uselss and therefore launchpools unusable!  ,228,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/228,trader joe,2022/01,bug;invalid;disagree with severity;sponsor disputed
79,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,3,Withdraw arbitrary amount of rJOE,111,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/111,trader joe,2022/01,bug;invalid;sponsor disputed
79,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,3,LaunchEvent assumes all tokens have 18 decimals,112,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/112,trader joe,2022/01,bug;invalid;sponsor disputed
79,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,2,Anyone can initialize RocketJoeToken,113,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/113,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,2,Anyone can squat famous tokens,114,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/114,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Unused variable _amount,115,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/115,trader joe,2022/01,bug;0 (Non-critical)
79,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Useless storage variable,116,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/116,trader joe,2022/01,bug;G (Gas Optimization);sponsor confirmed
79,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,PRECISION should be a constant,117,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/117,trader joe,2022/01,bug;invalid
79,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,0,Use of floating pragma,118,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/118,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Long revert strings,119,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/119,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Re-entrancy protection,285,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/285,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Frontrun setRJoe,288,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/288,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Use safe transfers and approvals,289,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/289,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,1,Unsafe call to decimals(),291,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/291,trader joe,2022/01,bug;1 (Low Risk);sponsor acknowledged
79,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Cache phase3Start,292,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/292,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Separate issuer functions from regular users,294,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/294,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unchecked math operations,295,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/295,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Unchecked math operations,296,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/296,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Long revert messages,299,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/299,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Repeated storage access,300,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/300,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,PRECISION is constant,301,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/301,trader joe,2022/01,bug;invalid
79,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,_atPhase optimization,302,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/302,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,0,Reasonable upper limits for phase durations,303,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/303,trader joe,2022/01,bug;0 (Non-critical);sponsor acknowledged
79,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,Variables could be inmutable,311,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/311,trader joe,2022/01,bug;invalid;sponsor disputed
79,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,1,Event for withdraws is never emitted,313,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/313,trader joe,2022/01,bug;duplicate;0 (Non-critical)
79,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Lack of input checks (withrawal penalties should always be greater than 0),314,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/314,trader joe,2022/01,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
79,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,1,Timelock could be set to 0,316,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/316,trader joe,2022/01,bug;invalid;sponsor disputed
79,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,!= 0 is cheaper than >0 for uint,318,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/318,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,Cheaper operation should be done first in an if statement,319,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/319,trader joe,2022/01,bug;G (Gas Optimization);sponsor confirmed
79,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,instead of using && in require. just use require multiple time,103,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/103,trader joe,2022/01,bug;G (Gas Optimization);sponsor confirmed
79,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,using += to save gas,265,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/265,trader joe,2022/01,bug;G (Gas Optimization);sponsor confirmed
79,Rhynorater,0xF84f301891Fe36BAF4B056290B528814dCD83B51,G,Gas Optimization via Unchecked Math,75,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/75,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Rhynorater,0xF84f301891Fe36BAF4B056290B528814dCD83B51,G,Gas Optimization via unchecked Directive,76,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/76,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Rhynorater,0xF84f301891Fe36BAF4B056290B528814dCD83B51,G,Gas Optimization - public -> external on Unused Function,77,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/77,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Missing commenting,39,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/39,trader joe,2022/01,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
79,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Never used parameters,40,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/40,trader joe,2022/01,bug;invalid
79,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,In the following public update functions no value is returned,41,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/41,trader joe,2022/01,bug;invalid;sponsor disputed
79,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Init frontrun,42,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/42,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified function inputs of public / external functions,43,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/43,trader joe,2022/01,bug;1 (Low Risk);sponsor acknowledged
79,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove of openZeppelin is deprecated,44,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/44,trader joe,2022/01,bug;1 (Low Risk);sponsor acknowledged
79,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Must approve 0 first,45,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/45,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Mult instead div in compares,46,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/46,trader joe,2022/01,bug;1 (Low Risk);sponsor acknowledged
79,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use != 0 instead of > 0,47,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/47,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Check if amount is not zero to save gas,48,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/48,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Cache powers of 10 used several times,49,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/49,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,50,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/50,trader joe,2022/01,bug;invalid
79,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,51,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/51,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Internal functions to private,52,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/52,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,53,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/53,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Short the following require messages,54,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/54,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,In case of emergency withdraw user loses their rJOE tokens,120,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/120,trader joe,2022/01,bug;invalid;disagree with severity
79,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Owner of LaunchEvent token has the ability to DOS attack the event,121,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/121,trader joe,2022/01,bug;2 (Med Risk);sponsor acknowledged
79,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,1,Sanity checks for withdrawal penalties,122,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/122,trader joe,2022/01,bug;invalid;sponsor disputed
79,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,External function calls should be cached to save gas,123,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/123,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Remove `LaunchEvent.UserInfo.allocation` since it's unused,124,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/124,trader joe,2022/01,bug;invalid;sponsor disputed
79,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,State variables should be cached when read multiple times,125,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/125,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Use != 0 instead of > 0 when working with uints,126,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/126,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,1,Use SafeERC20 when working with arbitrary ERC20 tokens,67,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/67,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,1,`RocketJoeToken.initialize()` can be frontrun,68,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/68,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,`RocketJoeStaking.PRECISION` should be declared constant to reduce gas,69,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/69,trader joe,2022/01,bug;invalid
79,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,`RocketJoeFactory` should use immutable state variables,70,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/70,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Variable can be changed to immutable ,256,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/256,trader joe,2022/01,bug;invalid
79,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,1,Use safeTransferFrom instead of transferFrom,258,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/258,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,samruna,0x30b5b7ACCbF2A9F947b06adb4a0628c2022b887A,3,Mint approval can be done on another contract,259,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/259,trader joe,2022/01,bug;invalid;disagree with severity;sponsor disputed
79,samruna,0x30b5b7ACCbF2A9F947b06adb4a0628c2022b887A,1,Unused variale,267,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/267,trader joe,2022/01,bug;invalid
79,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Revert string > 32 bytes,141,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/141,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Make variable a constant,142,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/142,trader joe,2022/01,bug;invalid
79,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Replace allRJLaunchEvents[] array with counter,143,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/143,trader joe,2022/01,bug;invalid;sponsor disputed
79,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,`_safeRJoeTransfer()` is not safe,144,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/144,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,SafeERC20 functions not used consistently,145,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/145,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,`createPair()` expects zero slippage,146,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/146,trader joe,2022/01,bug;2 (Med Risk);sponsor acknowledged
79,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Incorrect ordering of getPair inputs,147,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/147,trader joe,2022/01,bug;invalid
79,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Functions can be external,262,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/262,trader joe,2022/01,bug;G (Gas Optimization);sponsor confirmed
79,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Missing consistent zero address checks,263,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/263,trader joe,2022/01,bug;1 (Low Risk);sponsor confirmed
79,solgryn,0x2AD67e56D4Bbe60F042A7b288f2A1CEdD7708493,G,"""> 0"" is less efficient than ""!= 0"" for unsigned integers",14,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/14,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,static,0x2e847aae43c2d08bce43195dee62ab7cb63c7451,1,Bad practice: Violating check-effect-interaction pattern in RocketJoeStaking.sol's deposit function,13,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/13,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,static,0x2e847aae43c2d08bce43195dee62ab7cb63c7451,1,Denial-of-service condition: emergency shutdown after pair creation loses contract funds,90,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/90,trader joe,2022/01,bug;duplicate;3 (High Risk)
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Storing phase durations rather than start times duplicates calculations,59,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/59,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Can cache token decimals in LaunchEvent,60,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/60,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,PRECISION can be made constant,61,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/61,trader joe,2022/01,bug;invalid
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,`joe` and `rJoe` can be made immutable,62,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/62,trader joe,2022/01,bug;invalid;sponsor disputed
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,rocketJoeFactory in RocketJoeToken can be made immutable,63,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/63,trader joe,2022/01,bug;invalid;sponsor disputed
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Unnecessary inheritance of Ownable,72,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/72,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Timestamps/durations held in storage can be packed,73,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/73,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,maxWithdrawPenalty and fixedWithdrawPenalty can be packed together,74,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/74,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Free gas savings for using solidity 0.8.10+,78,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/78,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Use clones with immutable variables to reduce costs from SLOADs,79,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/79,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Calculate pair address on the fly to avoid having to SSTORE it.,80,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/80,trader joe,2022/01,bug;invalid;sponsor disputed
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,1,LaunchEvent pays out fewer incentives then expected,82,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/82,trader joe,2022/01,bug;1 (Low Risk);disagree with severity;sponsor confirmed
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,`withdrawLiquidity` performs a number of unnecessary SLOADs for the issuer.,83,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/83,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,2,Any holder of issued token can force system into requiring an emergency shutdown,84,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/84,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Unnecessary safemath,85,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/85,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Unnecessary safemath,86,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/86,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Explicit initialisation variable wastes gas.,87,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/87,trader joe,2022/01,bug;G (Gas Optimization);sponsor confirmed
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,UserData struct can be packed into a single slot.,88,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/88,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,2,Return value of token.transfer() is not checked,89,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/89,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Duplicate storage reads in `currentPhase()`,91,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/91,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,using `unchecked` can save gas,260,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/260,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,less gas used `_owner` instead of call function `owner()`,281,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/281,trader joe,2022/01,bug;invalid;sponsor disputed
79,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,2," transferFrom can return false, and didnt revert",287,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/287,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,need to check if pending value = 0,298,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/298,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,UncleGrandpa925,0x171ea6acDdA2Cb411E4763d71e91b10d96B64f81,2,LaunchEvent's createPair can be cause to always revert,251,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/251,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,UncleGrandpa925,0x171ea6acDdA2Cb411E4763d71e91b10d96B64f81,1,Users' tokens can be stuck inside LaunchEvent if the token doesn't revert on failed transfers,252,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/252,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,UncleGrandpa925,0x171ea6acDdA2Cb411E4763d71e91b10d96B64f81,2,Lack of checks for data passed into onlyOwner functions,254,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/254,trader joe,2022/01,bug;duplicate;1 (Low Risk);disagree with severity
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Code Style: non-constant should not be named in all caps,230,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/230,trader joe,2022/01,bug;0 (Non-critical);sponsor confirmed
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use immutable variables can save gas,231,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/231,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Unchecked return value for `token.transferFrom` call,232,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/232,trader joe,2022/01,bug;duplicate;2 (Med Risk);sponsor confirmed
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,233,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/233,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache and read storage variables from the stack can save gas,234,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/234,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Redundant type casting,235,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/235,trader joe,2022/01,bug;disagree with severity;G (Gas Optimization);sponsor confirmed
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Cache external call results can save gas,236,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/236,trader joe,2022/01,bug;G (Gas Optimization);sponsor confirmed
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Reuse existing storage variables' cache can save gas,237,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/237,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Check if amount > 0 before token transfer can save gas,238,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/238,trader joe,2022/01,bug;G (Gas Optimization)
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Change unnecessary storage variables to constants can save gas,239,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/239,trader joe,2022/01,bug;invalid;sponsor disputed
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"""> 0"" is less efficient than ""!= 0"" for unsigned integers",240,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/240,trader joe,2022/01,bug;G (Gas Optimization);sponsor confirmed
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`Ownable` library is redundant,241,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/241,trader joe,2022/01,bug;disagree with severity;G (Gas Optimization);sponsor confirmed
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Use short reason strings can save gas,242,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/242,trader joe,2022/01,bug;G (Gas Optimization);sponsor acknowledged
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Unchecked return value for `token.transfer` call,243,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/243,trader joe,2022/01,bug;duplicate;2 (Med Risk)
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Unchecked return value for `ERC20.approve` call,244,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/244,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"`RocketJoeFactory.sol#createRJLaunchEvent()` Check of `_issuer != address(0)`, `_token != address(0)`, `_tokenAmount > 0` can be done earlier to save gas",245,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/245,trader joe,2022/01,bug;G (Gas Optimization);sponsor confirmed
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Add liquidity before phase 3 can force the launch event to stop,246,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/246,trader joe,2022/01,bug;duplicate;2 (Med Risk);sponsor confirmed
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`createRJLaunchEvent()` can be called by anyone with 1 Wei of `_token` and stop others from creating RJLaunchEvent with the same token anymore,247,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/247,trader joe,2022/01,bug;2 (Med Risk);sponsor acknowledged
79,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`createRJLaunchEvent()` Multiple `launchEvent` can be created unexpectedly by reentrancy,248,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/248,trader joe,2022/01,bug;1 (Low Risk);sponsor confirmed
79,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,2,Missing event emitting,148,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/148,trader joe,2022/01,bug;0 (Non-critical);disagree with severity;sponsor confirmed
79,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,1,Wrong comment,149,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/149,trader joe,2022/01,bug;1 (Low Risk);disagree with severity;sponsor confirmed
79,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,G,LaunchEvent does not have to inherit Ownable,150,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/150,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,1,Lacking zero value check in initialize,153,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/153,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,3,lack access control in initialize of RocketJoeToken,81,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/81,trader joe,2022/01,bug;duplicate;1 (Low Risk)
79,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Save Gas With The Unchecked Keyword (LaunchEvent.sol),308,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/308,trader joe,2022/01,bug;duplicate;G (Gas Optimization)
79,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Anyone can call deposit or withdraw with zero amount (LaunchEvent.sol),317,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/317,trader joe,2022/01,bug;invalid;sponsor disputed
75,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Wrong Token with fees lock Logic,21,https://github.com/code-423n4/2022-01-xdefi-findings/issues/21,xdefi,2022/01,bug;invalid;sponsor disputed
75,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,Math can be unchecked,192,https://github.com/code-423n4/2022-01-xdefi-findings/issues/192,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,"""Safe"" ERC20 functions for XDEFI?",194,https://github.com/code-423n4/2022-01-xdefi-findings/issues/194,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,`MAX_TOTAL_XDEFI_SUPPLY` missing `constant`,195,https://github.com/code-423n4/2022-01-xdefi-findings/issues/195,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,0,Event for merge,197,https://github.com/code-423n4/2022-01-xdefi-findings/issues/197,xdefi,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
75,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,1,`destination_` zero address check,199,https://github.com/code-423n4/2022-01-xdefi-findings/issues/199,xdefi,2022/01,bug;invalid;sponsor disputed
75,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,`noReenter` gas optimization,200,https://github.com/code-423n4/2022-01-xdefi-findings/issues/200,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,ACai,0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,G,The visibility of XDEFIDistinbutionHelper should change to external.,83,https://github.com/code-423n4/2022-01-xdefi-findings/issues/83,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,agusduha,0xc4498dB95f90B43099C6799c99d76404348ECe46,G,MAX_TOTAL_XDEFI_SUPPLY should be constant,36,https://github.com/code-423n4/2022-01-xdefi-findings/issues/36,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,agusduha,0xc4498dB95f90B43099C6799c99d76404348ECe46,G,Some functions should be external to save gas,41,https://github.com/code-423n4/2022-01-xdefi-findings/issues/41,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,agusduha,0xc4498dB95f90B43099C6799c99d76404348ECe46,1,Missing arrays input length check,91,https://github.com/code-423n4/2022-01-xdefi-findings/issues/91,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
75,bitbopper,0xe15f11FF2364311E0b7250AaA51A2bB4D7FBA37F,G,"XDEFIDistribution.sol noReenter: Switching between 1,2 instead of 0,1 is more gas efficient",164,https://github.com/code-423n4/2022-01-xdefi-findings/issues/164,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,0,Missing event for admin function setBaseURI,16,https://github.com/code-423n4/2022-01-xdefi-findings/issues/16,xdefi,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
75,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,1,Code styling on function updateDistribution,19,https://github.com/code-423n4/2022-01-xdefi-findings/issues/19,xdefi,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
75,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,2,merge allows reentrancy,71,https://github.com/code-423n4/2022-01-xdefi-findings/issues/71,xdefi,2022/01,bug;duplicate;invalid;sponsor disputed
75,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,2,merge allows reentrancy (part two),72,https://github.com/code-423n4/2022-01-xdefi-findings/issues/72,xdefi,2022/01,bug;duplicate;invalid;sponsor disputed
75,camden,0x840B1dC2abb99f1F86D549303719610F346B2aaF,1,updateXDEFIBalance not called after locking,73,https://github.com/code-423n4/2022-01-xdefi-findings/issues/73,xdefi,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
75,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,The reentrancy vulnerability in _safeMint can allow an attacker to steal all rewards,25,https://github.com/code-423n4/2022-01-xdefi-findings/issues/25,xdefi,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
75,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,setLockPeriods function lack of input validation,38,https://github.com/code-423n4/2022-01-xdefi-findings/issues/38,xdefi,2022/01,bug;1 (Low Risk);disagree with severity;resolved;sponsor confirmed
75,certora,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,G,gas optimization in ,108,https://github.com/code-423n4/2022-01-xdefi-findings/issues/108,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,certora,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,G,gas optimization at _updateXDEFIBalance() function.,109,https://github.com/code-423n4/2022-01-xdefi-findings/issues/109,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,certora,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,0,"arrays sizes may not be matching in function ""setLockPeriods(uint256[] memory durations_, uint8[] memory multipliers)""",110,https://github.com/code-423n4/2022-01-xdefi-findings/issues/110,xdefi,2022/01,bug;duplicate;1 (Low Risk);sponsor acknowledged
75,certora,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,G,gas optimization in     function _generateNewTokenId(uint256 points_) internal view returns (uint256 tokenId_) {,111,https://github.com/code-423n4/2022-01-xdefi-findings/issues/111,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,certora,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,G,gas optimization in function _generateNewTokenId(uint256 points_) internal view returns (uint256 tokenId_) {,112,https://github.com/code-423n4/2022-01-xdefi-findings/issues/112,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,certora,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,G,gas optimization in,113,https://github.com/code-423n4/2022-01-xdefi-findings/issues/113,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`updateDistribution` can be frontrun,131,https://github.com/code-423n4/2022-01-xdefi-findings/issues/131,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
75,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`merge` can fail due to tokenId collisions,132,https://github.com/code-423n4/2022-01-xdefi-findings/issues/132,xdefi,2022/01,bug;duplicate;2 (Med Risk);sponsor confirmed
75,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Locks can be denied,133,https://github.com/code-423n4/2022-01-xdefi-findings/issues/133,xdefi,2022/01,bug;duplicate;2 (Med Risk);disagree with severity;sponsor confirmed
75,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Rewards can be stolen by re-entering into `updateDistribution`,134,https://github.com/code-423n4/2022-01-xdefi-findings/issues/134,xdefi,2022/01,bug;duplicate;3 (High Risk);sponsor confirmed
75,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Incorrect fund distribution - updateDistribution not called in lock/unlock,23,https://github.com/code-423n4/2022-01-xdefi-findings/issues/23,xdefi,2022/01,bug;invalid;3 (High Risk);sponsor disputed
75,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,1,Incorrect condition may bypass MAX_TOTAL_XDEFI_SUPPLY,24,https://github.com/code-423n4/2022-01-xdefi-findings/issues/24,xdefi,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
75,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Use calldata arrays,170,https://github.com/code-423n4/2022-01-xdefi-findings/issues/170,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,0,Wrong revert message,171,https://github.com/code-423n4/2022-01-xdefi-findings/issues/171,xdefi,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
75,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Change state only once in `noReenter` modifier,186,https://github.com/code-423n4/2022-01-xdefi-findings/issues/186,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
75,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,A constant variable held in storage,187,https://github.com/code-423n4/2022-01-xdefi-findings/issues/187,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,2,Possible profitability manipulations,193,https://github.com/code-423n4/2022-01-xdefi-findings/issues/193,xdefi,2022/01,bug;1 (Low Risk);disagree with severity;resolved;sponsor confirmed
75,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,0,Improper event declaration,196,https://github.com/code-423n4/2022-01-xdefi-findings/issues/196,xdefi,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
75,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,wrong rewards distribution,79,https://github.com/code-423n4/2022-01-xdefi-findings/issues/79,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
75,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,a malicious user can prevent all users from getting all rewards.,80,https://github.com/code-423n4/2022-01-xdefi-findings/issues/80,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
75,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,merge is loss of all assets,81,https://github.com/code-423n4/2022-01-xdefi-findings/issues/81,xdefi,2022/01,bug;invalid;3 (High Risk);sponsor disputed
75,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,1,unlock doesn't burn nft,82,https://github.com/code-423n4/2022-01-xdefi-findings/issues/82,xdefi,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
75,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,Token IDs are not random,173,https://github.com/code-423n4/2022-01-xdefi-findings/issues/173,xdefi,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
75,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Adding unchecked directive can save gas,185,https://github.com/code-423n4/2022-01-xdefi-findings/issues/185,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Use `calldata` instead of `memory` for function parameters,188,https://github.com/code-423n4/2022-01-xdefi-findings/issues/188,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,1,During the merge positions of tokenId not deleted,189,https://github.com/code-423n4/2022-01-xdefi-findings/issues/189,xdefi,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
75,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Changing function visibility from public to external can save gas,86,https://github.com/code-423n4/2022-01-xdefi-findings/issues/86,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,`> 0 can be replaced with != 0 for gas optimization`,88,https://github.com/code-423n4/2022-01-xdefi-findings/issues/88,xdefi,2022/01,bug;G (Gas Optimization);sponsor acknowledged
75,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Less than 256 uints are not gas efficient,97,https://github.com/code-423n4/2022-01-xdefi-findings/issues/97,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Unused Named Returns,100,https://github.com/code-423n4/2022-01-xdefi-findings/issues/100,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `> 0` is less efficient than `!= 0` for unsigned integers,102,https://github.com/code-423n4/2022-01-xdefi-findings/issues/102,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,0,Implicit casts should be explicit as per the global code style,129,https://github.com/code-423n4/2022-01-xdefi-findings/issues/129,xdefi,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `XDEFIDistribution:withdrawableOf()` optimization,130,https://github.com/code-423n4/2022-01-xdefi-findings/issues/130,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Insufficient input validation on `multipliers`,140,https://github.com/code-423n4/2022-01-xdefi-findings/issues/140,xdefi,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Unnecessary checked arithmetic in for-loops,20,https://github.com/code-423n4/2022-01-xdefi-findings/issues/20,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Use Custom Errors to save Gas,22,https://github.com/code-423n4/2022-01-xdefi-findings/issues/22,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"""constants"" expressions are expressions, not constants. Use ""immutable"" instead.",27,https://github.com/code-423n4/2022-01-xdefi-findings/issues/27,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Use `calldata` instead of `memory` for external functions where the function argument is read-only.,29,https://github.com/code-423n4/2022-01-xdefi-findings/issues/29,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,`XDEFIDistribution.MAX_TOTAL_XDEFI_SUPPLY` variable could be declared constant,46,https://github.com/code-423n4/2022-01-xdefi-findings/issues/46,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `XDEFIDistribution.sol`'s `withdrawAmount` substraction can be unchecked,49,https://github.com/code-423n4/2022-01-xdefi-findings/issues/49,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: avoid unnecessary SSTORE on `proposeOwnership`,51,https://github.com/code-423n4/2022-01-xdefi-findings/issues/51,xdefi,2022/01,bug;G (Gas Optimization);sponsor acknowledged
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimization: Tight variable packing in `XDEFIDistribution.sol`,54,https://github.com/code-423n4/2022-01-xdefi-findings/issues/54,xdefi,2022/01,bug;G (Gas Optimization);sponsor acknowledged
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Public function that should be declared external (1),55,https://github.com/code-423n4/2022-01-xdefi-findings/issues/55,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Public function that should be declared external (2),56,https://github.com/code-423n4/2022-01-xdefi-findings/issues/56,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas optimization: Placement of require statements in `XDEFIDistribution:_unlock`,57,https://github.com/code-423n4/2022-01-xdefi-findings/issues/57,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Internal functions can be private if the contract is not herited,58,https://github.com/code-423n4/2022-01-xdefi-findings/issues/58,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,Missing zero address check to avoid accidentally burning tokens,59,https://github.com/code-423n4/2022-01-xdefi-findings/issues/59,xdefi,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
75,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,0,Various Non-Conformance to Solidity naming conventions,60,https://github.com/code-423n4/2022-01-xdefi-findings/issues/60,xdefi,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
75,egjlmn1,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,2,wrong use of assert,34,https://github.com/code-423n4/2022-01-xdefi-findings/issues/34,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor confirmed
75,egjlmn1,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,1,both named return value and return statement,35,https://github.com/code-423n4/2022-01-xdefi-findings/issues/35,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor confirmed
75,egjlmn1,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,3,DOS - preventing users from locking assets,74,https://github.com/code-423n4/2022-01-xdefi-findings/issues/74,xdefi,2022/01,bug;duplicate;2 (Med Risk);disagree with severity;sponsor confirmed
75,egjlmn1,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,1,unlocking without update ignore rewards,90,https://github.com/code-423n4/2022-01-xdefi-findings/issues/90,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
75,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,gas optimization,103,https://github.com/code-423n4/2022-01-xdefi-findings/issues/103,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,2,"Missing noreentrant modifier on merge() and updateDistribution(), can reenter from the _lock()",70,https://github.com/code-423n4/2022-01-xdefi-findings/issues/70,xdefi,2022/01,bug;duplicate;3 (High Risk);sponsor confirmed
75,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,XDEFIDistribution: make MAX_TOTAL_XDEFI_SUPPLY constant,42,https://github.com/code-423n4/2022-01-xdefi-findings/issues/42,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,GiveMeTestEther,0xd685Dd21BD58Ff6976f14C4E7F847a2Da0047965,G,Custom errors from version 0.8.4 are more gas efficient,44,https://github.com/code-423n4/2022-01-xdefi-findings/issues/44,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,gpersoon,gpersoon.eth,2,_pointsPerUnit not always updated,149,https://github.com/code-423n4/2022-01-xdefi-findings/issues/149,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
75,gpersoon,gpersoon.eth,1,Should lock() and lockWithPermit() also call _updateXDEFIBalance()?,153,https://github.com/code-423n4/2022-01-xdefi-findings/issues/153,xdefi,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
75,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,3,Re-entracy leading to increasing points in undesired way,172,https://github.com/code-423n4/2022-01-xdefi-findings/issues/172,xdefi,2022/01,bug;duplicate;invalid;3 (High Risk);sponsor disputed
75,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,Use Infinite Approval,174,https://github.com/code-423n4/2022-01-xdefi-findings/issues/174,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,G,confirm if lengths are equal before looping,175,https://github.com/code-423n4/2022-01-xdefi-findings/issues/175,xdefi,2022/01,bug;duplicate;1 (Low Risk);sponsor acknowledged
75,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,1,stale `_pointsPerUnit` if `updateDistribution` frequently,190,https://github.com/code-423n4/2022-01-xdefi-findings/issues/190,xdefi,2022/01,bug;duplicate;1 (Low Risk);sponsor confirmed
75,harleythedog,0x3BD8fb2fB0b11789F8885143D6f14FA3D69f6FC9,3,Unlock/Relock freezes XDEFI that hasn't been allocated with updateDistribution,48,https://github.com/code-423n4/2022-01-xdefi-findings/issues/48,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
75,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,Its possible to have different bonusMultiplier for same lock duration,157,https://github.com/code-423n4/2022-01-xdefi-findings/issues/157,xdefi,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
75,Ivanmgm,0x2173948D935857564805A48b9C878da29faE380d,G,Gas Optimization,155,https://github.com/code-423n4/2022-01-xdefi-findings/issues/155,xdefi,2022/01,bug;invalid;G (Gas Optimization)
75,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,1,Converting noReenter numbers to uint256 is not needed,63,https://github.com/code-423n4/2022-01-xdefi-findings/issues/63,xdefi,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
75,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,no check that proposed owner is not the contract itself ,64,https://github.com/code-423n4/2022-01-xdefi-findings/issues/64,xdefi,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
75,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,No guard against zero address can possibly break functions with onlyOwner modifier ,65,https://github.com/code-423n4/2022-01-xdefi-findings/issues/65,xdefi,2022/01,bug;invalid;3 (High Risk);sponsor disputed
75,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,setLockPeriods() function doesn't make sure both array args are the same length ,66,https://github.com/code-423n4/2022-01-xdefi-findings/issues/66,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
75,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,totalDepositedXDEFI variable can be made incorrect by an attacker sending tokens ,68,https://github.com/code-423n4/2022-01-xdefi-findings/issues/68,xdefi,2022/01,bug;invalid;3 (High Risk);sponsor disputed
75,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,lockWithPermit() function allows for replay attacks and signature malleability ,92,https://github.com/code-423n4/2022-01-xdefi-findings/issues/92,xdefi,2022/01,bug;invalid;3 (High Risk);sponsor disputed
75,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Iterating over large count numbers can cause out of gas errors,93,https://github.com/code-423n4/2022-01-xdefi-findings/issues/93,xdefi,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
75,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Public function that could be set external instead,160,https://github.com/code-423n4/2022-01-xdefi-findings/issues/160,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,> 0 can be replaced with != 0 for gas optimisation,161,https://github.com/code-423n4/2022-01-xdefi-findings/issues/161,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
75,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Save Gas with the unchecked keyword,162,https://github.com/code-423n4/2022-01-xdefi-findings/issues/162,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,The Unchecked keyword can save gas,163,https://github.com/code-423n4/2022-01-xdefi-findings/issues/163,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,1,Multi Transfer arrays length check,165,https://github.com/code-423n4/2022-01-xdefi-findings/issues/165,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
75,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Check  `expiry` earlier can avoid unnecessary code execution when this check failed.,166,https://github.com/code-423n4/2022-01-xdefi-findings/issues/166,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Non unique token ID might lead to collusion when merging,33,https://github.com/code-423n4/2022-01-xdefi-findings/issues/33,xdefi,2022/01,bug;duplicate;2 (Med Risk);sponsor confirmed
75,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Reentrancy at lock can lead to wrong accounting,37,https://github.com/code-423n4/2022-01-xdefi-findings/issues/37,xdefi,2022/01,bug;duplicate;3 (High Risk);sponsor confirmed
75,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Rewards will be lost if sent and unlock is called before updateDistribution,39,https://github.com/code-423n4/2022-01-xdefi-findings/issues/39,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
75,kenzo,0x5B80a5A66A22438997e8F83689ec8432fd448D25,0,"This is a very good project, it's gonna be one of the best in town",77,https://github.com/code-423n4/2022-01-xdefi-findings/issues/77,xdefi,2022/01,bug;invalid;0 (Non-critical)
75,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`_safeMint` Will Fail Due To An Edge Case In Calculating `tokenId` Using The `_generateNewTokenId` Function,17,https://github.com/code-423n4/2022-01-xdefi-findings/issues/17,xdefi,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
75,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`_lock` Performs An Improper Check When Enforcing The `MAX_TOTAL_XDEFI_SUPPLY` Constraint,18,https://github.com/code-423n4/2022-01-xdefi-findings/issues/18,xdefi,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
75,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,1,Distribution Updates Can Be Gamed,30,https://github.com/code-423n4/2022-01-xdefi-findings/issues/30,xdefi,2022/01,bug;1 (Low Risk);sponsor acknowledged
75,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,G,`noReenter` Can Be Optimised Better,31,https://github.com/code-423n4/2022-01-xdefi-findings/issues/31,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,G,`_updateXDEFIBalance()` Can Be Removed From Relock And Unlock Actions,32,https://github.com/code-423n4/2022-01-xdefi-findings/issues/32,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,`_updateXDEFIBalance` Updates May Lead To Loss Of `XDEFI` Token Distributions,45,https://github.com/code-423n4/2022-01-xdefi-findings/issues/45,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
75,MaCree,0xEaDB6EE14d05dfadfDa14cA60Df848E504A69118,1,Can not change the ownership of the contract XDEFIDistribution,117,https://github.com/code-423n4/2022-01-xdefi-findings/issues/117,xdefi,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
75,MaCree,0xEaDB6EE14d05dfadfDa14cA60Df848E504A69118,1,NFT token id repeated,118,https://github.com/code-423n4/2022-01-xdefi-findings/issues/118,xdefi,2022/01,bug;duplicate;2 (Med Risk);sponsor confirmed
75,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Hardcoded XDEFI Address and Make it Constant to Save Gas,84,https://github.com/code-423n4/2022-01-xdefi-findings/issues/84,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor acknowledged
75,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,1,_lock() Does Not Check for Zero Address to Receive NFT,85,https://github.com/code-423n4/2022-01-xdefi-findings/issues/85,xdefi,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
75,mtz,0x602411A87ff854A9565e72A88a53c8b17dA3509d,G,_lock in noRenter can be optimized to use less gas,198,https://github.com/code-423n4/2022-01-xdefi-findings/issues/198,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,onewayfunction,0x660f9d529f01daff0a7f15213a8fa39f42fcfe62,3,Anyone can steal XDEFI from the XDEFIDistribution contract and make the contract insolvent,50,https://github.com/code-423n4/2022-01-xdefi-findings/issues/50,xdefi,2022/01,bug;duplicate;3 (High Risk);sponsor confirmed
75,onewayfunction,0x660f9d529f01daff0a7f15213a8fa39f42fcfe62,3,Owner can steal XDEFI without any capital risk,52,https://github.com/code-423n4/2022-01-xdefi-findings/issues/52,xdefi,2022/01,bug;1 (Low Risk);disagree with severity;resolved;sponsor confirmed
75,onewayfunction,0x660f9d529f01daff0a7f15213a8fa39f42fcfe62,2,Owner can steal incoming distributable XDEFI with sandwich attacks,53,https://github.com/code-423n4/2022-01-xdefi-findings/issues/53,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor confirmed
75,onewayfunction,0x660f9d529f01daff0a7f15213a8fa39f42fcfe62,2,More than one historical lock-position may be represented by a single `tokenId`,61,https://github.com/code-423n4/2022-01-xdefi-findings/issues/61,xdefi,2022/01,bug;duplicate;2 (Med Risk);sponsor confirmed
75,onewayfunction,0x660f9d529f01daff0a7f15213a8fa39f42fcfe62,G,"The ""amount check"" in _lock is unneeded and/or trivially bypassable",62,https://github.com/code-423n4/2022-01-xdefi-findings/issues/62,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas optimization in XDEFIDistribution.sol - calculate a constant expression before the loop,119,https://github.com/code-423n4/2022-01-xdefi-findings/issues/119,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas optimization in XDEFIDistribution.sol - variable that is not used,120,https://github.com/code-423n4/2022-01-xdefi-findings/issues/120,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas optimization in XDEFIDistribution.sol - inlining some functions,121,https://github.com/code-423n4/2022-01-xdefi-findings/issues/121,xdefi,2022/01,bug;G (Gas Optimization);sponsor acknowledged
75,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas optimization in XDEFIDistribution.sol - shifting instead of multiplying or dividing by power of 2,122,https://github.com/code-423n4/2022-01-xdefi-findings/issues/122,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Missing 0-address checks in `proposeOwnership`,168,https://github.com/code-423n4/2022-01-xdefi-findings/issues/168,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,G,Declare `MAX_TOTAL_XDEFI_SUPPLY` as constant,169,https://github.com/code-423n4/2022-01-xdefi-findings/issues/169,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,Useless reentrancy guards,167,https://github.com/code-423n4/2022-01-xdefi-findings/issues/167,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,1,Flash loans can be used to make deposits with 0 timelock,180,https://github.com/code-423n4/2022-01-xdefi-findings/issues/180,xdefi,2022/01,bug;duplicate;1 (Low Risk);sponsor confirmed
75,PierrickGT,0x2C868EC7Af4DEb002f4622C4141321ffa559bdA1,0,XDEFIDistribution: lock should be reused in lockWithPermit,47,https://github.com/code-423n4/2022-01-xdefi-findings/issues/47,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,PierrickGT,0x2C868EC7Af4DEb002f4622C4141321ffa559bdA1,0,XDEFIDistribution: _unlock function should only be called with tokenId_ parameter,98,https://github.com/code-423n4/2022-01-xdefi-findings/issues/98,xdefi,2022/01,bug;G (Gas Optimization);sponsor acknowledged
75,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,better placement of require check ,127,https://github.com/code-423n4/2022-01-xdefi-findings/issues/127,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,&& operator can use more gas,128,https://github.com/code-423n4/2022-01-xdefi-findings/issues/128,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,using bool value on require check can reduce gas usage,28,https://github.com/code-423n4/2022-01-xdefi-findings/issues/28,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Event parameters read from storage,69,https://github.com/code-423n4/2022-01-xdefi-findings/issues/69,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Better placement of require check,94,https://github.com/code-423n4/2022-01-xdefi-findings/issues/94,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Check if amount is not zero to save gas,10,https://github.com/code-423n4/2022-01-xdefi-findings/issues/10,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Require with not comprehensive message,11,https://github.com/code-423n4/2022-01-xdefi-findings/issues/11,xdefi,2022/01,bug;0 (Non-critical);disagree with severity;resolved;sponsor confirmed
75,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified function inputs of public / external functions,12,https://github.com/code-423n4/2022-01-xdefi-findings/issues/12,xdefi,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
75,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Named return issue,13,https://github.com/code-423n4/2022-01-xdefi-findings/issues/13,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor confirmed
75,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Assert instead require to validate user inputs,14,https://github.com/code-423n4/2022-01-xdefi-findings/issues/14,xdefi,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
75,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,In the following public update functions no value is returned,15,https://github.com/code-423n4/2022-01-xdefi-findings/issues/15,xdefi,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
75,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,4,https://github.com/code-423n4/2022-01-xdefi-findings/issues/4,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Internal functions to private,5,https://github.com/code-423n4/2022-01-xdefi-findings/issues/5,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,6,https://github.com/code-423n4/2022-01-xdefi-findings/issues/6,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,State variables that could be set immutable,7,https://github.com/code-423n4/2022-01-xdefi-findings/issues/7,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary array boundaries check when loading an array element twice,8,https://github.com/code-423n4/2022-01-xdefi-findings/issues/8,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Prefix increments are cheaper than postfix increments,9,https://github.com/code-423n4/2022-01-xdefi-findings/issues/9,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Constant expression recalculation leads to extra gas costs,40,https://github.com/code-423n4/2022-01-xdefi-findings/issues/40,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Variable can be changed to immutable to save gas,43,https://github.com/code-423n4/2022-01-xdefi-findings/issues/43,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,Sam4747,0x5f02793203CF6A8Af5a2cC31DB252470c95819cE,G,diff chain,78,https://github.com/code-423n4/2022-01-xdefi-findings/issues/78,xdefi,2022/01,bug;invalid;G (Gas Optimization)
75,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,MAX_TOTAL_XDEFI_SUPPLY can be constant,176,https://github.com/code-423n4/2022-01-xdefi-findings/issues/176,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Unnecessary casting,177,https://github.com/code-423n4/2022-01-xdefi-findings/issues/177,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,amount variables can be uint88,178,https://github.com/code-423n4/2022-01-xdefi-findings/issues/178,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Unnecessary require statement,179,https://github.com/code-423n4/2022-01-xdefi-findings/issues/179,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,0,EIP2612 is still draft,181,https://github.com/code-423n4/2022-01-xdefi-findings/issues/181,xdefi,2022/01,bug;invalid;0 (Non-critical);sponsor disputed
75,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,3,NFT is not burned during unlock,182,https://github.com/code-423n4/2022-01-xdefi-findings/issues/182,xdefi,2022/01,bug;invalid;3 (High Risk);sponsor disputed
75,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,No option to unlock funds before set duration,183,https://github.com/code-423n4/2022-01-xdefi-findings/issues/183,xdefi,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
75,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,`updateDistribution()` can unexpectedly revert,184,https://github.com/code-423n4/2022-01-xdefi-findings/issues/184,xdefi,2022/01,bug;invalid;question;2 (Med Risk);sponsor disputed
75,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,_generateNewTokenId can create collisions,191,https://github.com/code-423n4/2022-01-xdefi-findings/issues/191,xdefi,2022/01,bug;duplicate;2 (Med Risk);sponsor confirmed
75,StErMi,0x67960c0c99498AfF880D1bd68FE596C9443528ae,0,Avoid inline code for better readibility,136,https://github.com/code-423n4/2022-01-xdefi-findings/issues/136,xdefi,2022/01,bug;0 (Non-critical);sponsor acknowledged
75,StErMi,0x67960c0c99498AfF880D1bd68FE596C9443528ae,2,setLockPeriods accepts multipliers less than 100 (1x mult),137,https://github.com/code-423n4/2022-01-xdefi-findings/issues/137,xdefi,2022/01,bug;duplicate;invalid;2 (Med Risk);sponsor confirmed
75,StErMi,0x67960c0c99498AfF880D1bd68FE596C9443528ae,2,Reward system is prone to frontrunning/sandwitch attack,159,https://github.com/code-423n4/2022-01-xdefi-findings/issues/159,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
75,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Usage of zero storage for reentrancy guard increases chance that gas refund is capped,1,https://github.com/code-423n4/2022-01-xdefi-findings/issues/1,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,0,Use of return value from assignment hampers readability,2,https://github.com/code-423n4/2022-01-xdefi-findings/issues/2,xdefi,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
75,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Unneccessary check on total supply of XDEFI token,3,https://github.com/code-423n4/2022-01-xdefi-findings/issues/3,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,`pointCorrection` can be stored in a uint256 rather than int256 to save gas from casting.,87,https://github.com/code-423n4/2022-01-xdefi-findings/issues/87,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,TomFrenchBlockchain,0x60959ed8307ee2b0d04306f6b319aeee8864f1ee,G,tokenIds can be passed in as calldata rather than memory,89,https://github.com/code-423n4/2022-01-xdefi-findings/issues/89,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,3,Missing burn function in _unlock function,75,https://github.com/code-423n4/2022-01-xdefi-findings/issues/75,xdefi,2022/01,bug;invalid;3 (High Risk);sponsor disputed
75,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,less Gas using unchecked,76,https://github.com/code-423n4/2022-01-xdefi-findings/issues/76,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,1,missing check on imbalance array length in function setLockPeriods,95,https://github.com/code-423n4/2022-01-xdefi-findings/issues/95,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
75,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,1,"in function setLockPeriods, multiplier can be set to lower than 100",96,https://github.com/code-423n4/2022-01-xdefi-findings/issues/96,xdefi,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
75,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,3,Reentrancy allows attacker to lock the funds deposited in the contract,67,https://github.com/code-423n4/2022-01-xdefi-findings/issues/67,xdefi,2022/01,bug;duplicate;3 (High Risk);sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`XDEFIDistribution.sol#constructor()` Validation of `XDEFI_` can be done earlier to save gas,104,https://github.com/code-423n4/2022-01-xdefi-findings/issues/104,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"`XDEFIDistribution.sol#noReenter()` Switching between 1, 2 instead of 0, 1 is more gas efficient",105,https://github.com/code-423n4/2022-01-xdefi-findings/issues/105,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Critical operations should emit events,106,https://github.com/code-423n4/2022-01-xdefi-findings/issues/106,xdefi,2022/01,bug;duplicate;0 (Non-critical);sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unnecessary checked arithmetic in for loops,107,https://github.com/code-423n4/2022-01-xdefi-findings/issues/107,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Attacker can frontrun `updateDistribution()` and use flashloan to steal newly added XDEFI rewards,114,https://github.com/code-423n4/2022-01-xdefi-findings/issues/114,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Constants are not explicitly declared,115,https://github.com/code-423n4/2022-01-xdefi-findings/issues/115,xdefi,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Sub-optimal calls should be allowed instead of reverted as resending the transaction will cost more gas,116,https://github.com/code-423n4/2022-01-xdefi-findings/issues/116,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`XDEFIDistribution.sol#relock()` Implementation can be simpler and save some gas,123,https://github.com/code-423n4/2022-01-xdefi-findings/issues/123,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`MAX_TOTAL_XDEFI_SUPPLY` Use constant variable can save gas,124,https://github.com/code-423n4/2022-01-xdefi-findings/issues/124,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,125,https://github.com/code-423n4/2022-01-xdefi-findings/issues/125,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Lack of input validation of arrays,126,https://github.com/code-423n4/2022-01-xdefi-findings/issues/126,xdefi,2022/01,bug;duplicate;1 (Low Risk);sponsor acknowledged
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Newly added rewards will get frozen when a `unlock()` transaction get in between before `updateDistribution()`,135,https://github.com/code-423n4/2022-01-xdefi-findings/issues/135,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`merge()` can cause `lock` to fail due to tokenId collision,138,https://github.com/code-423n4/2022-01-xdefi-findings/issues/138,xdefi,2022/01,bug;duplicate;2 (Med Risk);sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,`_zeroDurationPointBase` can potentially be exploited to get more scores,139,https://github.com/code-423n4/2022-01-xdefi-findings/issues/139,xdefi,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`XDEFIDistribution.sol#lock()` Validation of `amount_` can be done earlier to save gas,141,https://github.com/code-423n4/2022-01-xdefi-findings/issues/141,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,1,Unsafe type casting,142,https://github.com/code-423n4/2022-01-xdefi-findings/issues/142,xdefi,2022/01,bug;1 (Low Risk);disagree with severity;sponsor acknowledged
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,0,Use of assert() instead of require(),143,https://github.com/code-423n4/2022-01-xdefi-findings/issues/143,xdefi,2022/01,bug;duplicate;1 (Low Risk);sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused named returns,144,https://github.com/code-423n4/2022-01-xdefi-findings/issues/144,xdefi,2022/01,bug;duplicate;1 (Low Risk);sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Using shift operators can save gas,145,https://github.com/code-423n4/2022-01-xdefi-findings/issues/145,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Unused storage variables,146,https://github.com/code-423n4/2022-01-xdefi-findings/issues/146,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`XDEFIDistribution.sol#_toInt256Safe()` Validation of input value can be done earlier to save gas,147,https://github.com/code-423n4/2022-01-xdefi-findings/issues/147,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Change `pointsCorrection` to `uint256` can save gas,148,https://github.com/code-423n4/2022-01-xdefi-findings/issues/148,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Redundant type casting,150,https://github.com/code-423n4/2022-01-xdefi-findings/issues/150,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`XDEFIDistribution.sol#_updateXDEFIBalance()` Avoiding unnecessary storage writes can save gas,151,https://github.com/code-423n4/2022-01-xdefi-findings/issues/151,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Remove unnecessary variables can save gas,152,https://github.com/code-423n4/2022-01-xdefi-findings/issues/152,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoiding unnecessary storage reads can save gas,154,https://github.com/code-423n4/2022-01-xdefi-findings/issues/154,xdefi,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
75,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Malicious early user/attacker can malfunction the contract and even freeze users' funds in edge cases,156,https://github.com/code-423n4/2022-01-xdefi-findings/issues/156,xdefi,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
75,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,G,Field bonusMultiplier of struct Position can be removed,101,https://github.com/code-423n4/2022-01-xdefi-findings/issues/101,xdefi,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
75,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Save Gas With The Unchecked Keyword (XDefiDistribution.sol),158,https://github.com/code-423n4/2022-01-xdefi-findings/issues/158,xdefi,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
75,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,1,Missing input validation on array lengths (Function setLockPeriods in XDEFIDistribution.sol),99,https://github.com/code-423n4/2022-01-xdefi-findings/issues/99,xdefi,2022/01,bug;duplicate;1 (Low Risk);disagree with severity;sponsor acknowledged
80,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Use newer solidity version for `extcodesize` optimization,73,https://github.com/code-423n4/2022-01-yield-findings/issues/73,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor acknowledged
80,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Possible logic missmatch,39,https://github.com/code-423n4/2022-01-yield-findings/issues/39,yield,2022/01,bug;invalid;1 (Low Risk);resolved;sponsor confirmed
80,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Unsecure oracle price,40,https://github.com/code-423n4/2022-01-yield-findings/issues/40,yield,2022/01,bug;invalid;3 (High Risk);disagree with severity;sponsor confirmed
80,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Oracle prices could be not fresh,41,https://github.com/code-423n4/2022-01-yield-findings/issues/41,yield,2022/01,bug;duplicate;2 (Med Risk)
80,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving using immutable,42,https://github.com/code-423n4/2022-01-yield-findings/issues/42,yield,2022/01,bug;G (Gas Optimization);sponsor disputed
80,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Lack of important event,43,https://github.com/code-423n4/2022-01-yield-findings/issues/43,yield,2022/01,bug;0 (Non-critical);1 (Low Risk);resolved;sponsor confirmed
80,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Extend [ Possible logic missmatch ] ,45,https://github.com/code-423n4/2022-01-yield-findings/issues/45,yield,2022/01,bug;invalid;1 (Low Risk);resolved;sponsor confirmed
80,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,approve Optimization,51,https://github.com/code-423n4/2022-01-yield-findings/issues/51,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Unsafe approve,52,https://github.com/code-423n4/2022-01-yield-findings/issues/52,yield,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
80,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas saving using ++i,59,https://github.com/code-423n4/2022-01-yield-findings/issues/59,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Lack of auth for vaults,61,https://github.com/code-423n4/2022-01-yield-findings/issues/61,yield,2022/01,bug;duplicate;invalid;3 (High Risk)
80,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,1,Improvable decentralization,63,https://github.com/code-423n4/2022-01-yield-findings/issues/63,yield,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
80,ACai,0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,G,The visibility of ConvexYieldWrapper.removeVault should be changed to external.,71,https://github.com/code-423n4/2022-01-yield-findings/issues/71,yield,2022/01,bug;duplicate;invalid;G (Gas Optimization)
80,bitbopper,0xe15f11FF2364311E0b7250AaA51A2bB4D7FBA37F,G,Reentrancy modifier is suboptimal,96,https://github.com/code-423n4/2022-01-yield-findings/issues/96,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Chainlink's latestRoundData might return stale or incorrect results,2,https://github.com/code-423n4/2022-01-yield-findings/issues/2,yield,2022/01,bug;duplicate;2 (Med Risk)
80,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,"The wrap and unwrap functions lack access control, allowing anyone to consume the convexToken in the contract",3,https://github.com/code-423n4/2022-01-yield-findings/issues/3,yield,2022/01,bug;invalid;3 (High Risk);sponsor disputed
80,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,addVault and removeVault lack validation of caller address,4,https://github.com/code-423n4/2022-01-yield-findings/issues/4,yield,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
80,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Missing 0 address check,5,https://github.com/code-423n4/2022-01-yield-findings/issues/5,yield,2022/01,bug;duplicate;invalid;1 (Low Risk);sponsor disputed
80,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,1,Race condition in approve(),6,https://github.com/code-423n4/2022-01-yield-findings/issues/6,yield,2022/01,bug;0 (Non-critical);sponsor acknowledged
80,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas savings,37,https://github.com/code-423n4/2022-01-yield-findings/issues/37,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,SHOULD CHECK RETURN DATA FROM CHAINLINK AGGREGATORS ,7,https://github.com/code-423n4/2022-01-yield-findings/issues/7,yield,2022/01,bug;duplicate;2 (Med Risk)
80,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,++i is more gas efficient than i++ in loops forwarding,82,https://github.com/code-423n4/2022-01-yield-findings/issues/82,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,`> 0 can be replaced with != 0 for gas optimization`,83,https://github.com/code-423n4/2022-01-yield-findings/issues/83,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Immutable variables,84,https://github.com/code-423n4/2022-01-yield-findings/issues/84,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `++i` costs less gas compared to `i++`,55,https://github.com/code-423n4/2022-01-yield-findings/issues/55,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: No need to initialize variables with default values,56,https://github.com/code-423n4/2022-01-yield-findings/issues/56,yield,2022/01,bug;G (Gas Optimization);resolved
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: `> 0` is less efficient than `!= 0` for unsigned integers,57,https://github.com/code-423n4/2022-01-yield-findings/issues/57,yield,2022/01,bug;G (Gas Optimization)
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Tight variable packing in `ConvexStakingWrapper.sol`,58,https://github.com/code-423n4/2022-01-yield-findings/issues/58,yield,2022/01,bug;G (Gas Optimization);sponsor confirmed
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas: Unused Named Returns,60,https://github.com/code-423n4/2022-01-yield-findings/issues/60,yield,2022/01,bug;0 (Non-critical);disagree with severity;resolved;sponsor confirmed
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `ConvexStakingWrapper.sol:addRewards()`: `startIndex` can't underflow,62,https://github.com/code-423n4/2022-01-yield-findings/issues/62,yield,2022/01,bug;invalid;G (Gas Optimization);resolved;sponsor confirmed
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `ConvexStakingWrapper.sol:_calcRewardIntegral()`: Unnecessary checked arithmetic when no underflow possible,64,https://github.com/code-423n4/2022-01-yield-findings/issues/64,yield,2022/01,bug;invalid;G (Gas Optimization);resolved;sponsor confirmed
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `ConvexStakingWrapper.sol:removeVault()`: `vaultsLength - 1` can't underflow,65,https://github.com/code-423n4/2022-01-yield-findings/issues/65,yield,2022/01,bug;invalid;G (Gas Optimization);resolved;sponsor confirmed
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `CvxMining.sol:ConvertCrvToCvx()`: `reduction` can't underflow,66,https://github.com/code-423n4/2022-01-yield-findings/issues/66,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `ConvexStakingWrapper.sol:_calcRewardIntegral()`: `bal - rewardRemaining` can't underflow,67,https://github.com/code-423n4/2022-01-yield-findings/issues/67,yield,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Cvx3CrvOracle.sol:min()`: Non-strict inequalities are cheaper than strict ones,68,https://github.com/code-423n4/2022-01-yield-findings/issues/68,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,"Gas in `Cvx3CrvOracle.sol:_peek()`: `minStable` can't overflow, as the comment states. Uncheck it.",69,https://github.com/code-423n4/2022-01-yield-findings/issues/69,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas in `Cvx3CrvOracle.sol:_peek()`: `ethId` and `cvx3CrvId` should get cached ,70,https://github.com/code-423n4/2022-01-yield-findings/issues/70,yield,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`ConvexStakingWrapper.sol`: unused `nonReentrant` modifier,74,https://github.com/code-423n4/2022-01-yield-findings/issues/74,yield,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`ConvexStakingWrapper.sol`: `AccessControl` capabilities aren't used,75,https://github.com/code-423n4/2022-01-yield-findings/issues/75,yield,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,1,`ConvexStakingWrapper.sol`: related data should be grouped in a struct,76,https://github.com/code-423n4/2022-01-yield-findings/issues/76,yield,2022/01,bug;0 (Non-critical);disagree with severity;sponsor acknowledged
80,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas (unrecommended): Mark functions as payable to save gas,77,https://github.com/code-423n4/2022-01-yield-findings/issues/77,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,double update on storage pointer,121,https://github.com/code-423n4/2022-01-yield-findings/issues/121,yield,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
80,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,calldata is cheaper than memory,122,https://github.com/code-423n4/2022-01-yield-findings/issues/122,yield,2022/01,bug;G (Gas Optimization);sponsor disputed
80,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,1,Missing isShutdown on _checkpointAndClaim(),123,https://github.com/code-423n4/2022-01-yield-findings/issues/123,yield,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
80,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Using ++i instead i++ for saving more gas,44,https://github.com/code-423n4/2022-01-yield-findings/issues/44,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,more efficient nonReentrant() modifier.,46,https://github.com/code-423n4/2022-01-yield-findings/issues/46,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,1,check input address on constructor is not got zero address,47,https://github.com/code-423n4/2022-01-yield-findings/issues/47,yield,2022/01,bug;duplicate;invalid;1 (Low Risk);sponsor disputed
80,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,`immutable` can saving more gas,48,https://github.com/code-423n4/2022-01-yield-findings/issues/48,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,caching curveToken in  memory can cost less gas,49,https://github.com/code-423n4/2022-01-yield-findings/issues/49,yield,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
80,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G, using ++rewardsLength can be saving more gas,50,https://github.com/code-423n4/2022-01-yield-findings/issues/50,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,3,unwrap() can be called by anybody leading to loss of funds.,87,https://github.com/code-423n4/2022-01-yield-findings/issues/87,yield,2022/01,bug;invalid;3 (High Risk);sponsor disputed
80,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,2,Only passing in one depositedBalance in _checkpointAndClaim(),88,https://github.com/code-423n4/2022-01-yield-findings/issues/88,yield,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
80,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,3,Miscalculation of rewards due to removal of vaults,137,https://github.com/code-423n4/2022-01-yield-findings/issues/137,yield,2022/01,bug;duplicate;invalid;3 (High Risk);sponsor disputed
80,hack3r-0m,0x825aE6fb177186e9551ab1CDd6D4aB10B22A0Dba,3,Chainlink oracles might return stale data,138,https://github.com/code-423n4/2022-01-yield-findings/issues/138,yield,2022/01,bug;duplicate;2 (Med Risk)
80,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,1,Cvx3CrvOracle.setSource doesn't check provided core configuration values,128,https://github.com/code-423n4/2022-01-yield-findings/issues/128,yield,2022/01,bug;duplicate;invalid;1 (Low Risk);sponsor disputed
80,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,Cvx3CrvOracle can report stale prices,132,https://github.com/code-423n4/2022-01-yield-findings/issues/132,yield,2022/01,bug;duplicate;2 (Med Risk)
80,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,ConvexYieldWrapper wrap can be front-run,134,https://github.com/code-423n4/2022-01-yield-findings/issues/134,yield,2022/01,bug;duplicate;invalid;2 (Med Risk);sponsor disputed
80,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,ConvexYieldWrapper griefing attack is possible that removes all the vaults from any user,135,https://github.com/code-423n4/2022-01-yield-findings/issues/135,yield,2022/01,bug;duplicate;invalid;2 (Med Risk);sponsor disputed
80,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Use immutable variables if values don't change after the constructor,120,https://github.com/code-423n4/2022-01-yield-findings/issues/120,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Use '!= 0' rather than '> 0' for unsigned integers,125,https://github.com/code-423n4/2022-01-yield-findings/issues/125,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,"Prefix (++i), rather than postfix (i++), increment/decrement operators should be used in for-loop",97,https://github.com/code-423n4/2022-01-yield-findings/issues/97,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,ConvexStakingWrapper does not update rewards state before transferring tokens,85,https://github.com/code-423n4/2022-01-yield-findings/issues/85,yield,2022/01,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
80,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,0,"Cvx3CrvOracle missing natspec param baseAmount for peek, _peek, _get",92,https://github.com/code-423n4/2022-01-yield-findings/issues/92,yield,2022/01,bug;duplicate;0 (Non-critical);sponsor confirmed
80,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Cvx3CrvOracle returns 0 for small baseAmount,93,https://github.com/code-423n4/2022-01-yield-findings/issues/93,yield,2022/01,bug;1 (Low Risk);sponsor acknowledged
80,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Cvx3CrvOracle misses sanity checks for Chainlink responses,94,https://github.com/code-423n4/2022-01-yield-findings/issues/94,yield,2022/01,bug;duplicate;2 (Med Risk)
80,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,1,Cvx3CrvOracle earned function calculates cvx wrongly if pool claimed indirectly,95,https://github.com/code-423n4/2022-01-yield-findings/issues/95,yield,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
80,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,`ConvexYieldWrapper` Does Not Check If A Vault Is Undercollateralised In `_getDepositedBalance`,139,https://github.com/code-423n4/2022-01-yield-findings/issues/139,yield,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
80,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,Malicious Users Can Duplicate Protocol Earned Yield By Transferring `wCVX` Tokens To Another Account,86,https://github.com/code-423n4/2022-01-yield-findings/issues/86,yield,2022/01,bug;3 (High Risk);resolved;sponsor confirmed
80,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,Malicious Users Can Transfer Vault Collateral To Other Accounts To Extract Additional Yield From The Protocol,89,https://github.com/code-423n4/2022-01-yield-findings/issues/89,yield,2022/01,bug;3 (High Risk);sponsor confirmed
80,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,Improper Validation Of Chainlink's `latestRoundData` Function,90,https://github.com/code-423n4/2022-01-yield-findings/issues/90,yield,2022/01,bug;duplicate;2 (Med Risk)
80,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,1,`setSource` Does Not Validate That The Chainlink Price Feeds Are `18` Decimals,91,https://github.com/code-423n4/2022-01-yield-findings/issues/91,yield,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
80,pants,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,3,Unbounded loop on array can lead to DoS,36,https://github.com/code-423n4/2022-01-yield-findings/issues/36,yield,2022/01,bug;1 (Low Risk);sponsor disputed
80,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,less gas usage by calling the `TransferHelper` lib directly,72,https://github.com/code-423n4/2022-01-yield-findings/issues/72,yield,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Storage double reading. Could save SLOAD,10,https://github.com/code-423n4/2022-01-yield-findings/issues/10,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Internal functions to private,11,https://github.com/code-423n4/2022-01-yield-findings/issues/11,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Public functions to external,12,https://github.com/code-423n4/2022-01-yield-findings/issues/12,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary array boundaries check when loading an array element twice,13,https://github.com/code-423n4/2022-01-yield-findings/issues/13,yield,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Prefix increments are cheaper than postfix increments,14,https://github.com/code-423n4/2022-01-yield-findings/issues/14,yield,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary index init,15,https://github.com/code-423n4/2022-01-yield-findings/issues/15,yield,2022/01,bug;duplicate;G (Gas Optimization);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Upgrade pragma to at least 0.8.4,16,https://github.com/code-423n4/2022-01-yield-findings/issues/16,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Check if amount is not zero to save gas,17,https://github.com/code-423n4/2022-01-yield-findings/issues/17,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use != 0 instead of > 0,18,https://github.com/code-423n4/2022-01-yield-findings/issues/18,yield,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Consider inline the following functions to save gas,19,https://github.com/code-423n4/2022-01-yield-findings/issues/19,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary constructor,20,https://github.com/code-423n4/2022-01-yield-findings/issues/20,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary functions,21,https://github.com/code-423n4/2022-01-yield-findings/issues/21,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unnecessary default assignment,22,https://github.com/code-423n4/2022-01-yield-findings/issues/22,yield,2022/01,bug;duplicate;G (Gas Optimization);sponsor acknowledged
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Inline one time use functions,23,https://github.com/code-423n4/2022-01-yield-findings/issues/23,yield,2022/01,bug;duplicate;invalid;G (Gas Optimization);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Rearrange state variables,24,https://github.com/code-423n4/2022-01-yield-findings/issues/24,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Use calldata instead of memory,25,https://github.com/code-423n4/2022-01-yield-findings/issues/25,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Must approve 0 first,26,https://github.com/code-423n4/2022-01-yield-findings/issues/26,yield,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,safeApprove of openZeppelin is deprecated,27,https://github.com/code-423n4/2022-01-yield-findings/issues/27,yield,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Solidity compiler versions mismatch,28,https://github.com/code-423n4/2022-01-yield-findings/issues/28,yield,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Use safe math for solidity version <8,29,https://github.com/code-423n4/2022-01-yield-findings/issues/29,yield,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Named return issue,30,https://github.com/code-423n4/2022-01-yield-findings/issues/30,yield,2022/01,bug;duplicate;invalid;1 (Low Risk);disagree with severity;sponsor confirmed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Never used parameters in constructor,31,https://github.com/code-423n4/2022-01-yield-findings/issues/31,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Two arrays length mismatch - _calcRewardIntegral,32,https://github.com/code-423n4/2022-01-yield-findings/issues/32,yield,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Missing commenting,33,https://github.com/code-423n4/2022-01-yield-findings/issues/33,yield,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,1,Not verified input,34,https://github.com/code-423n4/2022-01-yield-findings/issues/34,yield,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,approve return value is ignored,35,https://github.com/code-423n4/2022-01-yield-findings/issues/35,yield,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused imports,8,https://github.com/code-423n4/2022-01-yield-findings/issues/8,yield,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
80,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Unused Imports,9,https://github.com/code-423n4/2022-01-yield-findings/issues/9,yield,2022/01,bug;duplicate;invalid;G (Gas Optimization)
80,samruna,0x1D7Ea53cf528E8Ca399BAd57C3F52960A512be32,1,References file not found,1,https://github.com/code-423n4/2022-01-yield-findings/issues/1,yield,2022/01,bug;invalid;1 (Low Risk);sponsor disputed
80,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Perform math inside code branch,106,https://github.com/code-423n4/2022-01-yield-findings/issues/106,yield,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
80,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Remove duplicate address variables,108,https://github.com/code-423n4/2022-01-yield-findings/issues/108,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,removeVault function can be external,109,https://github.com/code-423n4/2022-01-yield-findings/issues/109,yield,2022/01,bug;duplicate;invalid;G (Gas Optimization)
80,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Missing approve(0) for CVX,110,https://github.com/code-423n4/2022-01-yield-findings/issues/110,yield,2022/01,bug;duplicate;invalid;1 (Low Risk);sponsor disputed
80,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Unsafe uint128 casting may overflow,112,https://github.com/code-423n4/2022-01-yield-findings/issues/112,yield,2022/01,bug;1 (Low Risk);resolved;sponsor confirmed
80,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,1,Comment missing function parameter,113,https://github.com/code-423n4/2022-01-yield-findings/issues/113,yield,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
80,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,latestRoundData data may be stale,115,https://github.com/code-423n4/2022-01-yield-findings/issues/115,yield,2022/01,bug;duplicate;2 (Med Risk)
80,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,3,Cvx3CrvOracle.sol _peek() returns wrong units,119,https://github.com/code-423n4/2022-01-yield-findings/issues/119,yield,2022/01,bug;invalid;3 (High Risk);sponsor disputed
80,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Using pre-increment (++i) instead of post-increment (i++) can save gas,126,https://github.com/code-423n4/2022-01-yield-findings/issues/126,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Function `ConvexYieldWrapper.removeVault()` can be rewritten,127,https://github.com/code-423n4/2022-01-yield-findings/issues/127,yield,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
80,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Assigning default value costs unnecessary gas,129,https://github.com/code-423n4/2022-01-yield-findings/issues/129,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Some variables can be set immutable,130,https://github.com/code-423n4/2022-01-yield-findings/issues/130,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Remove unused variables,131,https://github.com/code-423n4/2022-01-yield-findings/issues/131,yield,2022/01,bug;duplicate;0 (Non-critical);disagree with severity
80,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Costly reentrance modifier,133,https://github.com/code-423n4/2022-01-yield-findings/issues/133,yield,2022/01,bug;duplicate;G (Gas Optimization);sponsor confirmed
80,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,2,Oracle data feed is insufficiently validated.,136,https://github.com/code-423n4/2022-01-yield-findings/issues/136,yield,2022/01,bug;2 (Med Risk);resolved;sponsor confirmed
80,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,2,Cvx3CrvOracle does not check that Chainlink data is fresh.,78,https://github.com/code-423n4/2022-01-yield-findings/issues/78,yield,2022/01,bug;duplicate;2 (Med Risk)
80,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Unnecessary check on quote in Cvx3CrvOracle,79,https://github.com/code-423n4/2022-01-yield-findings/issues/79,yield,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
80,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Extra SLOADs in _peek,80,https://github.com/code-423n4/2022-01-yield-findings/issues/80,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Make full use of immutable keyword in ConvexStakingWrapper,81,https://github.com/code-423n4/2022-01-yield-findings/issues/81,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,stop execution when extraRewardsLength on convexpool is zero,100,https://github.com/code-423n4/2022-01-yield-findings/issues/100,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,can save gas using `immutable`,124,https://github.com/code-423n4/2022-01-yield-findings/issues/124,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,using `require` can save gas,38,https://github.com/code-423n4/2022-01-yield-findings/issues/38,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,3,"MINTING to collateralVault could inflating totalsupply, without giving the balance to anyone",98,https://github.com/code-423n4/2022-01-yield-findings/issues/98,yield,2022/01,bug;invalid;3 (High Risk);sponsor disputed
80,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,2,Arbitrary call,99,https://github.com/code-423n4/2022-01-yield-findings/issues/99,yield,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
80,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Avoid unnecessary arithmetic operations and storage reads can save gas,101,https://github.com/code-423n4/2022-01-yield-findings/issues/101,yield,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
80,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,"`ConvexStakingWrapper.sol#` Switching between 1, 2 instead of 0, 1 is more gas efficient",102,https://github.com/code-423n4/2022-01-yield-findings/issues/102,yield,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
80,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Using immutable variable can save gas,103,https://github.com/code-423n4/2022-01-yield-findings/issues/103,yield,2022/01,bug;duplicate;G (Gas Optimization)
80,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Chainlink's `latestRoundData` might return stale results,104,https://github.com/code-423n4/2022-01-yield-findings/issues/104,yield,2022/01,bug;duplicate;2 (Med Risk);sponsor disputed
80,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Adding unchecked directive can save gas,105,https://github.com/code-423n4/2022-01-yield-findings/issues/105,yield,2022/01,bug;G (Gas Optimization);sponsor confirmed
80,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`ConvexYieldWrapper.sol` Redundant code,107,https://github.com/code-423n4/2022-01-yield-findings/issues/107,yield,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
80,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`ConvexYieldWrapper#removeVault()` `found` is redundant,111,https://github.com/code-423n4/2022-01-yield-findings/issues/111,yield,2022/01,bug;G (Gas Optimization);resolved;sponsor confirmed
80,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Attacker can steal part of the rewards if one of the `extraRewards` is rewarded with Convex Token,114,https://github.com/code-423n4/2022-01-yield-findings/issues/114,yield,2022/01,bug;invalid;2 (Med Risk);sponsor disputed
80,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Rewards distribution can be disrupted by a early user,116,https://github.com/code-423n4/2022-01-yield-findings/issues/116,yield,2022/01,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
80,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Redundant `return` for named returns,117,https://github.com/code-423n4/2022-01-yield-findings/issues/117,yield,2022/01,bug;duplicate;0 (Non-critical);disagree with severity
80,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,`ConvexStakingWrapper.sol#earned()` Implementation can be simpler and save some gas,118,https://github.com/code-423n4/2022-01-yield-findings/issues/118,yield,2022/01,bug;invalid;G (Gas Optimization);sponsor disputed
80,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,2,Oracle might return stale or incorrect results (Cvx3CrvOracle.sol),53,https://github.com/code-423n4/2022-01-yield-findings/issues/53,yield,2022/01,bug;duplicate;2 (Med Risk)
80,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,0,Typos,54,https://github.com/code-423n4/2022-01-yield-findings/issues/54,yield,2022/01,bug;0 (Non-critical);resolved;sponsor confirmed
85,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,Q,QA Report,40,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/40,aave lens,2022/02,bug;QA (Quality Assurance)
85,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Gas Optimizations,41,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/41,aave lens,2022/02,bug;G (Gas Optimization)
85,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,39,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/39,aave lens,2022/02,bug;G (Gas Optimization)
85,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Multiple `followNFT` mint,48,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/48,aave lens,2022/02,bug;invalid
85,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,49,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/49,aave lens,2022/02,bug;QA (Quality Assurance)
85,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,85,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/85,aave lens,2022/02,bug;QA (Quality Assurance)
85,ACai,0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,3,LensHub contract would lose governance once the previous _governance set a Incorrect address.,50,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/50,aave lens,2022/02,bug;invalid
85,ACai,0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,Q,QA Report,51,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/51,aave lens,2022/02,bug;invalid
85,BurgerTime,TEATE,3,TEST,36,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/36,aave lens,2022/02,withdrawn by warden
85,BurgerTime,TEATE,2,TEST,37,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/37,aave lens,2022/02,withdrawn by warden
85,BurgerTime,ttttt,2,test,38,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/38,aave lens,2022/02,withdrawn by warden
85,BurgerTime,fefaef,2,TEST,42,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/42,aave lens,2022/02,withdrawn by warden
85,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"SecretCodeFollowModule: The initializeFollowModule function should not return the plaintext of the passcode, and passcode should not be in clear text",10,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/10,aave lens,2022/02,bug;invalid
85,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,SecretCodeFollowModule: passcode should not be stored in _passcodeByProfile in clear text,11,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/11,aave lens,2022/02,bug;invalid
85,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Inconsistent behavior in the *FeeCollectModule contract can cause DOS.,14,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/14,aave lens,2022/02,bug;duplicate;2 (Med Risk);sponsor acknowledged
85,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,Q,QA Report,15,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/15,aave lens,2022/02,bug;QA (Quality Assurance)
85,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,_setGovernance should be two step process,3,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/3,aave lens,2022/02,bug;invalid
85,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,PublishingLogic: _initPubCollectModule fails when collectModule is 0,8,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/8,aave lens,2022/02,bug;invalid
85,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,SecretCodeFollowModule: processFollow should add onlyHub modifier,9,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/9,aave lens,2022/02,bug;invalid
85,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Cashback on referral,20,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/20,aave lens,2022/02,bug;2 (Med Risk);sponsor acknowledged
85,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Fee amount too restrictive,21,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/21,aave lens,2022/02,bug;duplicate;2 (Med Risk)
85,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Approvals not cleared when transferring profile,22,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/22,aave lens,2022/02,bug;2 (Med Risk);sponsor acknowledged
85,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Can follow a profile several times,23,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/23,aave lens,2022/02,bug;invalid
85,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Can `collect` several times,24,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/24,aave lens,2022/02,bug;invalid
85,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Treasury fees can be changed retroactively ,25,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/25,aave lens,2022/02,bug;invalid
85,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Profile creation can be frontrun,26,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/26,aave lens,2022/02,bug;2 (Med Risk);sponsor acknowledged
85,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Name squatting,27,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/27,aave lens,2022/02,bug;2 (Med Risk)
85,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Handles consisting only of `.` can be created,29,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/29,aave lens,2022/02,bug;invalid
85,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Ineffective Whitelist,30,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/30,aave lens,2022/02,bug;2 (Med Risk)
85,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,Q,QA Report,55,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/55,aave lens,2022/02,bug;invalid
85,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,Q,QA Report,63,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/63,aave lens,2022/02,bug;invalid
85,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,17,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/17,aave lens,2022/02,bug;G (Gas Optimization)
85,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,18,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/18,aave lens,2022/02,bug;QA (Quality Assurance)
85,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Missing validation in Handle name could cause Path traversal attacks or DOS,19,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/19,aave lens,2022/02,bug;invalid
85,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,User can bombard a publication with spam comments,28,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/28,aave lens,2022/02,bug;invalid
85,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,User can collect publication at lesser fees,31,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/31,aave lens,2022/02,bug;duplicate;2 (Med Risk)
85,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,User can impersonate other user identity by capturing handle,32,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/32,aave lens,2022/02,bug;invalid
85,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Possible XSS and spamming possible,33,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/33,aave lens,2022/02,bug;invalid
85,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Higher DAO power + Fake Follower,34,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/34,aave lens,2022/02,bug;invalid
85,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Double collection + Refrain users from collecting publication,35,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/35,aave lens,2022/02,bug;invalid
85,d4rk,0x9f07Dc0F363a088BE82974e04AECb3C610C31fdd,G,Gas Optimizations,13,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/13,aave lens,2022/02,bug;G (Gas Optimization)
85,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,It's possible to follow deleted profiles,70,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/70,aave lens,2022/02,bug;2 (Med Risk);resolved;sponsor confirmed
85,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,missing whenNotPaused,71,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/71,aave lens,2022/02,bug;2 (Med Risk);resolved;sponsor confirmed
85,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,Q,QA Report,72,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/72,aave lens,2022/02,bug;invalid
85,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,On the Minting Delegate Is Not Moved,58,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/58,aave lens,2022/02,bug;invalid
85,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,73,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/73,aave lens,2022/02,bug;QA (Quality Assurance)
85,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,74,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/74,aave lens,2022/02,bug;G (Gas Optimization)
85,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,47,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/47,aave lens,2022/02,bug;G (Gas Optimization)
85,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Add a timelock to `ModuleGlobals.setTreasuryFee()`,52,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/52,aave lens,2022/02,bug;invalid
85,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,No sanity check to prevent tokens from being added multiple times,53,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/53,aave lens,2022/02,bug;invalid
85,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,3,Update initializer modifier to prevent reentrancy during initialization,57,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/57,aave lens,2022/02,bug;invalid
85,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,60,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/60,aave lens,2022/02,bug;QA (Quality Assurance)
85,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,76,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/76,aave lens,2022/02,bug;invalid
85,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Profile owner cannot remove follower,78,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/78,aave lens,2022/02,bug;invalid
85,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,79,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/79,aave lens,2022/02,bug;G (Gas Optimization)
85,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,80,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/80,aave lens,2022/02,bug;QA (Quality Assurance)
85,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,User can refer themselves,81,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/81,aave lens,2022/02,bug;duplicate;2 (Med Risk)
85,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,Q,QA Report,64,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/64,aave lens,2022/02,bug;QA (Quality Assurance)
85,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,"Profile can be created with a handle string "".""",65,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/65,aave lens,2022/02,bug;invalid
85,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,3,Use of _mint instead of safeMint in function createProfile of LensHub.sol,69,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/69,aave lens,2022/02,bug;invalid
85,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,Basis points constant BPS_MAX is used as minimal fee amount requirement,46,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/46,aave lens,2022/02,bug;2 (Med Risk);resolved;sponsor confirmed
85,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,Collect modules can fail on zero amount transfers if treasury fee is set to zero,62,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/62,aave lens,2022/02,bug;2 (Med Risk);resolved;sponsor confirmed
85,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,"Zero collection module can be whitelisted and set to a post, which will then revert all collects and mirrors with PublicationDoesNotExist",86,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/86,aave lens,2022/02,bug;2 (Med Risk);sponsor acknowledged
85,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,Q,QA Report,87,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/87,aave lens,2022/02,bug;QA (Quality Assurance)
85,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Need a way to hide/disable posts,43,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/43,aave lens,2022/02,bug;invalid
85,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,44,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/44,aave lens,2022/02,bug;G (Gas Optimization)
85,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,Reentrancy allows commenter to overwrite own comments,45,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/45,aave lens,2022/02,bug;2 (Med Risk);sponsor acknowledged
85,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,flawed validation checks for permitForAll() function,4,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/4,aave lens,2022/02,bug;invalid
85,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,initialize() functions can be called by an attacker first,5,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/5,aave lens,2022/02,bug;invalid
85,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,No guards against following the same profile multiple times ,6,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/6,aave lens,2022/02,bug;invalid
85,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,_validateDataIsExpected() validation checks are open to manipulation ,7,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/7,aave lens,2022/02,bug;invalid
85,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Gas Optimizations,56,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/56,aave lens,2022/02,bug;G (Gas Optimization)
85,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,2,Unchecked input for setting _governance.,12,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/12,aave lens,2022/02,bug;invalid
85,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,Q,QA Report,54,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/54,aave lens,2022/02,bug;QA (Quality Assurance)
85,nahnah,0xc950cAeC29f157EB49f37b8c57c737E79037B655,G,Gas Optimizations,75,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/75,aave lens,2022/02,bug;G (Gas Optimization)
85,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,Q,QA Report,82,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/82,aave lens,2022/02,bug;QA (Quality Assurance)
85,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Gas Optimizations,83,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/83,aave lens,2022/02,bug;G (Gas Optimization)
85,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,3,Constructor in LensHub contract when used with proxy makes protocol unusable,61,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/61,aave lens,2022/02,bug;invalid
85,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,84,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/84,aave lens,2022/02,bug;G (Gas Optimization)
85,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,1,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/1,aave lens,2022/02,bug;invalid
85,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,2,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/2,aave lens,2022/02,bug;invalid
85,sikorico,0x0E8ea7AD139C5EB10C6D1076962617D458D0Aed6,Q,QA Report,16,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/16,aave lens,2022/02,bug;QA (Quality Assurance)
85,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,77,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/77,aave lens,2022/02,bug;invalid
85,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M0] `ApprovalFollowModule.sol` lack of transfer check make it possible for anyone to become follower without approved by the profile owner,66,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/66,aave lens,2022/02,bug;QA (Quality Assurance)
85,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M1] Inappropriate handling of `referralFee` makes collecting Mirror fails without error when `referrerProfileId` is burned,67,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/67,aave lens,2022/02,bug;2 (Med Risk);sponsor acknowledged
85,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H3] Imprecise management of users' allowance allows the admin of the upgradeable proxy contract to rug users,68,https://github.com/code-423n4/2022-02-aave-lens-findings/issues/68,aave lens,2022/02,bug;2 (Med Risk);sponsor acknowledged
84,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,70,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/70,badger citadel,2022/02,bug;invalid;G (Gas Optimization)
84,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,Do not allow selling more tokens than in contract as default,30,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/30,badger citadel,2022/02,bug;invalid
84,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,Q,QA Report,31,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/31,badger citadel,2022/02,bug;QA (Quality Assurance)
84,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Gas Optimizations,32,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/32,badger citadel,2022/02,bug;G (Gas Optimization)
84,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,14,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/14,badger citadel,2022/02,bug;invalid;G (Gas Optimization)
84,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Bypass multiple dao vote,15,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/15,badger citadel,2022/02,bug;invalid
84,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Owner can lock all the user's funds forever.,16,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/16,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Owner can lock funds,17,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/17,badger citadel,2022/02,bug;invalid
84,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,18,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/18,badger citadel,2022/02,bug;QA (Quality Assurance)
84,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Rogue pool,20,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/20,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"When setting saleRecipient to address(this), the owner can take out all `tokenIn`",12,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/12,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"tokenOutPrice can be set to any value, which may cost previous buyers",13,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/13,badger citadel,2022/02,bug;invalid
84,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,No Transfer Ownership Pattern,5,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/5,badger citadel,2022/02,bug;invalid
84,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`TokenIn` can be swept if `saleRecipient == tokenSale`,39,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/39,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,buy can be denied if close to `tokenInLimit`,40,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/40,badger citadel,2022/02,bug;QA (Quality Assurance)
84,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`buy` is not immediately settled,41,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/41,badger citadel,2022/02,bug;invalid
84,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,No `minOutAmount` amount checks when buying,42,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/42,badger citadel,2022/02,bug;duplicate;2 (Med Risk);sponsor acknowledged
84,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,23,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/23,badger citadel,2022/02,bug;QA (Quality Assurance)
84,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Incorrect amount given by Sweep function,24,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/24,badger citadel,2022/02,bug;invalid
84,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Owner can take all user funds and stuck sale to never end,26,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/26,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,User funds stuck - buy works even after sale ends,27,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/27,badger citadel,2022/02,bug;invalid
84,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,2,Upgreadability,100,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/100,badger citadel,2022/02,bug;invalid
84,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,Possible rug #1,101,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/101,badger citadel,2022/02,bug;invalid
84,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,Using `decimals()` can cause loss of funds,102,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/102,badger citadel,2022/02,bug;invalid
84,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,Possible rug #2,103,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/103,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,Possible rug #3,104,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/104,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,Owner can steal input tokens,105,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/105,badger citadel,2022/02,bug;2 (Med Risk)
84,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Gas Optimizations,108,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/108,badger citadel,2022/02,bug;G (Gas Optimization)
84,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,Q,QA Report,111,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/111,badger citadel,2022/02,bug;QA (Quality Assurance)
84,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Improper Upper Bound Definition On The OnlyOwner Function Variables,36,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/36,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,46,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/46,badger citadel,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
84,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,49,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/49,badger citadel,2022/02,bug;G (Gas Optimization)
84,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,106,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/106,badger citadel,2022/02,bug;QA (Quality Assurance)
84,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,80,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/80,badger citadel,2022/02,bug;G (Gas Optimization)
84,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Consistently check account balance before and after transfers for Fee-On-Transfer discrepencies,91,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/91,badger citadel,2022/02,bug;invalid
84,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Timelock and events for governor functions,95,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/95,badger citadel,2022/02,bug;invalid
84,floppydisk,0xcc4169f80DF8873F686cA377A5BeB61c012f0115,Q,QA Report,34,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/34,badger citadel,2022/02,bug;QA (Quality Assurance)
84,gellej,0xF9a50271150FAFF01c6a702E0BB79C2412eAcD25,2,Funds are transferred to saleRecipient before settlement,113,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/113,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,gellej,0xF9a50271150FAFF01c6a702E0BB79C2412eAcD25,2,Changing a token buy price during the sale by front-running buyers by forcing them to purchase at an unfair token price,114,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/114,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,gellej,0xF9a50271150FAFF01c6a702E0BB79C2412eAcD25,3,"Seven ways in which the Owner and Proxy Admin can make users lose funds (""rug vectors"")",50,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/50,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,gellej,0xF9a50271150FAFF01c6a702E0BB79C2412eAcD25,2,Price calculation is confusing and may fail in certain cases,51,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/51,badger citadel,2022/02,bug;QA (Quality Assurance)
84,gellej,0xF9a50271150FAFF01c6a702E0BB79C2412eAcD25,2,"Limit that a user can only ""vote"" for one dao is not enforceable",52,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/52,badger citadel,2022/02,bug;invalid
84,gpersoon,5345635,2,"Testing the new form, please ignore :)",10,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/10,badger citadel,2022/02,invalid;withdrawn by warden
84,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,`tokenOutPrice` can be updated to rug buyer,43,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/43,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Buyer are not guaranteed to receive any `tokenOut`,44,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/44,badger citadel,2022/02,bug;invalid
84,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Sales end time can be postponed indefinitely,45,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/45,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,47,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/47,badger citadel,2022/02,bug;QA (Quality Assurance);disagree with severity
84,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,48,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/48,badger citadel,2022/02,bug;G (Gas Optimization)
84,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,2,Sale should be able to be automatically finalized,71,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/71,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,2,buy function should verify that there are sufficient tokenOut tokens,72,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/72,badger citadel,2022/02,bug;invalid
84,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,No guarantee sale organizer will fulfil their end of the deal,53,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/53,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,3,Risk of allowing non-whitelisted users also to participate in the Token sale,58,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/58,badger citadel,2022/02,bug;invalid
84,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,"Option to have setTokenOutPrice, will impact Token sale and user behavior",63,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/63,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,Q,QA Report,64,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/64,badger citadel,2022/02,bug;QA (Quality Assurance)
84,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,Q,QA Report,107,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/107,badger citadel,2022/02,bug;QA (Quality Assurance)
84,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Gas Optimizations,110,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/110,badger citadel,2022/02,bug;G (Gas Optimization)
84,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,Sale participants’ claims are uncollateralized until the sale finalization,85,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/85,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,One participant can use all the token allocation,88,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/88,badger citadel,2022/02,bug;invalid
84,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,Sale will become mispriced with the market moves,99,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/99,badger citadel,2022/02,bug;invalid
84,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,55,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/55,badger citadel,2022/02,bug;invalid;G (Gas Optimization)
84,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Loss of excess funds due to loss of precision,66,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/66,badger citadel,2022/02,bug;QA (Quality Assurance)
84,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,112,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/112,badger citadel,2022/02,bug;G (Gas Optimization);sponsor confirmed
84,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Gas report - 4 findings,3,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/3,badger citadel,2022/02,bug;G (Gas Optimization)
84,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,Q,QA Report,33,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/33,badger citadel,2022/02,bug;QA (Quality Assurance)
84,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,0,User can retrieve no information if totalTokenIn > tokenInLimit in getTokenInLimitLeft().,4,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/4,badger citadel,2022/02,bug;invalid
84,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,0,_tokenInAmount can be checked at the beginning in buy() ,6,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/6,badger citadel,2022/02,bug;invalid
84,NoamYakov,0x972a7c4EE6d0988A010CafB09F794Cd1a169293F,G,Gas Optimizations,35,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/35,badger citadel,2022/02,bug;G (Gas Optimization)
84,NoamYakov,0x972a7c4EE6d0988A010CafB09F794Cd1a169293F,2,Users can vote for DAOs without being eligible for any `tokenOut`,90,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/90,badger citadel,2022/02,bug;QA (Quality Assurance)
84,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,G,Gas Optimizations,82,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/82,badger citadel,2022/02,bug;invalid
84,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,Q,QA Report,83,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/83,badger citadel,2022/02,bug;invalid
84,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,67,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/67,badger citadel,2022/02,bug;invalid
84,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,68,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/68,badger citadel,2022/02,bug;G (Gas Optimization)
84,OriDabush,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,69,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/69,badger citadel,2022/02,bug;QA (Quality Assurance)
84,ospwner,0xe1D476AEa1317357ca741b439d6052fa01502105,2,Voting for a DAO which does not exist can lead to a futile sale,81,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/81,badger citadel,2022/02,bug;invalid
84,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,3,Sale recipient can be changed mid-sale,54,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/54,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,tokenOut is only required on finalize,92,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/92,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Users should be allowed to control accepted tokenOutPrice,93,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/93,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,Q,QA Report,96,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/96,badger citadel,2022/02,bug;QA (Quality Assurance)
84,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Gas Optimizations,97,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/97,badger citadel,2022/02,bug;G (Gas Optimization)
84,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,3,TokenInLimit can be set arbitrarily high even if the contract doesn't have enough tokens to sell.,109,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/109,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Owner could frontrun with higher price,98,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/98,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,G,Gas Optimizations,73,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/73,badger citadel,2022/02,bug;G (Gas Optimization)
84,PostMan56,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas optimization in function 'getTokenInLimitLeft' and use of uint256 vs uint8,9,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/9,badger citadel,2022/02,bug;G (Gas Optimization);sponsor confirmed
84,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,79,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/79,badger citadel,2022/02,bug;G (Gas Optimization)
84,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,Q,QA Report,94,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/94,badger citadel,2022/02,bug;invalid
84,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Report,7,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/7,badger citadel,2022/02,bug;G (Gas Optimization)
84,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,8,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/8,badger citadel,2022/02,bug;QA (Quality Assurance)
84,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,75,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/75,badger citadel,2022/02,bug;QA (Quality Assurance)
84,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Gas Optimizations,76,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/76,badger citadel,2022/02,bug;G (Gas Optimization)
84,sabtikw,0xDA062abA66ECCD16f293D7fa22335b9AF335cAE0,G,Gas Optimizations,19,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/19,badger citadel,2022/02,bug;G (Gas Optimization)
84,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Gas Optimizations,65,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/65,badger citadel,2022/02,bug;invalid;G (Gas Optimization)
84,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,Q,QA report for low risk finndigs,1,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/1,badger citadel,2022/02,bug;QA (Quality Assurance)
84,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,3,Potential taking over full voting rights,2,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/2,badger citadel,2022/02,bug;invalid
84,ShippooorDAO,0x6ba679878C7a4750770327378fbf1926E243188d,2,Incorrect balance when claiming tokens,86,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/86,badger citadel,2022/02,bug;invalid
84,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,3,tokenOutAmount_ could be zero,84,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/84,badger citadel,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
84,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,Owner never calls `finalize()` = rug pull,87,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/87,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,Zero tokenOut balance = rug pull,89,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/89,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Gas Optimizations,21,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/21,badger citadel,2022/02,bug;G (Gas Optimization)
84,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,2,Usage of an upgradeable proxy allows BadgerDAO to rug buyer's funds while retaining CTDL tokens.,22,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/22,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Gas Optimizations,77,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/77,badger citadel,2022/02,bug;G (Gas Optimization)
84,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,2,Sale operator may frontrun purchases in order to modify the price arbitrarily,78,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/78,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,2,Owner can change the tokenOutPrice and affect voting,25,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/25,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,Q,QA Report,28,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/28,badger citadel,2022/02,bug;QA (Quality Assurance)
84,tqts,0x5Ac56257422bF362cec13a4367F86dd0a340f79a,G,Gas Optimizations,29,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/29,badger citadel,2022/02,bug;G (Gas Optimization)
84,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Gas Optimizations,56,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/56,badger citadel,2022/02,bug;G (Gas Optimization)
84,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,Q,QA Report,57,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/57,badger citadel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
84,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H1] Admin of the upgradeable proxy contract can rug users,59,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/59,badger citadel,2022/02,bug;invalid
84,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H2] Funds can be frozen when critical key holders lose access to their keys,60,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/60,badger citadel,2022/02,bug;duplicate;2 (Med Risk)
84,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H3] `saleRecipient` can rug buyers,61,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/61,badger citadel,2022/02,bug;2 (Med Risk)
84,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H4] `Owner` of `TokenSaleUpgradeable` can rug users,62,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/62,badger citadel,2022/02,bug;invalid
84,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,Q,QA Report,74,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/74,badger citadel,2022/02,bug;QA (Quality Assurance)
84,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,Q,QA Report,37,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/37,badger citadel,2022/02,bug;invalid
84,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,G,Gas Optimizations,38,https://github.com/code-423n4/2022-02-badger-citadel-findings/issues/38,badger citadel,2022/02,bug;G (Gas Optimization)
83,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,G,Gas Optimizations,258,https://github.com/code-423n4/2022-02-concur-findings/issues/258,concur,2022/02,bug;G (Gas Optimization);sponsor confirmed
83,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,73,https://github.com/code-423n4/2022-02-concur-findings/issues/73,concur,2022/02,bug;G (Gas Optimization)
83,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Rogue pool in Shelter,74,https://github.com/code-423n4/2022-02-concur-findings/issues/74,concur,2022/02,bug;2 (Med Risk)
83,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,The user can cause loss of tokens,75,https://github.com/code-423n4/2022-02-concur-findings/issues/75,concur,2022/02,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
83,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,User can drain Shelter contract,76,https://github.com/code-423n4/2022-02-concur-findings/issues/76,concur,2022/02,bug;duplicate;3 (High Risk)
83,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Lack of whenNotPaused in important method,78,https://github.com/code-423n4/2022-02-concur-findings/issues/78,concur,2022/02,bug;invalid;2 (Med Risk);sponsor acknowledged
83,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Incorrect logic that can lead to loss of funds,79,https://github.com/code-423n4/2022-02-concur-findings/issues/79,concur,2022/02,bug;invalid;3 (High Risk);sponsor disputed
83,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,80,https://github.com/code-423n4/2022-02-concur-findings/issues/80,concur,2022/02,bug;QA (Quality Assurance);sponsor confirmed
83,0x510c,0xEe7a76717A182537B8b8F242d749C63b73AAC4e6,G,add() in the MasterChef.sol contract is marked Public.,40,https://github.com/code-423n4/2022-02-concur-findings/issues/40,concur,2022/02,bug;G (Gas Optimization);sponsor confirmed
83,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,3,Shelter `claimed` mapping isn't checked in withdraw,102,https://github.com/code-423n4/2022-02-concur-findings/issues/102,concur,2022/02,bug;duplicate;3 (High Risk)
83,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,2,Shelter `claimed` mapping is set with `_to` address and not `msg.sender`,103,https://github.com/code-423n4/2022-02-concur-findings/issues/103,concur,2022/02,bug;3 (High Risk);sponsor confirmed
83,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,3,`rewardPerTokenStored` never resets in the StakingRewards contract,104,https://github.com/code-423n4/2022-02-concur-findings/issues/104,concur,2022/02,bug;invalid;3 (High Risk);sponsor disputed
83,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,G,Gas Optimizations,185,https://github.com/code-423n4/2022-02-concur-findings/issues/185,concur,2022/02,bug;G (Gas Optimization)
83,0xNot0rious,0x92c179DA4b3F27FA07263fEa5d8921602b6D14DE,G,Gas Optimizations,265,https://github.com/code-423n4/2022-02-concur-findings/issues/265,concur,2022/02,bug;G (Gas Optimization);sponsor confirmed
83,0xw4rd3n,0x2247dC43CdCDd4b7594f9b0bcC8117B9a6D52377,2,Reentrancy in StakingRewards.exit(),119,https://github.com/code-423n4/2022-02-concur-findings/issues/119,concur,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
83,0xw4rd3n,0x2247dC43CdCDd4b7594f9b0bcC8117B9a6D52377,3,Transfer to treasury can register as succeeded when failing in `_calcRewardIntegral`,120,https://github.com/code-423n4/2022-02-concur-findings/issues/120,concur,2022/02,bug;duplicate;2 (Med Risk)
83,0xw4rd3n,0x2247dC43CdCDd4b7594f9b0bcC8117B9a6D52377,3,Transfer to claimContract can register as succeeded when failing in `_calcRewardIntegral`,121,https://github.com/code-423n4/2022-02-concur-findings/issues/121,concur,2022/02,bug;duplicate;invalid;3 (High Risk)
83,0xw4rd3n,0x2247dC43CdCDd4b7594f9b0bcC8117B9a6D52377,2,Reentrancy in `calcRewardIntegral,122,https://github.com/code-423n4/2022-02-concur-findings/issues/122,concur,2022/02,bug;duplicate;invalid;2 (Med Risk)
83,0xw4rd3n,0x2247dC43CdCDd4b7594f9b0bcC8117B9a6D52377,2,Reentransy in `claimRewards`,123,https://github.com/code-423n4/2022-02-concur-findings/issues/123,concur,2022/02,bug;duplicate;2 (Med Risk)
83,0xw4rd3n,0x2247dC43CdCDd4b7594f9b0bcC8117B9a6D52377,2,Reentrancy in `ConvexStakingWrapper.deposit`,124,https://github.com/code-423n4/2022-02-concur-findings/issues/124,concur,2022/02,bug;invalid;2 (Med Risk);sponsor confirmed
83,0xw4rd3n,0x2247dC43CdCDd4b7594f9b0bcC8117B9a6D52377,2,Reentrancy in `USDMPegRecovery.deposit`,125,https://github.com/code-423n4/2022-02-concur-findings/issues/125,concur,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
83,0xw4rd3n,0x2247dC43CdCDd4b7594f9b0bcC8117B9a6D52377,2,Reentrancy in `ConvexStakingWrapper.withdraw`,126,https://github.com/code-423n4/2022-02-concur-findings/issues/126,concur,2022/02,bug;invalid;2 (Med Risk);sponsor confirmed
83,0xw4rd3n,0x2247dC43CdCDd4b7594f9b0bcC8117B9a6D52377,2,Missing zero checks,127,https://github.com/code-423n4/2022-02-concur-findings/issues/127,concur,2022/02,bug;QA (Quality Assurance);sponsor confirmed
83,bitbopper,0xe15f11FF2364311E0b7250AaA51A2bB4D7FBA37F,Q,QA Report,153,https://github.com/code-423n4/2022-02-concur-findings/issues/153,concur,2022/02,bug;QA (Quality Assurance)
83,bitbopper,0xe15f11FF2364311E0b7250AaA51A2bB4D7FBA37F,G,Gas Optimizations,154,https://github.com/code-423n4/2022-02-concur-findings/issues/154,concur,2022/02,bug;G (Gas Optimization)
83,bitbopper,0xe15f11FF2364311E0b7250AaA51A2bB4D7FBA37F,3,Shelter.sol can be withdrawn from multiple times,155,https://github.com/code-423n4/2022-02-concur-findings/issues/155,concur,2022/02,bug;duplicate;3 (High Risk)
83,bobi,0x8F24B7bEe60c5421101e2e596b1008522368920F,Q,QA Report,89,https://github.com/code-423n4/2022-02-concur-findings/issues/89,concur,2022/02,bug;duplicate;3 (High Risk)
83,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,G,Gas Optimization report for Concur finance,25,https://github.com/code-423n4/2022-02-concur-findings/issues/25,concur,2022/02,bug;G (Gas Optimization)
83,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,Q,QA Report for concur protocol,65,https://github.com/code-423n4/2022-02-concur-findings/issues/65,concur,2022/02,bug;QA (Quality Assurance);sponsor confirmed
83,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,No Transfer Ownership Pattern,62,https://github.com/code-423n4/2022-02-concur-findings/issues/62,concur,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
83,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"When depositToken is concur, reward calculation is incorrect",64,https://github.com/code-423n4/2022-02-concur-findings/issues/64,concur,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
83,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,"The withdraw function needs to check the claimed state variable at the beginning, and needs to set the claimed state variable for msg.sender",77,https://github.com/code-423n4/2022-02-concur-findings/issues/77,concur,2022/02,bug;duplicate;3 (High Risk)
83,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"When using add() function, it should call massUpdatePools() function to update all pools",8,https://github.com/code-423n4/2022-02-concur-findings/issues/8,concur,2022/02,bug;duplicate;3 (High Risk)
83,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,163,https://github.com/code-423n4/2022-02-concur-findings/issues/163,concur,2022/02,bug;QA (Quality Assurance)
83,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,164,https://github.com/code-423n4/2022-02-concur-findings/issues/164,concur,2022/02,bug;G (Gas Optimization)
83,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,2,Users’ staking rewards can get redeemed by other users,214,https://github.com/code-423n4/2022-02-concur-findings/issues/214,concur,2022/02,bug;duplicate;3 (High Risk)
83,CertoraInc,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,2,`pendingConcur`doesn't account for the `endBlock`,23,https://github.com/code-423n4/2022-02-concur-findings/issues/23,concur,2022/02,bug;duplicate;QA (Quality Assurance)
83,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,2,Reentrency in claimRewards in ConcurRewardPool,272,https://github.com/code-423n4/2022-02-concur-findings/issues/272,concur,2022/02,bug;duplicate;2 (Med Risk)
83,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,2,Users' funds can become locked in the contract,273,https://github.com/code-423n4/2022-02-concur-findings/issues/273,concur,2022/02,bug;duplicate;2 (Med Risk)
83,CertoraInc,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,2,`updatePool()` doesn't account for all rewards,72,https://github.com/code-423n4/2022-02-concur-findings/issues/72,concur,2022/02,bug;duplicate;2 (Med Risk)
83,ckksec,0x961D63F796Aa1fb2218fa8B5d9c06d3354773Ccd,2,Possible reentrancy in reward function,3,https://github.com/code-423n4/2022-02-concur-findings/issues/3,concur,2022/02,bug;duplicate;2 (Med Risk)
83,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Same reward token in pools can break accounting,176,https://github.com/code-423n4/2022-02-concur-findings/issues/176,concur,2022/02,bug;duplicate;3 (High Risk);sponsor confirmed
83,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Remaining reward balance is wrongly updated,177,https://github.com/code-423n4/2022-02-concur-findings/issues/177,concur,2022/02,bug;duplicate;3 (High Risk);sponsor confirmed
83,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`MasterChef.add` must update pools first,178,https://github.com/code-423n4/2022-02-concur-findings/issues/178,concur,2022/02,bug;duplicate;3 (High Risk)
83,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`MasterChef.deposit` does not pull in tokens,179,https://github.com/code-423n4/2022-02-concur-findings/issues/179,concur,2022/02,bug;duplicate;2 (Med Risk);sponsor disputed
83,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Fee-on-transfer token donations in `Shelter` break withdrawals,180,https://github.com/code-423n4/2022-02-concur-findings/issues/180,concur,2022/02,bug;2 (Med Risk);sponsor acknowledged
83,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`Shelter.claim` does not check if already `claimed`,181,https://github.com/code-423n4/2022-02-concur-findings/issues/181,concur,2022/02,bug;duplicate;3 (High Risk)
83,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Shelter sets wrong claimed field,182,https://github.com/code-423n4/2022-02-concur-findings/issues/182,concur,2022/02,bug;duplicate;3 (High Risk)
83,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`StakingRewards` reward rate can be dragged out and diluted,183,https://github.com/code-423n4/2022-02-concur-findings/issues/183,concur,2022/02,bug;2 (Med Risk);sponsor disputed
83,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`StakingRewards` reward token can be recovered,184,https://github.com/code-423n4/2022-02-concur-findings/issues/184,concur,2022/02,bug;duplicate;2 (Med Risk)
83,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,2,Unhandled return value of transfer in ConvexStakingWrapper,63,https://github.com/code-423n4/2022-02-concur-findings/issues/63,concur,2022/02,bug;QA (Quality Assurance)
83,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,Q,QA Report,81,https://github.com/code-423n4/2022-02-concur-findings/issues/81,concur,2022/02,bug;invalid;QA (Quality Assurance)
83,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas savings,24,https://github.com/code-423n4/2022-02-concur-findings/issues/24,concur,2022/02,bug;G (Gas Optimization)
83,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,Non critical & Low findings,26,https://github.com/code-423n4/2022-02-concur-findings/issues/26,concur,2022/02,bug;QA (Quality Assurance);sponsor confirmed
83,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,User fund stuck,267,https://github.com/code-423n4/2022-02-concur-findings/issues/267,concur,2022/02,bug;duplicate;2 (Med Risk)
83,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Reward lost,268,https://github.com/code-423n4/2022-02-concur-findings/issues/268,concur,2022/02,bug;duplicate;2 (Med Risk)
83,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,User can steal funds,27,https://github.com/code-423n4/2022-02-concur-findings/issues/27,concur,2022/02,bug;duplicate;3 (High Risk);sponsor confirmed
83,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Deactivate function can be bypassed,28,https://github.com/code-423n4/2022-02-concur-findings/issues/28,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Rewards are lost,29,https://github.com/code-423n4/2022-02-concur-findings/issues/29,concur,2022/02,bug;duplicate;2 (Med Risk)
83,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Incorrect pending rewards shown to user,30,https://github.com/code-423n4/2022-02-concur-findings/issues/30,concur,2022/02,bug;duplicate;QA (Quality Assurance);sponsor confirmed
83,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Incorrect deposit and withdraw,31,https://github.com/code-423n4/2022-02-concur-findings/issues/31,concur,2022/02,bug;duplicate;3 (High Risk);sponsor confirmed
83,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,Reentrancy in `ConcurRewardPool::claimRewards`,234,https://github.com/code-423n4/2022-02-concur-findings/issues/234,concur,2022/02,bug;duplicate;2 (Med Risk)
83,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,`_perMille` bad assigment,235,https://github.com/code-423n4/2022-02-concur-findings/issues/235,concur,2022/02,bug;duplicate;QA (Quality Assurance);sponsor confirmed
83,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,Shelter funds can be stolen,236,https://github.com/code-423n4/2022-02-concur-findings/issues/236,concur,2022/02,bug;duplicate;3 (High Risk)
83,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,Owner can DoS `MasterChef` rewards,237,https://github.com/code-423n4/2022-02-concur-findings/issues/237,concur,2022/02,bug;duplicate;QA (Quality Assurance);sponsor disputed
83,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,Owner can lock tokens in `MasterChef`,238,https://github.com/code-423n4/2022-02-concur-findings/issues/238,concur,2022/02,bug;2 (Med Risk)
83,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,Owner can steal Concur rewards,239,https://github.com/code-423n4/2022-02-concur-findings/issues/239,concur,2022/02,bug;2 (Med Risk);sponsor disputed
83,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,Block miscalculations,240,https://github.com/code-423n4/2022-02-concur-findings/issues/240,concur,2022/02,bug;duplicate;2 (Med Risk);sponsor confirmed
83,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,2,Block average time,241,https://github.com/code-423n4/2022-02-concur-findings/issues/241,concur,2022/02,bug;QA (Quality Assurance);sponsor disputed
83,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,2,Unconstrained fee,242,https://github.com/code-423n4/2022-02-concur-findings/issues/242,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,2,Imprecise calculations,243,https://github.com/code-423n4/2022-02-concur-findings/issues/243,concur,2022/02,bug;duplicate;QA (Quality Assurance);sponsor disputed
83,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,2,`safeConcurTransfer` can cause loss of funds,244,https://github.com/code-423n4/2022-02-concur-findings/issues/244,concur,2022/02,bug;duplicate;2 (Med Risk)
83,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,unsafe cast can lead to theft,224,https://github.com/code-423n4/2022-02-concur-findings/issues/224,concur,2022/02,bug;duplicate;2 (Med Risk);sponsor confirmed
83,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,missing whenNotPaused,225,https://github.com/code-423n4/2022-02-concur-findings/issues/225,concur,2022/02,bug;invalid;sponsor disputed
83,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,double spend in Shelter,226,https://github.com/code-423n4/2022-02-concur-findings/issues/226,concur,2022/02,bug;duplicate;3 (High Risk)
83,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,deposit wrong implementation,229,https://github.com/code-423n4/2022-02-concur-findings/issues/229,concur,2022/02,bug;duplicate;3 (High Risk);sponsor confirmed
83,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,198,https://github.com/code-423n4/2022-02-concur-findings/issues/198,concur,2022/02,bug;QA (Quality Assurance)
83,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,211,https://github.com/code-423n4/2022-02-concur-findings/issues/211,concur,2022/02,bug;G (Gas Optimization)
83,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Improper Upper Bound Definition on the depositFeeBP,274,https://github.com/code-423n4/2022-02-concur-findings/issues/274,concur,2022/02,bug;duplicate;2 (Med Risk)
83,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Missing Re-entrancy Guard,275,https://github.com/code-423n4/2022-02-concur-findings/issues/275,concur,2022/02,bug;duplicate;2 (Med Risk)
83,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,203,https://github.com/code-423n4/2022-02-concur-findings/issues/203,concur,2022/02,bug;G (Gas Optimization)
83,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Timelock for `StakingRewards.sol:recoverERC20()`,204,https://github.com/code-423n4/2022-02-concur-findings/issues/204,concur,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
83,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Consistently check account balance before and after transfers for Fee-On-Transfer discrepencies,207,https://github.com/code-423n4/2022-02-concur-findings/issues/207,concur,2022/02,bug;duplicate;2 (Med Risk);sponsor confirmed
83,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,3,Potential for reentrancy on `USDMPegRecovery.sol:withdraw()`,257,https://github.com/code-423n4/2022-02-concur-findings/issues/257,concur,2022/02,bug;invalid;3 (High Risk);sponsor disputed
83,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,263,https://github.com/code-423n4/2022-02-concur-findings/issues/263,concur,2022/02,bug;QA (Quality Assurance);sponsor confirmed
83,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Variables that should be bounded,277,https://github.com/code-423n4/2022-02-concur-findings/issues/277,concur,2022/02,bug;duplicate;2 (Med Risk)
83,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,2,Generic Re-Entrancy on `ConcurRewardPool.claimRewards`,68,https://github.com/code-423n4/2022-02-concur-findings/issues/68,concur,2022/02,bug;duplicate;2 (Med Risk);sponsor confirmed
83,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,2,StakingRewards.recoverERC20 allows owner to rug the `rewardsToken`,69,https://github.com/code-423n4/2022-02-concur-findings/issues/69,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,3,"USDMPegRecovery Risk of fund locked, due to discrepancy between curveLP token value against internal contract math",70,https://github.com/code-423n4/2022-02-concur-findings/issues/70,concur,2022/02,bug;3 (High Risk);sponsor confirmed
83,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,3,Shelter.withdraw doesn't check for  `claimed[_token][_to] ` meaning user can withdraw until contract is drained,71,https://github.com/code-423n4/2022-02-concur-findings/issues/71,concur,2022/02,bug;duplicate;3 (High Risk)
83,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,2,withdraw in Shelter.sol may lead to unwanted withdraws,112,https://github.com/code-423n4/2022-02-concur-findings/issues/112,concur,2022/02,bug;duplicate;invalid;2 (Med Risk)
83,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,3,withdraw in Shelter.sol can drain funds,114,https://github.com/code-423n4/2022-02-concur-findings/issues/114,concur,2022/02,bug;duplicate;3 (High Risk)
83,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,USDM locked unless guardian remove liquidity,187,https://github.com/code-423n4/2022-02-concur-findings/issues/187,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Imbalance and LP gain is forever stuck in USDMPegRecovery,188,https://github.com/code-423n4/2022-02-concur-findings/issues/188,concur,2022/02,bug;duplicate;3 (High Risk);sponsor confirmed
83,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Shelter `withdraw` does not check if user already claimed,189,https://github.com/code-423n4/2022-02-concur-findings/issues/189,concur,2022/02,bug;duplicate;3 (High Risk)
83,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Client can bypass GRACE_PERIOD limit in Shelter to steal donation,190,https://github.com/code-423n4/2022-02-concur-findings/issues/190,concur,2022/02,bug;duplicate;2 (Med Risk);sponsor confirmed
83,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,192,https://github.com/code-423n4/2022-02-concur-findings/issues/192,concur,2022/02,bug;G (Gas Optimization)
83,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,197,https://github.com/code-423n4/2022-02-concur-findings/issues/197,concur,2022/02,bug;QA (Quality Assurance)
83,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Cast to uint192 is unsafe,271,https://github.com/code-423n4/2022-02-concur-findings/issues/271,concur,2022/02,bug;duplicate;2 (Med Risk)
83,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,3,_calcRewardIntegral sets reward.remaining too high,132,https://github.com/code-423n4/2022-02-concur-findings/issues/132,concur,2022/02,bug;duplicate;3 (High Risk);sponsor confirmed
83,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,2,No validation on _depositFee can ruin contract,143,https://github.com/code-423n4/2022-02-concur-findings/issues/143,concur,2022/02,bug;duplicate;2 (Med Risk);sponsor confirmed
83,harleythedog,0xB958d9FA0417E116F446D0A06D0326805Ad73Bd5,2,Unchecked transfers,145,https://github.com/code-423n4/2022-02-concur-findings/issues/145,concur,2022/02,bug;QA (Quality Assurance)
83,Heartless,0x107030b1e30a4022b5a886ac8b1fdad18b829788,0,Checks-Effects-Interactions Pattern Violation - ConcurRewardPool.claimRewards,1,https://github.com/code-423n4/2022-02-concur-findings/issues/1,concur,2022/02,bug;duplicate;2 (Med Risk)
83,Heartless,0x107030b1e30a4022b5a886ac8b1fdad18b829788,G,Mark ConvexStakingWrapper.addRewards as External,2,https://github.com/code-423n4/2022-02-concur-findings/issues/2,concur,2022/02,bug;G (Gas Optimization);sponsor confirmed
83,Heartless,0x107030B1E30a4022b5a886ac8b1FDAd18B829788,2,Unsafe casts in ConvexStakingWrapper,4,https://github.com/code-423n4/2022-02-concur-findings/issues/4,concur,2022/02,bug;duplicate;2 (Med Risk)
83,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,Q,QA Report,128,https://github.com/code-423n4/2022-02-concur-findings/issues/128,concur,2022/02,bug;QA (Quality Assurance)
83,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Gas Optimizations,129,https://github.com/code-423n4/2022-02-concur-findings/issues/129,concur,2022/02,bug;G (Gas Optimization)
83,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,Masterchef: add() does not check if _depositFee exceeds _perMille,130,https://github.com/code-423n4/2022-02-concur-findings/issues/130,concur,2022/02,bug;duplicate;2 (Med Risk)
83,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,Masterchef: Lack of check on endBlock can cause concur tokens to be permanently locked up,131,https://github.com/code-423n4/2022-02-concur-findings/issues/131,concur,2022/02,bug;duplicate;2 (Med Risk)
83,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Masterchef: Incorrect lpSupply derivation,133,https://github.com/code-423n4/2022-02-concur-findings/issues/133,concur,2022/02,bug;duplicate;3 (High Risk)
83,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Masterchef: Incorrect party used for UserInfo retrieval in deposit(),134,https://github.com/code-423n4/2022-02-concur-findings/issues/134,concur,2022/02,bug;duplicate;3 (High Risk)
83,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Masterchef: Incorrect party used for UserInfo retrieval in withdraw(),135,https://github.com/code-423n4/2022-02-concur-findings/issues/135,concur,2022/02,bug;duplicate;3 (High Risk)
83,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Masterchef: Ensure non-zero pid in deposit() and withdraw(),136,https://github.com/code-423n4/2022-02-concur-findings/issues/136,concur,2022/02,bug;duplicate;QA (Quality Assurance);sponsor confirmed
83,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Masterchef: Incompatible units of measurement for depositFee ,137,https://github.com/code-423n4/2022-02-concur-findings/issues/137,concur,2022/02,bug;duplicate;QA (Quality Assurance);sponsor confirmed
83,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Masterchef: Improper handling of deposit fee,138,https://github.com/code-423n4/2022-02-concur-findings/issues/138,concur,2022/02,bug;3 (High Risk);sponsor confirmed
83,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Masterchef: Pool rewards not updated if endBlock exceeded but last update done before endBlock,139,https://github.com/code-423n4/2022-02-concur-findings/issues/139,concur,2022/02,bug;duplicate;2 (Med Risk)
83,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,ConvexStakingWrapper: bal not updated after transfers to treasury and claimContract,140,https://github.com/code-423n4/2022-02-concur-findings/issues/140,concur,2022/02,bug;duplicate;3 (High Risk);sponsor confirmed
83,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Shelter: Withdrawals to multiple addresses allowed,141,https://github.com/code-423n4/2022-02-concur-findings/issues/141,concur,2022/02,bug;duplicate;3 (High Risk)
83,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Shelter: Multiple withdrawals allowed,142,https://github.com/code-423n4/2022-02-concur-findings/issues/142,concur,2022/02,bug;duplicate;invalid;3 (High Risk)
83,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,Q,QA Report,202,https://github.com/code-423n4/2022-02-concur-findings/issues/202,concur,2022/02,bug;QA (Quality Assurance)
83,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,"During stake or deposit, users would not be rewared the correct Concur token, when MasterChef has under-supply of it.",262,https://github.com/code-423n4/2022-02-concur-findings/issues/262,concur,2022/02,bug;2 (Med Risk);sponsor acknowledged
83,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,"StakingRewards.setRewardsDuration allows setting near zero or enormous rewardsDuration, which breaks reward logic",223,https://github.com/code-423n4/2022-02-concur-findings/issues/223,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,Q,QA Report,227,https://github.com/code-423n4/2022-02-concur-findings/issues/227,concur,2022/02,bug;QA (Quality Assurance)
83,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,ConvexStakingWrapper deposits and withdraws will frequently be disabled if a token that doesn't allow zero value transfers will be added as a reward one,231,https://github.com/code-423n4/2022-02-concur-findings/issues/231,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,hyh,0x8efe50a4b8c8b64fdc93a5b1712fd735d8223cd5,3,Shelter.withdraw allows for repetitive withdrawals,43,https://github.com/code-423n4/2022-02-concur-findings/issues/43,concur,2022/02,bug;duplicate;3 (High Risk)
83,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,Unsafe arbitrary reward token transfer is used in ConvexStakingWrapper._calcRewardIntegral,88,https://github.com/code-423n4/2022-02-concur-findings/issues/88,concur,2022/02,bug;duplicate;QA (Quality Assurance)
83,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,claimRewards can fail for ERC20 tokens that do not allow zero value transfers,90,https://github.com/code-423n4/2022-02-concur-findings/issues/90,concur,2022/02,bug;duplicate;QA (Quality Assurance)
83,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,Clients cannot deposit or withdraw funds,157,https://github.com/code-423n4/2022-02-concur-findings/issues/157,concur,2022/02,bug;invalid;3 (High Risk);sponsor disputed
83,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Fee-on-transfer/deflationary tokens cause problems,158,https://github.com/code-423n4/2022-02-concur-findings/issues/158,concur,2022/02,bug;duplicate;2 (Med Risk);sponsor acknowledged
83,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Reentrancy allows pool rewards to be drained for recipient-callback tokens,159,https://github.com/code-423n4/2022-02-concur-findings/issues/159,concur,2022/02,bug;duplicate;2 (Med Risk)
83,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Forcing IERC20 when calling `transfer()` reverts when used with some ERC20 tokens,160,https://github.com/code-423n4/2022-02-concur-findings/issues/160,concur,2022/02,bug;duplicate;invalid;2 (Med Risk)
83,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,161,https://github.com/code-423n4/2022-02-concur-findings/issues/161,concur,2022/02,bug;QA (Quality Assurance)
83,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Missing checks of return value of `transfer()`,165,https://github.com/code-423n4/2022-02-concur-findings/issues/165,concur,2022/02,bug;duplicate;QA (Quality Assurance)
83,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,`USDMPegRecovery` does not account for fees,172,https://github.com/code-423n4/2022-02-concur-findings/issues/172,concur,2022/02,bug;duplicate;3 (High Risk)
83,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,259,https://github.com/code-423n4/2022-02-concur-findings/issues/259,concur,2022/02,bug;duplicate;G (Gas Optimization)
83,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,claimRewards() function does not revert if msg.sender does not have rewards in mapping,22,https://github.com/code-423n4/2022-02-concur-findings/issues/22,concur,2022/02,bug;duplicate;invalid;2 (Med Risk)
83,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Gas Optimizations,110,https://github.com/code-423n4/2022-02-concur-findings/issues/110,concur,2022/02,bug;G (Gas Optimization)
83,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,The owner can block user withdraws,156,https://github.com/code-423n4/2022-02-concur-findings/issues/156,concur,2022/02,bug;duplicate;2 (Med Risk);sponsor disputed
83,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,3,Reentrancy attack is possible,162,https://github.com/code-423n4/2022-02-concur-findings/issues/162,concur,2022/02,bug;duplicate;2 (Med Risk)
83,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,G,Gas optimization for timestamp ,16,https://github.com/code-423n4/2022-02-concur-findings/issues/16,concur,2022/02,bug;invalid;G (Gas Optimization)
83,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,G,Gas Optimizations,169,https://github.com/code-423n4/2022-02-concur-findings/issues/169,concur,2022/02,bug;G (Gas Optimization)
83,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,G,Gas Optimizations,170,https://github.com/code-423n4/2022-02-concur-findings/issues/170,concur,2022/02,bug;invalid;G (Gas Optimization)
83,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,Q,QA Report,171,https://github.com/code-423n4/2022-02-concur-findings/issues/171,concur,2022/02,bug;QA (Quality Assurance)
83,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,0,Unnecessary struct,35,https://github.com/code-423n4/2022-02-concur-findings/issues/35,concur,2022/02,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
83,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,G,Use storage can save gas.,38,https://github.com/code-423n4/2022-02-concur-findings/issues/38,concur,2022/02,bug;duplicate;G (Gas Optimization);sponsor confirmed
83,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,G,Check amount at the beginning of code must save gas in deposit()/ConvexStakingWrapper.sol.,39,https://github.com/code-423n4/2022-02-concur-findings/issues/39,concur,2022/02,bug;duplicate;G (Gas Optimization)
83,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,Q,Unchecked return value IERC20(addr).transfer,55,https://github.com/code-423n4/2022-02-concur-findings/issues/55,concur,2022/02,bug;duplicate;QA (Quality Assurance)
83,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,G,uint256 i = 0 in for loop. uint256 is default 0.,58,https://github.com/code-423n4/2022-02-concur-findings/issues/58,concur,2022/02,bug;G (Gas Optimization);sponsor confirmed
83,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,3,Reentrancy When Withdrawing Rewards Allows An Attacker To Drain Entire Balance,18,https://github.com/code-423n4/2022-02-concur-findings/issues/18,concur,2022/02,bug;duplicate;2 (Med Risk)
83,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Rounding in `_calcRewardIntegral()` Leaks Tokens,19,https://github.com/code-423n4/2022-02-concur-findings/issues/19,concur,2022/02,bug;QA (Quality Assurance)
83,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,3,Invalid Accounting Locks Reward Tokens and Revert Future Calls,20,https://github.com/code-423n4/2022-02-concur-findings/issues/20,concur,2022/02,bug;duplicate;3 (High Risk);sponsor confirmed
83,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,3,Reward Calculations Do Not Account for Multiple `pid` with the Same Reward Tokens,21,https://github.com/code-423n4/2022-02-concur-findings/issues/21,concur,2022/02,bug;duplicate;3 (High Risk);sponsor acknowledged
83,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,3,Reentracy of Withdrawal from USD Peg,82,https://github.com/code-423n4/2022-02-concur-findings/issues/82,concur,2022/02,bug;invalid;3 (High Risk);sponsor disputed
83,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,3,Incorrect Accounting of Rewards Results in Lost Rewards,92,https://github.com/code-423n4/2022-02-concur-findings/issues/92,concur,2022/02,bug;duplicate;2 (Med Risk)
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,`MasterChef` Incorrectly Treats `_msgSender` As The User When Distributing Concur Rewards,100,https://github.com/code-423n4/2022-02-concur-findings/issues/100,concur,2022/02,bug;duplicate;3 (High Risk)
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,`MasterChef` Uses Outdated Pool Values And Can Be Abused To Receive Concur Tokens At No Cost,101,https://github.com/code-423n4/2022-02-concur-findings/issues/101,concur,2022/02,bug;invalid;3 (High Risk);sponsor confirmed
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,`MasterChef.deposit` Does Not Allow The Contract Owner To Receive `depositFee`,105,https://github.com/code-423n4/2022-02-concur-findings/issues/105,concur,2022/02,bug;duplicate;3 (High Risk)
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,`MasterChef.add()` Does Not Call `massUpdatePools` To Ensure Stale Pools Are Not Disadvantaged By The Change In `totalAllocPoint`,106,https://github.com/code-423n4/2022-02-concur-findings/issues/106,concur,2022/02,bug;duplicate;3 (High Risk)
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,`MasterChef.updatePool()` Fails To Update Reward Variables If `block.number >= endBlock`,107,https://github.com/code-423n4/2022-02-concur-findings/issues/107,concur,2022/02,bug;2 (Med Risk)
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,`MasterChef.updatePool()` Will Always Fail To Distribute Rewards,108,https://github.com/code-423n4/2022-02-concur-findings/issues/108,concur,2022/02,bug;duplicate;3 (High Risk)
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,`ConvexStakingWrapper.enterShelter()` May Erroneously Overwrite `amountInShelter` Leading To Locked Tokens,109,https://github.com/code-423n4/2022-02-concur-findings/issues/109,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,Users Will Lose Rewards If The Shelter Mechanism Is Enacted Before A Recent Checkpoint,115,https://github.com/code-423n4/2022-02-concur-findings/issues/115,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,Users Will Lose Concur Rewards If The Shelter Mechanism Is Enacted On A Pool,116,https://github.com/code-423n4/2022-02-concur-findings/issues/116,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,If The Staking Token Exists In Both `StakingRewards.sol` And `ConvexStakingWrapper.sol` Then It Will Be Possible To Continue Claiming Concur Rewards After The Shelter Has Been Activated,117,https://github.com/code-423n4/2022-02-concur-findings/issues/117,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,"`ConvexStakingWrapper.exitShelter()` Will Lock LP Tokens, Preventing Users From Withdrawing",144,https://github.com/code-423n4/2022-02-concur-findings/issues/144,concur,2022/02,bug;3 (High Risk);sponsor confirmed
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,`ConvexStakingWrapper._calcRewardIntegral()` Can Be Manipulated To Steal Tokens From Other Pools,146,https://github.com/code-423n4/2022-02-concur-findings/issues/146,concur,2022/02,bug;3 (High Risk);sponsor confirmed
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,`ConvexStakingWrapper._calcRewardIntegral()` Has An Accounting Error When Updating `reward.remaining`,166,https://github.com/code-423n4/2022-02-concur-findings/issues/166,concur,2022/02,bug;duplicate;3 (High Risk);sponsor confirmed
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,Donated Tokens Cannot Be Recovered If A Shelter Is Deactivated,173,https://github.com/code-423n4/2022-02-concur-findings/issues/173,concur,2022/02,bug;2 (Med Risk);sponsor acknowledged
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,`USDMPegRecovery` Will Most Certainly Lead To Failed Withdrawals When All Supplied Liquidity Is Removed,93,https://github.com/code-423n4/2022-02-concur-findings/issues/93,concur,2022/02,bug;duplicate;3 (High Risk);sponsor confirmed
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,`USDMPegRecovery.provide()` Will Fail If There Is An Excess Of `usdm` Tokens,94,https://github.com/code-423n4/2022-02-concur-findings/issues/94,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,`ConcurRewardPool.claimRewards()` Is Prone To Reentrancy If Any Reward Token Conforms To The `ERC777` Token Standard,95,https://github.com/code-423n4/2022-02-concur-findings/issues/95,concur,2022/02,bug;duplicate;2 (Med Risk)
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,`Shelter.withdraw()` Does Not Check If A User Has Already Claimed Their Share Of Tokens,96,https://github.com/code-423n4/2022-02-concur-findings/issues/96,concur,2022/02,bug;duplicate;3 (High Risk)
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,3,Users Can Claim Tokens Multiple Times By Changing The `_to` Address,97,https://github.com/code-423n4/2022-02-concur-findings/issues/97,concur,2022/02,bug;duplicate;3 (High Risk)
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,Users Can Deny Other Users From Calling `Shelter.withdraw()` ,98,https://github.com/code-423n4/2022-02-concur-findings/issues/98,concur,2022/02,bug;QA (Quality Assurance)
83,leastwood,0xeD7DF3fA78052060e76b5E12e1f76Cef2BB65d26,2,`StakingRewards.notifyRewardAmount()` Does Not Implement Withdrawal Delays And Pausable Mechanisms,99,https://github.com/code-423n4/2022-02-concur-findings/issues/99,concur,2022/02,bug;invalid;2 (Med Risk);sponsor confirmed
83,mtz,0x602411A87ff854A9565e72A88a53c8b17dA3509d,3,Repeated Calls to Shelter.withdraw Can Drain All Funds in Shelter,246,https://github.com/code-423n4/2022-02-concur-findings/issues/246,concur,2022/02,bug;3 (High Risk);sponsor confirmed
83,mtz,0x602411A87ff854A9565e72A88a53c8b17dA3509d,Q,QA Report,253,https://github.com/code-423n4/2022-02-concur-findings/issues/253,concur,2022/02,bug;QA (Quality Assurance);sponsor confirmed
83,mtz,0x602411A87ff854A9565e72A88a53c8b17dA3509d,G,Gas Optimizations,255,https://github.com/code-423n4/2022-02-concur-findings/issues/255,concur,2022/02,bug;G (Gas Optimization)
83,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Re-entrancy vulnerabilities,249,https://github.com/code-423n4/2022-02-concur-findings/issues/249,concur,2022/02,bug;duplicate;2 (Med Risk)
83,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,Repeated withdrawals from Shelter,250,https://github.com/code-423n4/2022-02-concur-findings/issues/250,concur,2022/02,bug;duplicate;invalid;3 (High Risk)
83,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Deposits after the grace period should not be allowed,251,https://github.com/code-423n4/2022-02-concur-findings/issues/251,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,claimed of _to set to true,252,https://github.com/code-423n4/2022-02-concur-findings/issues/252,concur,2022/02,bug;duplicate;3 (High Risk)
83,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,Q,QA Report,254,https://github.com/code-423n4/2022-02-concur-findings/issues/254,concur,2022/02,bug;QA (Quality Assurance);sponsor confirmed
83,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Gas Optimizations,256,https://github.com/code-423n4/2022-02-concur-findings/issues/256,concur,2022/02,bug;G (Gas Optimization);sponsor confirmed
83,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Function `recoverERC20` in StakingRewards allows an owner to transfer out any token except `stakingToken`,278,https://github.com/code-423n4/2022-02-concur-findings/issues/278,concur,2022/02,bug;duplicate;2 (Med Risk)
83,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,You should use safe casts here,279,https://github.com/code-423n4/2022-02-concur-findings/issues/279,concur,2022/02,bug;duplicate;2 (Med Risk)
83,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,Q,QA Report,118,https://github.com/code-423n4/2022-02-concur-findings/issues/118,concur,2022/02,bug;duplicate;2 (Med Risk)
83,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,3,ERC20 return values not checked,201,https://github.com/code-423n4/2022-02-concur-findings/issues/201,concur,2022/02,bug;QA (Quality Assurance)
83,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,G,Gas Optimizations,228,https://github.com/code-423n4/2022-02-concur-findings/issues/228,concur,2022/02,bug;G (Gas Optimization)
83,Randyyy,0x8a59f36d7d44460418781ded3d1cA45e19F2Ab02,Q,QA Report,230,https://github.com/code-423n4/2022-02-concur-findings/issues/230,concur,2022/02,bug;QA (Quality Assurance);sponsor confirmed
83,Randyyy,0x8a59f36d7d44460418781ded3d1cA45e19F2Ab02,3,missing check on claimed token,232,https://github.com/code-423n4/2022-02-concur-findings/issues/232,concur,2022/02,bug;duplicate;3 (High Risk)
83,Randyyy,0x8a59f36d7d44460418781ded3d1cA45e19F2Ab02,G,Gas Optimizations,233,https://github.com/code-423n4/2022-02-concur-findings/issues/233,concur,2022/02,bug;G (Gas Optimization);sponsor confirmed
83,Randyyy,0x8a59f36d7d44460418781ded3d1cA45e19F2Ab02,2,`claimRewards()` didnt follow the safe check effect pattern,276,https://github.com/code-423n4/2022-02-concur-findings/issues/276,concur,2022/02,bug;duplicate;2 (Med Risk)
83,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,2,Re-entrancy through reward ERC777 and ERC1155 tokens hooks,32,https://github.com/code-423n4/2022-02-concur-findings/issues/32,concur,2022/02,bug;duplicate;2 (Med Risk)
83,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,2,Shelter donate function - missing check for grace period elapse,61,https://github.com/code-423n4/2022-02-concur-findings/issues/61,concur,2022/02,bug;duplicate;2 (Med Risk);sponsor confirmed
83,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,247,https://github.com/code-423n4/2022-02-concur-findings/issues/247,concur,2022/02,bug;G (Gas Optimization);sponsor confirmed
83,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,Q,QA Report,248,https://github.com/code-423n4/2022-02-concur-findings/issues/248,concur,2022/02,bug;QA (Quality Assurance)
83,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,2,no function which can set bool `unlockable` to false,42,https://github.com/code-423n4/2022-02-concur-findings/issues/42,concur,2022/02,bug;invalid;sponsor disputed
83,Rhynorater,0xF84f301891Fe36BAF4B056290B528814dCD83B51,3,Potential Re-entrancy Attack via ETH or ERC777 Token Transfer,260,https://github.com/code-423n4/2022-02-concur-findings/issues/260,concur,2022/02,bug;duplicate;2 (Med Risk);sponsor confirmed
83,Rhynorater,0xF84f301891Fe36BAF4B056290B528814dCD83B51,Q,QA Report,261,https://github.com/code-423n4/2022-02-concur-findings/issues/261,concur,2022/02,bug;duplicate;QA (Quality Assurance)
83,Rhynorater,0xF84f301891Fe36BAF4B056290B528814dCD83B51,3,All Tokens Can Be Stolen From Shelter Contract,264,https://github.com/code-423n4/2022-02-concur-findings/issues/264,concur,2022/02,bug;duplicate;3 (High Risk);sponsor confirmed
83,Rhynorater,0xF84f301891Fe36BAF4B056290B528814dCD83B51,Q,QA Report,266,https://github.com/code-423n4/2022-02-concur-findings/issues/266,concur,2022/02,bug;invalid;QA (Quality Assurance);sponsor confirmed
83,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Report,44,https://github.com/code-423n4/2022-02-concur-findings/issues/44,concur,2022/02,bug;G (Gas Optimization);sponsor confirmed
83,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,45,https://github.com/code-423n4/2022-02-concur-findings/issues/45,concur,2022/02,bug;QA (Quality Assurance)
83,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Title: Must approve 0 first,46,https://github.com/code-423n4/2022-02-concur-findings/issues/46,concur,2022/02,bug;invalid;2 (Med Risk)
83,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Unbounded loop on array that can only grow can lead to DoS,47,https://github.com/code-423n4/2022-02-concur-findings/issues/47,concur,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
83,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,3,Function calls twice to a nonReentrant function,48,https://github.com/code-423n4/2022-02-concur-findings/issues/48,concur,2022/02,bug;invalid;3 (High Risk);sponsor disputed
83,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Div by 0,49,https://github.com/code-423n4/2022-02-concur-findings/issues/49,concur,2022/02,bug;invalid;2 (Med Risk);sponsor confirmed
83,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Shelter donations result in wrong internal balance if fee-on-transfer token is used,270,https://github.com/code-423n4/2022-02-concur-findings/issues/270,concur,2022/02,bug;duplicate;2 (Med Risk)
83,Ruhum,https://polygonscan.com/address/0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,User looses their pending rewards when calling `StakingRewards.exit()`,59,https://github.com/code-423n4/2022-02-concur-findings/issues/59,concur,2022/02,bug;invalid;3 (High Risk);sponsor confirmed
83,Ruhum,https://polygonscan.com/address/0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,`Shelter.withdraw()` allows a user to withdraw multiple times,60,https://github.com/code-423n4/2022-02-concur-findings/issues/60,concur,2022/02,bug;duplicate;3 (High Risk)
83,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,66,https://github.com/code-423n4/2022-02-concur-findings/issues/66,concur,2022/02,bug;QA (Quality Assurance);sponsor confirmed
83,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,G,Gas Optimizations,67,https://github.com/code-423n4/2022-02-concur-findings/issues/67,concur,2022/02,bug;G (Gas Optimization);sponsor confirmed
83,sabtikw,0xDA062abA66ECCD16f293D7fa22335b9AF335cAE0,G,Gas Optimization report,41,https://github.com/code-423n4/2022-02-concur-findings/issues/41,concur,2022/02,bug;G (Gas Optimization)
83,samruna,0x6431AF0193561EA15db772145472564cb2DfFd0c,2,Unused function,10,https://github.com/code-423n4/2022-02-concur-findings/issues/10,concur,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
83,samruna,0x6431AF0193561EA15db772145472564cb2DfFd0c,2,Duplicate zero check,11,https://github.com/code-423n4/2022-02-concur-findings/issues/11,concur,2022/02,bug;invalid;2 (Med Risk);sponsor acknowledged
83,samruna,0x6431AF0193561EA15db772145472564cb2DfFd0c,2,Remove unused functions,12,https://github.com/code-423n4/2022-02-concur-findings/issues/12,concur,2022/02,bug;invalid;sponsor disputed
83,samruna,0x6431AF0193561EA15db772145472564cb2DfFd0c,2,setRewardDuration lack zero input validation,13,https://github.com/code-423n4/2022-02-concur-findings/issues/13,concur,2022/02,bug;QA (Quality Assurance);disagree with severity
83,samruna,0x6431AF0193561EA15db772145472564cb2DfFd0c,3,Missing zero check,14,https://github.com/code-423n4/2022-02-concur-findings/issues/14,concur,2022/02,bug;invalid;3 (High Risk);sponsor disputed
83,samruna,0x6431AF0193561EA15db772145472564cb2DfFd0c,2,Missing event for transfer,15,https://github.com/code-423n4/2022-02-concur-findings/issues/15,concur,2022/02,bug;duplicate;QA (Quality Assurance);sponsor disputed
83,samruna,0x6431AF0193561EA15db772145472564cb2DfFd0c,2,Optimization of getReward() function,5,https://github.com/code-423n4/2022-02-concur-findings/issues/5,concur,2022/02,bug;invalid;sponsor confirmed
83,samruna,0x6431AF0193561EA15db772145472564cb2DfFd0c,2,Add zero check to pushreward,6,https://github.com/code-423n4/2022-02-concur-findings/issues/6,concur,2022/02,bug;invalid;2 (Med Risk);disagree with severity;sponsor confirmed
83,samruna,0x6431AF0193561EA15db772145472564cb2DfFd0c,Q,Improve code readability,7,https://github.com/code-423n4/2022-02-concur-findings/issues/7,concur,2022/02,bug;duplicate;QA (Quality Assurance);sponsor disputed
83,samruna,0x6431AF0193561EA15db772145472564cb2DfFd0c,Q,Improve code,9,https://github.com/code-423n4/2022-02-concur-findings/issues/9,concur,2022/02,bug;duplicate;QA (Quality Assurance);sponsor confirmed
83,ShadowyNoobDev,0x902770CAAc48a72054aeB120Cd478fB8A28A0CE7,G,Gas Optimizations,84,https://github.com/code-423n4/2022-02-concur-findings/issues/84,concur,2022/02,bug;G (Gas Optimization)
83,ShadowyNoobDev,0x902770CAAc48a72054aeB120Cd478fB8A28A0CE7,Q,QA Report,85,https://github.com/code-423n4/2022-02-concur-findings/issues/85,concur,2022/02,bug;QA (Quality Assurance)
83,ShadowyNoobDev,0x902770CAAc48a72054aeB120Cd478fB8A28A0CE7,2,[ConcurRewardPool] Possible reentrancy when claiming rewards,86,https://github.com/code-423n4/2022-02-concur-findings/issues/86,concur,2022/02,bug;duplicate;2 (Med Risk)
83,ShadowyNoobDev,0x902770CAAc48a72054aeB120Cd478fB8A28A0CE7,3,[Shelter] Withdraw doesn’t check that claimant has withdrawn. ,87,https://github.com/code-423n4/2022-02-concur-findings/issues/87,concur,2022/02,bug;duplicate;3 (High Risk)
83,Sleepy,0x0b8e21d798df1c25d03f34ba61df5991057ee935,2,Potential re-entrancy,113,https://github.com/code-423n4/2022-02-concur-findings/issues/113,concur,2022/02,bug;duplicate;2 (Med Risk)
83,Sleepy,0x0b8e21d798df1c25d03f34ba61df5991057ee935,G,Gas Optimizations,168,https://github.com/code-423n4/2022-02-concur-findings/issues/168,concur,2022/02,bug;G (Gas Optimization)
83,Sleepy,0x0b8e21d798df1c25d03f34ba61df5991057ee935,Q,QA Report,186,https://github.com/code-423n4/2022-02-concur-findings/issues/186,concur,2022/02,bug;QA (Quality Assurance)
83,Sleepy,0x0b8e21d798df1c25d03f34ba61df5991057ee935,Q,QA Report,195,https://github.com/code-423n4/2022-02-concur-findings/issues/195,concur,2022/02,bug;duplicate;QA (Quality Assurance)
83,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,3,Reentrancy in claimRewards function,111,https://github.com/code-423n4/2022-02-concur-findings/issues/111,concur,2022/02,bug;duplicate;2 (Med Risk)
83,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,3,Reentrancy in deactivate function,147,https://github.com/code-423n4/2022-02-concur-findings/issues/147,concur,2022/02,bug;invalid;3 (High Risk);sponsor disputed
83,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,3,Reentrancy in withdraw function,148,https://github.com/code-423n4/2022-02-concur-findings/issues/148,concur,2022/02,bug;duplicate;2 (Med Risk)
83,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,2,Modifier Modifying State,149,https://github.com/code-423n4/2022-02-concur-findings/issues/149,concur,2022/02,bug;duplicate;QA (Quality Assurance);sponsor disputed
83,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,2,"Logical issue in stake, withdraw, notifyRewardAmount, and getReward functions",150,https://github.com/code-423n4/2022-02-concur-findings/issues/150,concur,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
83,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,3,Reentrancy in withdraw function in USDMPegRecovery.sol,151,https://github.com/code-423n4/2022-02-concur-findings/issues/151,concur,2022/02,bug;invalid;3 (High Risk);sponsor disputed
83,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,2,Multiple important functions are missing pausable checks,152,https://github.com/code-423n4/2022-02-concur-findings/issues/152,concur,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
83,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,Q,QA Report,215,https://github.com/code-423n4/2022-02-concur-findings/issues/215,concur,2022/02,bug;QA (Quality Assurance)
83,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,G,Gas Optimizations,218,https://github.com/code-423n4/2022-02-concur-findings/issues/218,concur,2022/02,bug;G (Gas Optimization)
83,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Gas Optimizations,167,https://github.com/code-423n4/2022-02-concur-findings/issues/167,concur,2022/02,bug;G (Gas Optimization)
83,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,Q,QA Report,174,https://github.com/code-423n4/2022-02-concur-findings/issues/174,concur,2022/02,bug;QA (Quality Assurance)
83,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,3,Wrong reward token calculation in MasterChef contract,219,https://github.com/code-423n4/2022-02-concur-findings/issues/219,concur,2022/02,bug;3 (High Risk);sponsor confirmed
83,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,3,Rewards get diluted because `totalAllocPoint` can only increase.,221,https://github.com/code-423n4/2022-02-concur-findings/issues/221,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,2,Unbounded fee param,222,https://github.com/code-423n4/2022-02-concur-findings/issues/222,concur,2022/02,bug;duplicate;2 (Med Risk);sponsor confirmed
83,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,245,https://github.com/code-423n4/2022-02-concur-findings/issues/245,concur,2022/02,bug;G (Gas Optimization);sponsor confirmed
83,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M0] `USDMPegRecovery.sol#provide()` Improper design/implementation make it often unable to add liquidity to the `usdm3crv` pool,191,https://github.com/code-423n4/2022-02-concur-findings/issues/191,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H1] Rewards distribution can be disrupted by a early user,193,https://github.com/code-423n4/2022-02-concur-findings/issues/193,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H2] `ConvexStakingWrapper#deposit()` depositors may lose their funds when the `_amount` is huge,194,https://github.com/code-423n4/2022-02-concur-findings/issues/194,concur,2022/02,bug;duplicate;2 (Med Risk)
83,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H5] `ConvexStakingWrapper.sol#withdraw()` Use of non-existing method on `convexPool[_pid]` makes `withdraw()` always reverts,196,https://github.com/code-423n4/2022-02-concur-findings/issues/196,concur,2022/02,bug;duplicate;3 (High Risk);sponsor confirmed
83,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H8] `ConvexStakingWrapper.sol#_calcRewardIntegral` Wrong implementation can disrupt rewards calculation and distribution,199,https://github.com/code-423n4/2022-02-concur-findings/issues/199,concur,2022/02,bug;3 (High Risk);sponsor confirmed
83,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H13] `MasterChef.sol` Users won't be able to receive the `concur` rewards,200,https://github.com/code-423n4/2022-02-concur-findings/issues/200,concur,2022/02,bug;3 (High Risk);sponsor confirmed
83,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"[WP-H14] `ConvexStakingWrapper`, `StakingRewards` Wrong implementation will send `concur` rewards to the wrong receiver",205,https://github.com/code-423n4/2022-02-concur-findings/issues/205,concur,2022/02,bug;3 (High Risk)
83,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H15] `MasterChef.sol` Part of the `concur` rewards won't be distributed due to the wrong implementation of `endBlock`,206,https://github.com/code-423n4/2022-02-concur-findings/issues/206,concur,2022/02,bug;duplicate;2 (Med Risk)
83,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H16]  `MasterChef.sol` A `depositor` can deposit an arbitrary amount without no cost,208,https://github.com/code-423n4/2022-02-concur-findings/issues/208,concur,2022/02,bug;2 (Med Risk);sponsor disputed
83,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H28] `StakingRewards.sol#notifyRewardAmount()` Improper reward balance checks can make some users unable to withdraw their rewards,209,https://github.com/code-423n4/2022-02-concur-findings/issues/209,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H29] `StakingRewards.sol` `recoverERC20()` can be used as a backdoor by the `owner` to retrieve `rewardsToken`,210,https://github.com/code-423n4/2022-02-concur-findings/issues/210,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M17] `USDMPegRecovery.sol#withdraw()` withdraw may often fail,212,https://github.com/code-423n4/2022-02-concur-findings/issues/212,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M22] `StakingRewards.sol#stake()` Tokens with fee on transfer are not supported,213,https://github.com/code-423n4/2022-02-concur-findings/issues/213,concur,2022/02,bug;duplicate;QA (Quality Assurance);sponsor disputed
83,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Gas Optimizations,216,https://github.com/code-423n4/2022-02-concur-findings/issues/216,concur,2022/02,bug;G (Gas Optimization)
83,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,Q,QA Report,217,https://github.com/code-423n4/2022-02-concur-findings/issues/217,concur,2022/02,bug;QA (Quality Assurance)
83,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,2,execute in VoteProxy should be payable,17,https://github.com/code-423n4/2022-02-concur-findings/issues/17,concur,2022/02,bug;2 (Med Risk);sponsor confirmed
83,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,2,Potential reentrance in `claimRewards`,269,https://github.com/code-423n4/2022-02-concur-findings/issues/269,concur,2022/02,bug;duplicate;2 (Med Risk)
83,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,3,deposit in ConvexStakingWrapper will most certainly revert,33,https://github.com/code-423n4/2022-02-concur-findings/issues/33,concur,2022/02,bug;3 (High Risk);sponsor confirmed
83,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,3,withdraw in ConvexStakingWrapper will most certainly revert,34,https://github.com/code-423n4/2022-02-concur-findings/issues/34,concur,2022/02,bug;invalid;3 (High Risk);sponsor confirmed
83,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,Q,QA report,36,https://github.com/code-423n4/2022-02-concur-findings/issues/36,concur,2022/02,bug;QA (Quality Assurance)
83,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,G,Gas report,37,https://github.com/code-423n4/2022-02-concur-findings/issues/37,concur,2022/02,bug;G (Gas Optimization);sponsor confirmed
83,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,3,A portion of reward lock in ConcurRewardPool,83,https://github.com/code-423n4/2022-02-concur-findings/issues/83,concur,2022/02,bug;duplicate;QA (Quality Assurance);sponsor confirmed
83,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,Q,QA Report,220,https://github.com/code-423n4/2022-02-concur-findings/issues/220,concur,2022/02,bug;QA (Quality Assurance)
83,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Gas Optimizations,91,https://github.com/code-423n4/2022-02-concur-findings/issues/91,concur,2022/02,bug;G (Gas Optimization)
94,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Signature reusable over different networks.,13,https://github.com/code-423n4/2022-02-foundation-findings/issues/13,foundation,2022/02,bug;QA (Quality Assurance);disagree with severity;sponsor acknowledged
94,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Approve race condition in FETH,14,https://github.com/code-423n4/2022-02-foundation-findings/issues/14,foundation,2022/02,bug;2 (Med Risk);sponsor acknowledged
94,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,15,https://github.com/code-423n4/2022-02-foundation-findings/issues/15,foundation,2022/02,bug;G (Gas Optimization)
94,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,3,`_autoAcceptOffer` doesn't check if caller of setBuyPrice owns the NFT,22,https://github.com/code-423n4/2022-02-foundation-findings/issues/22,foundation,2022/02,bug;invalid;3 (High Risk);sponsor disputed
94,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,3,NFT owner can create multiple auctions,23,https://github.com/code-423n4/2022-02-foundation-findings/issues/23,foundation,2022/02,bug;3 (High Risk);sponsor confirmed
94,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,2,Auction amount must be higher than reserve price,24,https://github.com/code-423n4/2022-02-foundation-findings/issues/24,foundation,2022/02,bug;invalid;QA (Quality Assurance);sponsor disputed
94,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,Q,QA Report,25,https://github.com/code-423n4/2022-02-foundation-findings/issues/25,foundation,2022/02,bug;QA (Quality Assurance)
94,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,79,https://github.com/code-423n4/2022-02-foundation-findings/issues/79,foundation,2022/02,bug;QA (Quality Assurance)
94,Afanasyevich,0x728dC35758C79c54389ddf5Da1D6Eb55a502f698,3,Mapping nftContractToTokenIdToBuyPrice is not deleted correctly,20,https://github.com/code-423n4/2022-02-foundation-findings/issues/20,foundation,2022/02,bug;invalid;3 (High Risk);sponsor disputed
94,Afanasyevich,0x728dC35758C79c54389ddf5Da1D6Eb55a502f698,3,Signature can be reused in private sales,21,https://github.com/code-423n4/2022-02-foundation-findings/issues/21,foundation,2022/02,bug;duplicate;2 (Med Risk)
94,bobi,0x8F24B7bEe60c5421101e2e596b1008522368920F,Q,QA Report,70,https://github.com/code-423n4/2022-02-foundation-findings/issues/70,foundation,2022/02,bug;invalid;QA (Quality Assurance);sponsor disputed
94,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,SendValueWithFallbackWithdraw: withdrawFor function may fail to withdraw ether recorded in pendingWithdrawals,12,https://github.com/code-423n4/2022-02-foundation-findings/issues/12,foundation,2022/02,bug;2 (Med Risk);disagree with severity;sponsor confirmed
94,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"NFTMarketReserveAuction: After calling adminAccountMigration to update auction.seller, other users cannot buy the NFT even before bidding starts.",31,https://github.com/code-423n4/2022-02-foundation-findings/issues/31,foundation,2022/02,bug;duplicate;2 (Med Risk)
94,CertoraInc,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,2,Frontrun to change the buyPrice,17,https://github.com/code-423n4/2022-02-foundation-findings/issues/17,foundation,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
94,CertoraInc,0xD0B90DEE950195A846ec7d9F7ebC7f45CEc7B9cC,2,No anti sniping mechanism,19,https://github.com/code-423n4/2022-02-foundation-findings/issues/19,foundation,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
94,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,37,https://github.com/code-423n4/2022-02-foundation-findings/issues/37,foundation,2022/02,bug;G (Gas Optimization)
94,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,38,https://github.com/code-423n4/2022-02-foundation-findings/issues/38,foundation,2022/02,bug;QA (Quality Assurance)
94,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Missing receiver validation in `withdrawFrom`,42,https://github.com/code-423n4/2022-02-foundation-findings/issues/42,foundation,2022/02,bug;2 (Med Risk);sponsor confirmed
94,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Missing receiver validation in `withdrawFunds`,43,https://github.com/code-423n4/2022-02-foundation-findings/issues/43,foundation,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
94,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`LockedBalance` library should drop parameters to 96/32 bits,44,https://github.com/code-423n4/2022-02-foundation-findings/issues/44,foundation,2022/02,bug;2 (Med Risk);sponsor acknowledged
94,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`MAX_ROYALTY_RECIPIENTS_INDEX` set too low,45,https://github.com/code-423n4/2022-02-foundation-findings/issues/45,foundation,2022/02,bug;2 (Med Risk);sponsor acknowledged
94,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Private sale spoofing,46,https://github.com/code-423n4/2022-02-foundation-findings/issues/46,foundation,2022/02,bug;2 (Med Risk);sponsor acknowledged
94,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Private sale replay attack,47,https://github.com/code-423n4/2022-02-foundation-findings/issues/47,foundation,2022/02,bug;duplicate;2 (Med Risk)
94,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,Q,QA Report,48,https://github.com/code-423n4/2022-02-foundation-findings/issues/48,foundation,2022/02,bug;QA (Quality Assurance)
94,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,32,https://github.com/code-423n4/2022-02-foundation-findings/issues/32,foundation,2022/02,bug;G (Gas Optimization)
94,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Accept offer without Seller wish,33,https://github.com/code-423n4/2022-02-foundation-findings/issues/33,foundation,2022/02,bug;invalid;sponsor disputed
94,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Last Bidder funds will stuck,34,https://github.com/code-423n4/2022-02-foundation-findings/issues/34,foundation,2022/02,bug;invalid;QA (Quality Assurance);sponsor disputed
94,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,36,https://github.com/code-423n4/2022-02-foundation-findings/issues/36,foundation,2022/02,bug;QA (Quality Assurance)
94,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,dangerous receive function,72,https://github.com/code-423n4/2022-02-foundation-findings/issues/72,foundation,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
94,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,3,Auction DOS On The Bidding,26,https://github.com/code-423n4/2022-02-foundation-findings/issues/26,foundation,2022/02,bug;invalid;3 (High Risk);sponsor disputed
94,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,61,https://github.com/code-423n4/2022-02-foundation-findings/issues/61,foundation,2022/02,bug;QA (Quality Assurance)
94,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,63,https://github.com/code-423n4/2022-02-foundation-findings/issues/63,foundation,2022/02,bug;G (Gas Optimization)
94,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,80,https://github.com/code-423n4/2022-02-foundation-findings/issues/80,foundation,2022/02,bug;QA (Quality Assurance)
94,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,Q,QA Report,88,https://github.com/code-423n4/2022-02-foundation-findings/issues/88,foundation,2022/02,bug;invalid;QA (Quality Assurance);sponsor disputed
94,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Upgradable escrow contract,53,https://github.com/code-423n4/2022-02-foundation-findings/issues/53,foundation,2022/02,bug;2 (Med Risk);sponsor acknowledged
94,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,54,https://github.com/code-423n4/2022-02-foundation-findings/issues/54,foundation,2022/02,bug;G (Gas Optimization)
94,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,60,https://github.com/code-423n4/2022-02-foundation-findings/issues/60,foundation,2022/02,bug;QA (Quality Assurance)
94,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,3,Use of transferFrom instead of safeTransferFrom for ERC721 token transfers,50,https://github.com/code-423n4/2022-02-foundation-findings/issues/50,foundation,2022/02,bug;duplicate;QA (Quality Assurance)
94,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,Q,QA Report,52,https://github.com/code-423n4/2022-02-foundation-findings/issues/52,foundation,2022/02,bug;QA (Quality Assurance)
94,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,An offer made after auction end can be stolen by an auction winner,49,https://github.com/code-423n4/2022-02-foundation-findings/issues/49,foundation,2022/02,bug;3 (High Risk);sponsor confirmed
94,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,Escrowed NFT can be stolen by anyone if no active buyPrice or auction exists for it,51,https://github.com/code-423n4/2022-02-foundation-findings/issues/51,foundation,2022/02,bug;2 (Med Risk);sponsor confirmed
94,iain,0x18C8dF1fb7FB44549F90d1C2BB1DC8b690CD0559,G,Gas Optimizations,10,https://github.com/code-423n4/2022-02-foundation-findings/issues/10,foundation,2022/02,bug;G (Gas Optimization)
94,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,28,https://github.com/code-423n4/2022-02-foundation-findings/issues/28,foundation,2022/02,bug;QA (Quality Assurance)
94,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Exchange does not split royalty revenue correctly,29,https://github.com/code-423n4/2022-02-foundation-findings/issues/29,foundation,2022/02,bug;2 (Med Risk);sponsor acknowledged
94,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,Creators can steal sale revenue from owners' sales,30,https://github.com/code-423n4/2022-02-foundation-findings/issues/30,foundation,2022/02,bug;3 (High Risk);sponsor confirmed
94,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,No requirement that approval amount is greater than 0 with event still emitted,3,https://github.com/code-423n4/2022-02-foundation-findings/issues/3,foundation,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
94,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,no check that msg.sender is not the spender address argument ,4,https://github.com/code-423n4/2022-02-foundation-findings/issues/4,foundation,2022/02,bug;invalid;2 (Med Risk);disagree with severity;sponsor acknowledged
94,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Users can unlock other users FETH tokens ,5,https://github.com/code-423n4/2022-02-foundation-findings/issues/5,foundation,2022/02,bug;invalid;3 (High Risk);sponsor disputed
94,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,constructor function used with upgradeable contracts ,6,https://github.com/code-423n4/2022-02-foundation-findings/issues/6,foundation,2022/02,bug;invalid;3 (High Risk);sponsor disputed
94,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Foundation Treasury initialize() function can be called by an attacker first,7,https://github.com/code-423n4/2022-02-foundation-findings/issues/7,foundation,2022/02,bug;invalid;3 (High Risk);sponsor disputed
94,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,revert can be bypassed by forcefully sending ETH using selfdestruct(),8,https://github.com/code-423n4/2022-02-foundation-findings/issues/8,foundation,2022/02,bug;invalid;3 (High Risk);sponsor disputed
94,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,no check that array length arguments are the same ,9,https://github.com/code-423n4/2022-02-foundation-findings/issues/9,foundation,2022/02,bug;QA (Quality Assurance);disagree with severity;sponsor confirmed
94,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,16,https://github.com/code-423n4/2022-02-foundation-findings/issues/16,foundation,2022/02,bug;invalid;G (Gas Optimization);sponsor disputed
94,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,2,missing inputs validation. ,18,https://github.com/code-423n4/2022-02-foundation-findings/issues/18,foundation,2022/02,bug;duplicate;QA (Quality Assurance)
94,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,83,https://github.com/code-423n4/2022-02-foundation-findings/issues/83,foundation,2022/02,bug;G (Gas Optimization)
94,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,84,https://github.com/code-423n4/2022-02-foundation-findings/issues/84,foundation,2022/02,bug;QA (Quality Assurance)
94,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,`depositFor()` Does Not Verify `account` is Non Zero Potentially Losing Funds,11,https://github.com/code-423n4/2022-02-foundation-findings/issues/11,foundation,2022/02,bug;QA (Quality Assurance)
94,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,NFT Sellers Can Steal Funds if an Offer is Accepted on an Unfinalized Auction,40,https://github.com/code-423n4/2022-02-foundation-findings/issues/40,foundation,2022/02,bug;duplicate;3 (High Risk)
94,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,Users Can Lock Funds by Backing Out of an Auction,41,https://github.com/code-423n4/2022-02-foundation-findings/issues/41,foundation,2022/02,bug;duplicate;3 (High Risk)
94,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Fees Are Incorrectly Charged on Unfinalized NFT Sales,73,https://github.com/code-423n4/2022-02-foundation-findings/issues/73,foundation,2022/02,bug;2 (Med Risk);sponsor confirmed
94,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,There is no Support For The Trading of Cryptopunks,74,https://github.com/code-423n4/2022-02-foundation-findings/issues/74,foundation,2022/02,bug;2 (Med Risk);sponsor acknowledged
94,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,NFT Creators Can Avoid Paying The Primary Foundation Fee,76,https://github.com/code-423n4/2022-02-foundation-findings/issues/76,foundation,2022/02,bug;duplicate;2 (Med Risk)
94,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`buyFromPrivateSaleFor()` Will Fail if The Buyer Has Insufficient Balance Due to an Open Offer on The Same NFT,77,https://github.com/code-423n4/2022-02-foundation-findings/issues/77,foundation,2022/02,bug;2 (Med Risk);sponsor confirmed
94,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`_getCreatorPaymentInfo()` is Not Equipped to Handle Reverts on an Unbounded `_recipients` Array,85,https://github.com/code-423n4/2022-02-foundation-findings/issues/85,foundation,2022/02,bug;2 (Med Risk);sponsor confirmed
94,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`adminAccountMigration()` Does Not Update `buyPrice.seller`,87,https://github.com/code-423n4/2022-02-foundation-findings/issues/87,foundation,2022/02,bug;2 (Med Risk);sponsor confirmed
94,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,Q,QA Report,89,https://github.com/code-423n4/2022-02-foundation-findings/issues/89,foundation,2022/02,bug;QA (Quality Assurance)
94,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Primary seller can avoid paying the primary fee,39,https://github.com/code-423n4/2022-02-foundation-findings/issues/39,foundation,2022/02,bug;2 (Med Risk);sponsor acknowledged
94,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,Q,QA Report,86,https://github.com/code-423n4/2022-02-foundation-findings/issues/86,foundation,2022/02,bug;invalid;QA (Quality Assurance);sponsor disputed
94,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,78,https://github.com/code-423n4/2022-02-foundation-findings/issues/78,foundation,2022/02,bug;G (Gas Optimization);sponsor disputed
94,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,Q,QA Report,81,https://github.com/code-423n4/2022-02-foundation-findings/issues/81,foundation,2022/02,bug;QA (Quality Assurance)
94,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,1,https://github.com/code-423n4/2022-02-foundation-findings/issues/1,foundation,2022/02,bug;G (Gas Optimization)
94,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,2,https://github.com/code-423n4/2022-02-foundation-findings/issues/2,foundation,2022/02,bug;QA (Quality Assurance)
94,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Rare scenario where seller can steal NFT after an auction by creating an offer for it through reentrancy,62,https://github.com/code-423n4/2022-02-foundation-findings/issues/62,foundation,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
94,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,64,https://github.com/code-423n4/2022-02-foundation-findings/issues/64,foundation,2022/02,bug;QA (Quality Assurance)
94,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,3,Incorrect implementation when accepting offer from unsettled auctions,35,https://github.com/code-423n4/2022-02-foundation-findings/issues/35,foundation,2022/02,bug;duplicate;3 (High Risk)
94,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,G,Gas Optimizations,65,https://github.com/code-423n4/2022-02-foundation-findings/issues/65,foundation,2022/02,bug;G (Gas Optimization)
94,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,Q,QA Report,66,https://github.com/code-423n4/2022-02-foundation-findings/issues/66,foundation,2022/02,bug;QA (Quality Assurance)
94,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,2,Refactoring NFTMarketCreators.sol can reduce decent amounts of gas and size,67,https://github.com/code-423n4/2022-02-foundation-findings/issues/67,foundation,2022/02,bug;duplicate;disagree with severity;G (Gas Optimization);sponsor acknowledged
94,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,2,Refactoring NFTMarketCreators.sol can reduce decent amounts of gas and size,69,https://github.com/code-423n4/2022-02-foundation-findings/issues/69,foundation,2022/02,bug;duplicate;invalid;G (Gas Optimization)
94,thankthedark,0x22f2a6be015a3951cf75d4883167b9f79699cd4b,2,EIP-712 signatures can be re-used in private sales,68,https://github.com/code-423n4/2022-02-foundation-findings/issues/68,foundation,2022/02,bug;2 (Med Risk);sponsor confirmed
94,thankthedark,0x22f2a6be015a3951cf75d4883167b9f79699cd4b,Q,QA Report,71,https://github.com/code-423n4/2022-02-foundation-findings/issues/71,foundation,2022/02,bug;invalid;QA (Quality Assurance);sponsor disputed
94,thankthedark,0x22f2a6be015a3951cf75d4883167b9f79699cd4b,G,Gas Optimizations,75,https://github.com/code-423n4/2022-02-foundation-findings/issues/75,foundation,2022/02,bug;G (Gas Optimization)
94,thankthedark,0x22f2a6be015a3951cf75d4883167b9f79699cd4b,2,Lack of exception handling,82,https://github.com/code-423n4/2022-02-foundation-findings/issues/82,foundation,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
94,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M3] `PRIMARY_FOUNDATION_FEE` can be bypassed,55,https://github.com/code-423n4/2022-02-foundation-findings/issues/55,foundation,2022/02,bug;duplicate;2 (Med Risk)
94,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H4] Inappropriate implementation of `NFTMarketFees#_getFees()` can result in incorrect distribution when the seller is one of the royalty recipients,56,https://github.com/code-423n4/2022-02-foundation-findings/issues/56,foundation,2022/02,bug;QA (Quality Assurance);sponsor disputed
94,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M5] Royalties can be distribution unfairly among `creatorRecipients` for NFT contracts with non-standard `getRoyalties()` returns,57,https://github.com/code-423n4/2022-02-foundation-findings/issues/57,foundation,2022/02,bug;2 (Med Risk);sponsor acknowledged
94,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M6] Inappropriate support of EIP-2981,58,https://github.com/code-423n4/2022-02-foundation-findings/issues/58,foundation,2022/02,bug;2 (Med Risk);sponsor acknowledged
94,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"[WP-H7] In some cases, when `acceptOffer()`, the buyer's ETH payment will be sent to the seller but the NFT will not be transferred to the buyer (paid and get nothing in return)",59,https://github.com/code-423n4/2022-02-foundation-findings/issues/59,foundation,2022/02,bug;duplicate;3 (High Risk)
94,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,3,NFT tranfered to market directly can be took by anyone,27,https://github.com/code-423n4/2022-02-foundation-findings/issues/27,foundation,2022/02,bug;duplicate;2 (Med Risk)
89,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,111,https://github.com/code-423n4/2022-02-hubble-findings/issues/111,hubble,2022/02,bug;G (Gas Optimization);sponsor confirmed
89,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,Q,QA Report,112,https://github.com/code-423n4/2022-02-hubble-findings/issues/112,hubble,2022/02,bug;QA (Quality Assurance);sponsor disputed
89,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,`Oracle#setStablePrice()` can be used for rug pull ,74,https://github.com/code-423n4/2022-02-hubble-findings/issues/74,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,2,`ClearingHouse#liquidationPenalty` can be set arbitrarily,75,https://github.com/code-423n4/2022-02-hubble-findings/issues/75,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Oracle price could not be fresh,10,https://github.com/code-423n4/2022-02-hubble-findings/issues/10,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Hidden governance,11,https://github.com/code-423n4/2022-02-hubble-findings/issues/11,hubble,2022/02,bug;2 (Med Risk);resolved;sponsor confirmed
89,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,6,https://github.com/code-423n4/2022-02-hubble-findings/issues/6,hubble,2022/02,bug;duplicate;G (Gas Optimization)
89,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,7,https://github.com/code-423n4/2022-02-hubble-findings/issues/7,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Governance can steal tokens,8,https://github.com/code-423n4/2022-02-hubble-findings/issues/8,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Oracle price could be 0,9,https://github.com/code-423n4/2022-02-hubble-findings/issues/9,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,3,Assets sent from MarginAccount to InsuranceFund will be locked forever,128,https://github.com/code-423n4/2022-02-hubble-findings/issues/128,hubble,2022/02,bug;2 (Med Risk);sponsor confirmed
89,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,3,"After debt seizure from InsuranceFund, user can dilute all past participants.",129,https://github.com/code-423n4/2022-02-hubble-findings/issues/129,hubble,2022/02,bug;2 (Med Risk);sponsor disputed
89,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,2,All AMMs have to be past nextFundingTime to update,130,https://github.com/code-423n4/2022-02-hubble-findings/issues/130,hubble,2022/02,bug;2 (Med Risk);resolved;sponsor confirmed
89,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,2,Wrong return value will distort the calculations of the margin during Liquidations ,132,https://github.com/code-423n4/2022-02-hubble-findings/issues/132,hubble,2022/02,bug;invalid;sponsor disputed
89,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,134,https://github.com/code-423n4/2022-02-hubble-findings/issues/134,hubble,2022/02,bug;QA (Quality Assurance);sponsor disputed
89,bobi,0x8f24b7bee60c5421101e2e596b1008522368920f,Q,QA Report,107,https://github.com/code-423n4/2022-02-hubble-findings/issues/107,hubble,2022/02,bug;QA (Quality Assurance);sponsor confirmed
89,bw,0x3d977eF4855A526500E901bFA43c209E0C51BA84,3,`settleFunding` will exceed block gas with more markets and activity,97,https://github.com/code-423n4/2022-02-hubble-findings/issues/97,hubble,2022/02,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
89,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Chainlink's latestRoundData might return stale or incorrect results,1,https://github.com/code-423n4/2022-02-hubble-findings/issues/1,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,MINTER_ROLE can be granted by the deployer of VUSD and mint arbitrary amount of tokens,33,https://github.com/code-423n4/2022-02-hubble-findings/issues/33,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,VUSD: Potential key variable overwritten,53,https://github.com/code-423n4/2022-02-hubble-findings/issues/53,hubble,2022/02,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
89,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,34,https://github.com/code-423n4/2022-02-hubble-findings/issues/34,hubble,2022/02,bug;duplicate;G (Gas Optimization)
89,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,35,https://github.com/code-423n4/2022-02-hubble-findings/issues/35,hubble,2022/02,bug;QA (Quality Assurance);sponsor disputed
89,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Unbounded AMMs can cause DOS,41,https://github.com/code-423n4/2022-02-hubble-findings/issues/41,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,InsuranceFund depositors can be priced out & deposits can be stolen,42,https://github.com/code-423n4/2022-02-hubble-findings/issues/42,hubble,2022/02,bug;3 (High Risk)
89,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Withdrawals can be spammed and other users blocked,43,https://github.com/code-423n4/2022-02-hubble-findings/issues/43,hubble,2022/02,bug;duplicate;3 (High Risk)
89,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`Oracle.getUnderlyingPrice` could have wrong decimals,44,https://github.com/code-423n4/2022-02-hubble-findings/issues/44,hubble,2022/02,bug;2 (Med Risk);disagree with severity;sponsor confirmed
89,csanuragjain,0xd295584135829d89427674b72560222b06e08a15,2,Oracle - csanuragjain,141,https://github.com/code-423n4/2022-02-hubble-findings/issues/141,hubble,2022/02,duplicate;2 (Med Risk)
89,csanuragjain,0xd295584135829d89427674b72560222b06e08a15,3,DDOS - csanuragjain,142,https://github.com/code-423n4/2022-02-hubble-findings/issues/142,hubble,2022/02,duplicate;3 (High Risk)
89,csanuragjain,0xd295584135829d89427674b72560222b06e08a15,G,Gas Optimizations,18,https://github.com/code-423n4/2022-02-hubble-findings/issues/18,hubble,2022/02,bug;G (Gas Optimization);sponsor confirmed
89,csanuragjain,0xd295584135829d89427674b72560222b06e08a15,Q,QA Report,19,https://github.com/code-423n4/2022-02-hubble-findings/issues/19,hubble,2022/02,bug;QA (Quality Assurance);sponsor confirmed
89,csanuragjain,0xd295584135829d89427674b72560222b06e08a15,2,Withdrawals can get stuck,20,https://github.com/code-423n4/2022-02-hubble-findings/issues/20,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,csanuragjain,0xd295584135829d89427674b72560222b06e08a15,2,processWithdrawals maxWithdrawalProcesses is verified incorrectly,21,https://github.com/code-423n4/2022-02-hubble-findings/issues/21,hubble,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity;resolved;sponsor confirmed
89,d4rk,0x9f07Dc0F363a088BE82974e04AECb3C610C31fdd,G,Gas Optimizations,12,https://github.com/code-423n4/2022-02-hubble-findings/issues/12,hubble,2022/02,bug;duplicate;G (Gas Optimization)
89,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,liquidation is vulnerable to sandwich attacks,113,https://github.com/code-423n4/2022-02-hubble-findings/issues/113,hubble,2022/02,bug;2 (Med Risk);sponsor disputed
89,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,the admin can liquidate any trader and mint arbitrary vusd amount,114,https://github.com/code-423n4/2022-02-hubble-findings/issues/114,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,first depositor of the insurance fund can drain the other depositors,116,https://github.com/code-423n4/2022-02-hubble-findings/issues/116,hubble,2022/02,bug;duplicate;3 (High Risk);sponsor confirmed
89,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,denial fo service,119,https://github.com/code-423n4/2022-02-hubble-findings/issues/119,hubble,2022/02,bug;3 (High Risk);disagree with severity;resolved;sponsor confirmed
89,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,Q,QA Report,120,https://github.com/code-423n4/2022-02-hubble-findings/issues/120,hubble,2022/02,bug;G (Gas Optimization);sponsor confirmed
89,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,108,https://github.com/code-423n4/2022-02-hubble-findings/issues/108,hubble,2022/02,bug;G (Gas Optimization);sponsor confirmed
89,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,SHOULD CHECK RETURN DATA FROM CHAINLINK AGGREGATORS,28,https://github.com/code-423n4/2022-02-hubble-findings/issues/28,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,92,https://github.com/code-423n4/2022-02-hubble-findings/issues/92,hubble,2022/02,bug;QA (Quality Assurance);sponsor confirmed
89,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,135,https://github.com/code-423n4/2022-02-hubble-findings/issues/135,hubble,2022/02,bug;G (Gas Optimization);sponsor confirmed
89,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Too many amms,145,https://github.com/code-423n4/2022-02-hubble-findings/issues/145,hubble,2022/02,duplicate;2 (Med Risk)
89,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Add a Timelock and an Event to `ClearingHouse.sol:setParams()`,77,https://github.com/code-423n4/2022-02-hubble-findings/issues/77,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Consistently check account balance before and after transfers for Fee-On-Transfer discrepencies,80,https://github.com/code-423n4/2022-02-hubble-findings/issues/80,hubble,2022/02,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
89,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,3,Update initializer modifier to prevent reentrancy during initialization,81,https://github.com/code-423n4/2022-02-hubble-findings/issues/81,hubble,2022/02,bug;3 (High Risk);resolved;sponsor confirmed
89,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,94,https://github.com/code-423n4/2022-02-hubble-findings/issues/94,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,curve-v2 licensing,49,https://github.com/code-423n4/2022-02-hubble-findings/issues/49,hubble,2022/02,bug;invalid;sponsor disputed
89,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,ClearingHouse fail if too many amm whitelisted,66,https://github.com/code-423n4/2022-02-hubble-findings/issues/66,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,ClearingHouse fail if broken amm whitelisted,67,https://github.com/code-423n4/2022-02-hubble-findings/issues/67,hubble,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity;sponsor acknowledged
89,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,maintenanceMargin and minAllowableMargin can set below 0,83,https://github.com/code-423n4/2022-02-hubble-findings/issues/83,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,tradeFee and liquidationPenalty can be set to any value > 0,84,https://github.com/code-423n4/2022-02-hubble-findings/issues/84,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,88,https://github.com/code-423n4/2022-02-hubble-findings/issues/88,hubble,2022/02,bug;duplicate;G (Gas Optimization)
89,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,89,https://github.com/code-423n4/2022-02-hubble-findings/issues/89,hubble,2022/02,bug;QA (Quality Assurance);disagree with severity;sponsor confirmed
89,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Ownership of Swap.vy cannot be transferred,93,https://github.com/code-423n4/2022-02-hubble-findings/issues/93,hubble,2022/02,bug;2 (Med Risk);sponsor disputed
89,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,No check for stale chainlink oracle data in getUnderlyingPrice function,90,https://github.com/code-423n4/2022-02-hubble-findings/issues/90,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,Q,QA Report,91,https://github.com/code-423n4/2022-02-hubble-findings/issues/91,hubble,2022/02,bug;QA (Quality Assurance);sponsor disputed
89,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,Blocking of the VUSD withdrawals is possible if the reserve token doesn't support zero value transfers,29,https://github.com/code-423n4/2022-02-hubble-findings/issues/29,hubble,2022/02,bug;2 (Med Risk);sponsor disputed
89,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,InsuranceFund initialize can't be run,30,https://github.com/code-423n4/2022-02-hubble-findings/issues/30,hubble,2022/02,bug;QA (Quality Assurance);sponsor disputed
89,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,Collateral assets sent to InsuranceFund by MarginAccount will be frozen,36,https://github.com/code-423n4/2022-02-hubble-findings/issues/36,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,ClearingHouse margin calculations will break up if an AMM returning non-6 decimals positions be white listed,37,https://github.com/code-423n4/2022-02-hubble-findings/issues/37,hubble,2022/02,bug;2 (Med Risk);sponsor disputed
89,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,Griefing attack at VUSD withdraw queue is possible,39,https://github.com/code-423n4/2022-02-hubble-findings/issues/39,hubble,2022/02,bug;duplicate;3 (High Risk)
89,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,Healthy positions can be liquidated as margin calculations ignore decimals of the components,45,https://github.com/code-423n4/2022-02-hubble-findings/issues/45,hubble,2022/02,bug;duplicate;QA (Quality Assurance);sponsor disputed
89,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,Liquidations can be run on the bogus Oracle prices,46,https://github.com/code-423n4/2022-02-hubble-findings/issues/46,hubble,2022/02,bug;2 (Med Risk);sponsor confirmed
89,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Unpredictable fee/margin rates for users due to admin front running or bad luck,31,https://github.com/code-423n4/2022-02-hubble-findings/issues/31,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Missing events for critical governance and fee/margin rate changes,32,https://github.com/code-423n4/2022-02-hubble-findings/issues/32,hubble,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity;sponsor confirmed
89,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,An admin can steal all users' USDC funds backing `VUSD`,38,https://github.com/code-423n4/2022-02-hubble-findings/issues/38,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,An admin can rug pull by changing contract addresses,40,https://github.com/code-423n4/2022-02-hubble-findings/issues/40,hubble,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity;sponsor acknowledged
89,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,"Top-level contracts are upgradeable, but parent contracts aren't",47,https://github.com/code-423n4/2022-02-hubble-findings/issues/47,hubble,2022/02,bug;duplicate;QA (Quality Assurance);sponsor disputed
89,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,60,https://github.com/code-423n4/2022-02-hubble-findings/issues/60,hubble,2022/02,bug;G (Gas Optimization);sponsor confirmed
89,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,2,InsuranceFund: Frontrunning seizeBadDebt,61,https://github.com/code-423n4/2022-02-hubble-findings/issues/61,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,2,MarginAccount: Computation of margin may be prone to errors from fee on transfer tokens,62,https://github.com/code-423n4/2022-02-hubble-findings/issues/62,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,itsmeSTYJ,0xBCa294543b46fF11CFAFbCF67434BEa23c21404b,Q,QA Report,63,https://github.com/code-423n4/2022-02-hubble-findings/issues/63,hubble,2022/02,bug;QA (Quality Assurance);sponsor confirmed
89,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,initialize() functions can be called by an attacker first ,13,https://github.com/code-423n4/2022-02-hubble-findings/issues/13,hubble,2022/02,bug;invalid;sponsor disputed
89,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,vusd can be minted by sending tokens to the contract,14,https://github.com/code-423n4/2022-02-hubble-findings/issues/14,hubble,2022/02,bug;invalid;sponsor disputed
89,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,anyone can update any traders position,15,https://github.com/code-423n4/2022-02-hubble-findings/issues/15,hubble,2022/02,bug;invalid;sponsor disputed
89,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,VUSD.sol functions don't check if amount > 0 ,16,https://github.com/code-423n4/2022-02-hubble-findings/issues/16,hubble,2022/02,bug;QA (Quality Assurance)
89,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Gas Optimizations,82,https://github.com/code-423n4/2022-02-hubble-findings/issues/82,hubble,2022/02,bug;G (Gas Optimization);sponsor confirmed
89,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,78,https://github.com/code-423n4/2022-02-hubble-findings/issues/78,hubble,2022/02,bug;QA (Quality Assurance);disagree with severity;sponsor confirmed
89,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,79,https://github.com/code-423n4/2022-02-hubble-findings/issues/79,hubble,2022/02,bug;G (Gas Optimization);sponsor confirmed
89,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Reentrancy in `VUSD.processWithdrawals()` Allows Draining of Reserve Tokens,4,https://github.com/code-423n4/2022-02-hubble-findings/issues/4,hubble,2022/02,bug;duplicate;QA (Quality Assurance);sponsor disputed
89,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Contract Initializer May Mint Arbitrary vUSD Tokens,48,https://github.com/code-423n4/2022-02-hubble-findings/issues/48,hubble,2022/02,bug;QA (Quality Assurance);disagree with severity;sponsor acknowledged
89,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,DoS by Creating Excessive Length `withdrawals` List.,5,https://github.com/code-423n4/2022-02-hubble-findings/issues/5,hubble,2022/02,bug;duplicate;3 (High Risk)
89,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,ClearingHouse May Whitelist Duplicate AMMs,50,https://github.com/code-423n4/2022-02-hubble-findings/issues/50,hubble,2022/02,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
89,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,AMM Cannot Be `initialize()` Except By Governance,51,https://github.com/code-423n4/2022-02-hubble-findings/issues/51,hubble,2022/02,bug;2 (Med Risk);resolved;sponsor confirmed
89,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Collateral With Less Than 6 Decimals of Precision will Revert in `_liquidateExactRepay()`,52,https://github.com/code-423n4/2022-02-hubble-findings/issues/52,hubble,2022/02,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
89,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Users are able to front-run bad debt settlements to avoid insurance costs,59,https://github.com/code-423n4/2022-02-hubble-findings/issues/59,hubble,2022/02,bug;2 (Med Risk);sponsor confirmed
89,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`VUSD.processWithdrawals()` Can Be Filled With Empty Withdrawals,122,https://github.com/code-423n4/2022-02-hubble-findings/issues/122,hubble,2022/02,bug;duplicate;3 (High Risk)
89,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Improper Validation Of Chainlink's `latestRoundData()` Function,123,https://github.com/code-423n4/2022-02-hubble-findings/issues/123,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`AMM.getTwapPrice()` Potentially Uses an Outdated Price,131,https://github.com/code-423n4/2022-02-hubble-findings/issues/131,hubble,2022/02,bug;QA (Quality Assurance);sponsor disputed
89,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Missing Slippage Checks on `ClearingHouse._liquidateMaker()`,133,https://github.com/code-423n4/2022-02-hubble-findings/issues/133,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`AMM._getPnlWhileReducingPosition()` Does Not Handle The Zero Case,136,https://github.com/code-423n4/2022-02-hubble-findings/issues/136,hubble,2022/02,bug;duplicate;QA (Quality Assurance);sponsor disputed
89,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Gas Optimizations,68,https://github.com/code-423n4/2022-02-hubble-findings/issues/68,hubble,2022/02,bug;G (Gas Optimization);sponsor disputed
89,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,Q,QA Report,69,https://github.com/code-423n4/2022-02-hubble-findings/issues/69,hubble,2022/02,bug;QA (Quality Assurance);sponsor disputed
89,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,2,Is Possible onlyGovernance Lock Users Fund by Setting maxWithdrawalProcesses Over Blockchain Gas Limit,70,https://github.com/code-423n4/2022-02-hubble-findings/issues/70,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,Attacker may DDOS Withdrawal by Making Multiple Small Requests to withdraw(),71,https://github.com/code-423n4/2022-02-hubble-findings/issues/71,hubble,2022/02,bug;duplicate;3 (High Risk)
89,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,Q,QA Report,72,https://github.com/code-423n4/2022-02-hubble-findings/issues/72,hubble,2022/02,bug;duplicate;3 (High Risk)
89,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,2, MarginAccount.sol - Asset transfer to insuranceFund is lost.,73,https://github.com/code-423n4/2022-02-hubble-findings/issues/73,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,Nikolay,0xB2b4d90C391942f502Bbd786051c27D05209329f,Q,QA Report,17,https://github.com/code-423n4/2022-02-hubble-findings/issues/17,hubble,2022/02,bug;QA (Quality Assurance);sponsor disputed
89,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,G,Gas Optimizations,117,https://github.com/code-423n4/2022-02-hubble-findings/issues/117,hubble,2022/02,bug;G (Gas Optimization);sponsor confirmed
89,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,Q,QA Report,118,https://github.com/code-423n4/2022-02-hubble-findings/issues/118,hubble,2022/02,bug;duplicate;QA (Quality Assurance);2 (Med Risk)
89,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,3,DDOS - Omik,143,https://github.com/code-423n4/2022-02-hubble-findings/issues/143,hubble,2022/02,duplicate;3 (High Risk)
89,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,2,Too many amms,144,https://github.com/code-423n4/2022-02-hubble-findings/issues/144,hubble,2022/02,duplicate;2 (Med Risk)
89,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Chainlink latestRoundData validation,104,https://github.com/code-423n4/2022-02-hubble-findings/issues/104,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,Q,QA Report,105,https://github.com/code-423n4/2022-02-hubble-findings/issues/105,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Gas Optimizations,106,https://github.com/code-423n4/2022-02-hubble-findings/issues/106,hubble,2022/02,bug;duplicate;G (Gas Optimization)
89,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,3,Upgradeable contract use constructor to initialize reserveToken,103,https://github.com/code-423n4/2022-02-hubble-findings/issues/103,hubble,2022/02,bug;invalid;sponsor disputed
89,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,Q,QA Report,109,https://github.com/code-423n4/2022-02-hubble-findings/issues/109,hubble,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
89,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,Q,QA Report,124,https://github.com/code-423n4/2022-02-hubble-findings/issues/124,hubble,2022/02,bug;QA (Quality Assurance);disagree with severity;sponsor confirmed
89,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,125,https://github.com/code-423n4/2022-02-hubble-findings/issues/125,hubble,2022/02,bug;G (Gas Optimization);sponsor confirmed
89,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,3,DDOS - robee,139,https://github.com/code-423n4/2022-02-hubble-findings/issues/139,hubble,2022/02,duplicate;3 (High Risk)
89,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Governance issue - robee,140,https://github.com/code-423n4/2022-02-hubble-findings/issues/140,hubble,2022/02,2 (Med Risk)
89,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,2,https://github.com/code-423n4/2022-02-hubble-findings/issues/2,hubble,2022/02,bug;duplicate;G (Gas Optimization)
89,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,3,https://github.com/code-423n4/2022-02-hubble-findings/issues/3,hubble,2022/02,bug;QA (Quality Assurance);sponsor confirmed
89,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Attacker can DOS VUSD withdrawal by spamming withdrawals of zero tokens,110,https://github.com/code-423n4/2022-02-hubble-findings/issues/110,hubble,2022/02,bug;duplicate;3 (High Risk)
89,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,ClearingHouse looping over dynamic array might result in a DOS because of the block gas limit,121,https://github.com/code-423n4/2022-02-hubble-findings/issues/121,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,G,Gas Optimizations,85,https://github.com/code-423n4/2022-02-hubble-findings/issues/85,hubble,2022/02,bug;duplicate;G (Gas Optimization)
89,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,Q,QA Report,86,https://github.com/code-423n4/2022-02-hubble-findings/issues/86,hubble,2022/02,bug;QA (Quality Assurance);sponsor disputed
89,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,2,Re-entrancy,87,https://github.com/code-423n4/2022-02-hubble-findings/issues/87,hubble,2022/02,bug;duplicate;QA (Quality Assurance);sponsor disputed
89,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Gas Optimizations,126,https://github.com/code-423n4/2022-02-hubble-findings/issues/126,hubble,2022/02,bug;G (Gas Optimization);sponsor confirmed
89,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,Q,QA Report,127,https://github.com/code-423n4/2022-02-hubble-findings/issues/127,hubble,2022/02,bug;duplicate;3 (High Risk)
89,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,3,DDOS - throttle,137,https://github.com/code-423n4/2022-02-hubble-findings/issues/137,hubble,2022/02,duplicate;3 (High Risk)
89,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,2,USDC blacklisted accounts can DoS the withdrawal system,76,https://github.com/code-423n4/2022-02-hubble-findings/issues/76,hubble,2022/02,bug;2 (Med Risk);sponsor confirmed
89,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,95,https://github.com/code-423n4/2022-02-hubble-findings/issues/95,hubble,2022/02,bug;duplicate;G (Gas Optimization)
89,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H7] `InsuranceFund#syncDeps()` may cause users' fund loss,100,https://github.com/code-423n4/2022-02-hubble-findings/issues/100,hubble,2022/02,bug;2 (Med Risk);sponsor acknowledged
89,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H4] The collateral assets impounded with `settleBadDebt()` will be frozen in the `insuranceFund` contract,101,https://github.com/code-423n4/2022-02-hubble-findings/issues/101,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Gas Optimizations,102,https://github.com/code-423n4/2022-02-hubble-findings/issues/102,hubble,2022/02,bug;duplicate;G (Gas Optimization)
89,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H1] `VUSD.sol` Proxy admin of the upgradeable proxy contract can steal users' `reserveToken`,96,https://github.com/code-423n4/2022-02-hubble-findings/issues/96,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H3] `MINTER_ROLE` of `VUSD` can rug users with unlimited `mint()`,98,https://github.com/code-423n4/2022-02-hubble-findings/issues/98,hubble,2022/02,bug;duplicate;QA (Quality Assurance)
89,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M6] Chainlink's `latestRoundData` might return stale results,99,https://github.com/code-423n4/2022-02-hubble-findings/issues/99,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,Q,QA Report,115,https://github.com/code-423n4/2022-02-hubble-findings/issues/115,hubble,2022/02,bug;QA (Quality Assurance);sponsor confirmed
89,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,2,Function `getUnderlyingPrice` in Oracle.sol does not check the price returned from chainlink aggregators ,64,https://github.com/code-423n4/2022-02-hubble-findings/issues/64,hubble,2022/02,bug;duplicate;2 (Med Risk)
89,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,2,Functions `getLatestRoundData` and `getRoundData` do not check that the price returned from a chainlink aggregator is != 0 (Oracle.sol) ,65,https://github.com/code-423n4/2022-02-hubble-findings/issues/65,hubble,2022/02,bug;duplicate;2 (Med Risk)
95,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,29,https://github.com/code-423n4/2022-02-jpyc-findings/issues/29,jpyc,2022/02,bug;G (Gas Optimization)
95,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,30,https://github.com/code-423n4/2022-02-jpyc-findings/issues/30,jpyc,2022/02,bug;QA (Quality Assurance)
95,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,41,https://github.com/code-423n4/2022-02-jpyc-findings/issues/41,jpyc,2022/02,bug;QA (Quality Assurance)
95,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,2,MasterMinter can set themselves as minter and can Mint an infinite supply of token and burn at will. ,42,https://github.com/code-423n4/2022-02-jpyc-findings/issues/42,jpyc,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity;resolved
95,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,Usage of an incorrect version of Ownbale library can potentially malfunction all onlyOwner functions,4,https://github.com/code-423n4/2022-02-jpyc-findings/issues/4,jpyc,2022/02,bug;duplicate;invalid;disagree with severity;sponsor disputed
95,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,Q,QA Report,5,https://github.com/code-423n4/2022-02-jpyc-findings/issues/5,jpyc,2022/02,bug;QA (Quality Assurance)
95,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Whitelist can be circumvented,33,https://github.com/code-423n4/2022-02-jpyc-findings/issues/33,jpyc,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity
95,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,EIP3009 should not be used as a payment receipt,34,https://github.com/code-423n4/2022-02-jpyc-findings/issues/34,jpyc,2022/02,bug;QA (Quality Assurance);disagree with severity;sponsor disputed
95,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,7,https://github.com/code-423n4/2022-02-jpyc-findings/issues/7,jpyc,2022/02,bug;invalid;sponsor disputed
95,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,8,https://github.com/code-423n4/2022-02-jpyc-findings/issues/8,jpyc,2022/02,bug;QA (Quality Assurance);sponsor disputed
95,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Bypass Whitelisting,9,https://github.com/code-423n4/2022-02-jpyc-findings/issues/9,jpyc,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity
95,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,47,https://github.com/code-423n4/2022-02-jpyc-findings/issues/47,jpyc,2022/02,bug;question;QA (Quality Assurance);resolved
95,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Centralization Risk - Unlimited Minting,48,https://github.com/code-423n4/2022-02-jpyc-findings/issues/48,jpyc,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity
95,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,All Contract Are Not Upgradeable contracts,50,https://github.com/code-423n4/2022-02-jpyc-findings/issues/50,jpyc,2022/02,bug;invalid;sponsor disputed
95,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,55,https://github.com/code-423n4/2022-02-jpyc-findings/issues/55,jpyc,2022/02,bug;G (Gas Optimization);resolved
95,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,26,https://github.com/code-423n4/2022-02-jpyc-findings/issues/26,jpyc,2022/02,bug;QA (Quality Assurance);resolved
95,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,27,https://github.com/code-423n4/2022-02-jpyc-findings/issues/27,jpyc,2022/02,bug;question;G (Gas Optimization);resolved
95,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,39,https://github.com/code-423n4/2022-02-jpyc-findings/issues/39,jpyc,2022/02,bug;QA (Quality Assurance)
95,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,40,https://github.com/code-423n4/2022-02-jpyc-findings/issues/40,jpyc,2022/02,bug;question;G (Gas Optimization)
95,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,Q,QA Report,35,https://github.com/code-423n4/2022-02-jpyc-findings/issues/35,jpyc,2022/02,bug;question;QA (Quality Assurance);resolved
95,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,19,https://github.com/code-423n4/2022-02-jpyc-findings/issues/19,jpyc,2022/02,bug;QA (Quality Assurance);resolved
95,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,20,https://github.com/code-423n4/2022-02-jpyc-findings/issues/20,jpyc,2022/02,bug;question;G (Gas Optimization);resolved
95,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,FiatTokenV2.sol initialize() function can be called by an attacker first ,18,https://github.com/code-423n4/2022-02-jpyc-findings/issues/18,jpyc,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity
95,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,initialize() function can be called by an attacker first ,6,https://github.com/code-423n4/2022-02-jpyc-findings/issues/6,jpyc,2022/02,bug;duplicate;question;QA (Quality Assurance);disagree with severity
95,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,15,https://github.com/code-423n4/2022-02-jpyc-findings/issues/15,jpyc,2022/02,bug;QA (Quality Assurance)
95,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,17,https://github.com/code-423n4/2022-02-jpyc-findings/issues/17,jpyc,2022/02,bug;G (Gas Optimization);resolved
95,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Safe Transfer Ownership Pattern is Not Used,1,https://github.com/code-423n4/2022-02-jpyc-findings/issues/1,jpyc,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
95,kyliek,0xdE624A36bcCd38DB850365b34Bc99ab3b1252415,3,Upgrade from FiatTokenV1 to FiatTokenV2 will fail,21,https://github.com/code-423n4/2022-02-jpyc-findings/issues/21,jpyc,2022/02,bug;invalid;sponsor disputed
95,kyliek,0xdE624A36bcCd38DB850365b34Bc99ab3b1252415,3,the implementation contract could selfdestruct ,22,https://github.com/code-423n4/2022-02-jpyc-findings/issues/22,jpyc,2022/02,bug;duplicate;invalid
95,kyliek,0xdE624A36bcCd38DB850365b34Bc99ab3b1252415,2,State variable should not be initialised directly for upgradeable contract,23,https://github.com/code-423n4/2022-02-jpyc-findings/issues/23,jpyc,2022/02,bug;invalid;disagree with severity
95,kyliek,0xdE624A36bcCd38DB850365b34Bc99ab3b1252415,Q,QA Report,24,https://github.com/code-423n4/2022-02-jpyc-findings/issues/24,jpyc,2022/02,bug;QA (Quality Assurance);resolved
95,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Users Can Avoid Being Blocklisted,11,https://github.com/code-423n4/2022-02-jpyc-findings/issues/11,jpyc,2022/02,bug;duplicate;question;QA (Quality Assurance)
95,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Minters Who Have Their Role Removed Can Make Use of Any Undistributed Tokens,14,https://github.com/code-423n4/2022-02-jpyc-findings/issues/14,jpyc,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity
95,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Users Can Bypass Whitelisting Restrictions,16,https://github.com/code-423n4/2022-02-jpyc-findings/issues/16,jpyc,2022/02,bug;QA (Quality Assurance);disagree with severity;sponsor acknowledged
95,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,2,Race condition ERC20 approve,10,https://github.com/code-423n4/2022-02-jpyc-findings/issues/10,jpyc,2022/02,bug;QA (Quality Assurance);disagree with severity
95,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,2,"Not whitelisted address can approve and burn exceeds 100,000 token",12,https://github.com/code-423n4/2022-02-jpyc-findings/issues/12,jpyc,2022/02,bug;duplicate;invalid;disagree with severity
95,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,2,Not whitelist address still can transfer more than 100 000 tokens.,13,https://github.com/code-423n4/2022-02-jpyc-findings/issues/13,jpyc,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity
95,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,G,Gas Optimizations,57,https://github.com/code-423n4/2022-02-jpyc-findings/issues/57,jpyc,2022/02,bug;G (Gas Optimization)
95,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,Q,QA Report,58,https://github.com/code-423n4/2022-02-jpyc-findings/issues/58,jpyc,2022/02,bug;QA (Quality Assurance)
95,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,The whitelist won't work if the contract is deployed with decimals != 18,56,https://github.com/code-423n4/2022-02-jpyc-findings/issues/56,jpyc,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity
95,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,The whitelist mechanism doesn't work,59,https://github.com/code-423n4/2022-02-jpyc-findings/issues/59,jpyc,2022/02,bug;duplicate;QA (Quality Assurance)
95,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,Gas Optimizations,61,https://github.com/code-423n4/2022-02-jpyc-findings/issues/61,jpyc,2022/02,bug;G (Gas Optimization)
95,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,Q,QA Report,44,https://github.com/code-423n4/2022-02-jpyc-findings/issues/44,jpyc,2022/02,bug;QA (Quality Assurance);resolved
95,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,G,Gas Optimizations,45,https://github.com/code-423n4/2022-02-jpyc-findings/issues/45,jpyc,2022/02,bug;G (Gas Optimization)
95,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,2,Configureminer is vulnerable Double spends,46,https://github.com/code-423n4/2022-02-jpyc-findings/issues/46,jpyc,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity
95,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,49,https://github.com/code-423n4/2022-02-jpyc-findings/issues/49,jpyc,2022/02,bug;G (Gas Optimization);resolved
95,Rhynorater,0xF84f301891Fe36BAF4B056290B528814dCD83B51,G,Gas Optimizations,60,https://github.com/code-423n4/2022-02-jpyc-findings/issues/60,jpyc,2022/02,bug;G (Gas Optimization)
95,Rhynorater,0xF84f301891Fe36BAF4B056290B528814dCD83B51,Q,QA Report,62,https://github.com/code-423n4/2022-02-jpyc-findings/issues/62,jpyc,2022/02,bug;QA (Quality Assurance)
95,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,2,https://github.com/code-423n4/2022-02-jpyc-findings/issues/2,jpyc,2022/02,bug;question;G (Gas Optimization);resolved
95,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,3,https://github.com/code-423n4/2022-02-jpyc-findings/issues/3,jpyc,2022/02,bug;QA (Quality Assurance);resolved
95,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,25,https://github.com/code-423n4/2022-02-jpyc-findings/issues/25,jpyc,2022/02,bug;QA (Quality Assurance)
95,securerodd,0x18564BE77AEd882651D2c0c791477BDe4a0F8C3d,Q,QA Report,31,https://github.com/code-423n4/2022-02-jpyc-findings/issues/31,jpyc,2022/02,bug;QA (Quality Assurance)
95,securerodd,0x18564BE77AEd882651D2c0c791477BDe4a0F8C3d,G,Gas Optimizations,32,https://github.com/code-423n4/2022-02-jpyc-findings/issues/32,jpyc,2022/02,bug;G (Gas Optimization)
95,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,G,Gas Optimizations,36,https://github.com/code-423n4/2022-02-jpyc-findings/issues/36,jpyc,2022/02,bug;G (Gas Optimization)
95,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,2,Re-entrancy  at FiatTokenV1.sol,37,https://github.com/code-423n4/2022-02-jpyc-findings/issues/37,jpyc,2022/02,bug;invalid;question
95,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,2,Re-entrancy at FiatTokenV2.sol,43,https://github.com/code-423n4/2022-02-jpyc-findings/issues/43,jpyc,2022/02,bug;invalid;sponsor disputed
95,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,G,Gas Optimizations,51,https://github.com/code-423n4/2022-02-jpyc-findings/issues/51,jpyc,2022/02,bug;G (Gas Optimization)
95,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,Q,QA Report,52,https://github.com/code-423n4/2022-02-jpyc-findings/issues/52,jpyc,2022/02,bug;QA (Quality Assurance);resolved
95,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,2,Potential DOS attack which does frontrunning FiatTokenV1 initialize() function,53,https://github.com/code-423n4/2022-02-jpyc-findings/issues/53,jpyc,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity
95,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,2,DOMAIN_SEPARATOR and VERSION should be updated in new version,54,https://github.com/code-423n4/2022-02-jpyc-findings/issues/54,jpyc,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity
95,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,38,https://github.com/code-423n4/2022-02-jpyc-findings/issues/38,jpyc,2022/02,bug;G (Gas Optimization)
95,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Gas Optimizations,28,https://github.com/code-423n4/2022-02-jpyc-findings/issues/28,jpyc,2022/02,bug;G (Gas Optimization)
86,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,16,https://github.com/code-423n4/2022-02-nested-findings/issues/16,nested,2022/02,bug;duplicate;G (Gas Optimization)
86,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Wrong logic around `areOperatorsImported`,17,https://github.com/code-423n4/2022-02-nested-findings/issues/17,nested,2022/02,bug;2 (Med Risk);sponsor confirmed
86,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Wrong rebuild cache logic,18,https://github.com/code-423n4/2022-02-nested-findings/issues/18,nested,2022/02,bug;duplicate;2 (Med Risk);sponsor confirmed
86,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,19,https://github.com/code-423n4/2022-02-nested-findings/issues/19,nested,2022/02,bug;duplicate;invalid
86,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,The store method allows you to store the same token twice,76,https://github.com/code-423n4/2022-02-nested-findings/issues/76,nested,2022/02,duplicate;2 (Med Risk)
86,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,3,Destroy can avoid the bulk of fees,27,https://github.com/code-423n4/2022-02-nested-findings/issues/27,nested,2022/02,bug;2 (Med Risk);disagree with severity
86,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,Q,QA Report,33,https://github.com/code-423n4/2022-02-nested-findings/issues/33,nested,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
86,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,2,areOperatorsImported has incorrect logic,75,https://github.com/code-423n4/2022-02-nested-findings/issues/75,nested,2022/02,duplicate;2 (Med Risk)
86,bobi,0x8F24B7bEe60c5421101e2e596b1008522368920F,G,Gas Optimizations,43,https://github.com/code-423n4/2022-02-nested-findings/issues/43,nested,2022/02,bug;G (Gas Optimization);sponsor acknowledged
86,bobi,0x8F24B7bEe60c5421101e2e596b1008522368920F,Q,QA Report,45,https://github.com/code-423n4/2022-02-nested-findings/issues/45,nested,2022/02,bug;QA (Quality Assurance);sponsor confirmed
86,bugwriter001,0x71e6B570A4CE5ab1AcE7BDF3Bb1E642955cbdacB,Q,QA Report,42,https://github.com/code-423n4/2022-02-nested-findings/issues/42,nested,2022/02,bug;invalid;sponsor disputed
86,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,No Transfer Ownership Pattern,1,https://github.com/code-423n4/2022-02-nested-findings/issues/1,nested,2022/02,bug;invalid;sponsor disputed
86,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Should limit the length of shareholders,2,https://github.com/code-423n4/2022-02-nested-findings/issues/2,nested,2022/02,bug;invalid;sponsor disputed
86,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,NestedAsset: mintWithMetadata and backfillTokenURI functions do not work,7,https://github.com/code-423n4/2022-02-nested-findings/issues/7,nested,2022/02,bug;invalid;sponsor disputed
86,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,ETH rewards cannot be received & released from `FeeSplitter`,15,https://github.com/code-423n4/2022-02-nested-findings/issues/15,nested,2022/02,bug;disagree with severity;G (Gas Optimization)
86,codexploder,0x4d828d0452FeF07D5AC3a46374C0E348b7CA22c6,Q,QA Report,30,https://github.com/code-423n4/2022-02-nested-findings/issues/30,nested,2022/02,bug;invalid;sponsor disputed
86,codexploder,0x4d828d0452FeF07D5AC3a46374C0E348b7CA22c6,G,Gas Optimizations,31,https://github.com/code-423n4/2022-02-nested-findings/issues/31,nested,2022/02,bug;duplicate;invalid;G (Gas Optimization)
86,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Royalty owner can steal Stakeholders fees,10,https://github.com/code-423n4/2022-02-nested-findings/issues/10,nested,2022/02,bug;duplicate;QA (Quality Assurance)
86,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,NFT owner can prevent fees by 1%,11,https://github.com/code-423n4/2022-02-nested-findings/issues/11,nested,2022/02,bug;invalid;sponsor disputed
86,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Duplicate tokens can be added which might cause DOS,12,https://github.com/code-423n4/2022-02-nested-findings/issues/12,nested,2022/02,bug;duplicate;2 (Med Risk)
86,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Reentrancy attack possible,13,https://github.com/code-423n4/2022-02-nested-findings/issues/13,nested,2022/02,bug;invalid;sponsor disputed
86,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Steal fund via malicious call data,14,https://github.com/code-423n4/2022-02-nested-findings/issues/14,nested,2022/02,bug;invalid;sponsor disputed
86,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,8,https://github.com/code-423n4/2022-02-nested-findings/issues/8,nested,2022/02,bug;G (Gas Optimization);sponsor confirmed
86,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,9,https://github.com/code-423n4/2022-02-nested-findings/issues/9,nested,2022/02,bug;QA (Quality Assurance);sponsor confirmed
86,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,71,https://github.com/code-423n4/2022-02-nested-findings/issues/71,nested,2022/02,bug;G (Gas Optimization);sponsor acknowledged
86,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,74,https://github.com/code-423n4/2022-02-nested-findings/issues/74,nested,2022/02,bug;invalid;sponsor disputed
86,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,28,https://github.com/code-423n4/2022-02-nested-findings/issues/28,nested,2022/02,bug;G (Gas Optimization);sponsor confirmed
86,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,3,No fees with amounts < 100,59,https://github.com/code-423n4/2022-02-nested-findings/issues/59,nested,2022/02,bug;duplicate;invalid;QA (Quality Assurance)
86,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,70,https://github.com/code-423n4/2022-02-nested-findings/issues/70,nested,2022/02,bug;QA (Quality Assurance);sponsor confirmed
86,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Check if a value is in an array before a push,79,https://github.com/code-423n4/2022-02-nested-findings/issues/79,nested,2022/02,duplicate;2 (Med Risk)
86,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,G,Gas Optimizations,39,https://github.com/code-423n4/2022-02-nested-findings/issues/39,nested,2022/02,bug;G (Gas Optimization);sponsor confirmed
86,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,Q,QA Report,40,https://github.com/code-423n4/2022-02-nested-findings/issues/40,nested,2022/02,bug;QA (Quality Assurance);sponsor confirmed
86,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,2,NestedFactory: User can utilise accidentally sent ETH funds via processOutputOrders() / processInputAndOutputOrders(),44,https://github.com/code-423n4/2022-02-nested-findings/issues/44,nested,2022/02,bug;2 (Med Risk);sponsor confirmed
86,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,48,https://github.com/code-423n4/2022-02-nested-findings/issues/48,nested,2022/02,bug;duplicate;G (Gas Optimization)
86,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,49,https://github.com/code-423n4/2022-02-nested-findings/issues/49,nested,2022/02,bug;invalid;QA (Quality Assurance)
86,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,50,https://github.com/code-423n4/2022-02-nested-findings/issues/50,nested,2022/02,bug;QA (Quality Assurance);sponsor confirmed
86,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,FeeSplitter releaseTokens and releaseTokensNoETH batch transfers can fail for ERC20 tokens that do not allow zero value transfers,29,https://github.com/code-423n4/2022-02-nested-findings/issues/29,nested,2022/02,bug;invalid;sponsor disputed
86,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,NestedFactory.addOperator/removeOperator have no effect until importOperators,62,https://github.com/code-423n4/2022-02-nested-findings/issues/62,nested,2022/02,bug;duplicate;2 (Med Risk)
86,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,G,Gas Optimizations,63,https://github.com/code-423n4/2022-02-nested-findings/issues/63,nested,2022/02,bug;invalid;G (Gas Optimization);sponsor disputed
86,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,34,https://github.com/code-423n4/2022-02-nested-findings/issues/34,nested,2022/02,bug;invalid;sponsor acknowledged;sponsor disputed
86,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,No fees due to loss of precision if too few decimals,35,https://github.com/code-423n4/2022-02-nested-findings/issues/35,nested,2022/02,bug;QA (Quality Assurance)
86,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,`FlatOperator` irrevocably locks all ether sent to it,36,https://github.com/code-423n4/2022-02-nested-findings/issues/36,nested,2022/02,bug;invalid;sponsor disputed
86,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,`NestedFactory` steals any ether sent to it when the calldata is empty,37,https://github.com/code-423n4/2022-02-nested-findings/issues/37,nested,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity
86,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,`NestedFactory` does not track operators properly,38,https://github.com/code-423n4/2022-02-nested-findings/issues/38,nested,2022/02,bug;2 (Med Risk);sponsor confirmed
86,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,G,Gas Optimizations,72,https://github.com/code-423n4/2022-02-nested-findings/issues/72,nested,2022/02,bug;G (Gas Optimization);sponsor confirmed
86,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,Q,QA Report,73,https://github.com/code-423n4/2022-02-nested-findings/issues/73,nested,2022/02,bug;invalid;question;QA (Quality Assurance)
86,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,Q,QA Report,46,https://github.com/code-423n4/2022-02-nested-findings/issues/46,nested,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
86,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,G,Gas Optimizations,47,https://github.com/code-423n4/2022-02-nested-findings/issues/47,nested,2022/02,bug;duplicate;G (Gas Optimization)
86,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Wrong implementation of OperatorResolver::areOperatorsImported,78,https://github.com/code-423n4/2022-02-nested-findings/issues/78,nested,2022/02,duplicate;2 (Med Risk)
86,m_smirnova2020,0x7054825962369C4C1EEF19B0f1D9148c0324Ec7A,G,Gas Optimizations,32,https://github.com/code-423n4/2022-02-nested-findings/issues/32,nested,2022/02,bug;G (Gas Optimization);sponsor confirmed
86,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,G,Gas Optimizations,57,https://github.com/code-423n4/2022-02-nested-findings/issues/57,nested,2022/02,bug;G (Gas Optimization);sponsor confirmed
86,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,Q,QA Report,58,https://github.com/code-423n4/2022-02-nested-findings/issues/58,nested,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
86,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,Q,QA Report,66,https://github.com/code-423n4/2022-02-nested-findings/issues/66,nested,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
86,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Gas Optimizations,67,https://github.com/code-423n4/2022-02-nested-findings/issues/67,nested,2022/02,bug;G (Gas Optimization);sponsor confirmed
86,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,function rebuildCache() in MixinOperatorResolver does not delete removed operators from operatorCache,77,https://github.com/code-423n4/2022-02-nested-findings/issues/77,nested,2022/02,duplicate;2 (Med Risk)
86,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,64,https://github.com/code-423n4/2022-02-nested-findings/issues/64,nested,2022/02,bug;duplicate;G (Gas Optimization)
86,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,Q,QA Report,65,https://github.com/code-423n4/2022-02-nested-findings/issues/65,nested,2022/02,bug;QA (Quality Assurance);sponsor confirmed
86,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,4,https://github.com/code-423n4/2022-02-nested-findings/issues/4,nested,2022/02,bug;QA (Quality Assurance);sponsor confirmed
86,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,5,https://github.com/code-423n4/2022-02-nested-findings/issues/5,nested,2022/02,bug;G (Gas Optimization);sponsor confirmed
86,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,3,Undesired behavior,6,https://github.com/code-423n4/2022-02-nested-findings/issues/6,nested,2022/02,bug;2 (Med Risk);disagree with severity
86,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,3,Gas fee optimization,20,https://github.com/code-423n4/2022-02-nested-findings/issues/20,nested,2022/02,bug;invalid;sponsor disputed
86,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,3,metaDataURI sanity not checked,21,https://github.com/code-423n4/2022-02-nested-findings/issues/21,nested,2022/02,bug;invalid;sponsor disputed
86,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,2,Shareholders can be deleted ,22,https://github.com/code-423n4/2022-02-nested-findings/issues/22,nested,2022/02,bug;invalid;sponsor disputed
86,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,2,updateShareHolder logic does not seem correct,23,https://github.com/code-423n4/2022-02-nested-findings/issues/23,nested,2022/02,bug;duplicate;QA (Quality Assurance)
86,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,Q,QA Report,24,https://github.com/code-423n4/2022-02-nested-findings/issues/24,nested,2022/02,bug;QA (Quality Assurance);sponsor confirmed
86,ShippooorDAO,0xac201e6de08a7b08ba0f7c08313d5655300cceef,G,Gas Optimizations,25,https://github.com/code-423n4/2022-02-nested-findings/issues/25,nested,2022/02,bug;duplicate;G (Gas Optimization)
86,ShippooorDAO,0xac201e6de08a7b08ba0f7c08313d5655300cceef,2,Fee distributions can be changed uniterally,26,https://github.com/code-423n4/2022-02-nested-findings/issues/26,nested,2022/02,bug;enhancement;QA (Quality Assurance)
86,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,2,No slippage protection,60,https://github.com/code-423n4/2022-02-nested-findings/issues/60,nested,2022/02,bug;invalid;sponsor disputed
86,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,3,Flashloan price manipulation can drain operators,61,https://github.com/code-423n4/2022-02-nested-findings/issues/61,nested,2022/02,bug;invalid;sponsor disputed
86,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,G,Gas Optimizations,68,https://github.com/code-423n4/2022-02-nested-findings/issues/68,nested,2022/02,bug;G (Gas Optimization);sponsor confirmed
86,sirhashalot,0x30cfB3B033dF25673b35Dc21a77329059d57a69b,Q,QA Report,69,https://github.com/code-423n4/2022-02-nested-findings/issues/69,nested,2022/02,bug;invalid;sponsor disputed
86,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Gas Optimizations,3,https://github.com/code-423n4/2022-02-nested-findings/issues/3,nested,2022/02,bug;invalid;G (Gas Optimization);sponsor acknowledged
86,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,55,https://github.com/code-423n4/2022-02-nested-findings/issues/55,nested,2022/02,bug;G (Gas Optimization);sponsor confirmed
86,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Gas Optimizations,51,https://github.com/code-423n4/2022-02-nested-findings/issues/51,nested,2022/02,bug;invalid;G (Gas Optimization);sponsor disputed
86,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,Q,QA Report,52,https://github.com/code-423n4/2022-02-nested-findings/issues/52,nested,2022/02,bug;QA (Quality Assurance);sponsor confirmed
86,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"[WP-H0] `Owner` of `ZeroExStorage` can drain all the funds from the protocol, and steal tokens from users' wallets",53,https://github.com/code-423n4/2022-02-nested-findings/issues/53,nested,2022/02,bug;invalid;sponsor disputed
86,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H1] `Owner` of `OwnableFactoryHandler` can impersonate `NestedFactory` and call `onlyFactory` methods and steal funds from the protocol,54,https://github.com/code-423n4/2022-02-nested-findings/issues/54,nested,2022/02,bug;invalid;sponsor disputed
86,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Gas Optimizations,56,https://github.com/code-423n4/2022-02-nested-findings/issues/56,nested,2022/02,bug;G (Gas Optimization);sponsor confirmed
93,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,37,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/37,pooltogether,2022/02,bug;G (Gas Optimization)
93,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,Q,QA Report,8,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/8,pooltogether,2022/02,bug;invalid;QA (Quality Assurance)
93,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,10,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/10,pooltogether,2022/02,bug;QA (Quality Assurance);sponsor confirmed
93,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,9,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/9,pooltogether,2022/02,bug;G (Gas Optimization);sponsor confirmed
93,chunter,0xB11BB446E28d4315B2bF91D1898B8E386e444534,Q,QA Report,19,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/19,pooltogether,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
93,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,DoS in `permitAndMulticall`,6,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/6,pooltogether,2022/02,bug;duplicate;2 (Med Risk)
93,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,Q,QA Report,7,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/7,pooltogether,2022/02,bug;invalid;QA (Quality Assurance)
93,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,11,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/11,pooltogether,2022/02,bug;invalid;G (Gas Optimization)
93,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,12,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/12,pooltogether,2022/02,bug;invalid;QA (Quality Assurance)
93,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Bypass MAX_LOCK duration + External calls even when delegation is locked,13,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/13,pooltogether,2022/02,bug;invalid;2 (Med Risk)
93,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Front-Runnable Initializer on pre-determined address ,34,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/34,pooltogether,2022/02,bug;invalid;2 (Med Risk)
93,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,35,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/35,pooltogether,2022/02,bug;QA (Quality Assurance);sponsor confirmed
93,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,36,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/36,pooltogether,2022/02,bug;G (Gas Optimization)
93,gpersoon,gpersoon.eth,2,Delegation contract creation can be frontrun,18,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/18,pooltogether,2022/02,bug;invalid;sponsor disputed
93,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Delegation is not payable,28,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/28,pooltogether,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
93,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,29,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/29,pooltogether,2022/02,bug;invalid;QA (Quality Assurance)
93,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,30,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/30,pooltogether,2022/02,bug;G (Gas Optimization)
93,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,Q,QA Report,16,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/16,pooltogether,2022/02,bug;QA (Quality Assurance);sponsor confirmed
93,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Gas Optimizations,17,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/17,pooltogether,2022/02,bug;G (Gas Optimization)
93,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,`TWABDelegator` allows easy circumvention of whale protection,21,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/21,pooltogether,2022/02,bug;invalid;3 (High Risk)
93,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Delegations staked with a `_to` parameter not equal to the `_delegator` lose out on rewards,23,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/23,pooltogether,2022/02,bug;invalid;2 (Med Risk)
93,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,38,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/38,pooltogether,2022/02,bug;G (Gas Optimization);sponsor confirmed
93,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,No check that _to address is not the contract itself ,1,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/1,pooltogether,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
93,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,The initialize() function can be called first by an attacker,2,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/2,pooltogether,2022/02,bug;invalid;3 (High Risk)
93,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,batched delegate calls used can result in double spending bug ,3,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/3,pooltogether,2022/02,bug;invalid;3 (High Risk)
93,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,permit() without updating nonce can result in replay attacks ,4,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/4,pooltogether,2022/02,bug;invalid;3 (High Risk)
93,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Use of external calls without reentrancy modifers,5,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/5,pooltogether,2022/02,bug;invalid;2 (Med Risk)
93,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,41,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/41,pooltogether,2022/02,bug;G (Gas Optimization)
93,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,42,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/42,pooltogether,2022/02,bug;invalid;QA (Quality Assurance)
93,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,`permitAndMulticall()` May Be Used to Steal Funds Or as a Denial Of Service if `_from` Is Not The Message Sender,20,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/20,pooltogether,2022/02,bug;2 (Med Risk);sponsor confirmed
93,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,G,Gas Optimizations,33,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/33,pooltogether,2022/02,bug;G (Gas Optimization);sponsor confirmed
93,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,G,Gas Optimizations,45,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/45,pooltogether,2022/02,bug;G (Gas Optimization)
93,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,Q,QA Report,46,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/46,pooltogether,2022/02,bug;duplicate;2 (Med Risk)
93,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,3,Using transfer instead of safeTransfer allows attacker to steal all staked tokens,47,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/47,pooltogether,2022/02,bug;invalid;3 (High Risk)
93,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,Gas Optimizations,48,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/48,pooltogether,2022/02,bug;G (Gas Optimization)
93,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,3,Anyone can be `_owner`,43,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/43,pooltogether,2022/02,bug;invalid;3 (High Risk)
93,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,44,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/44,pooltogether,2022/02,bug;G (Gas Optimization)
93,Rhynorater,0xF84f301891Fe36BAF4B056290B528814dCD83B51,Q,QA Report,40,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/40,pooltogether,2022/02,bug;QA (Quality Assurance);sponsor confirmed
93,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,14,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/14,pooltogether,2022/02,bug;QA (Quality Assurance);sponsor confirmed
93,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,15,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/15,pooltogether,2022/02,bug;G (Gas Optimization);sponsor confirmed
93,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,26,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/26,pooltogether,2022/02,bug;invalid;G (Gas Optimization)
93,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,G,Gas Optimizations,22,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/22,pooltogether,2022/02,bug;G (Gas Optimization)
93,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,Q,QA Report,24,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/24,pooltogether,2022/02,bug;invalid;QA (Quality Assurance)
93,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,32,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/32,pooltogether,2022/02,bug;G (Gas Optimization)
93,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M1] `delegator` and/or `representative` should be allowed for arbitrary code execution besides restricted operations during unlocked period,27,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/27,pooltogether,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
93,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Gas Optimizations,31,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/31,pooltogether,2022/02,bug;G (Gas Optimization)
93,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Gas Optimizations,39,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/39,pooltogether,2022/02,bug;G (Gas Optimization)
93,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,G,Gas Optimizations,25,https://github.com/code-423n4/2022-02-pooltogether-findings/issues/25,pooltogether,2022/02,bug;G (Gas Optimization)
87,0x0x0x,0x3Ca8C469ff8156eeBB1518FA631bf8ebc5EE0688,Q,QA Report,42,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/42,redacted cartel,2022/02,bug;QA (Quality Assurance)
87,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,12,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/12,redacted cartel,2022/02,bug;G (Gas Optimization);sponsor confirmed
87,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,No token with fee compatible,20,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/20,redacted cartel,2022/02,bug;duplicate;QA (Quality Assurance)
87,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,`ADMIN_ROLE` can steal tokens,21,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/21,redacted cartel,2022/02,bug;duplicate;invalid;2 (Med Risk);sponsor disputed
87,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Reentrancy in BribeVault by DEPOSITOR_ROLE,23,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/23,redacted cartel,2022/02,bug;duplicate;2 (Med Risk);sponsor disputed
87,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Reentrancy in BribeVault by DEPOSITOR_ROLE,24,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/24,redacted cartel,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
87,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Anyone can claim the reward,25,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/25,redacted cartel,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
87,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,26,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/26,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
87,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,Q,QA Report,41,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/41,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
87,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,DEPOSITOR_ROLE can be granted by the deployer of BribeVault and transfer briber's approved ERC20 tokens to bribeVault by specifying any bribeIdentifier and rewardIdentifier,1,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/1,redacted cartel,2022/02,bug;2 (Med Risk);sponsor disputed
87,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,18,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/18,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,BribeVault: Malicious feeRecipient or distributor can DOS transferBribes() function,19,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/19,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor disputed
87,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,Q,QA Report,29,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/29,redacted cartel,2022/02,bug;duplicate;2 (Med Risk);sponsor disputed
87,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`depositBribeERC20` does not explicitly prevent spoofing ETH,30,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/30,redacted cartel,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
87,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`depositBribeERC20` does not work well with fee-on-transfer tokens,31,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/31,redacted cartel,2022/02,bug;duplicate;QA (Quality Assurance)
87,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`transferBribes` can revert,32,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/32,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor disputed
87,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Distributions must not match actual bribes,33,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/33,redacted cartel,2022/02,bug;2 (Med Risk)
87,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Missing `safeTransfer`,34,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/34,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Wrong slippage check,35,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/35,redacted cartel,2022/02,bug;2 (Med Risk);sponsor disputed
87,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Race condition for round deposits and updates,36,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/36,redacted cartel,2022/02,bug;duplicate;QA (Quality Assurance);sponsor disputed
87,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Transfer fees not considered while updating bribe amount,10,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/10,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
87,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Depositor can spend funds of another Depositor,11,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/11,redacted cartel,2022/02,bug;2 (Med Risk);sponsor disputed
87,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Rewards can be lost,13,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/13,redacted cartel,2022/02,bug;2 (Med Risk);sponsor disputed
87,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,transferBribes could transfer before proposal deadline + Input validation,14,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/14,redacted cartel,2022/02,bug;2 (Med Risk);disagree with severity
87,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,8,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/8,redacted cartel,2022/02,bug;G (Gas Optimization);sponsor confirmed
87,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,9,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/9,redacted cartel,2022/02,bug;duplicate;2 (Med Risk);sponsor confirmed
87,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,Reentrancy in `depositBribeERC20` function,122,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/122,redacted cartel,2022/02,bug;2 (Med Risk)
87,d4rk,0x9f07Dc0F363a088BE82974e04AECb3C610C31fdd,G,Gas Optimizations,50,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/50,redacted cartel,2022/02,bug;G (Gas Optimization)
87,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,fees can be any amount,74,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/74,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,slippage protection doesn't work,76,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/76,redacted cartel,2022/02,bug;duplicate;2 (Med Risk);disagree with severity
87,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,admin can rug pull,77,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/77,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,Q,QA Report,78,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/78,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
87,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,100,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/100,redacted cartel,2022/02,bug;G (Gas Optimization)
87,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,101,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/101,redacted cartel,2022/02,bug;QA (Quality Assurance)
87,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,3,Result of transfer not checked,55,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/55,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,"Instead of `call()`, `transfer()` is used to claim rewards",57,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/57,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Consistently check account balance before and after transfers for Fee-On-Transfer discrepencies,58,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/58,redacted cartel,2022/02,bug;QA (Quality Assurance)
87,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Add a timelock to `BribeVault.sol:setFee()`,60,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/60,redacted cartel,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
87,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,`DEFAULT_ADMIN_ROLE` can steal all funds,61,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/61,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Add a Timelock and an Event to `ThecosomataETH.sol:setSlippage()`,62,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/62,redacted cartel,2022/02,bug;duplicate;invalid;2 (Med Risk)
87,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,2,Slippage check `expectedAmount ` in `ThecosomataETH. addLiquidity` can be frontrun,38,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/38,redacted cartel,2022/02,bug;duplicate;2 (Med Risk);sponsor confirmed
87,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,2,Admin Privilege - Owner can rug via `ThecosomataETH.withdraw`,39,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/39,redacted cartel,2022/02,bug;2 (Med Risk);sponsor disputed
87,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,2,BribeVault.emergencyWithdrawERC20 and BribeVault.emergencyWithdraw allow owner to take all funds out,40,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/40,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Admin role can do whatever they want with the fund in BribeVault,67,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/67,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,BribeVault does not respect fee setting,68,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/68,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Unsafe ERC20 transfer in `transferBribes`,69,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/69,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,`withdraw` function in ThecosomataETH allow withdawing any token,70,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/70,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,71,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/71,redacted cartel,2022/02,bug;G (Gas Optimization)
87,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,72,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/72,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
87,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Gas Optimizations,46,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/46,redacted cartel,2022/02,bug;G (Gas Optimization);sponsor confirmed
87,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,Q,QA Report,47,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/47,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
87,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,ThecosomataETH: Liquidity provision is prone to sandwich attacks,48,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/48,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,ThecosomataETH: Oracle price can be better secured (freshness + tamper-resistance),49,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/49,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,"RewardDistributor._claim uses native token payable.transfer, which is usafe for smart contracts",105,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/105,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,Unsafe ERC20 transfers are used in BribeVault and ThecosomataETH,108,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/108,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,ThecosomataETH.addLiquidity can be subject to sandwich attack,120,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/120,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,Q,QA Report,123,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/123,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
87,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,Forcing IERC20 when calling `transfer()` reverts when used with some ERC20 tokens,43,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/43,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Fee-on-transfer/deflationary tokens cause problems,44,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/44,redacted cartel,2022/02,bug;QA (Quality Assurance)
87,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,An admin can steal all vault tokens,45,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/45,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,59,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/59,redacted cartel,2022/02,bug;G (Gas Optimization)
87,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,depositBribeERC20() function has no token white list ,3,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/3,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
87,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,SafeERC20.sol is imported but not used in the transferBribes() function ,4,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/4,redacted cartel,2022/02,bug;2 (Med Risk);sponsor confirmed
87,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Admin alone has the power to transfer all ERCO20 tokens,5,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/5,redacted cartel,2022/02,bug;duplicate;2 (Med Risk);sponsor disputed
87,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,no back up action if price oracle fails ,6,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/6,redacted cartel,2022/02,bug;invalid;3 (High Risk);sponsor disputed
87,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Gas Optimizations,53,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/53,redacted cartel,2022/02,bug;G (Gas Optimization)
87,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Use `transfer` is bad practice,54,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/54,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Gas Optimizations,56,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/56,redacted cartel,2022/02,bug;invalid
87,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,G,Gas Optimizations,16,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/16,redacted cartel,2022/02,bug;G (Gas Optimization);sponsor confirmed
87,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,Q,QA Report,17,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/17,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
87,kenta,0x4eA563d048B56bB90528A6C37869184183ec890f,2,Send ether with call instead of transfer.,2,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/2,redacted cartel,2022/02,bug;2 (Med Risk);sponsor confirmed
87,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,"ETH rewards depend on BribeVault address, which might change",64,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/64,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,Chainlink based oracle not implemented yet,65,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/65,redacted cartel,2022/02,bug;duplicate;QA (Quality Assurance)
87,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,Q,QA Report,66,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/66,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
87,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Changing `bribeVault` in `RewardDistributor.sol` will Lock Current ETH Rewards,7,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/7,redacted cartel,2022/02,bug;2 (Med Risk);sponsor confirmed
87,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Non-Standard `ERC20` Tokens Are Not Supported,102,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/102,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`RewardDistributor._claim()` Will Always Revert if The Recipient is a Contract,106,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/106,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,3,Users Can Frontrun Calls to `updateRewardsMetadata()` And Claim Tokens Twice,118,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/118,redacted cartel,2022/02,bug;2 (Med Risk);sponsor confirmed
87,NoamYakov,0x972a7c4EE6d0988A010CafB09F794Cd1a169293F,3,Use of `IERC20.transfer()` instead of `SafeERC20.safeTransfer()`,119,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/119,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,G,Gas Optimizations,110,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/110,redacted cartel,2022/02,bug;G (Gas Optimization)
87,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,Q,QA Report,111,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/111,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
87,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,2,non erc20 token might revert when calling emergencyWithdrawERC20(),112,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/112,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,Omik,0x30fC9D86149c9241FDd5450748F8CB6734E1fdeF,2,"Missing briber check is equal to address(this), can cause imbalance between the bribe amount, and the actual balance that the contract has",114,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/114,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,2,BribeVault does not take into account feeOnTransfer tokens,93,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/93,redacted cartel,2022/02,bug;QA (Quality Assurance)
87,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,3,Rewards can be claimed if merkle proof is known,96,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/96,redacted cartel,2022/02,bug;invalid;3 (High Risk);sponsor disputed
87,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Tokens are directly transferred from briber to BribeVault,107,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/107,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,Arbitrary fees,109,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/109,redacted cartel,2022/02,bug;duplicate;2 (Med Risk);sponsor disputed
87,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Manipulations of setFee,113,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/113,redacted cartel,2022/02,bug;2 (Med Risk);disagree with severity
87,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,Q,QA Report,115,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/115,redacted cartel,2022/02,bug;QA (Quality Assurance)
87,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Gas Optimizations,116,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/116,redacted cartel,2022/02,bug;G (Gas Optimization)
87,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,2,Lack of event emission after sensitive actions,104,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/104,redacted cartel,2022/02,bug;duplicate;QA (Quality Assurance);sponsor confirmed
87,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,Q,QA Report,117,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/117,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
87,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,2,`DEPOSITOR_ROLE` can manipulate `b.amount` value,95,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/95,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,99,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/99,redacted cartel,2022/02,bug;G (Gas Optimization);sponsor confirmed
87,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,27,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/27,redacted cartel,2022/02,bug;QA (Quality Assurance)
87,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,28,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/28,redacted cartel,2022/02,bug;G (Gas Optimization);sponsor confirmed
87,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,37,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/37,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
87,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,2,Lack of input validation in `transferBribes()` can potentially freeze fund,22,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/22,redacted cartel,2022/02,bug;duplicate;invalid;2 (Med Risk)
87,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,2,Reentrancy in depositBribeERC20,80,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/80,redacted cartel,2022/02,bug;duplicate;2 (Med Risk);sponsor disputed
87,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,2,Reentrancy in depositBribeERC20 in TokemakBribe.sol,81,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/81,redacted cartel,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
87,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,2,Reentrancy in depositBribe in TokemakBribe.sol,82,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/82,redacted cartel,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
87,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,2,Missing input validation in _claim function at RewardDistributor.sol,92,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/92,redacted cartel,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
87,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,G,Gas Optimizations,94,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/94,redacted cartel,2022/02,bug;G (Gas Optimization)
87,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,Q,QA Report,97,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/97,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
87,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,124,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/124,redacted cartel,2022/02,bug;G (Gas Optimization)
87,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,Q,QA Report,83,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/83,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
87,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Gas Optimizations,84,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/84,redacted cartel,2022/02,bug;G (Gas Optimization);sponsor confirmed
87,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M8] `ThecosomataETH` should have a `min_mint_amount` parameter for `add_liquidity()` set off-chain instead of calculating the `min_mint_amount` on-chain,85,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/85,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H0] `DEFAULT_ADMIN_ROLE` of `BribeVault` can steal tokens from users' wallets,86,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/86,redacted cartel,2022/02,bug;2 (Med Risk)
87,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H1] Potential fund loss when briber uses tokens with fee on transfer as rewards,87,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/87,redacted cartel,2022/02,bug;duplicate;QA (Quality Assurance)
87,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H5] `RewardDistributor.setBribeVault()` can cause users who haven't claimed their native tokens yet can not claim the reward anymore,88,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/88,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H2] Improper control over the versions of distributions' metadata may lead to repeated claims of rewards,89,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/89,redacted cartel,2022/02,bug;2 (Med Risk);sponsor disputed
87,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H3] Centralization Risk: Funds can be frozen when critical key holders lose access to their keys,90,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/90,redacted cartel,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
87,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H4] Input should be validated on-chain to avoid fund loss caused by admin's misinput,91,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/91,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,Q,QA Report,103,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/103,redacted cartel,2022/02,bug;QA (Quality Assurance);sponsor confirmed
87,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,2,Lack Of Return Value Check On an Oracle (ThecosomataETH.sol),121,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/121,redacted cartel,2022/02,bug;duplicate;QA (Quality Assurance)
87,ye0lde,0x81D4cf8A3892557e4a1571e97b88f0351eF0dcFD,G,Gas Optimizations,79,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/79,redacted cartel,2022/02,bug;G (Gas Optimization)
87,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,2,"Instead of call(), transfer() is used to withdraw ETH",51,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/51,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,2,DEFAULT_ADMIN_ROLE has power to withdraw all fund may raise red flags for investors,52,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/52,redacted cartel,2022/02,bug;duplicate;2 (Med Risk)
87,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,G,Gas Optimizations,63,https://github.com/code-423n4/2022-02-redacted-cartel-findings/issues/63,redacted cartel,2022/02,bug;G (Gas Optimization)
92,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,70,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/70,tribe turbo,2022/02,bug;G (Gas Optimization)
92,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Unchecked `feiAmount` range ,10,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/10,tribe turbo,2022/02,bug;duplicate;invalid;2 (Med Risk)
92,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,12,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/12,tribe turbo,2022/02,bug;invalid;G (Gas Optimization)
92,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,14,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/14,tribe turbo,2022/02,bug;QA (Quality Assurance);sponsor acknowledged;sponsor disputed
92,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Wrong pragma,15,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/15,tribe turbo,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
92,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,3,"ERC4626 mints token amount, not number of shares",20,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/20,tribe turbo,2022/02,bug;duplicate;3 (High Risk)
92,asgeir,0xEB0C4F040FF0e2278bB2c14B7CC9c357467C83e3,3,The safe owner can steal the safe's collateral,35,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/35,tribe turbo,2022/02,bug;QA (Quality Assurance);disagree with severity
92,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2,Timelock for critical changes,48,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/48,tribe turbo,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
92,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2,ERC20 decimals can be different than 18,49,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/49,tribe turbo,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
92,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,Q,QA Report,73,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/73,tribe turbo,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
92,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,G,Gas Optimizations,77,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/77,tribe turbo,2022/02,bug;G (Gas Optimization)
92,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"TurboRouter: deposit(), mint(), createSafeAndDeposit() and createSafeAndDepositAndBoost() functions do not work",16,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/16,tribe turbo,2022/02,bug;3 (High Risk);sponsor disputed
92,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"TurboRouter: deposit(), mint(), createSafeAndDeposit() and createSafeAndDepositAndBoost() functions do not work",17,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/17,tribe turbo,2022/02,bug;invalid;2 (Med Risk);withdrawn by warden
92,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,"TurboRouter: deposit(), mint(), createSafeAndDeposit() and createSafeAndDepositAndBoost() functions may be vulnerable to FRONT-RUN attack",24,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/24,tribe turbo,2022/02,bug;invalid;3 (High Risk);sponsor disputed
92,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,TurboRouter: Dangerous PeripheryPayments Contract,25,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/25,tribe turbo,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
92,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,3,ERC4626 mints more shares than it should,34,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/34,tribe turbo,2022/02,bug;duplicate;3 (High Risk)
92,CertoraInc,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,3,Lack of approve after creating a safe in TurboRouter,40,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/40,tribe turbo,2022/02,bug;duplicate;3 (High Risk)
92,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,46,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/46,tribe turbo,2022/02,bug;duplicate;2 (Med Risk);resolved
92,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,47,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/47,tribe turbo,2022/02,bug;G (Gas Optimization)
92,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,ERC4626 does not work with fee-on-transfer tokens,26,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/26,tribe turbo,2022/02,bug;2 (Med Risk);sponsor disputed
92,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,ERC4626 mint uses wrong `amount`,27,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/27,tribe turbo,2022/02,bug;3 (High Risk)
92,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`ERC4626RouterBase.withdraw` should use a **max** shares out check,28,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/28,tribe turbo,2022/02,bug;2 (Med Risk);disagree with severity;resolved
92,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Slurp can be frontrun with fee increase,29,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/29,tribe turbo,2022/02,bug;2 (Med Risk);sponsor disputed
92,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,`totalFeiBoosted` vars can desync in `TurboSafe` and `TurboMaster`,30,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/30,tribe turbo,2022/02,bug;duplicate;2 (Med Risk);disagree with severity
92,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`TurboGibber.impound` can be frontrun,31,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/31,tribe turbo,2022/02,bug;QA (Quality Assurance);disagree with severity;sponsor acknowledged
92,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Slurp misses boost cap checks,11,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/11,tribe turbo,2022/02,bug;duplicate;invalid;2 (Med Risk)
92,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,13,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/13,tribe turbo,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
92,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,8,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/8,tribe turbo,2022/02,bug;G (Gas Optimization)
92,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Bypass Boosting cap set by Admin,9,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/9,tribe turbo,2022/02,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
92,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,58,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/58,tribe turbo,2022/02,bug;QA (Quality Assurance);sponsor acknowledged;sponsor disputed
92,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,"Add a timelock to `setDefaultFeePercentage()`,`setCustomFeePercentageForCollateral()`, `setCustomFeePercentageForSafe()` and `setMinDebtPercentageForSaving()`",60,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/60,tribe turbo,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
92,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,65,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/65,tribe turbo,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
92,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,72,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/72,tribe turbo,2022/02,bug;G (Gas Optimization)
92,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,2,getFeePercentageForSafe may send lower fees,57,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/57,tribe turbo,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
92,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Gibber can take any amount from safes,62,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/62,tribe turbo,2022/02,bug;2 (Med Risk);sponsor disputed
92,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,63,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/63,tribe turbo,2022/02,bug;G (Gas Optimization)
92,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,64,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/64,tribe turbo,2022/02,bug;duplicate;2 (Med Risk);sponsor acknowledged;sponsor disputed
92,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,TurboSafe.sweep can't control several addresses per token,41,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/41,tribe turbo,2022/02,bug;QA (Quality Assurance);disagree with severity;sponsor acknowledged
92,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,TurboGibber do not check the market value of the collateral removed,76,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/76,tribe turbo,2022/02,bug;duplicate;invalid
92,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,3,Interest surplus is accumulated on Master accounting update in TurboSafe.less,78,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/78,tribe turbo,2022/02,bug;duplicate;2 (Med Risk)
92,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,21,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/21,tribe turbo,2022/02,bug;QA (Quality Assurance);disagree with severity;sponsor acknowledged
92,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,22,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/22,tribe turbo,2022/02,bug;G (Gas Optimization)
92,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,`totalAssets()` can overflow leading to the incorrect pricing of assets,23,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/23,tribe turbo,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
92,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Turbo Safe's can be created with malicious tokens ,4,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/4,tribe turbo,2022/02,bug;invalid;3 (High Risk);sponsor disputed
92,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,canSafeBoostVault() doesn't actually check the feiAmount passed in,5,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/5,tribe turbo,2022/02,bug;invalid;3 (High Risk);sponsor disputed
92,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,onSafeSlurp() can be called by anyone on TurboMaster.sol,6,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/6,tribe turbo,2022/02,bug;invalid;3 (High Risk);sponsor disputed
92,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,authenticate modifier can be bypassed ,7,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/7,tribe turbo,2022/02,bug;invalid;3 (High Risk);sponsor disputed
92,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,50,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/50,tribe turbo,2022/02,bug;invalid;G (Gas Optimization)
92,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,74,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/74,tribe turbo,2022/02,bug;G (Gas Optimization)
92,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,75,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/75,tribe turbo,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
92,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,2,[M-00] Slurp Miss on Turbo Savior Save,42,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/42,tribe turbo,2022/02,bug;duplicate;QA (Quality Assurance);sponsor disputed
92,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,G,Gas Optimizations,43,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/43,tribe turbo,2022/02,bug;G (Gas Optimization)
92,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,Q,QA Report,44,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/44,tribe turbo,2022/02,bug;QA (Quality Assurance);resolved
92,nascent,0xcCd72BeA12f3927063bE3D8798a4b74082713cb5,Q,QA Report,45,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/45,tribe turbo,2022/02,bug;invalid;sponsor disputed
92,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,Q,QA Report,66,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/66,tribe turbo,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
92,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,3,Seems to be an inattention error,18,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/18,tribe turbo,2022/02,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
92,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,3,Mint does not produce the intended amount of shares,19,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/19,tribe turbo,2022/02,bug;duplicate;invalid;3 (High Risk)
92,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,3,IERC4626RouterBase - withdraw - slippage does not work,51,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/51,tribe turbo,2022/02,bug;duplicate;2 (Med Risk)
92,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,2,TurboSafe - should override `maxWithdraw` and `maxRedeem`,67,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/67,tribe turbo,2022/02,bug;invalid;2 (Med Risk)
92,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,G,Gas Optimizations,68,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/68,tribe turbo,2022/02,bug;G (Gas Optimization)
92,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,Q,QA Report,69,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/69,tribe turbo,2022/02,bug;invalid;QA (Quality Assurance);sponsor disputed
92,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,Q,QA Report,71,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/71,tribe turbo,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
92,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,1,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/1,tribe turbo,2022/02,bug;invalid;G (Gas Optimization);sponsor acknowledged
92,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,2,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/2,tribe turbo,2022/02,bug;QA (Quality Assurance)
92,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,3,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/3,tribe turbo,2022/02,bug;G (Gas Optimization)
92,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,User can't create TurboSafe through `TurboMaster.createSafe()`,32,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/32,tribe turbo,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
92,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,`TurboRouter` can't interact with existing `TurboSafe` because of the authentication modifier,33,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/33,tribe turbo,2022/02,bug;invalid;2 (Med Risk);sponsor disputed
92,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,`ERC4626.mint()` doesn't mint the correct amount,38,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/38,tribe turbo,2022/02,bug;duplicate;3 (High Risk)
92,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,39,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/39,tribe turbo,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
92,samruna,0xa3868f5fdef294684a843808415e1a1c8223bf6d,Q,QA Report,36,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/36,tribe turbo,2022/02,bug;QA (Quality Assurance);sponsor acknowledged
92,samruna,0xa3868f5fdef294684a843808415e1a1c8223bf6d,G,Gas Optimizations,37,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/37,tribe turbo,2022/02,bug;G (Gas Optimization)
92,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,59,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/59,tribe turbo,2022/02,bug;G (Gas Optimization)
92,ubase,0x8c7103805e57C6Ad17c8533Ae513292e0CBa3CBD,G,Gas Optimizations,61,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/61,tribe turbo,2022/02,bug;invalid;G (Gas Optimization)
92,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Gas Optimizations,52,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/52,tribe turbo,2022/02,bug;G (Gas Optimization)
92,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,Q,QA Report,53,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/53,tribe turbo,2022/02,bug;QA (Quality Assurance)
92,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M1] `TurboClerk.sol#getFeePercentageForSafe()` Wrong implementation makes the fees being mischarged when `customFeePercentageForSafe` or `customFeePercentageForCollateral` is set to `0`,54,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/54,tribe turbo,2022/02,bug;duplicate;QA (Quality Assurance);disagree with severity;sponsor acknowledged
92,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M2] Wrong implementation of `TurboSafe.sol#less()` may cause boosted record value in TurboMaster bigger than actual lead to `BoostCapForVault` and `BoostCapForCollateral` to be permanently occupied,55,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/55,tribe turbo,2022/02,bug;2 (Med Risk)
92,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M3] `TurboRouter.sol#createSafeAndDeposit*()` CreateSafeAndDeposit combo methods won't work as an allowance cannot be granted to a newly created Safe for deposit,56,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/56,tribe turbo,2022/02,bug;duplicate;3 (High Risk);sponsor disputed
103,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,28,https://github.com/code-423n4/2022-03-lifinance-findings/issues/28,lifinance,2022/03,bug;G (Gas Optimization);resolved;sponsor acknowledged
103,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,Q,QA Report,29,https://github.com/code-423n4/2022-03-lifinance-findings/issues/29,lifinance,2022/03,bug;sponsor disputed;QA (Quality Assurance)
103,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,Q,QA Report,56,https://github.com/code-423n4/2022-03-lifinance-findings/issues/56,lifinance,2022/03,bug;resolved;QA (Quality Assurance)
103,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Only one DEX removed while performing `batchRemoveDEX()` in `DexManagerFacet.sol`,57,https://github.com/code-423n4/2022-03-lifinance-findings/issues/57,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,SwapData attributes can be different than calldata attributes,58,https://github.com/code-423n4/2022-03-lifinance-findings/issues/58,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,3,Reliance on lifiData.receivingAssetId can cause loss of funds,75,https://github.com/code-423n4/2022-03-lifinance-findings/issues/75,lifinance,2022/03,bug;3 (High Risk)
103,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,3,All swapping functions lack checks for returned tokens,76,https://github.com/code-423n4/2022-03-lifinance-findings/issues/76,lifinance,2022/03,bug;3 (High Risk);resolved
103,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,G,Gas Optimizations,77,https://github.com/code-423n4/2022-03-lifinance-findings/issues/77,lifinance,2022/03,bug;G (Gas Optimization);resolved
103,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,G,Gas Optimizations,146,https://github.com/code-423n4/2022-03-lifinance-findings/issues/146,lifinance,2022/03,bug;G (Gas Optimization)
103,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,Q,QA Report,147,https://github.com/code-423n4/2022-03-lifinance-findings/issues/147,lifinance,2022/03,bug;QA (Quality Assurance)
103,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,99,https://github.com/code-423n4/2022-03-lifinance-findings/issues/99,lifinance,2022/03,bug;G (Gas Optimization);resolved;sponsor acknowledged
103,ACai, 0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,3,Potential reentrancy vulnerability in AnyswapFacet,91,https://github.com/code-423n4/2022-03-lifinance-findings/issues/91,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,ACai, 0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,G,Gas Optimizations,93,https://github.com/code-423n4/2022-03-lifinance-findings/issues/93,lifinance,2022/03,bug;G (Gas Optimization);resolved
103,ACai, 0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,3,There is a potential reentrancy attack in the AnyswapFacet contract.,94,https://github.com/code-423n4/2022-03-lifinance-findings/issues/94,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,aga7hokakological,0x58FdCeBBc23cA4244e8E7c83739905165671f703,2,No contract existence check on LiFiDiamond.sol#fallback() function,79,https://github.com/code-423n4/2022-03-lifinance-findings/issues/79,lifinance,2022/03,bug;disagree with severity;sponsor acknowledged;QA (Quality Assurance)
103,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,Q,QA Report,26,https://github.com/code-423n4/2022-03-lifinance-findings/issues/26,lifinance,2022/03,bug;QA (Quality Assurance)
103,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2,approveERC20() uses unlimited approval,120,https://github.com/code-423n4/2022-03-lifinance-findings/issues/120,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,Q,QA Report,121,https://github.com/code-423n4/2022-03-lifinance-findings/issues/121,lifinance,2022/03,bug;resolved;QA (Quality Assurance)
103,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,G,Gas Optimizations,122,https://github.com/code-423n4/2022-03-lifinance-findings/issues/122,lifinance,2022/03,bug;G (Gas Optimization);resolved
103,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,3,batchRemoveDex() will only remove a single dex,73,https://github.com/code-423n4/2022-03-lifinance-findings/issues/73,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2,OnlyOwner functions that make critical changes should have a timelock.,74,https://github.com/code-423n4/2022-03-lifinance-findings/issues/74,lifinance,2022/03,bug;duplicate;2 (Med Risk);sponsor acknowledged
103,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,LibSwap: The excess tokens provided by the user are not returned and can be used by other users.,11,https://github.com/code-423n4/2022-03-lifinance-findings/issues/11,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,Malicious users can steal the tokens in the contract,9,https://github.com/code-423n4/2022-03-lifinance-findings/issues/9,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,45,https://github.com/code-423n4/2022-03-lifinance-findings/issues/45,lifinance,2022/03,bug;G (Gas Optimization);resolved;sponsor acknowledged
103,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,46,https://github.com/code-423n4/2022-03-lifinance-findings/issues/46,lifinance,2022/03,bug;resolved;QA (Quality Assurance)
103,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,2,low-level calls returning success although it doesn't succeeded ,47,https://github.com/code-423n4/2022-03-lifinance-findings/issues/47,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,3,users can bypass the approveTo checks,48,https://github.com/code-423n4/2022-03-lifinance-findings/issues/48,lifinance,2022/03,bug;duplicate;disagree with severity;sponsor acknowledged;QA (Quality Assurance)
103,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Incorrect amount approved,30,https://github.com/code-423n4/2022-03-lifinance-findings/issues/30,lifinance,2022/03,bug;duplicate;2 (Med Risk);sponsor disputed
103,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Funds can be stolen,31,https://github.com/code-423n4/2022-03-lifinance-findings/issues/31,lifinance,2022/03,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
103,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Dex removal is not done properly,32,https://github.com/code-423n4/2022-03-lifinance-findings/issues/32,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,42,https://github.com/code-423n4/2022-03-lifinance-findings/issues/42,lifinance,2022/03,bug;QA (Quality Assurance)
103,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,43,https://github.com/code-423n4/2022-03-lifinance-findings/issues/43,lifinance,2022/03,bug;G (Gas Optimization)
103,cthulhu_cult,0xDa61e42AF1b4556Fa39Acc97A5DB9C68c2Ad0915,Q,QA Report,116,https://github.com/code-423n4/2022-03-lifinance-findings/issues/116,lifinance,2022/03,bug;resolved;QA (Quality Assurance)
103,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,arbitrary call can be exploited to steal money,184,https://github.com/code-423n4/2022-03-lifinance-findings/issues/184,lifinance,2022/03,invalid;sponsor disputed
103,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,dangerous payable function,185,https://github.com/code-423n4/2022-03-lifinance-findings/issues/185,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,admin can rug,186,https://github.com/code-423n4/2022-03-lifinance-findings/issues/186,lifinance,2022/03,bug;duplicate;2 (Med Risk);sponsor disputed
103,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,182,https://github.com/code-423n4/2022-03-lifinance-findings/issues/182,lifinance,2022/03,bug;G (Gas Optimization);resolved;sponsor acknowledged
103,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,190,https://github.com/code-423n4/2022-03-lifinance-findings/issues/190,lifinance,2022/03,bug;QA (Quality Assurance)
103,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Enforced Owner Can Extract Funds From The Contract,210,https://github.com/code-423n4/2022-03-lifinance-findings/issues/210,lifinance,2022/03,bug;duplicate;2 (Med Risk);sponsor disputed
103,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Missing Size Match Check Will Revert To On The Init function,211,https://github.com/code-423n4/2022-03-lifinance-findings/issues/211,lifinance,2022/03,duplicate;disagree with severity;resolved;QA (Quality Assurance)
103,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Enforced Owner Can Overwrite Existing Config Will Cause to Lock Of Funds On The One Chain,214,https://github.com/code-423n4/2022-03-lifinance-findings/issues/214,lifinance,2022/03,bug;duplicate;sponsor disputed;QA (Quality Assurance)
103,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Owner Can Stop Bridge All Functionality Only With One Change,216,https://github.com/code-423n4/2022-03-lifinance-findings/issues/216,lifinance,2022/03,bug;duplicate;2 (Med Risk);sponsor acknowledged
103,dimitri,0x84C7518D2a1802ce1dC2D489717892a0376f3365,G,Gas Optimizations,22,https://github.com/code-423n4/2022-03-lifinance-findings/issues/22,lifinance,2022/03,bug;G (Gas Optimization);resolved
103,dimitri,0x84C7518D2a1802ce1dC2D489717892a0376f3365,Q,QA Report,72,https://github.com/code-423n4/2022-03-lifinance-findings/issues/72,lifinance,2022/03,bug;resolved;QA (Quality Assurance)
103,dirk_y,0x00db4d01c8953a707239DC168E466F64dD97Fe9c,3,An attacker can drain the LiFiDiamond contract of any ERC20 tokens,12,https://github.com/code-423n4/2022-03-lifinance-findings/issues/12,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,dirk_y,0x00db4d01c8953a707239DC168E466F64dD97Fe9c,2,User can't complete a cross chain transaction with NXTP ,13,https://github.com/code-423n4/2022-03-lifinance-findings/issues/13,lifinance,2022/03,invalid;sponsor disputed
103,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,44,https://github.com/code-423n4/2022-03-lifinance-findings/issues/44,lifinance,2022/03,bug;G (Gas Optimization);resolved;sponsor acknowledged
103,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,52,https://github.com/code-423n4/2022-03-lifinance-findings/issues/52,lifinance,2022/03,bug;resolved;QA (Quality Assurance)
103,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,"Instead of `call()`, `transfer()` is used for the withdraw mechanism",54,https://github.com/code-423n4/2022-03-lifinance-findings/issues/54,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,FSchmoede,0xa806D8B9be2C56376264F81F62416cB704ce81BD,G,Gas Optimizations,100,https://github.com/code-423n4/2022-03-lifinance-findings/issues/100,lifinance,2022/03,bug;G (Gas Optimization);resolved;sponsor acknowledged
103,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,172,https://github.com/code-423n4/2022-03-lifinance-findings/issues/172,lifinance,2022/03,bug;G (Gas Optimization);resolved;sponsor acknowledged
103,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,2,Failed transfer with low level call won't revert,101,https://github.com/code-423n4/2022-03-lifinance-findings/issues/101,lifinance,2022/03,bug;2 (Med Risk);resolved
103,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,2,Missing require can lead to funds lost,102,https://github.com/code-423n4/2022-03-lifinance-findings/issues/102,lifinance,2022/03,bug;duplicate;3 (High Risk)
103,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,174,https://github.com/code-423n4/2022-03-lifinance-findings/issues/174,lifinance,2022/03,bug;invalid;resolved;sponsor acknowledged;QA (Quality Assurance)
103,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,175,https://github.com/code-423n4/2022-03-lifinance-findings/issues/175,lifinance,2022/03,bug;invalid;G (Gas Optimization);sponsor acknowledged
103,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,User will lose value on swap-and-bridge / multi-swap ,181,https://github.com/code-423n4/2022-03-lifinance-findings/issues/181,lifinance,2022/03,bug;duplicate;invalid;2 (Med Risk);disagree with severity;sponsor acknowledged
103,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,2,No zero address check for `initNXTP`.,61,https://github.com/code-423n4/2022-03-lifinance-findings/issues/61,lifinance,2022/03,duplicate;disagree with severity;resolved;QA (Quality Assurance)
103,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,2,Lack of checks may lead to faulty data collection in `startBridgeTokensViaNXTP`,62,https://github.com/code-423n4/2022-03-lifinance-findings/issues/62,lifinance,2022/03,bug;duplicate;disagree with severity;resolved;QA (Quality Assurance)
103,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,2,Comprimised whitelisted dex could drain all funds from LiFi.,63,https://github.com/code-423n4/2022-03-lifinance-findings/issues/63,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,2, No zero address check for `setContractOwner`,64,https://github.com/code-423n4/2022-03-lifinance-findings/issues/64,lifinance,2022/03,bug;duplicate;QA (Quality Assurance)
103,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,2,Reputation Risks with `contractOwner`,65,https://github.com/code-423n4/2022-03-lifinance-findings/issues/65,lifinance,2022/03,bug;2 (Med Risk);sponsor acknowledged
103,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,2,Anyone can get swaps for free given certain conditions in `swap`.,66,https://github.com/code-423n4/2022-03-lifinance-findings/issues/66,lifinance,2022/03,bug;2 (Med Risk);sponsor acknowledged
103,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,2,Lack of checks between `_swapData` and `_lifiData` could lead to loss of funds and reputation risk.,67,https://github.com/code-423n4/2022-03-lifinance-findings/issues/67,lifinance,2022/03,bug;duplicate;3 (High Risk)
103,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,Q,QA Report,68,https://github.com/code-423n4/2022-03-lifinance-findings/issues/68,lifinance,2022/03,bug;resolved;QA (Quality Assurance)
103,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,G,Gas Optimizations,69,https://github.com/code-423n4/2022-03-lifinance-findings/issues/69,lifinance,2022/03,bug;G (Gas Optimization);resolved
103,Hawkeye,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,G,Gas Optimizations,206,https://github.com/code-423n4/2022-03-lifinance-findings/issues/206,lifinance,2022/03,bug;G (Gas Optimization);resolved;sponsor acknowledged
103,Hawkeye,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,215,https://github.com/code-423n4/2022-03-lifinance-findings/issues/215,lifinance,2022/03,bug;QA (Quality Assurance)
103,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,LibSwap: Excess funds from swaps are not returned,33,https://github.com/code-423n4/2022-03-lifinance-findings/issues/33,lifinance,2022/03,bug;2 (Med Risk);disagree with severity;resolved
103,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,DexManagerFacet: batchRemoveDex() removes first dex only,34,https://github.com/code-423n4/2022-03-lifinance-findings/issues/34,lifinance,2022/03,bug;2 (Med Risk);resolved
103,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,cBridge integration fails to send native tokens,35,https://github.com/code-423n4/2022-03-lifinance-findings/issues/35,lifinance,2022/03,bug;2 (Med Risk);resolved
103,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,Latent contract funds can be used for swaps,36,https://github.com/code-423n4/2022-03-lifinance-findings/issues/36,lifinance,2022/03,bug;duplicate;2 (Med Risk);sponsor acknowledged
103,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,CBridgeFaucet: Users may lose excess native funds if msg.value > specified amount,37,https://github.com/code-423n4/2022-03-lifinance-findings/issues/37,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,AnyswapFaucet: Unlimited token allowance can be given to malicious router,38,https://github.com/code-423n4/2022-03-lifinance-findings/issues/38,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Gas Optimizations,39,https://github.com/code-423n4/2022-03-lifinance-findings/issues/39,lifinance,2022/03,bug;G (Gas Optimization);resolved
103,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,Q,QA Report,40,https://github.com/code-423n4/2022-03-lifinance-findings/issues/40,lifinance,2022/03,bug;QA (Quality Assurance)
103,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,3,Funds lost when using Anyswap with token address set to 0,157,https://github.com/code-423n4/2022-03-lifinance-findings/issues/157,lifinance,2022/03,bug;sponsor disputed;QA (Quality Assurance)
103,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,Swaps can be sandwiched as total receivable can't be user controlled,104,https://github.com/code-423n4/2022-03-lifinance-findings/issues/104,lifinance,2022/03,bug;invalid;disagree with severity;sponsor acknowledged
103,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,Q,QA Report,105,https://github.com/code-423n4/2022-03-lifinance-findings/issues/105,lifinance,2022/03,bug;QA (Quality Assurance)
103,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,"WithdrawFacet's withdraw calls native payable.transfer, which can be unusable for DiamondStorage owner contract",14,https://github.com/code-423n4/2022-03-lifinance-findings/issues/14,lifinance,2022/03,bug;2 (Med Risk);resolved
103,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,"Fee on transfer tokens aren't supported in AnyswapFacet, HopFacet, CBridgeFacet and NXTPFacet",18,https://github.com/code-423n4/2022-03-lifinance-findings/issues/18,lifinance,2022/03,bug;duplicate;sponsor disputed;QA (Quality Assurance)
103,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,DexManagerFacet's batchRemoveDex removes first DEX only,19,https://github.com/code-423n4/2022-03-lifinance-findings/issues/19,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,"CBridgeFacet doesn't transfer native tokens for bridging, possibly freezing the funds",27,https://github.com/code-423n4/2022-03-lifinance-findings/issues/27,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,Native token balance can be stolen as LibSwap's swap is reusing msg.value,41,https://github.com/code-423n4/2022-03-lifinance-findings/issues/41,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,ERC20 bridging functions do not revert on non-zero msg.value,53,https://github.com/code-423n4/2022-03-lifinance-findings/issues/53,lifinance,2022/03,bug;2 (Med Risk)
103,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,CBridgeFacet's startBridgeTokensViaCBridge do not revert on excess msg.value,55,https://github.com/code-423n4/2022-03-lifinance-findings/issues/55,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,AnyswapFacet and CBridgeFacet don't account for msg.value when use native balance,59,https://github.com/code-423n4/2022-03-lifinance-findings/issues/59,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,Any ERC20 token from the Diamond balance can be stolen,92,https://github.com/code-423n4/2022-03-lifinance-findings/issues/92,lifinance,2022/03,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
103,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,"NXTP bridge operations can be completed with the wrong `assetId`, `receiver`, and or `amount`",195,https://github.com/code-423n4/2022-03-lifinance-findings/issues/195,lifinance,2022/03,bug;duplicate;sponsor disputed;QA (Quality Assurance)
103,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,196,https://github.com/code-423n4/2022-03-lifinance-findings/issues/196,lifinance,2022/03,bug;G (Gas Optimization);resolved
103,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,197,https://github.com/code-423n4/2022-03-lifinance-findings/issues/197,lifinance,2022/03,bug;QA (Quality Assurance)
103,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,No contract existence check in LifiDiamond.sol fallback function,2,https://github.com/code-423n4/2022-03-lifinance-findings/issues/2,lifinance,2022/03,invalid;sponsor disputed
103,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,use of transfer() instead of call()  to send eth,144,https://github.com/code-423n4/2022-03-lifinance-findings/issues/144,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,"`if msg.value > amount` , then extra eth is not transfered back to user",145,https://github.com/code-423n4/2022-03-lifinance-findings/issues/145,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,Q,QA Report,148,https://github.com/code-423n4/2022-03-lifinance-findings/issues/148,lifinance,2022/03,bug;resolved;QA (Quality Assurance)
103,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,3,User tokens can be burned on swap ,168,https://github.com/code-423n4/2022-03-lifinance-findings/issues/168,lifinance,2022/03,bug;disagree with severity;resolved;QA (Quality Assurance)
103,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Gas Optimizations,171,https://github.com/code-423n4/2022-03-lifinance-findings/issues/171,lifinance,2022/03,bug;G (Gas Optimization)
103,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Add a timelock to DiamondCutFacet,176,https://github.com/code-423n4/2022-03-lifinance-findings/issues/176,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Transfer is bad practice,78,https://github.com/code-423n4/2022-03-lifinance-findings/issues/78,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,G,Gas Optimizations,149,https://github.com/code-423n4/2022-03-lifinance-findings/issues/149,lifinance,2022/03,bug;G (Gas Optimization);resolved
103,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,G,Gas Optimizations,150,https://github.com/code-423n4/2022-03-lifinance-findings/issues/150,lifinance,2022/03,bug;duplicate;G (Gas Optimization);resolved
103,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,G,Gas Optimizations,151,https://github.com/code-423n4/2022-03-lifinance-findings/issues/151,lifinance,2022/03,bug;duplicate;G (Gas Optimization);resolved
103,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,G,Gas Optimizations,152,https://github.com/code-423n4/2022-03-lifinance-findings/issues/152,lifinance,2022/03,bug;duplicate;G (Gas Optimization);resolved
103,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,Q,QA Report,153,https://github.com/code-423n4/2022-03-lifinance-findings/issues/153,lifinance,2022/03,bug;QA (Quality Assurance)
103,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,G,Gas Optimizations,154,https://github.com/code-423n4/2022-03-lifinance-findings/issues/154,lifinance,2022/03,bug;duplicate;G (Gas Optimization);resolved
103,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,2,Improper Token Balance Check on swap(),155,https://github.com/code-423n4/2022-03-lifinance-findings/issues/155,lifinance,2022/03,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
103,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,Q,QA Report,156,https://github.com/code-423n4/2022-03-lifinance-findings/issues/156,lifinance,2022/03,bug;duplicate;resolved;QA (Quality Assurance)
103,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,70,https://github.com/code-423n4/2022-03-lifinance-findings/issues/70,lifinance,2022/03,bug;G (Gas Optimization);resolved;sponsor acknowledged
103,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,71,https://github.com/code-423n4/2022-03-lifinance-findings/issues/71,lifinance,2022/03,bug;QA (Quality Assurance)
103,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Swap functions are Reenterable,109,https://github.com/code-423n4/2022-03-lifinance-findings/issues/109,lifinance,2022/03,bug;2 (Med Risk);resolved
103,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Users May Lose Funds in `NXTPFacet.swapAndCompleteBridgeTokensViaNXTP()` if the Swap Does Not Increase The Balance,111,https://github.com/code-423n4/2022-03-lifinance-findings/issues/111,lifinance,2022/03,bug;sponsor disputed;QA (Quality Assurance)
103,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,3,`AnyswapFacet` can be exploited to approve arbitrary tokens.,117,https://github.com/code-423n4/2022-03-lifinance-findings/issues/117,lifinance,2022/03,bug;2 (Med Risk);disagree with severity;resolved
103,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Swap Functions Do Not Verify Final Token Matches The Swapped Token,118,https://github.com/code-423n4/2022-03-lifinance-findings/issues/118,lifinance,2022/03,bug;duplicate;3 (High Risk);resolved
103,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,3,`msg.value` is Sent Multipletimes When Performing a Swap,86,https://github.com/code-423n4/2022-03-lifinance-findings/issues/86,lifinance,2022/03,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
103,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,3,`LibSwap.sol` Will Send `msg.value` Even If The `fromAssetId` is Not the Native Token,87,https://github.com/code-423n4/2022-03-lifinance-findings/issues/87,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,`swap()` May Call `callTo` With any Arbitrary Data,88,https://github.com/code-423n4/2022-03-lifinance-findings/issues/88,lifinance,2022/03,bug;duplicate;2 (Med Risk);sponsor acknowledged
103,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Centralisation Risk: Owner May Set Facets To Their Choosing Allowing Any Delegate Call To Be Made,89,https://github.com/code-423n4/2022-03-lifinance-findings/issues/89,lifinance,2022/03,bug;duplicate;2 (Med Risk);sponsor acknowledged
103,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,3,`LibSwap.swap()` will transfer `fromAmount` if there is insufficient balance in the contract allowing an attacker to claim unused funds or forcing a user to transfer excess funds.,90,https://github.com/code-423n4/2022-03-lifinance-findings/issues/90,lifinance,2022/03,bug;duplicate;2 (Med Risk);disagree with severity
103,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,2,`safeApprove` in `LibAsset` is unnecessary and waste gas,49,https://github.com/code-423n4/2022-03-lifinance-findings/issues/49,lifinance,2022/03,disagree with severity;G (Gas Optimization);resolved
103,nedodn,0xd0C81E82AbDdF29C6505d660f5bEBe60CDFf03c5,2,Owner can whitelist addresses for swaps and steal approved assets from users,200,https://github.com/code-423n4/2022-03-lifinance-findings/issues/200,lifinance,2022/03,bug;duplicate;2 (Med Risk);sponsor acknowledged
103,obront,0xf346100e892553DcEb41A927Fb668DA7B0b7C964,Q,QA Report,179,https://github.com/code-423n4/2022-03-lifinance-findings/issues/179,lifinance,2022/03,bug;QA (Quality Assurance)
103,obront,0xf346100e892553DcEb41A927Fb668DA7B0b7C964,G,Gas Optimizations,180,https://github.com/code-423n4/2022-03-lifinance-findings/issues/180,lifinance,2022/03,bug;G (Gas Optimization);resolved
103,obront,0xf346100e892553DcEb41A927Fb668DA7B0b7C964,2,"If contract holds balance of any ERC20 token, any user can take it",187,https://github.com/code-423n4/2022-03-lifinance-findings/issues/187,lifinance,2022/03,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
103,peritoflores,0xca14410735e29650dc240245d96bb376c51477c1,G,Gas Optimizations,201,https://github.com/code-423n4/2022-03-lifinance-findings/issues/201,lifinance,2022/03,bug;G (Gas Optimization);resolved
103,peritoflores,0xca14410735e29650dc240245d96bb376c51477c1,Q,QA Report,202,https://github.com/code-423n4/2022-03-lifinance-findings/issues/202,lifinance,2022/03,bug;resolved;QA (Quality Assurance)
103,peritoflores,0xca14410735e29650dc240245d96bb376c51477c1,2,ALMOST DEPRECATED TRANSFER() IS USED TO WITHDRAW ETHER,213,https://github.com/code-423n4/2022-03-lifinance-findings/issues/213,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,2,Whitelisting should be by function signature and not only on contract address,108,https://github.com/code-423n4/2022-03-lifinance-findings/issues/108,lifinance,2022/03,bug;duplicate;disagree with severity;resolved;QA (Quality Assurance)
103,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,3,Behaviour of swapper can be erratic and lead to loss of user funds,110,https://github.com/code-423n4/2022-03-lifinance-findings/issues/110,lifinance,2022/03,bug;duplicate;disagree with severity;resolved;QA (Quality Assurance)
103,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,3,Swap including native asset don't behaved as specified,112,https://github.com/code-423n4/2022-03-lifinance-findings/issues/112,lifinance,2022/03,bug;duplicate;2 (Med Risk);disagree with severity;resolved
103,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,2,No slippage protection during swaps,113,https://github.com/code-423n4/2022-03-lifinance-findings/issues/113,lifinance,2022/03,duplicate;invalid
103,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,Q,QA Report,114,https://github.com/code-423n4/2022-03-lifinance-findings/issues/114,lifinance,2022/03,bug;resolved;QA (Quality Assurance)
103,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,G,Gas Optimizations,115,https://github.com/code-423n4/2022-03-lifinance-findings/issues/115,lifinance,2022/03,bug;G (Gas Optimization);resolved
103,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,3,Tokens held in contract can be stolen,95,https://github.com/code-423n4/2022-03-lifinance-findings/issues/95,lifinance,2022/03,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
103,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,2,Caller can lose ETH using the `CBridgeFacet`,96,https://github.com/code-423n4/2022-03-lifinance-findings/issues/96,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,2,Caller can lose ETH while bridging,97,https://github.com/code-423n4/2022-03-lifinance-findings/issues/97,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,2,A swap with a token amount received of zero does not fail,98,https://github.com/code-423n4/2022-03-lifinance-findings/issues/98,lifinance,2022/03,bug;duplicate;3 (High Risk)
103,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,Q,QA Report,169,https://github.com/code-423n4/2022-03-lifinance-findings/issues/169,lifinance,2022/03,bug;sponsor disputed;QA (Quality Assurance)
103,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,G,Gas Optimizations,170,https://github.com/code-423n4/2022-03-lifinance-findings/issues/170,lifinance,2022/03,bug;G (Gas Optimization)
103,PranavG,0xFcBA1fEad1fab64228ae26dd3049fd6685a00030,Q,QA Report,173,https://github.com/code-423n4/2022-03-lifinance-findings/issues/173,lifinance,2022/03,bug;QA (Quality Assurance)
103,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,LibSwap.swap misuses msg.value,128,https://github.com/code-423n4/2022-03-lifinance-findings/issues/128,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,LibSwap.swap does not transfer from msg.sender to itself correctly,129,https://github.com/code-423n4/2022-03-lifinance-findings/issues/129,lifinance,2022/03,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
103,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,LibAsset.approveERC20 approves MAX_INT instead of amount,130,https://github.com/code-423n4/2022-03-lifinance-findings/issues/130,lifinance,2022/03,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
103,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,"AnyswapFacet does not check whether passed `_anyswapData.router` is benign, allowing attackers to utilize this and steal any asset held by `Diamond`",131,https://github.com/code-423n4/2022-03-lifinance-findings/issues/131,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,"AnyswapFacet does not check whether passed `_anyswapData.token` is benign, allowing attackers to utilize this and steal any asset held by `Diamond`",132,https://github.com/code-423n4/2022-03-lifinance-findings/issues/132,lifinance,2022/03,duplicate;invalid
103,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,CBridgeFacet does not handle native asset correctly,133,https://github.com/code-423n4/2022-03-lifinance-findings/issues/133,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,"CBridgeFacet does not check whether `_cBridgeData.token` is benign, resulting in reentrancy problems",134,https://github.com/code-423n4/2022-03-lifinance-findings/issues/134,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,HOPFacet does not explicitly check against non-existence hopBridges,135,https://github.com/code-423n4/2022-03-lifinance-findings/issues/135,lifinance,2022/03,bug;duplicate;disagree with severity;resolved;QA (Quality Assurance)
103,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,"NXTPFacet does not check whether _nxtpData.invariantData.sendingAssetId is benign, resulting in reentrancy problems",136,https://github.com/code-423n4/2022-03-lifinance-findings/issues/136,lifinance,2022/03,bug;duplicate;invalid
103,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,LiFi data disjoint from swapData and other data used in transaction logic,137,https://github.com/code-423n4/2022-03-lifinance-findings/issues/137,lifinance,2022/03,bug;duplicate;disagree with severity;QA (Quality Assurance)
103,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,GenericSwapFacet misuses _lifiData,138,https://github.com/code-423n4/2022-03-lifinance-findings/issues/138,lifinance,2022/03,bug;duplicate;3 (High Risk)
103,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,139,https://github.com/code-423n4/2022-03-lifinance-findings/issues/139,lifinance,2022/03,bug;QA (Quality Assurance)
103,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,140,https://github.com/code-423n4/2022-03-lifinance-findings/issues/140,lifinance,2022/03,bug;G (Gas Optimization);resolved
103,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,167,https://github.com/code-423n4/2022-03-lifinance-findings/issues/167,lifinance,2022/03,bug;G (Gas Optimization);resolved;sponsor acknowledged
103,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,82,https://github.com/code-423n4/2022-03-lifinance-findings/issues/82,lifinance,2022/03,bug;resolved;QA (Quality Assurance)
103,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,83,https://github.com/code-423n4/2022-03-lifinance-findings/issues/83,lifinance,2022/03,bug;G (Gas Optimization);resolved;sponsor acknowledged
103,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,"User loses funds if they execute swap with ""exact output"" method ",103,https://github.com/code-423n4/2022-03-lifinance-findings/issues/103,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,Swaps don't properly support fee-on-transfer tokens,106,https://github.com/code-423n4/2022-03-lifinance-findings/issues/106,lifinance,2022/03,bug;duplicate;2 (Med Risk);disagree with severity
103,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,107,https://github.com/code-423n4/2022-03-lifinance-findings/issues/107,lifinance,2022/03,bug;resolved;QA (Quality Assurance)
103,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,Q,QA Report,50,https://github.com/code-423n4/2022-03-lifinance-findings/issues/50,lifinance,2022/03,bug;resolved;QA (Quality Assurance)
103,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Gas Optimizations,51,https://github.com/code-423n4/2022-03-lifinance-findings/issues/51,lifinance,2022/03,bug;G (Gas Optimization);resolved;sponsor acknowledged
103,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,6,https://github.com/code-423n4/2022-03-lifinance-findings/issues/6,lifinance,2022/03,bug;G (Gas Optimization);resolved
103,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,Q,QA Report,7,https://github.com/code-423n4/2022-03-lifinance-findings/issues/7,lifinance,2022/03,bug;sponsor disputed;QA (Quality Assurance)
103,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,Q,QA Report,8,https://github.com/code-423n4/2022-03-lifinance-findings/issues/8,lifinance,2022/03,bug;duplicate;QA (Quality Assurance)
103,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,2,Compromised governance can potentially steal user fund,80,https://github.com/code-423n4/2022-03-lifinance-findings/issues/80,lifinance,2022/03,bug;duplicate;2 (Med Risk);sponsor acknowledged
103,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,2,ERC20 withdrawals can be frontrun,81,https://github.com/code-423n4/2022-03-lifinance-findings/issues/81,lifinance,2022/03,bug;sponsor acknowledged;QA (Quality Assurance)
103,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,2,Missing input validation could lead to loss of fund,84,https://github.com/code-423n4/2022-03-lifinance-findings/issues/84,lifinance,2022/03,bug;duplicate;3 (High Risk)
103,shw,0xABb99042FAE2C86b8437585467a24a71b17d23bA,2,Using the native `payable.transfer` to send ETH in `WithdrawFacet`,203,https://github.com/code-423n4/2022-03-lifinance-findings/issues/203,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,shw,0xABb99042FAE2C86b8437585467a24a71b17d23bA,2,Fee-on-transfer tokens are not handled correctly,204,https://github.com/code-423n4/2022-03-lifinance-findings/issues/204,lifinance,2022/03,bug;sponsor disputed;QA (Quality Assurance)
103,shw,0xABb99042FAE2C86b8437585467a24a71b17d23bA,2,Any user can recover the funds left in the contract,205,https://github.com/code-423n4/2022-03-lifinance-findings/issues/205,lifinance,2022/03,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
103,shw,0xABb99042FAE2C86b8437585467a24a71b17d23bA,2,Should prevent users from sending more native tokens in the `startBridgeTokensViaCBridge` function,207,https://github.com/code-423n4/2022-03-lifinance-findings/issues/207,lifinance,2022/03,bug;2 (Med Risk)
103,shw,0xABb99042FAE2C86b8437585467a24a71b17d23bA,3,Incorrect implementation of the `batchRemoveDex` function in `DexManagerFacet`,208,https://github.com/code-423n4/2022-03-lifinance-findings/issues/208,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,shw,0xABb99042FAE2C86b8437585467a24a71b17d23bA,3,Incorrect implementation of the `_startBridge` function in `CBridgeFacet`,209,https://github.com/code-423n4/2022-03-lifinance-findings/issues/209,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,3,Lack of validation in  Deadline and destinationDeadline in swapData calldata,141,https://github.com/code-423n4/2022-03-lifinance-findings/issues/141,lifinance,2022/03,invalid;sponsor disputed
103,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,2,Lack of chainID validation in all contracts,142,https://github.com/code-423n4/2022-03-lifinance-findings/issues/142,lifinance,2022/03,invalid;disagree with severity;sponsor acknowledged
103,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,2,Missing 2 step validation missing in `transferOwnership`,143,https://github.com/code-423n4/2022-03-lifinance-findings/issues/143,lifinance,2022/03,bug;duplicate;resolved;QA (Quality Assurance)
103,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,Q,QA Report,177,https://github.com/code-423n4/2022-03-lifinance-findings/issues/177,lifinance,2022/03,bug;QA (Quality Assurance)
103,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,G,Gas Optimizations,178,https://github.com/code-423n4/2022-03-lifinance-findings/issues/178,lifinance,2022/03,bug;G (Gas Optimization)
103,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,Q,QA Report,188,https://github.com/code-423n4/2022-03-lifinance-findings/issues/188,lifinance,2022/03,bug;QA (Quality Assurance)
103,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,2,Risk of centralization,189,https://github.com/code-423n4/2022-03-lifinance-findings/issues/189,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,3,Logic error in  `AnyswapFacet.sol`  in `startBridgeTokensViaAnyswap()`,191,https://github.com/code-423n4/2022-03-lifinance-findings/issues/191,lifinance,2022/03,invalid;sponsor disputed
103,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,3,There is no zero address check in `transferOwnership` function in `OwnershipFacet.sol`,192,https://github.com/code-423n4/2022-03-lifinance-findings/issues/192,lifinance,2022/03,bug;duplicate;disagree with severity;resolved;QA (Quality Assurance)
103,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,3,Using `payable.transfer` functions in `WithdrawFacet.sol` and `Libasset.sol` is not usable for smart contract calls due to possible shortage of gas.,193,https://github.com/code-423n4/2022-03-lifinance-findings/issues/193,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,tchkvsky,0x4f472C2ddbd12CAe65609782c7155e608FEdFE97,Q,QA Report,194,https://github.com/code-423n4/2022-03-lifinance-findings/issues/194,lifinance,2022/03,bug;resolved;QA (Quality Assurance)
103,tchkvsky,0x4f472C2ddbd12CAe65609782c7155e608FEdFE97,Q,QA Report,198,https://github.com/code-423n4/2022-03-lifinance-findings/issues/198,lifinance,2022/03,bug;duplicate;sponsor acknowledged;QA (Quality Assurance)
103,tchkvsky,0x4f472C2ddbd12CAe65609782c7155e608FEdFE97,G,Gas Optimizations,199,https://github.com/code-423n4/2022-03-lifinance-findings/issues/199,lifinance,2022/03,bug;G (Gas Optimization);resolved
103,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,G,Gas Optimizations,20,https://github.com/code-423n4/2022-03-lifinance-findings/issues/20,lifinance,2022/03,bug;G (Gas Optimization);resolved
103,teryanarmen,0x9e255e1544E5D9B5C7766076890B059a27CAFCC1,G,Gas Optimizations,212,https://github.com/code-423n4/2022-03-lifinance-findings/issues/212,lifinance,2022/03,bug;G (Gas Optimization)
103,teryanarmen,0x9e255e1544E5D9B5C7766076890B059a27CAFCC1,Q,QA Report,217,https://github.com/code-423n4/2022-03-lifinance-findings/issues/217,lifinance,2022/03,bug;sponsor acknowledged;QA (Quality Assurance)
103,tintin,0xaa371e26742290063d92f0bd7197ac2d8d3ac4f1,3,Users can swap for no cost when the Facet contract calling LibSwap has a balance of ERC20 or native tokens,10,https://github.com/code-423n4/2022-03-lifinance-findings/issues/10,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,2,Swapper cannot handle inputs with more than one swap if msg.value > 0,21,https://github.com/code-423n4/2022-03-lifinance-findings/issues/21,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,183,https://github.com/code-423n4/2022-03-lifinance-findings/issues/183,lifinance,2022/03,bug;G (Gas Optimization);resolved
103,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,2,Infinite token Approval amount bug,119,https://github.com/code-423n4/2022-03-lifinance-findings/issues/119,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,3,Anyone can use all token hold by Li.Fi contract,123,https://github.com/code-423n4/2022-03-lifinance-findings/issues/123,lifinance,2022/03,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
103,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,3,Double spend msg.value in Swapper.sol,124,https://github.com/code-423n4/2022-03-lifinance-findings/issues/124,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,Q,QA Report,126,https://github.com/code-423n4/2022-03-lifinance-findings/issues/126,lifinance,2022/03,bug;QA (Quality Assurance)
103,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H5] Refunds from failed bridging orders are not handled properly,158,https://github.com/code-423n4/2022-03-lifinance-findings/issues/158,lifinance,2022/03,invalid;sponsor disputed
103,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H6] Swapper can be used to steal all the funds from the contract,159,https://github.com/code-423n4/2022-03-lifinance-findings/issues/159,lifinance,2022/03,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
103,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H7] Infinite approval to an arbitrary address can be used to steal all the funds from the contract,160,https://github.com/code-423n4/2022-03-lifinance-findings/issues/160,lifinance,2022/03,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
103,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3, [WP-H8] Admin of the upgradeable proxy contract (the diamond contract) can rug users,161,https://github.com/code-423n4/2022-03-lifinance-findings/issues/161,lifinance,2022/03,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
103,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M9] `sendNative` with CBridge will always revert,162,https://github.com/code-423n4/2022-03-lifinance-findings/issues/162,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H10] `GenericSwapFacet.sol#swapTokensGeneric()` duplicated `.call{ value: msg.value }` makes it possible for the attacker to steal native tokens (ETH) from the contract,163,https://github.com/code-423n4/2022-03-lifinance-findings/issues/163,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M11] Wrong implementation of `DexManagerFacet.sol#batchRemoveDex()` will remove only the first item,164,https://github.com/code-423n4/2022-03-lifinance-findings/issues/164,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,Q,QA Report,165,https://github.com/code-423n4/2022-03-lifinance-findings/issues/165,lifinance,2022/03,bug;QA (Quality Assurance)
103,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Gas Optimizations,166,https://github.com/code-423n4/2022-03-lifinance-findings/issues/166,lifinance,2022/03,bug;G (Gas Optimization);sponsor acknowledged
103,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,2,Use of transfer() may lead to failures,15,https://github.com/code-423n4/2022-03-lifinance-findings/issues/15,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,3,Any native assets in the LiFiDiamond can be took by anyone,16,https://github.com/code-423n4/2022-03-lifinance-findings/issues/16,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,2,CBridgeFacet is not sending native asset to CBridge,17,https://github.com/code-423n4/2022-03-lifinance-findings/issues/17,lifinance,2022/03,bug;duplicate;2 (Med Risk)
103,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,3,ERC20 Token sent to LiFiDiamond directly can be took by anyone,23,https://github.com/code-423n4/2022-03-lifinance-findings/issues/23,lifinance,2022/03,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
103,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,2,startBridgeTokensViaAnyswap always revert when _anyswapData.token == address(0),24,https://github.com/code-423n4/2022-03-lifinance-findings/issues/24,lifinance,2022/03,duplicate;invalid
103,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,2,swapAndStartBridgeTokensViaAnyswap always revert when _anyswapData.token == address(0),25,https://github.com/code-423n4/2022-03-lifinance-findings/issues/25,lifinance,2022/03,invalid;sponsor disputed
103,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,G,Gas Optimizations,125,https://github.com/code-423n4/2022-03-lifinance-findings/issues/125,lifinance,2022/03,bug;G (Gas Optimization);resolved;sponsor acknowledged
103,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,Q,QA Report,127,https://github.com/code-423n4/2022-03-lifinance-findings/issues/127,lifinance,2022/03,bug;QA (Quality Assurance)
103,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,3,`DexManagerFacet.batchRemoveDex` not working as expected,85,https://github.com/code-423n4/2022-03-lifinance-findings/issues/85,lifinance,2022/03,bug;duplicate;2 (Med Risk)
99,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,3,lastUpdated updated incorrectly,10,https://github.com/code-423n4/2022-03-maple-findings/issues/10,maple,2022/03,bug;invalid;sponsor disputed
99,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,G,Gas Optimizations,11,https://github.com/code-423n4/2022-03-maple-findings/issues/11,maple,2022/03,bug;G (Gas Optimization);sponsor disputed
99,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,2,Initialize function missing modifiers,9,https://github.com/code-423n4/2022-03-maple-findings/issues/9,maple,2022/03,bug;invalid;sponsor disputed
99,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,34,https://github.com/code-423n4/2022-03-maple-findings/issues/34,maple,2022/03,bug;G (Gas Optimization);sponsor confirmed;sponsor disputed
99,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,37,https://github.com/code-423n4/2022-03-maple-findings/issues/37,maple,2022/03,bug;invalid;sponsor disputed
99,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,G,Gas Optimizations,38,https://github.com/code-423n4/2022-03-maple-findings/issues/38,maple,2022/03,bug;G (Gas Optimization);sponsor acknowledged
99,aparecekarl18,0xE94Ff9d96634807733b3896d052098804F76F981,3,Security Report: Subdomain Takeover of  https://launch.maple.finance/ Pointing to Github,5,https://github.com/code-423n4/2022-03-maple-findings/issues/5,maple,2022/03,bug;invalid;sponsor disputed
99,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,G,Gas Optimizations,20,https://github.com/code-423n4/2022-03-maple-findings/issues/20,maple,2022/03,bug;G (Gas Optimization);sponsor acknowledged;sponsor confirmed
99,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,Q,QA Report,21,https://github.com/code-423n4/2022-03-maple-findings/issues/21,maple,2022/03,bug;QA (Quality Assurance);disagree with severity;sponsor confirmed
99,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,Q,QA Report,13,https://github.com/code-423n4/2022-03-maple-findings/issues/13,maple,2022/03,bug;QA (Quality Assurance);sponsor disputed
99,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Incorrect implementation of Lender can result in lost tokens,16,https://github.com/code-423n4/2022-03-maple-findings/issues/16,maple,2022/03,bug;2 (Med Risk);disagree with severity;sponsor confirmed
99,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,14,https://github.com/code-423n4/2022-03-maple-findings/issues/14,maple,2022/03,bug;QA (Quality Assurance);disagree with severity;sponsor confirmed
99,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,15,https://github.com/code-423n4/2022-03-maple-findings/issues/15,maple,2022/03,bug;G (Gas Optimization);sponsor disputed
99,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,39,https://github.com/code-423n4/2022-03-maple-findings/issues/39,maple,2022/03,bug;QA (Quality Assurance);sponsor disputed
99,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Missing Address Check Causes Burn On The Transfer,40,https://github.com/code-423n4/2022-03-maple-findings/issues/40,maple,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
99,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Expired Commitment Is Not Checked In The rejectNewTerms Function,8,https://github.com/code-423n4/2022-03-maple-findings/issues/8,maple,2022/03,bug;invalid;sponsor disputed
99,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,12,https://github.com/code-423n4/2022-03-maple-findings/issues/12,maple,2022/03,bug;G (Gas Optimization)
99,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,36,https://github.com/code-423n4/2022-03-maple-findings/issues/36,maple,2022/03,bug;G (Gas Optimization);sponsor disputed
99,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,6,https://github.com/code-423n4/2022-03-maple-findings/issues/6,maple,2022/03,bug;G (Gas Optimization);sponsor disputed
99,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,7,https://github.com/code-423n4/2022-03-maple-findings/issues/7,maple,2022/03,bug;QA (Quality Assurance);disagree with severity;sponsor confirmed
99,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,17,https://github.com/code-423n4/2022-03-maple-findings/issues/17,maple,2022/03,bug;QA (Quality Assurance);disagree with severity;sponsor confirmed
99,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,18,https://github.com/code-423n4/2022-03-maple-findings/issues/18,maple,2022/03,bug;G (Gas Optimization);sponsor disputed
99,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,`migrate()` fails if current balance is zero,19,https://github.com/code-423n4/2022-03-maple-findings/issues/19,maple,2022/03,bug;invalid;sponsor disputed
99,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,22,https://github.com/code-423n4/2022-03-maple-findings/issues/22,maple,2022/03,bug;G (Gas Optimization);sponsor confirmed
99,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,Processes refinance operations may call malicious code by re-created refinancer contract,23,https://github.com/code-423n4/2022-03-maple-findings/issues/23,maple,2022/03,bug;2 (Med Risk);sponsor disputed
99,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Unsafe Cast,1,https://github.com/code-423n4/2022-03-maple-findings/issues/1,maple,2022/03,bug;invalid;sponsor disputed
99,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Must approve 0 first,2,https://github.com/code-423n4/2022-03-maple-findings/issues/2,maple,2022/03,bug;invalid;sponsor disputed
99,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,3,https://github.com/code-423n4/2022-03-maple-findings/issues/3,maple,2022/03,bug;QA (Quality Assurance);sponsor disputed
99,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,4,https://github.com/code-423n4/2022-03-maple-findings/issues/4,maple,2022/03,bug;G (Gas Optimization)
99,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,mpl-migration can be executed by anyone,33,https://github.com/code-423n4/2022-03-maple-findings/issues/33,maple,2022/03,bug;invalid;sponsor disputed
99,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,24,https://github.com/code-423n4/2022-03-maple-findings/issues/24,maple,2022/03,bug;invalid;sponsor acknowledged
99,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,Q,QA Report,25,https://github.com/code-423n4/2022-03-maple-findings/issues/25,maple,2022/03,bug;invalid;sponsor disputed
99,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,35,https://github.com/code-423n4/2022-03-maple-findings/issues/35,maple,2022/03,bug;G (Gas Optimization);sponsor confirmed;sponsor disputed
99,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,ERC20.sol `permit()` does not comply with ERC-2612 standard,26,https://github.com/code-423n4/2022-03-maple-findings/issues/26,maple,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity;sponsor confirmed
99,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H5] Improper handling of overdue loans allows well-funded borrowers to be liquidated,27,https://github.com/code-423n4/2022-03-maple-findings/issues/27,maple,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
99,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H7] Improper design/implementation makes the borrower tend to default the loan in their best interest,28,https://github.com/code-423n4/2022-03-maple-findings/issues/28,maple,2022/03,bug;invalid;sponsor disputed
99,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H8] A malicious borrower can use the first installment loan for free and get back all the collateral without paying the interest,29,https://github.com/code-423n4/2022-03-maple-findings/issues/29,maple,2022/03,bug;invalid;sponsor disputed
99,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H9] Improper access control may result in users' fund loss,30,https://github.com/code-423n4/2022-03-maple-findings/issues/30,maple,2022/03,bug;invalid;sponsor disputed
99,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Gas Optimizations,31,https://github.com/code-423n4/2022-03-maple-findings/issues/31,maple,2022/03,bug;G (Gas Optimization);sponsor acknowledged;sponsor confirmed
99,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,Q,QA Report,32,https://github.com/code-423n4/2022-03-maple-findings/issues/32,maple,2022/03,bug;QA (Quality Assurance);sponsor disputed
105,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,10,https://github.com/code-423n4/2022-03-paladin-findings/issues/10,paladin,2022/03,bug;G (Gas Optimization)
105,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,Reentrancy,11,https://github.com/code-423n4/2022-03-paladin-findings/issues/11,paladin,2022/03,bug;invalid;2 (Med Risk);sponsor acknowledged
105,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,Q,QA Report,12,https://github.com/code-423n4/2022-03-paladin-findings/issues/12,paladin,2022/03,bug;QA (Quality Assurance)
105,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,3,Malicious user can indefinitely freeze the funds of another user,38,https://github.com/code-423n4/2022-03-paladin-findings/issues/38,paladin,2022/03,bug;duplicate;2 (Med Risk);disagree with severity;sponsor disputed
105,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,G,Gas Optimizations,39,https://github.com/code-423n4/2022-03-paladin-findings/issues/39,paladin,2022/03,bug;G (Gas Optimization);sponsor acknowledged
105,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,Q,QA Report,70,https://github.com/code-423n4/2022-03-paladin-findings/issues/70,paladin,2022/03,bug;QA (Quality Assurance)
105,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,G,Gas Optimizations,61,https://github.com/code-423n4/2022-03-paladin-findings/issues/61,paladin,2022/03,bug;G (Gas Optimization)
105,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,Q,QA Report,62,https://github.com/code-423n4/2022-03-paladin-findings/issues/62,paladin,2022/03,bug;sponsor acknowledged;QA (Quality Assurance)
105,0xmint,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,75,https://github.com/code-423n4/2022-03-paladin-findings/issues/75,paladin,2022/03,bug;QA (Quality Assurance)
105,0xmint,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,G,Gas Optimizations,76,https://github.com/code-423n4/2022-03-paladin-findings/issues/76,paladin,2022/03,bug;G (Gas Optimization)
105,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,49,https://github.com/code-423n4/2022-03-paladin-findings/issues/49,paladin,2022/03,bug;G (Gas Optimization);sponsor acknowledged
105,antonttc,0x386f6B908640d9f394EF37bC1b8c3a4018fa3dB1,G,Gas Optimizations,9,https://github.com/code-423n4/2022-03-paladin-findings/issues/9,paladin,2022/03,bug;G (Gas Optimization)
105,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Users at UNSTAKE_PERIOD can assist other users in unstaking tokens.,7,https://github.com/code-423n4/2022-03-paladin-findings/issues/7,paladin,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
105,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,cooldown is set to 0 when the user sends all tokens to himself.,8,https://github.com/code-423n4/2022-03-paladin-findings/issues/8,paladin,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
105,Cityscape,0x46686E5420B34d5950d37855291d970fBa5527b6,G,Gas Optimizations,16,https://github.com/code-423n4/2022-03-paladin-findings/issues/16,paladin,2022/03,bug;G (Gas Optimization)
105,csanuragjain,0xd295584135829D89427674B72560222B06E08a,2,Expired locks will still get rewards,42,https://github.com/code-423n4/2022-03-paladin-findings/issues/42,paladin,2022/03,bug;invalid;sponsor disputed
105,csanuragjain,0xd295584135829D89427674B72560222B06E08a,2,User withdrawal can be stuck,43,https://github.com/code-423n4/2022-03-paladin-findings/issues/43,paladin,2022/03,bug;duplicate;2 (Med Risk);sponsor acknowledged
105,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,G,Gas Optimizations,82,https://github.com/code-423n4/2022-03-paladin-findings/issues/82,paladin,2022/03,bug;G (Gas Optimization)
105,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,2,Precision loss,83,https://github.com/code-423n4/2022-03-paladin-findings/issues/83,paladin,2022/03,bug;duplicate;3 (High Risk);sponsor confirmed
105,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,2,Function `getPastTotalLocks` may return incorrect values,84,https://github.com/code-423n4/2022-03-paladin-findings/issues/84,paladin,2022/03,bug;duplicate;invalid;sponsor confirmed
105,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,2,Function `getUserPastLock` may return incorrect values,86,https://github.com/code-423n4/2022-03-paladin-findings/issues/86,paladin,2022/03,bug;duplicate;2 (Med Risk);sponsor confirmed
105,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,Function `getPastDelegate` may return incorrect values,87,https://github.com/code-423n4/2022-03-paladin-findings/issues/87,paladin,2022/03,bug;duplicate;invalid;3 (High Risk);disagree with severity;sponsor confirmed
105,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,Cooldown tricking possible,89,https://github.com/code-423n4/2022-03-paladin-findings/issues/89,paladin,2022/03,bug;duplicate;2 (Med Risk);disagree with severity;sponsor confirmed
105,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,Q,QA Report,90,https://github.com/code-423n4/2022-03-paladin-findings/issues/90,paladin,2022/03,bug;QA (Quality Assurance)
105,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,admin can rug,46,https://github.com/code-423n4/2022-03-paladin-findings/issues/46,paladin,2022/03,bug;duplicate;2 (Med Risk);disagree with severity;sponsor disputed
105,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,On the Minting/Burning Delegate Is Not Moved,30,https://github.com/code-423n4/2022-03-paladin-findings/issues/30,paladin,2022/03,bug;invalid;sponsor disputed
105,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,User Rewards Are Not Updated During The stakeAndLock function,37,https://github.com/code-423n4/2022-03-paladin-findings/issues/37,paladin,2022/03,bug;invalid;sponsor disputed
105,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,48,https://github.com/code-423n4/2022-03-paladin-findings/issues/48,paladin,2022/03,bug;G (Gas Optimization);sponsor acknowledged
105,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,52,https://github.com/code-423n4/2022-03-paladin-findings/issues/52,paladin,2022/03,bug;QA (Quality Assurance)
105,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Behavior can be changed If the block.number exceeds to 32 bit,65,https://github.com/code-423n4/2022-03-paladin-findings/issues/65,paladin,2022/03,bug;invalid;sponsor disputed
105,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,41,https://github.com/code-423n4/2022-03-paladin-findings/issues/41,paladin,2022/03,bug;QA (Quality Assurance)
105,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,5,https://github.com/code-423n4/2022-03-paladin-findings/issues/5,paladin,2022/03,bug;G (Gas Optimization)
105,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,50,https://github.com/code-423n4/2022-03-paladin-findings/issues/50,paladin,2022/03,bug;G (Gas Optimization)
105,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,Q,QA Report,51,https://github.com/code-423n4/2022-03-paladin-findings/issues/51,paladin,2022/03,bug;QA (Quality Assurance)
105,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,58,https://github.com/code-423n4/2022-03-paladin-findings/issues/58,paladin,2022/03,bug;G (Gas Optimization)
105,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,60,https://github.com/code-423n4/2022-03-paladin-findings/issues/60,paladin,2022/03,bug;QA (Quality Assurance)
105,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,User can always stay in UNSTAKE_PERIOD,63,https://github.com/code-423n4/2022-03-paladin-findings/issues/63,paladin,2022/03,bug;duplicate;2 (Med Risk);sponsor confirmed
105,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,Q,QA Report,78,https://github.com/code-423n4/2022-03-paladin-findings/issues/78,paladin,2022/03,bug;QA (Quality Assurance)
105,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,G,Gas Optimizations,79,https://github.com/code-423n4/2022-03-paladin-findings/issues/79,paladin,2022/03,bug;G (Gas Optimization)
105,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,Function cooldown() is not protected when protocol in emergency mode,54,https://github.com/code-423n4/2022-03-paladin-findings/issues/54,paladin,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
105,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,UserLock information can be found during emergency mode,59,https://github.com/code-423n4/2022-03-paladin-findings/issues/59,paladin,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
105,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,Rewards vault setup isn't ensured before interactions,81,https://github.com/code-423n4/2022-03-paladin-findings/issues/81,paladin,2022/03,bug;QA (Quality Assurance)
105,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,Whole balance self transfer set user's cooldown to zero,88,https://github.com/code-423n4/2022-03-paladin-findings/issues/88,paladin,2022/03,bug;duplicate;2 (Med Risk);sponsor confirmed
105,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Users with large `cooldown`s can grief other users,69,https://github.com/code-423n4/2022-03-paladin-findings/issues/69,paladin,2022/03,bug;duplicate;2 (Med Risk);sponsor disputed
105,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Delegations incorrectly tracked when multiple `delegate()` calls occur in the same block,71,https://github.com/code-423n4/2022-03-paladin-findings/issues/71,paladin,2022/03,bug;duplicate;2 (Med Risk);sponsor confirmed
105,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,72,https://github.com/code-423n4/2022-03-paladin-findings/issues/72,paladin,2022/03,bug;QA (Quality Assurance)
105,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,73,https://github.com/code-423n4/2022-03-paladin-findings/issues/73,paladin,2022/03,bug;G (Gas Optimization)
105,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,Q,QA Report,24,https://github.com/code-423n4/2022-03-paladin-findings/issues/24,paladin,2022/03,bug;QA (Quality Assurance)
105,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,3,wrong calculation ,25,https://github.com/code-423n4/2022-03-paladin-findings/issues/25,paladin,2022/03,bug;invalid;disagree with severity;sponsor disputed
105,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,3,updating the state ,27,https://github.com/code-423n4/2022-03-paladin-findings/issues/27,paladin,2022/03,bug;2 (Med Risk);sponsor disputed
105,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,`HolyPaladinToken.sol` uses `ERC20` token with a highly unsafe pattern,3,https://github.com/code-423n4/2022-03-paladin-findings/issues/3,paladin,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
105,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Incorrect number of seconds in `ONE_YEAR` variable,4,https://github.com/code-423n4/2022-03-paladin-findings/issues/4,paladin,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
105,JC,0xda5C26469e7E108ECE19c82cAc40eFaB677Fd50F,2,Staking cooldown can be avoided for a part of the funds ,53,https://github.com/code-423n4/2022-03-paladin-findings/issues/53,paladin,2022/03,bug;duplicate;2 (Med Risk);sponsor confirmed
105,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Add a timelock to PaladinRewardReserve functions,31,https://github.com/code-423n4/2022-03-paladin-findings/issues/31,paladin,2022/03,bug;2 (Med Risk);sponsor acknowledged
105,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,91,https://github.com/code-423n4/2022-03-paladin-findings/issues/91,paladin,2022/03,bug;G (Gas Optimization)
105,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,92,https://github.com/code-423n4/2022-03-paladin-findings/issues/92,paladin,2022/03,bug;QA (Quality Assurance)
105,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Users Can Bypass Emergency Restrictions on updateUserRewardState(),94,https://github.com/code-423n4/2022-03-paladin-findings/issues/94,paladin,2022/03,2 (Med Risk);resolved;sponsor confirmed
105,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Increasing the Lock Amount on an Expired Lock Will Cause Users to Miss Out on Rewards,95,https://github.com/code-423n4/2022-03-paladin-findings/issues/95,paladin,2022/03,2 (Med Risk);resolved;sponsor confirmed
105,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,G,Gas Optimizations,17,https://github.com/code-423n4/2022-03-paladin-findings/issues/17,paladin,2022/03,bug;G (Gas Optimization)
105,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,2,"`safeApprove` in `PaladinRewardReserve` is unnecessary, deprecated and false sense of security.",18,https://github.com/code-423n4/2022-03-paladin-findings/issues/18,paladin,2022/03,bug;resolved;sponsor confirmed;QA (Quality Assurance)
105,okkothejawa,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,Q,QA Report,19,https://github.com/code-423n4/2022-03-paladin-findings/issues/19,paladin,2022/03,bug;QA (Quality Assurance)
105,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Cooldown period in staking can be skipped ,74,https://github.com/code-423n4/2022-03-paladin-findings/issues/74,paladin,2022/03,bug;invalid;disagree with severity;sponsor disputed
105,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,3,System could be wrapped and made useless without contract whitelisting,77,https://github.com/code-423n4/2022-03-paladin-findings/issues/77,paladin,2022/03,bug;3 (High Risk);resolved;sponsor confirmed
105,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,Q,QA Report,32,https://github.com/code-423n4/2022-03-paladin-findings/issues/32,paladin,2022/03,bug;QA (Quality Assurance)
105,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,Q,QA Report,33,https://github.com/code-423n4/2022-03-paladin-findings/issues/33,paladin,2022/03,bug;duplicate;invalid
105,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Gas Optimizations,34,https://github.com/code-423n4/2022-03-paladin-findings/issues/34,paladin,2022/03,bug;G (Gas Optimization);sponsor confirmed
105,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Gas Optimizations,35,https://github.com/code-423n4/2022-03-paladin-findings/issues/35,paladin,2022/03,bug;duplicate;G (Gas Optimization);sponsor acknowledged
105,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,Past state query results are susceptible to manipulation due to multiple states with same block number,20,https://github.com/code-423n4/2022-03-paladin-findings/issues/20,paladin,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
105,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,Impropriate check for extending lock duration,21,https://github.com/code-423n4/2022-03-paladin-findings/issues/21,paladin,2022/03,bug;invalid;sponsor disputed
105,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,22,https://github.com/code-423n4/2022-03-paladin-findings/issues/22,paladin,2022/03,bug;resolved;sponsor confirmed;QA (Quality Assurance)
105,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,23,https://github.com/code-423n4/2022-03-paladin-findings/issues/23,paladin,2022/03,bug;G (Gas Optimization);sponsor acknowledged
105,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,2,Emergency mode enable/disable issue,64,https://github.com/code-423n4/2022-03-paladin-findings/issues/64,paladin,2022/03,bug;2 (Med Risk);sponsor acknowledged
105,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,Q,QA Report,66,https://github.com/code-423n4/2022-03-paladin-findings/issues/66,paladin,2022/03,bug;QA (Quality Assurance)
105,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,93,https://github.com/code-423n4/2022-03-paladin-findings/issues/93,paladin,2022/03,bug;G (Gas Optimization)
105,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,1,https://github.com/code-423n4/2022-03-paladin-findings/issues/1,paladin,2022/03,bug;QA (Quality Assurance)
105,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,2,https://github.com/code-423n4/2022-03-paladin-findings/issues/2,paladin,2022/03,bug;G (Gas Optimization)
105,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,15,https://github.com/code-423n4/2022-03-paladin-findings/issues/15,paladin,2022/03,bug;QA (Quality Assurance)
105,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Gas Optimizations,40,https://github.com/code-423n4/2022-03-paladin-findings/issues/40,paladin,2022/03,bug;G (Gas Optimization)
105,securerodd,0x18564BE77AEd882651D2c0c791477BDe4a0F8C3d,G,Gas Optimizations,13,https://github.com/code-423n4/2022-03-paladin-findings/issues/13,paladin,2022/03,bug;G (Gas Optimization)
105,securerodd,0x18564BE77AEd882651D2c0c791477BDe4a0F8C3d,Q,QA Report,14,https://github.com/code-423n4/2022-03-paladin-findings/issues/14,paladin,2022/03,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
105,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,Q,QA Report,55,https://github.com/code-423n4/2022-03-paladin-findings/issues/55,paladin,2022/03,bug;QA (Quality Assurance)
105,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,3,Risk of frontrunning  and draining the pool,56,https://github.com/code-423n4/2022-03-paladin-findings/issues/56,paladin,2022/03,bug;duplicate;disagree with severity;sponsor disputed;QA (Quality Assurance)
105,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,3,Privilage to mint & transfer PAL tokens,57,https://github.com/code-423n4/2022-03-paladin-findings/issues/57,paladin,2022/03,bug;help wanted;invalid;question;disagree with severity;sponsor disputed
105,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,3,Risk of locking funds if the user is a smart contract,67,https://github.com/code-423n4/2022-03-paladin-findings/issues/67,paladin,2022/03,bug;help wanted;invalid;disagree with severity;sponsor disputed
105,sseefried,0x033e21B02373489ff2f7a2c2f1B109a1bC6158aD,Q,QA Report,80,https://github.com/code-423n4/2022-03-paladin-findings/issues/80,paladin,2022/03,bug;QA (Quality Assurance)
105,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,2,PaladinRewardReserve.sol may have potential bugs if it uses new tokens as rewards,26,https://github.com/code-423n4/2022-03-paladin-findings/issues/26,paladin,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
105,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,G,Gas Optimizations,28,https://github.com/code-423n4/2022-03-paladin-findings/issues/28,paladin,2022/03,bug;G (Gas Optimization)
105,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,Q,QA Report,29,https://github.com/code-423n4/2022-03-paladin-findings/issues/29,paladin,2022/03,bug;QA (Quality Assurance)
105,teryanarmen,0x9e255e1544E5D9B5C7766076890B059a27CAFCC1,2,Potentially dead contract,36,https://github.com/code-423n4/2022-03-paladin-findings/issues/36,paladin,2022/03,bug;resolved;sponsor confirmed;QA (Quality Assurance)
105,teryanarmen,0x9e255e1544E5D9B5C7766076890B059a27CAFCC1,G,Gas Optimizations,85,https://github.com/code-423n4/2022-03-paladin-findings/issues/85,paladin,2022/03,bug;duplicate;G (Gas Optimization)
105,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,68,https://github.com/code-423n4/2022-03-paladin-findings/issues/68,paladin,2022/03,bug;G (Gas Optimization)
105,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,3,Denial of Service for unstaking,45,https://github.com/code-423n4/2022-03-paladin-findings/issues/45,paladin,2022/03,bug;help wanted;invalid;question;disagree with severity;sponsor disputed
105,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,Q,QA Report,47,https://github.com/code-423n4/2022-03-paladin-findings/issues/47,paladin,2022/03,bug;invalid;sponsor disputed;QA (Quality Assurance)
105,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"`DropPerSecond` is not updated homogeneously, the rewards emission can be much higher than expected in some cases",44,https://github.com/code-423n4/2022-03-paladin-findings/issues/44,paladin,2022/03,bug;3 (High Risk);sponsor confirmed
100,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,73,https://github.com/code-423n4/2022-03-prepo-findings/issues/73,prepo,2022/03,bug;G (Gas Optimization)
100,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,6,https://github.com/code-423n4/2022-03-prepo-findings/issues/6,prepo,2022/03,bug;G (Gas Optimization)
100,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,7,https://github.com/code-423n4/2022-03-prepo-findings/issues/7,prepo,2022/03,bug;QA (Quality Assurance);sponsor disputed
100,0xDjango,0x340e6bf940B3B933cd3123568A9810F87241bc6a,3,Malicious User can Manipulate PreCT Mint Logic with Direct Base Token Transfer,32,https://github.com/code-423n4/2022-03-prepo-findings/issues/32,prepo,2022/03,bug;duplicate;3 (High Risk)
100,0xDjango,0x340e6bf940B3B933cd3123568A9810F87241bc6a,Q,QA Report,33,https://github.com/code-423n4/2022-03-prepo-findings/issues/33,prepo,2022/03,bug;QA (Quality Assurance);sponsor disputed
100,0xDjango,0x340e6bf940B3B933cd3123568A9810F87241bc6a,3,Admin Privileges Allow Potential for Rugging,68,https://github.com/code-423n4/2022-03-prepo-findings/issues/68,prepo,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
100,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,2,No protection for uninitialized _strategy,131,https://github.com/code-423n4/2022-03-prepo-findings/issues/131,prepo,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
100,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,2,Trivial _blockedAccountsIndex blacklist bypass,89,https://github.com/code-423n4/2022-03-prepo-findings/issues/89,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,2,Use safeTransfer/safeTransferFrom consistently,90,https://github.com/code-423n4/2022-03-prepo-findings/issues/90,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,2,ReentrancyGuardUpgradeable import never initialized,91,https://github.com/code-423n4/2022-03-prepo-findings/issues/91,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,Q,QA Report,92,https://github.com/code-423n4/2022-03-prepo-findings/issues/92,prepo,2022/03,bug;QA (Quality Assurance)
100,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,G,Gas Optimizations,94,https://github.com/code-423n4/2022-03-prepo-findings/issues/94,prepo,2022/03,bug;G (Gas Optimization)
100,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,86,https://github.com/code-423n4/2022-03-prepo-findings/issues/86,prepo,2022/03,bug;G (Gas Optimization);sponsor disputed
100,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,Q,QA Report,88,https://github.com/code-423n4/2022-03-prepo-findings/issues/88,prepo,2022/03,bug;QA (Quality Assurance)
100,0xngndev,0x63D43942A69b961E398A0F7C260bC3718d320eE2,G,Gas Optimizations,105,https://github.com/code-423n4/2022-03-prepo-findings/issues/105,prepo,2022/03,bug;G (Gas Optimization)
100,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,43,https://github.com/code-423n4/2022-03-prepo-findings/issues/43,prepo,2022/03,bug;QA (Quality Assurance)
100,0xwags,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,G,Gas Optimizations,44,https://github.com/code-423n4/2022-03-prepo-findings/issues/44,prepo,2022/03,bug;G (Gas Optimization)
100,aga7hokakological,0x58FdCeBBc23cA4244e8E7c83739905165671f703,2,Wrong withdrawal amount calculation in Collatoral.sol#withdraw(),96,https://github.com/code-423n4/2022-03-prepo-findings/issues/96,prepo,2022/03,invalid;sponsor disputed
100,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Blocked accounts can't deposit into collateral after allowing again with `AccountAccessController.allowAccounts()`,109,https://github.com/code-423n4/2022-03-prepo-findings/issues/109,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,Q,QA Report,110,https://github.com/code-423n4/2022-03-prepo-findings/issues/110,prepo,2022/03,bug;QA (Quality Assurance);disagree with severity
100,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,G,Gas Optimizations,112,https://github.com/code-423n4/2022-03-prepo-findings/issues/112,prepo,2022/03,bug;G (Gas Optimization)
100,bugwriter001,0x71e6B570A4CE5ab1AcE7BDF3Bb1E642955cbdacB,Q,QA Report,16,https://github.com/code-423n4/2022-03-prepo-findings/issues/16,prepo,2022/03,bug;QA (Quality Assurance)
100,bugwriter001,0x71e6B570A4CE5ab1AcE7BDF3Bb1E642955cbdacB,Q,QA Report,17,https://github.com/code-423n4/2022-03-prepo-findings/issues/17,prepo,2022/03,invalid;sponsor disputed
100,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,Q,QA Report,64,https://github.com/code-423n4/2022-03-prepo-findings/issues/64,prepo,2022/03,bug;QA (Quality Assurance)
100,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,2,Users can withdraw multiple times with the same request,36,https://github.com/code-423n4/2022-03-prepo-findings/issues/36,prepo,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
100,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,2,unsafe `approve` in `deposit` function in `Collateral` contract,37,https://github.com/code-423n4/2022-03-prepo-findings/issues/37,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,3,DoS attack the system and steal all the users' funds,38,https://github.com/code-423n4/2022-03-prepo-findings/issues/38,prepo,2022/03,bug;duplicate;3 (High Risk)
100,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,3,Deposit caps checks can be bypassed,39,https://github.com/code-423n4/2022-03-prepo-findings/issues/39,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,40,https://github.com/code-423n4/2022-03-prepo-findings/issues/40,prepo,2022/03,bug;QA (Quality Assurance);disagree with severity
100,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,41,https://github.com/code-423n4/2022-03-prepo-findings/issues/41,prepo,2022/03,bug;G (Gas Optimization)
100,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,3,Users can withdraw in the same block (if the delay is zero),42,https://github.com/code-423n4/2022-03-prepo-findings/issues/42,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Can steal collateral deposit,53,https://github.com/code-423n4/2022-03-prepo-findings/issues/53,prepo,2022/03,bug;duplicate;3 (High Risk)
100,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Withdrawal delay can be circumvented,54,https://github.com/code-423n4/2022-03-prepo-findings/issues/54,prepo,2022/03,bug;3 (High Risk);sponsor confirmed
100,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`getSharesForAmount` returns wrong value when `totalAssets == 0`,55,https://github.com/code-423n4/2022-03-prepo-findings/issues/55,prepo,2022/03,bug;2 (Med Risk);sponsor confirmed
100,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Division by zero in `deposit` can lead to DoS,56,https://github.com/code-423n4/2022-03-prepo-findings/issues/56,prepo,2022/03,bug;invalid;sponsor disputed
100,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Many trust assumptions on owner,57,https://github.com/code-423n4/2022-03-prepo-findings/issues/57,prepo,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
100,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Missing `minReturn` check for user deposits,58,https://github.com/code-423n4/2022-03-prepo-findings/issues/58,prepo,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
100,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,Q,QA Report,59,https://github.com/code-423n4/2022-03-prepo-findings/issues/59,prepo,2022/03,bug;QA (Quality Assurance);sponsor disputed
100,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,1,https://github.com/code-423n4/2022-03-prepo-findings/issues/1,prepo,2022/03,bug;QA (Quality Assurance)
100,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Duplicate  _tokenNameSuffix and _tokenSymbolSuffix will incorrectly update current Market,2,https://github.com/code-423n4/2022-03-prepo-findings/issues/2,prepo,2022/03,bug;2 (Med Risk);sponsor confirmed
100,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Blocked users can withdraw,3,https://github.com/code-423n4/2022-03-prepo-findings/issues/3,prepo,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
100,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Loss Of Treasury Fund (Collateral Fees) Lost If The Input is Entered Mistakenly,107,https://github.com/code-423n4/2022-03-prepo-findings/issues/107,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,113,https://github.com/code-423n4/2022-03-prepo-findings/issues/113,prepo,2022/03,bug;QA (Quality Assurance);sponsor disputed
100,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,114,https://github.com/code-423n4/2022-03-prepo-findings/issues/114,prepo,2022/03,bug;G (Gas Optimization)
100,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Re-entrancy Guard Is Not Initialized ,13,https://github.com/code-423n4/2022-03-prepo-findings/issues/13,prepo,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
100,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,124,https://github.com/code-423n4/2022-03-prepo-findings/issues/124,prepo,2022/03,bug;G (Gas Optimization)
100,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Add a timelock and event to critical functions,129,https://github.com/code-423n4/2022-03-prepo-findings/issues/129,prepo,2022/03,invalid;sponsor disputed
100,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,120,https://github.com/code-423n4/2022-03-prepo-findings/issues/120,prepo,2022/03,bug;G (Gas Optimization)
100,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,Q,QA Report,121,https://github.com/code-423n4/2022-03-prepo-findings/issues/121,prepo,2022/03,bug;QA (Quality Assurance)
100,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,3,Funds stuck in Collateral.sol by corner case,48,https://github.com/code-423n4/2022-03-prepo-findings/issues/48,prepo,2022/03,bug;QA (Quality Assurance);sponsor disputed
100,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,2,Malicious owner can steal funds,49,https://github.com/code-423n4/2022-03-prepo-findings/issues/49,prepo,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
100,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,3,First depositor can break minting of shares,27,https://github.com/code-423n4/2022-03-prepo-findings/issues/27,prepo,2022/03,bug;3 (High Risk);sponsor confirmed
100,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,2,Market expiry behaviour differs in implementation and documentation,28,https://github.com/code-423n4/2022-03-prepo-findings/issues/28,prepo,2022/03,bug;2 (Med Risk)
100,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,2,Introduce pauser role to handle emergencies,29,https://github.com/code-423n4/2022-03-prepo-findings/issues/29,prepo,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
100,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,Q,QA Report,30,https://github.com/code-423n4/2022-03-prepo-findings/issues/30,prepo,2022/03,bug;QA (Quality Assurance)
100,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,G,Gas Optimizations,31,https://github.com/code-423n4/2022-03-prepo-findings/issues/31,prepo,2022/03,bug;G (Gas Optimization)
100,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,G,Gas Optimizations,11,https://github.com/code-423n4/2022-03-prepo-findings/issues/11,prepo,2022/03,bug;G (Gas Optimization)
100,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,3,Unsafe transferFrom(),34,https://github.com/code-423n4/2022-03-prepo-findings/issues/34,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,Q,QA Report,35,https://github.com/code-423n4/2022-03-prepo-findings/issues/35,prepo,2022/03,bug;QA (Quality Assurance);disagree with severity
100,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,"Whales can bypass account and global caps, depending on the order of owner operations",100,https://github.com/code-423n4/2022-03-prepo-findings/issues/100,prepo,2022/03,invalid;sponsor disputed
100,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Block delays can be bypassed with two flash loans instead of one,101,https://github.com/code-423n4/2022-03-prepo-findings/issues/101,prepo,2022/03,bug;duplicate;3 (High Risk);sponsor disputed
100,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Missing checks for ERC20 return codes,102,https://github.com/code-423n4/2022-03-prepo-findings/issues/102,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,103,https://github.com/code-423n4/2022-03-prepo-findings/issues/103,prepo,2022/03,bug;G (Gas Optimization)
100,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,104,https://github.com/code-423n4/2022-03-prepo-findings/issues/104,prepo,2022/03,bug;QA (Quality Assurance)
100,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Gas Optimizations,65,https://github.com/code-423n4/2022-03-prepo-findings/issues/65,prepo,2022/03,bug;G (Gas Optimization)
100,Kenshin,0x0D9Db60664f9e47Ae66f5ACda8dd0aa4CDD4b058,Q,QA Report,10,https://github.com/code-423n4/2022-03-prepo-findings/issues/10,prepo,2022/03,bug;QA (Quality Assurance);disagree with severity
100,Kenshin,0x0D9Db60664f9e47Ae66f5ACda8dd0aa4CDD4b058,Q,QA Report,50,https://github.com/code-423n4/2022-03-prepo-findings/issues/50,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,Kenshin,0x0D9Db60664f9e47Ae66f5ACda8dd0aa4CDD4b058,Q,QA Report,51,https://github.com/code-423n4/2022-03-prepo-findings/issues/51,prepo,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
100,Kenshin,0x0D9Db60664f9e47Ae66f5ACda8dd0aa4CDD4b058,Q,QA Report,52,https://github.com/code-423n4/2022-03-prepo-findings/issues/52,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,Kenshin,0x0D9Db60664f9e47Ae66f5ACda8dd0aa4CDD4b058,G,Gas Optimizations,8,https://github.com/code-423n4/2022-03-prepo-findings/issues/8,prepo,2022/03,bug;G (Gas Optimization)
100,Kenshin,0x0D9Db60664f9e47Ae66f5ACda8dd0aa4CDD4b058,Q,QA Report,9,https://github.com/code-423n4/2022-03-prepo-findings/issues/9,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,2,Use safeERC20,115,https://github.com/code-423n4/2022-03-prepo-findings/issues/115,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,2,Denial of service because of the fee feature of ERC20,116,https://github.com/code-423n4/2022-03-prepo-findings/issues/116,prepo,2022/03,invalid;sponsor disputed
100,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,2,Use _amount instead of _amountToDeposit.,117,https://github.com/code-423n4/2022-03-prepo-findings/issues/117,prepo,2022/03,bug;invalid
100,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,118,https://github.com/code-423n4/2022-03-prepo-findings/issues/118,prepo,2022/03,bug;G (Gas Optimization)
100,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,119,https://github.com/code-423n4/2022-03-prepo-findings/issues/119,prepo,2022/03,bug;QA (Quality Assurance);disagree with severity
100,Kiep,0x1b4226582C7Ec9B3b94E9317feC11BDa4522cd60,G,Gas Optimizations,87,https://github.com/code-423n4/2022-03-prepo-findings/issues/87,prepo,2022/03,bug;G (Gas Optimization)
100,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,2,Potential Rug Pull Vector Through `_governance` Field,25,https://github.com/code-423n4/2022-03-prepo-findings/issues/25,prepo,2022/03,bug;QA (Quality Assurance);sponsor disputed
100,kirk-baird,0xC07AB0222713175389FD105Bb85FA82d8510d13E,3,Strategy Migration May Leave Tokens in the Old Strategy Impacting Share Calculations,26,https://github.com/code-423n4/2022-03-prepo-findings/issues/26,prepo,2022/03,bug;3 (High Risk);sponsor confirmed
100,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Withdrawal Requests Can Be Bypassed,122,https://github.com/code-423n4/2022-03-prepo-findings/issues/122,prepo,2022/03,bug;duplicate;3 (High Risk)
100,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Market Expiration is Not Enforced Onchain,123,https://github.com/code-423n4/2022-03-prepo-findings/issues/123,prepo,2022/03,bug;duplicate;2 (Med Risk)
100,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Users Can Frontrun Calls to `setFinalLongPrice`,125,https://github.com/code-423n4/2022-03-prepo-findings/issues/125,prepo,2022/03,invalid;sponsor disputed
100,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Contract Owner Can Rugpull `Collateral.sol`,128,https://github.com/code-423n4/2022-03-prepo-findings/issues/128,prepo,2022/03,bug;QA (Quality Assurance);sponsor disputed
100,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,G,Gas Optimizations,23,https://github.com/code-423n4/2022-03-prepo-findings/issues/23,prepo,2022/03,bug;G (Gas Optimization)
100,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,Q,QA Report,24,https://github.com/code-423n4/2022-03-prepo-findings/issues/24,prepo,2022/03,bug;QA (Quality Assurance)
100,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,G,Gas Optimizations,20,https://github.com/code-423n4/2022-03-prepo-findings/issues/20,prepo,2022/03,bug;G (Gas Optimization)
100,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,Q,QA Report,21,https://github.com/code-423n4/2022-03-prepo-findings/issues/21,prepo,2022/03,bug;QA (Quality Assurance)
100,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,Q,QA Report,22,https://github.com/code-423n4/2022-03-prepo-findings/issues/22,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,2,Return Values Ignored ,47,https://github.com/code-423n4/2022-03-prepo-findings/issues/47,prepo,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
100,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,Q,QA Report,106,https://github.com/code-423n4/2022-03-prepo-findings/issues/106,prepo,2022/03,bug;QA (Quality Assurance)
100,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,2,Dangerous burn public,108,https://github.com/code-423n4/2022-03-prepo-findings/issues/108,prepo,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
100,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,93,https://github.com/code-423n4/2022-03-prepo-findings/issues/93,prepo,2022/03,bug;G (Gas Optimization)
100,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,"Collateral.sol should always check ""Must withdraw in a later block""",95,https://github.com/code-423n4/2022-03-prepo-findings/issues/95,prepo,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
100,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`AccountAccessController.sol` should build in `Collateral.sol`,97,https://github.com/code-423n4/2022-03-prepo-findings/issues/97,prepo,2022/03,invalid;sponsor disputed
100,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,98,https://github.com/code-423n4/2022-03-prepo-findings/issues/98,prepo,2022/03,bug;QA (Quality Assurance);disagree with severity
100,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,Inflate collateral token and partial bypass minting fee by directly transferring to _strategyController,99,https://github.com/code-423n4/2022-03-prepo-findings/issues/99,prepo,2022/03,bug;duplicate;3 (High Risk)
100,remora,0x1434b95234155DA830c20d02548aF22f14A38FbE,3,Anyone can call `wtihdraw()` to steal funds,45,https://github.com/code-423n4/2022-03-prepo-findings/issues/45,prepo,2022/03,invalid;sponsor disputed
100,remora,0x1434b95234155DA830c20d02548aF22f14A38FbE,Q,QA Report,74,https://github.com/code-423n4/2022-03-prepo-findings/issues/74,prepo,2022/03,bug;QA (Quality Assurance);disagree with severity
100,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,126,https://github.com/code-423n4/2022-03-prepo-findings/issues/126,prepo,2022/03,bug;G (Gas Optimization)
100,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,Q,QA Report,127,https://github.com/code-423n4/2022-03-prepo-findings/issues/127,prepo,2022/03,bug;QA (Quality Assurance)
100,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,4,https://github.com/code-423n4/2022-03-prepo-findings/issues/4,prepo,2022/03,bug;QA (Quality Assurance)
100,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,5,https://github.com/code-423n4/2022-03-prepo-findings/issues/5,prepo,2022/03,bug;G (Gas Optimization)
100,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Use SafeERC20 or check ERC20's return values,60,https://github.com/code-423n4/2022-03-prepo-findings/issues/60,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,PrePOMarket deposits don't work if collateral has fees on transfer,61,https://github.com/code-423n4/2022-03-prepo-findings/issues/61,prepo,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
100,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,SingleStrategyController doesn't verify that new strategy uses the same base token,62,https://github.com/code-423n4/2022-03-prepo-findings/issues/62,prepo,2022/03,bug;2 (Med Risk);sponsor confirmed
100,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,63,https://github.com/code-423n4/2022-03-prepo-findings/issues/63,prepo,2022/03,bug;QA (Quality Assurance)
100,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Gas Optimizations,66,https://github.com/code-423n4/2022-03-prepo-findings/issues/66,prepo,2022/03,bug;G (Gas Optimization)
100,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Gas Optimizations,67,https://github.com/code-423n4/2022-03-prepo-findings/issues/67,prepo,2022/03,bug;invalid;G (Gas Optimization)
100,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,Q,QA Report,75,https://github.com/code-423n4/2022-03-prepo-findings/issues/75,prepo,2022/03,bug;QA (Quality Assurance)
100,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,14,https://github.com/code-423n4/2022-03-prepo-findings/issues/14,prepo,2022/03,bug;G (Gas Optimization)
100,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,Q,QA Report,15,https://github.com/code-423n4/2022-03-prepo-findings/issues/15,prepo,2022/03,bug;QA (Quality Assurance);disagree with severity
100,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,G,Gas Optimizations,70,https://github.com/code-423n4/2022-03-prepo-findings/issues/70,prepo,2022/03,invalid;sponsor disputed
100,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,Q,QA Report,71,https://github.com/code-423n4/2022-03-prepo-findings/issues/71,prepo,2022/03,bug;QA (Quality Assurance)
100,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,3,Strategy Exposure Risk,72,https://github.com/code-423n4/2022-03-prepo-findings/issues/72,prepo,2022/03,invalid;sponsor disputed
100,Tadashi,0x8638c0a8C936DeFaCB575a2AD5B103F2a3876cE7,G,Gas Optimizations,69,https://github.com/code-423n4/2022-03-prepo-findings/issues/69,prepo,2022/03,bug;G (Gas Optimization)
100,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,G,Gas Optimizations,18,https://github.com/code-423n4/2022-03-prepo-findings/issues/18,prepo,2022/03,bug;G (Gas Optimization)
100,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,Q,QA Report,19,https://github.com/code-423n4/2022-03-prepo-findings/issues/19,prepo,2022/03,bug;QA (Quality Assurance);disagree with severity
100,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,3,First user can prevent later users receiving collateral shares,130,https://github.com/code-423n4/2022-03-prepo-findings/issues/130,prepo,2022/03,bug;duplicate;3 (High Risk)
100,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,111,https://github.com/code-423n4/2022-03-prepo-findings/issues/111,prepo,2022/03,bug;G (Gas Optimization)
100,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H3] A malicious early user/attacker can manipulate the Collateral contract's pricePerShare to take an unfair share of future users' deposits,76,https://github.com/code-423n4/2022-03-prepo-findings/issues/76,prepo,2022/03,bug;duplicate;3 (High Risk)
100,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M6] `Collateral.sol#deposit()`  Missing minimum shares check makes it possible for users who deposited getting 0 shares in return due to precision loss,77,https://github.com/code-423n4/2022-03-prepo-findings/issues/77,prepo,2022/03,bug;invalid;sponsor confirmed
100,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M7] `DepositCap` in `CollateralDepositRecord` can be bypassed,78,https://github.com/code-423n4/2022-03-prepo-findings/issues/78,prepo,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
100,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H8] Owner of `SingleStrategyController.sol` can rug all users for all their funds,79,https://github.com/code-423n4/2022-03-prepo-findings/issues/79,prepo,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
100,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H9] Admin of the upgradeable proxy contract of `Collateral.sol` can rug users,80,https://github.com/code-423n4/2022-03-prepo-findings/issues/80,prepo,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
100,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M10] Wrong formula of `getSharesForAmount()` can potentially cause fund loss when being used to calculate the `shares` to be used in `withdraw()`,81,https://github.com/code-423n4/2022-03-prepo-findings/issues/81,prepo,2022/03,bug;2 (Med Risk);sponsor confirmed
100,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H11] Griefing attack by transferring `_baseToken` to `SingleStrategyController` can potentially revert all the `withdrawal()` transactions,82,https://github.com/code-423n4/2022-03-prepo-findings/issues/82,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"[WP-H12] `_mintingFee` can be bypassed, causing fund loss the protocol",83,https://github.com/code-423n4/2022-03-prepo-findings/issues/83,prepo,2022/03,bug;duplicate;QA (Quality Assurance)
100,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Gas Optimizations,84,https://github.com/code-423n4/2022-03-prepo-findings/issues/84,prepo,2022/03,bug;G (Gas Optimization)
100,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,Q,QA Report,85,https://github.com/code-423n4/2022-03-prepo-findings/issues/85,prepo,2022/03,bug;QA (Quality Assurance)
100,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,3,_baseToken sent directly to Collateral contract can be took by anyone,46,https://github.com/code-423n4/2022-03-prepo-findings/issues/46,prepo,2022/03,bug;QA (Quality Assurance);disagree with severity
98,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,55,https://github.com/code-423n4/2022-03-rolla-findings/issues/55,rolla,2022/03,bug;invalid;G (Gas Optimization)
98,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,Q,QA Report,56,https://github.com/code-423n4/2022-03-rolla-findings/issues/56,rolla,2022/03,bug;QA (Quality Assurance);sponsor confirmed
98,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,7,https://github.com/code-423n4/2022-03-rolla-findings/issues/7,rolla,2022/03,bug;invalid;G (Gas Optimization);sponsor confirmed
98,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,8,https://github.com/code-423n4/2022-03-rolla-findings/issues/8,rolla,2022/03,bug;QA (Quality Assurance);resolved;sponsor confirmed
98,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Using deprecated Chainlink function latestAnswer,9,https://github.com/code-423n4/2022-03-rolla-findings/issues/9,rolla,2022/03,bug;duplicate;2 (Med Risk)
98,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Low-level transfer via call() can fail silently,51,https://github.com/code-423n4/2022-03-rolla-findings/issues/51,rolla,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
98,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Lack of Validation on Important Setter Function,52,https://github.com/code-423n4/2022-03-rolla-findings/issues/52,rolla,2022/03,bug;QA (Quality Assurance);sponsor disputed
98,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,Q,QA Report,62,https://github.com/code-423n4/2022-03-rolla-findings/issues/62,rolla,2022/03,bug;QA (Quality Assurance);sponsor confirmed
98,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,2,ecrecover zero address check missing,57,https://github.com/code-423n4/2022-03-rolla-findings/issues/57,rolla,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity;sponsor confirmed
98,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,Q,QA Report,58,https://github.com/code-423n4/2022-03-rolla-findings/issues/58,rolla,2022/03,bug;QA (Quality Assurance);sponsor confirmed
98,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,G,Gas Optimizations,59,https://github.com/code-423n4/2022-03-rolla-findings/issues/59,rolla,2022/03,bug;invalid;G (Gas Optimization);sponsor confirmed
98,0xmint,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,26,https://github.com/code-423n4/2022-03-rolla-findings/issues/26,rolla,2022/03,bug;QA (Quality Assurance);sponsor confirmed
98,0xmint,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,2,ConfigTimeLockController will put QuantConfig in a stalemate(rendering it unusable) ,27,https://github.com/code-423n4/2022-03-rolla-findings/issues/27,rolla,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
98,badbird,0xDa61e42AF1b4556Fa39Acc97A5DB9C68c2Ad0915,Q,QA Report,25,https://github.com/code-423n4/2022-03-rolla-findings/issues/25,rolla,2022/03,bug;QA (Quality Assurance);sponsor confirmed
98,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Missing non-zero address validation for `_oracle` parameter in `ProviderOracleManager.addAssetOracle()`,60,https://github.com/code-423n4/2022-03-rolla-findings/issues/60,rolla,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity;sponsor confirmed
98,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,Q,QA Report,61,https://github.com/code-423n4/2022-03-rolla-findings/issues/61,rolla,2022/03,bug;QA (Quality Assurance);sponsor confirmed
98,BurgerTime,0,2,TEST,21,https://github.com/code-423n4/2022-03-rolla-findings/issues/21,rolla,2022/03,withdrawn by warden
98,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Chainlink pricer is using a deprecated API,11,https://github.com/code-423n4/2022-03-rolla-findings/issues/11,rolla,2022/03,bug;duplicate;2 (Med Risk)
98,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,COLLATERAL_MINTER_ROLE can be granted by the deployer of QuantConfig and mint arbitrary amount of tokens,12,https://github.com/code-423n4/2022-03-rolla-findings/issues/12,rolla,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
98,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,COLLATERAL_BURNER_ROLE can burn any amount of CollateralToken from an arbitrary address ,13,https://github.com/code-423n4/2022-03-rolla-findings/issues/13,rolla,2022/03,bug;duplicate;invalid
98,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,OPTIONS_MINTER_ROLE can be granted by the deployer of QuantConfig and mint arbitrary amount of tokens,14,https://github.com/code-423n4/2022-03-rolla-findings/issues/14,rolla,2022/03,bug;duplicate;invalid
98,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,OPTIONS_BURNER_ROLE can burn any amount of QToken from an arbitrary address,15,https://github.com/code-423n4/2022-03-rolla-findings/issues/15,rolla,2022/03,bug;duplicate;invalid
98,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,Q,QA Report,63,https://github.com/code-423n4/2022-03-rolla-findings/issues/63,rolla,2022/03,bug;QA (Quality Assurance);sponsor confirmed
98,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,G,Gas Optimizations,64,https://github.com/code-423n4/2022-03-rolla-findings/issues/64,rolla,2022/03,bug;invalid;G (Gas Optimization);sponsor confirmed
98,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,assets can be added twice,32,https://github.com/code-423n4/2022-03-rolla-findings/issues/32,rolla,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
98,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,typos in assets cannot be fixed,33,https://github.com/code-423n4/2022-03-rolla-findings/issues/33,rolla,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity;sponsor confirmed
98,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,admin can rug by minting collateral tokens,34,https://github.com/code-423n4/2022-03-rolla-findings/issues/34,rolla,2022/03,bug;duplicate;2 (Med Risk)
98,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,admin can rug by setting a malicious oracle,35,https://github.com/code-423n4/2022-03-rolla-findings/issues/35,rolla,2022/03,bug;invalid;sponsor disputed
98,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,Q,QA Report,36,https://github.com/code-423n4/2022-03-rolla-findings/issues/36,rolla,2022/03,bug;QA (Quality Assurance);sponsor confirmed
98,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,54,https://github.com/code-423n4/2022-03-rolla-findings/issues/54,rolla,2022/03,bug;QA (Quality Assurance);sponsor confirmed
98,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,22,https://github.com/code-423n4/2022-03-rolla-findings/issues/22,rolla,2022/03,bug;QA (Quality Assurance);sponsor confirmed
98,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Settlement price can be manipulated at relatively low cost,24,https://github.com/code-423n4/2022-03-rolla-findings/issues/24,rolla,2022/03,bug;invalid;sponsor disputed
98,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,Underlying's removal from assetsRegistry will freeze all the payoff funds,41,https://github.com/code-423n4/2022-03-rolla-findings/issues/41,rolla,2022/03,bug;QA (Quality Assurance);disagree with severity;sponsor confirmed
98,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,Arbitrary code can be run with Controller as msg.sender,65,https://github.com/code-423n4/2022-03-rolla-findings/issues/65,rolla,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
98,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,Spreads can be minted with a deactivated oracle,66,https://github.com/code-423n4/2022-03-rolla-findings/issues/66,rolla,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
98,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,37,https://github.com/code-423n4/2022-03-rolla-findings/issues/37,rolla,2022/03,bug;QA (Quality Assurance);sponsor confirmed
98,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,QTokens with the same symbol will lead to mistakes,38,https://github.com/code-423n4/2022-03-rolla-findings/issues/38,rolla,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
98,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,`TimelockController` locks ether forever,39,https://github.com/code-423n4/2022-03-rolla-findings/issues/39,rolla,2022/03,bug;invalid;sponsor disputed
98,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,No use of upgradeable SafeERC20 contract in Controller.sol,5,https://github.com/code-423n4/2022-03-rolla-findings/issues/5,rolla,2022/03,bug;2 (Med Risk);resolved
98,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,External call to user provided address with arbitrary data supplied,6,https://github.com/code-423n4/2022-03-rolla-findings/issues/6,rolla,2022/03,bug;QA (Quality Assurance)
98,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Gas Optimizations,40,https://github.com/code-423n4/2022-03-rolla-findings/issues/40,rolla,2022/03,bug;invalid;G (Gas Optimization);sponsor confirmed
98,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,Incorrect strike price displayed in name/symbol of qToken ,28,https://github.com/code-423n4/2022-03-rolla-findings/issues/28,rolla,2022/03,bug;3 (High Risk);resolved;sponsor confirmed
98,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,Uninitialized tailing when roundDown is True in QuantMath.sol/toScaledUint,29,https://github.com/code-423n4/2022-03-rolla-findings/issues/29,rolla,2022/03,bug;invalid;sponsor disputed
98,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,30,https://github.com/code-423n4/2022-03-rolla-findings/issues/30,rolla,2022/03,bug;QA (Quality Assurance);sponsor confirmed
98,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,Mint spread collateral-less and conjuring collateral claims out of thin air with implicit arithmetic rounding and flawed int to uint conversion,31,https://github.com/code-423n4/2022-03-rolla-findings/issues/31,rolla,2022/03,bug;3 (High Risk);resolved;sponsor confirmed
98,remora,0x1434b95234155DA830c20d02548aF22f14A38FbE,3,Invocation of  Controller.sol#_call() with malicious data can withdraw tokens approved for OperateProxy contract,23,https://github.com/code-423n4/2022-03-rolla-findings/issues/23,rolla,2022/03,bug;QA (Quality Assurance)
98,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Unsafe casts,1,https://github.com/code-423n4/2022-03-rolla-findings/issues/1,rolla,2022/03,bug;QA (Quality Assurance);disagree with severity;sponsor confirmed
98,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,2,https://github.com/code-423n4/2022-03-rolla-findings/issues/2,rolla,2022/03,bug;invalid;QA (Quality Assurance);sponsor confirmed
98,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,3,https://github.com/code-423n4/2022-03-rolla-findings/issues/3,rolla,2022/03,bug;invalid;G (Gas Optimization);sponsor confirmed
98,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,Funds approved to OperateProxy can be stolen through the Call ActionType,16,https://github.com/code-423n4/2022-03-rolla-findings/issues/16,rolla,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity;sponsor confirmed
98,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Usage of deprecated Chainlink functions,17,https://github.com/code-423n4/2022-03-rolla-findings/issues/17,rolla,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
98,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,ChainlinkOracleManager.sol uses wrong decimals for computation,18,https://github.com/code-423n4/2022-03-rolla-findings/issues/18,rolla,2022/03,bug;QA (Quality Assurance);disagree with severity;sponsor confirmed
98,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,Q,QA Report,53,https://github.com/code-423n4/2022-03-rolla-findings/issues/53,rolla,2022/03,bug;invalid;QA (Quality Assurance);sponsor disputed
98,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,G,Gas Optimizations,19,https://github.com/code-423n4/2022-03-rolla-findings/issues/19,rolla,2022/03,bug;invalid;G (Gas Optimization);sponsor confirmed
98,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,Q,QA Report,20,https://github.com/code-423n4/2022-03-rolla-findings/issues/20,rolla,2022/03,bug;QA (Quality Assurance);sponsor confirmed
98,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,Q,QA Report,42,https://github.com/code-423n4/2022-03-rolla-findings/issues/42,rolla,2022/03,bug;QA (Quality Assurance);sponsor confirmed
98,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3, [WP-H0] Wrong implementation of `EIP712MetaTransaction`,43,https://github.com/code-423n4/2022-03-rolla-findings/issues/43,rolla,2022/03,bug;3 (High Risk);resolved;sponsor confirmed
98,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H1] Timelock can be hijacked by a malicious/compromised deployer,44,https://github.com/code-423n4/2022-03-rolla-findings/issues/44,rolla,2022/03,bug;invalid;sponsor disputed
98,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H2] `EIP712MetaTransaction.executeMetaTransaction()` failed txs are open to replay attacks,45,https://github.com/code-423n4/2022-03-rolla-findings/issues/45,rolla,2022/03,bug;3 (High Risk);resolved;sponsor confirmed
98,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M3] `OperateProxy.callFunction()` should check if the `callee` is a contract,46,https://github.com/code-423n4/2022-03-rolla-findings/issues/46,rolla,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
98,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H4] Initializer of `QuantConfig.sol` can rug users,47,https://github.com/code-423n4/2022-03-rolla-findings/issues/47,rolla,2022/03,bug;duplicate;2 (Med Risk)
98,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H6] Admin of the upgradeable proxy contract of `Controller.sol` can rug users,48,https://github.com/code-423n4/2022-03-rolla-findings/issues/48,rolla,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
98,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H7] `CollateralToken.sol`'s `COLLATERAL_BURNER_ROLE` and `COLLATERAL_MINTER_ROLE` can rug users,49,https://github.com/code-423n4/2022-03-rolla-findings/issues/49,rolla,2022/03,bug;duplicate;2 (Med Risk)
98,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Use of deprecated Chainlink function `latestAnswer`,50,https://github.com/code-423n4/2022-03-rolla-findings/issues/50,rolla,2022/03,bug;duplicate;2 (Med Risk)
101,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,Q,QA Report,51,https://github.com/code-423n4/2022-03-sublime-findings/issues/51,sublime,2022/03,bug;QA (Quality Assurance)
101,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,Q,QA Report,52,https://github.com/code-423n4/2022-03-sublime-findings/issues/52,sublime,2022/03,bug;invalid;sponsor disputed;QA (Quality Assurance)
101,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,53,https://github.com/code-423n4/2022-03-sublime-findings/issues/53,sublime,2022/03,bug;G (Gas Optimization)
101,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,28,https://github.com/code-423n4/2022-03-sublime-findings/issues/28,sublime,2022/03,bug;QA (Quality Assurance)
101,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,29,https://github.com/code-423n4/2022-03-sublime-findings/issues/29,sublime,2022/03,bug;G (Gas Optimization)
101,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,Q,QA Report,17,https://github.com/code-423n4/2022-03-sublime-findings/issues/17,sublime,2022/03,bug;QA (Quality Assurance)
101,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,G,Gas Optimizations,18,https://github.com/code-423n4/2022-03-sublime-findings/issues/18,sublime,2022/03,bug;G (Gas Optimization)
101,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,G,Gas Optimizations,67,https://github.com/code-423n4/2022-03-sublime-findings/issues/67,sublime,2022/03,bug;G (Gas Optimization)
101,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,Q,QA Report,68,https://github.com/code-423n4/2022-03-sublime-findings/issues/68,sublime,2022/03,bug;QA (Quality Assurance)
101,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,16,https://github.com/code-423n4/2022-03-sublime-findings/issues/16,sublime,2022/03,bug;G (Gas Optimization)
101,BouSalman,0x7c44A7afc34abE118aB752c836680aD7682b9273,Q,QA Report,5,https://github.com/code-423n4/2022-03-sublime-findings/issues/5,sublime,2022/03,bug;QA (Quality Assurance)
101,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Must approve 0 first,6,https://github.com/code-423n4/2022-03-sublime-findings/issues/6,sublime,2022/03,bug;duplicate;invalid;2 (Med Risk);sponsor disputed
101,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,onlyOwner modifier missing,11,https://github.com/code-423n4/2022-03-sublime-findings/issues/11,sublime,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
101,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,twitterId is unrelaible source of link,12,https://github.com/code-423n4/2022-03-sublime-findings/issues/12,sublime,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
101,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Existing credit line can be overwritten,13,https://github.com/code-423n4/2022-03-sublime-findings/issues/13,sublime,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
101,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Borrower funds can get stuck,14,https://github.com/code-423n4/2022-03-sublime-findings/issues/14,sublime,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
101,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,15,https://github.com/code-423n4/2022-03-sublime-findings/issues/15,sublime,2022/03,bug;G (Gas Optimization)
101,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Re-entrancy Guard Is not Upgradeable,32,https://github.com/code-423n4/2022-03-sublime-findings/issues/32,sublime,2022/03,bug;duplicate;disagree with severity;G (Gas Optimization)
101,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,76,https://github.com/code-423n4/2022-03-sublime-findings/issues/76,sublime,2022/03,bug;G (Gas Optimization)
101,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,79,https://github.com/code-423n4/2022-03-sublime-findings/issues/79,sublime,2022/03,bug;sponsor disputed;QA (Quality Assurance)
101,dirk_y,0x00db4d01c8953a707239DC168E466F64dD97Fe9c,Q,QA Report,8,https://github.com/code-423n4/2022-03-sublime-findings/issues/8,sublime,2022/03,bug;QA (Quality Assurance)
101,dirk_y,0x00db4d01c8953a707239DC168E466F64dD97Fe9c,2,Borrower can stop lenders from withdrawing interest payments,9,https://github.com/code-423n4/2022-03-sublime-findings/issues/9,sublime,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
101,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,33,https://github.com/code-423n4/2022-03-sublime-findings/issues/33,sublime,2022/03,bug;sponsor disputed;QA (Quality Assurance)
101,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Consistently check account balance before and after transfers for Fee-On-Transfer discrepencies,48,https://github.com/code-423n4/2022-03-sublime-findings/issues/48,sublime,2022/03,bug;duplicate;QA (Quality Assurance)
101,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Add a timelock to `PooledCreditLine.updateProtocolFeeFraction()`,50,https://github.com/code-423n4/2022-03-sublime-findings/issues/50,sublime,2022/03,bug;duplicate;disagree with severity;QA (Quality Assurance)
101,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Result of transfer not checked,54,https://github.com/code-423n4/2022-03-sublime-findings/issues/54,sublime,2022/03,bug;duplicate;2 (Med Risk)
101,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,7,https://github.com/code-423n4/2022-03-sublime-findings/issues/7,sublime,2022/03,bug;G (Gas Optimization)
101,FSchmoede,0xa806D8B9be2C56376264F81F62416cB704ce81BD,G,Gas Optimizations,49,https://github.com/code-423n4/2022-03-sublime-findings/issues/49,sublime,2022/03,bug;invalid;G (Gas Optimization);sponsor disputed
101,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,69,https://github.com/code-423n4/2022-03-sublime-findings/issues/69,sublime,2022/03,bug;G (Gas Optimization)
101,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,2,Fee in start() can be avoided,70,https://github.com/code-423n4/2022-03-sublime-findings/issues/70,sublime,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
101,GeekyLumberjack,0xC63E80f0094aE02CD5C12d121336b41420a27dd2,3,Deposited collateral can't be withdrawn when PooledCreditLineStatus is Expired,72,https://github.com/code-423n4/2022-03-sublime-findings/issues/72,sublime,2022/03,bug;duplicate;invalid;3 (High Risk)
101,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,62,https://github.com/code-423n4/2022-03-sublime-findings/issues/62,sublime,2022/03,bug;G (Gas Optimization)
101,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,63,https://github.com/code-423n4/2022-03-sublime-findings/issues/63,sublime,2022/03,bug;question;QA (Quality Assurance)
101,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,Q,QA Report,34,https://github.com/code-423n4/2022-03-sublime-findings/issues/34,sublime,2022/03,bug;QA (Quality Assurance)
101,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,G,Gas Optimizations,35,https://github.com/code-423n4/2022-03-sublime-findings/issues/35,sublime,2022/03,bug;G (Gas Optimization);sponsor disputed
101,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Constructor cannot be used in upgradeable contracts,1,https://github.com/code-423n4/2022-03-sublime-findings/issues/1,sublime,2022/03,bug;invalid;3 (High Risk);sponsor disputed
101,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Interest accrued could be zero for small decimal tokens,10,https://github.com/code-423n4/2022-03-sublime-findings/issues/10,sublime,2022/03,bug;2 (Med Risk);disagree with severity
101,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,LenderPool: Principal withdrawable is incorrectly calculated if start() is invoked with non-zero start fee,19,https://github.com/code-423n4/2022-03-sublime-findings/issues/19,sublime,2022/03,bug;3 (High Risk);sponsor confirmed
101,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,LenderPool: Expected withdrawn interest shares might not match actual amount withdrawn,20,https://github.com/code-423n4/2022-03-sublime-findings/issues/20,sublime,2022/03,bug;duplicate;disagree with severity;QA (Quality Assurance)
101,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,https://github.com/sublime-finance/sublime-v1/blob/46536a6d25df4264c1b217bd3232af30355dcb95/contracts/PooledCreditLine/LenderPool.sol#L404-L406,21,https://github.com/code-423n4/2022-03-sublime-findings/issues/21,sublime,2022/03,bug;3 (High Risk);sponsor confirmed
101,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Gas Optimizations,22,https://github.com/code-423n4/2022-03-sublime-findings/issues/22,sublime,2022/03,bug;G (Gas Optimization)
101,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,Q,QA Report,23,https://github.com/code-423n4/2022-03-sublime-findings/issues/23,sublime,2022/03,bug;QA (Quality Assurance)
101,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,36,https://github.com/code-423n4/2022-03-sublime-findings/issues/36,sublime,2022/03,bug;G (Gas Optimization)
101,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,37,https://github.com/code-423n4/2022-03-sublime-findings/issues/37,sublime,2022/03,bug;QA (Quality Assurance)
101,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Contracts don't work properly with fee-on-transfer/deflationary tokens,38,https://github.com/code-423n4/2022-03-sublime-findings/issues/38,sublime,2022/03,bug;duplicate;disagree with severity;sponsor acknowledged;QA (Quality Assurance)
101,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Calling `approve()` without first calling `approve(0)` causes problems with non-standard tokens (e.g. USDT),39,https://github.com/code-423n4/2022-03-sublime-findings/issues/39,sublime,2022/03,bug;duplicate;invalid;2 (Med Risk)
101,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Forcing `IERC20` when calling `transfer()` reverts when used with some ERC20 tokens,40,https://github.com/code-423n4/2022-03-sublime-findings/issues/40,sublime,2022/03,bug;duplicate;invalid
101,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,2,Use safeTransfer,73,https://github.com/code-423n4/2022-03-sublime-findings/issues/73,sublime,2022/03,bug;duplicate;2 (Med Risk)
101,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,80,https://github.com/code-423n4/2022-03-sublime-findings/issues/80,sublime,2022/03,bug;G (Gas Optimization)
101,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,81,https://github.com/code-423n4/2022-03-sublime-findings/issues/81,sublime,2022/03,bug;invalid;sponsor disputed;QA (Quality Assurance)
101,kyliek,0xdE624A36bcCd38DB850365b34Bc99ab3b1252415,2,Potentially depositing at unfavorable rate since anyone can deposit the entire lenderPool to a known strategy at a pre-fixed time,64,https://github.com/code-423n4/2022-03-sublime-findings/issues/64,sublime,2022/03,bug;question;2 (Med Risk)
101,kyliek,0xdE624A36bcCd38DB850365b34Bc99ab3b1252415,2,Loss of protocol startFee when `start` is front-run,65,https://github.com/code-423n4/2022-03-sublime-findings/issues/65,sublime,2022/03,bug;duplicate;sponsor disputed;QA (Quality Assurance)
101,kyliek,0xdE624A36bcCd38DB850365b34Bc99ab3b1252415,3, Denial of services in proxy context by setting immutable privileged addresses in constructor in upgradeable contracts,71,https://github.com/code-423n4/2022-03-sublime-findings/issues/71,sublime,2022/03,bug;duplicate;invalid;3 (High Risk)
101,kyliek,0xdE624A36bcCd38DB850365b34Bc99ab3b1252415,Q,QA Report,75,https://github.com/code-423n4/2022-03-sublime-findings/issues/75,sublime,2022/03,bug;QA (Quality Assurance)
101,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`approve` and `safeApprove` Should Approve the Zero Amount First,74,https://github.com/code-423n4/2022-03-sublime-findings/issues/74,sublime,2022/03,bug;duplicate;invalid;2 (Med Risk)
101,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`_withdrawLiquidity()` is Not Consistent With `start()`,78,https://github.com/code-423n4/2022-03-sublime-findings/issues/78,sublime,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
101,leastwood,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Any User Can Register Them-self if `signerAddress` is Unset,82,https://github.com/code-423n4/2022-03-sublime-findings/issues/82,sublime,2022/03,bug;invalid;2 (Med Risk);disagree with severity
101,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Gas Optimizations,24,https://github.com/code-423n4/2022-03-sublime-findings/issues/24,sublime,2022/03,bug;G (Gas Optimization)
101,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,Q,QA Report,25,https://github.com/code-423n4/2022-03-sublime-findings/issues/25,sublime,2022/03,bug;QA (Quality Assurance)
101,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,2,updateSignValidity() May Break registerSelf() Due to Lack of Input Validation,26,https://github.com/code-423n4/2022-03-sublime-findings/issues/26,sublime,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
101,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,2,Pool Credit Line May Not Able to Start When _borrowAsset is Non ERC20 Compliant Tokens,27,https://github.com/code-423n4/2022-03-sublime-findings/issues/27,sublime,2022/03,bug;2 (Med Risk);sponsor confirmed
101,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,Usage of outdated solidity compiler version results in potential integer overflow risk in calculations,41,https://github.com/code-423n4/2022-03-sublime-findings/issues/41,sublime,2022/03,bug;duplicate;disagree with severity;QA (Quality Assurance)
101,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,Drastic loss of precision due to arithmetic operation orders,42,https://github.com/code-423n4/2022-03-sublime-findings/issues/42,sublime,2022/03,bug;duplicate;sponsor disputed;QA (Quality Assurance)
101,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,Incorrect borrowLimit used in calculating principal to withdraw for non-activated pools that are terminated,43,https://github.com/code-423n4/2022-03-sublime-findings/issues/43,sublime,2022/03,bug;invalid;3 (High Risk);sponsor disputed
101,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,"`LenderPool.terminate` mix calculation between shares and tokens, resulting in incorrect amount of shares to be withdrawn from savings account",44,https://github.com/code-423n4/2022-03-sublime-findings/issues/44,sublime,2022/03,bug;duplicate;3 (High Risk)
101,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,Incorrect value subtracted from `sharesHeld` for closed and liquidated pools in `LenderPool._withdrawLiquidity`,45,https://github.com/code-423n4/2022-03-sublime-findings/issues/45,sublime,2022/03,bug;invalid;3 (High Risk);sponsor disputed
101,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,46,https://github.com/code-423n4/2022-03-sublime-findings/issues/46,sublime,2022/03,bug;QA (Quality Assurance)
101,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,47,https://github.com/code-423n4/2022-03-sublime-findings/issues/47,sublime,2022/03,bug;G (Gas Optimization)
101,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,83,https://github.com/code-423n4/2022-03-sublime-findings/issues/83,sublime,2022/03,bug;G (Gas Optimization)
101,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,2,https://github.com/code-423n4/2022-03-sublime-findings/issues/2,sublime,2022/03,bug;G (Gas Optimization)
101,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,3,https://github.com/code-423n4/2022-03-sublime-findings/issues/3,sublime,2022/03,bug;question;QA (Quality Assurance)
101,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Unsafe Cast,4,https://github.com/code-423n4/2022-03-sublime-findings/issues/4,sublime,2022/03,bug;duplicate;disagree with severity;QA (Quality Assurance)
101,sseefried,0x033e21B02373489ff2f7a2c2f1B109a1bC6158aD,2,"Multiple missing `approve(spender, 0)` before `approve(spender, amount)`",30,https://github.com/code-423n4/2022-03-sublime-findings/issues/30,sublime,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
101,sseefried,0x033e21B02373489ff2f7a2c2f1B109a1bC6158aD,Q,QA Report,31,https://github.com/code-423n4/2022-03-sublime-findings/issues/31,sublime,2022/03,bug;QA (Quality Assurance)
101,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,66,https://github.com/code-423n4/2022-03-sublime-findings/issues/66,sublime,2022/03,bug;G (Gas Optimization)
101,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H1] `LenderPool.sol#terminate()` Wrong value is used for the `shares` argument of `SAVINGS_ACCOUNT.withdrawShares()` can cause fund loss to all users,55,https://github.com/code-423n4/2022-03-sublime-findings/issues/55,sublime,2022/03,bug;duplicate;3 (High Risk)
101,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M7] Wrong design/implementation of interest accrued to the borrowers can make the lenders to end up getting much fewer amount of interest than expected,56,https://github.com/code-423n4/2022-03-sublime-findings/issues/56,sublime,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
101,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H3] Proxy admin of the upgradeable proxy contracts can steal `_borrowAsset` and `collateralAsset` from the contracts and users' wallet,57,https://github.com/code-423n4/2022-03-sublime-findings/issues/57,sublime,2022/03,bug;invalid;3 (High Risk);sponsor disputed
101,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H9] `LenderPool.sol#start()` `startFeeFraction` can be used by a malicious/compromised owner to rug lenders,58,https://github.com/code-423n4/2022-03-sublime-findings/issues/58,sublime,2022/03,bug;invalid;3 (High Risk);sponsor disputed
101,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M10] Lack of access control allow anyone to `withdrawInterest()` for any lender,59,https://github.com/code-423n4/2022-03-sublime-findings/issues/59,sublime,2022/03,bug;2 (Med Risk);disagree with severity
101,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"[WP-H11] `lender` may not be able to get back their funds, due to improper handling of potential loss of strategy",60,https://github.com/code-423n4/2022-03-sublime-findings/issues/60,sublime,2022/03,bug;invalid;3 (High Risk);sponsor disputed
101,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,Q,QA Report,61,https://github.com/code-423n4/2022-03-sublime-findings/issues/61,sublime,2022/03,bug;QA (Quality Assurance)
96,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,20,https://github.com/code-423n4/2022-03-timeswap-findings/issues/20,timeswap,2022/03,bug;G (Gas Optimization);sponsor acknowledged
96,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,XSS in generated SVG,2,https://github.com/code-423n4/2022-03-timeswap-findings/issues/2,timeswap,2022/03,bug;invalid
96,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,6,https://github.com/code-423n4/2022-03-timeswap-findings/issues/6,timeswap,2022/03,bug;G (Gas Optimization);resolved
96,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,7,https://github.com/code-423n4/2022-03-timeswap-findings/issues/7,timeswap,2022/03,bug;QA (Quality Assurance);resolved;sponsor acknowledged;sponsor confirmed
96,ACai, 0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,3,The detection of timeswapMintCallback could be bypassed.,8,https://github.com/code-423n4/2022-03-timeswap-findings/issues/8,timeswap,2022/03,bug;invalid
96,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,burn function could burn tokens of any user,1,https://github.com/code-423n4/2022-03-timeswap-findings/issues/1,timeswap,2022/03,bug;invalid
96,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,14,https://github.com/code-423n4/2022-03-timeswap-findings/issues/14,timeswap,2022/03,bug;G (Gas Optimization);resolved;sponsor confirmed
96,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,15,https://github.com/code-423n4/2022-03-timeswap-findings/issues/15,timeswap,2022/03,bug;invalid
96,ch13fd357r0y3r,0xBA23dfd7cCCD3587A1b8909dd5BcCfD92aCeAE6f,2,NPM Dependency confusion. Unclaimed NPM Package and Scope/Org,9,https://github.com/code-423n4/2022-03-timeswap-findings/issues/9,timeswap,2022/03,bug;2 (Med Risk);sponsor confirmed
96,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,2,Missing zero address check in collectProtocolFee() may lead to loss of Protocol Fee,5,https://github.com/code-423n4/2022-03-timeswap-findings/issues/5,timeswap,2022/03,bug;QA (Quality Assurance);resolved;sponsor confirmed
96,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,34,https://github.com/code-423n4/2022-03-timeswap-findings/issues/34,timeswap,2022/03,bug;G (Gas Optimization);resolved;sponsor confirmed
96,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,36,https://github.com/code-423n4/2022-03-timeswap-findings/issues/36,timeswap,2022/03,bug;QA (Quality Assurance);resolved;sponsor acknowledged;sponsor confirmed
96,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,24,https://github.com/code-423n4/2022-03-timeswap-findings/issues/24,timeswap,2022/03,bug;G (Gas Optimization);resolved;sponsor acknowledged;sponsor confirmed
96,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,25,https://github.com/code-423n4/2022-03-timeswap-findings/issues/25,timeswap,2022/03,bug;QA (Quality Assurance);sponsor acknowledged
96,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Revert if both fee and protocolFee set to 0,26,https://github.com/code-423n4/2022-03-timeswap-findings/issues/26,timeswap,2022/03,bug;invalid
96,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,lendGivenBondETHCollateral should not be payable,29,https://github.com/code-423n4/2022-03-timeswap-findings/issues/29,timeswap,2022/03,bug;invalid
96,hyh,0x8efE50a4b8c8B64FDC93a5b1712Fd735d8223cD5,2,CollateralizedDebt.tokenURI fails when pair's asset or collateral token have low decimals,33,https://github.com/code-423n4/2022-03-timeswap-findings/issues/33,timeswap,2022/03,bug;QA (Quality Assurance);resolved;sponsor confirmed
96,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,Borrowers can get back collateral without repaying loans,10,https://github.com/code-423n4/2022-03-timeswap-findings/issues/10,timeswap,2022/03,bug;duplicate;3 (High Risk);sponsor confirmed
96,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,The `pay()` function can still be DOSed,11,https://github.com/code-423n4/2022-03-timeswap-findings/issues/11,timeswap,2022/03,bug;2 (Med Risk);sponsor acknowledged
96,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Borrowers cannot get correct collateral if using `Convenience` functions and someone else has paid some debt ,12,https://github.com/code-423n4/2022-03-timeswap-findings/issues/12,timeswap,2022/03,bug;invalid
96,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,13,https://github.com/code-423n4/2022-03-timeswap-findings/issues/13,timeswap,2022/03,bug;G (Gas Optimization);resolved;sponsor confirmed
96,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,37,https://github.com/code-423n4/2022-03-timeswap-findings/issues/37,timeswap,2022/03,bug;G (Gas Optimization);resolved;sponsor confirmed
96,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,38,https://github.com/code-423n4/2022-03-timeswap-findings/issues/38,timeswap,2022/03,bug;QA (Quality Assurance);resolved;sponsor confirmed
96,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,2,No zero address check at `collectprotocolFee` could make lose protocol fees,27,https://github.com/code-423n4/2022-03-timeswap-findings/issues/27,timeswap,2022/03,bug;QA (Quality Assurance)
96,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,Q,QA Report,30,https://github.com/code-423n4/2022-03-timeswap-findings/issues/30,timeswap,2022/03,bug;QA (Quality Assurance);resolved;sponsor confirmed
96,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,31,https://github.com/code-423n4/2022-03-timeswap-findings/issues/31,timeswap,2022/03,bug;G (Gas Optimization);resolved;sponsor confirmed
96,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,3,https://github.com/code-423n4/2022-03-timeswap-findings/issues/3,timeswap,2022/03,bug;QA (Quality Assurance);sponsor acknowledged
96,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,4,https://github.com/code-423n4/2022-03-timeswap-findings/issues/4,timeswap,2022/03,bug;G (Gas Optimization);resolved;sponsor acknowledged;sponsor confirmed
96,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,subsequent mints doesn't compute new liquidity correctly,21,https://github.com/code-423n4/2022-03-timeswap-findings/issues/21,timeswap,2022/03,bug;invalid
96,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,borrow assigns less debt to the caller than it should,22,https://github.com/code-423n4/2022-03-timeswap-findings/issues/22,timeswap,2022/03,bug;invalid
96,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,lend gives lender less bond interest tokens than it should,23,https://github.com/code-423n4/2022-03-timeswap-findings/issues/23,timeswap,2022/03,bug;invalid
96,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,28,https://github.com/code-423n4/2022-03-timeswap-findings/issues/28,timeswap,2022/03,bug;invalid
96,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,2,Underflown variable in ``borrowGivenDebtETHCollateral`` function,32,https://github.com/code-423n4/2022-03-timeswap-findings/issues/32,timeswap,2022/03,bug;2 (Med Risk);resolved;sponsor confirmed
96,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,G,Gas Optimizations,35,https://github.com/code-423n4/2022-03-timeswap-findings/issues/35,timeswap,2022/03,bug;G (Gas Optimization);resolved;sponsor confirmed
96,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,18,https://github.com/code-423n4/2022-03-timeswap-findings/issues/18,timeswap,2022/03,bug;G (Gas Optimization);resolved;sponsor confirmed
96,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H1] Wrong timing of check allows users to withdraw collateral without paying for the debt,16,https://github.com/code-423n4/2022-03-timeswap-findings/issues/16,timeswap,2022/03,bug;3 (High Risk);resolved;sponsor confirmed
96,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Gas Optimizations,17,https://github.com/code-423n4/2022-03-timeswap-findings/issues/17,timeswap,2022/03,bug;G (Gas Optimization);resolved;sponsor acknowledged;sponsor confirmed
96,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,Q,QA Report,19,https://github.com/code-423n4/2022-03-timeswap-findings/issues/19,timeswap,2022/03,bug;QA (Quality Assurance);sponsor acknowledged
102,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,10,https://github.com/code-423n4/2022-03-volt-findings/issues/10,volt,2022/03,bug;G (Gas Optimization)
102,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,3,"Core init() can be front-run, leading to attacker's minter and governor permissions unknown to team",68,https://github.com/code-423n4/2022-03-volt-findings/issues/68,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,setMinter() in vcon.sol missing important checks can lead to loss of minting ability,73,https://github.com/code-423n4/2022-03-volt-findings/issues/73,volt,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
102,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,Q,QA Report,76,https://github.com/code-423n4/2022-03-volt-findings/issues/76,volt,2022/03,bug;QA (Quality Assurance)
102,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,Q,QA Report,101,https://github.com/code-423n4/2022-03-volt-findings/issues/101,volt,2022/03,bug;QA (Quality Assurance)
102,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,G,Gas Optimizations,102,https://github.com/code-423n4/2022-03-volt-findings/issues/102,volt,2022/03,bug;G (Gas Optimization)
102,0xkowloon,0xCD980B28732be9DdfaAF2b12b292Bb07ebc86889,G,Gas Optimizations,32,https://github.com/code-423n4/2022-03-volt-findings/issues/32,volt,2022/03,bug;G (Gas Optimization)
102,0xkowloon,0xCD980B28732be9DdfaAF2b12b292Bb07ebc86889,Q,QA Report,33,https://github.com/code-423n4/2022-03-volt-findings/issues/33,volt,2022/03,bug;QA (Quality Assurance)
102,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,75,https://github.com/code-423n4/2022-03-volt-findings/issues/75,volt,2022/03,bug;G (Gas Optimization)
102,async,0x7841f2064bBaF90127CA0eed5b004020BF9ca819,Q,QA Report,80,https://github.com/code-423n4/2022-03-volt-findings/issues/80,volt,2022/03,bug;QA (Quality Assurance)
102,aysha,0xb4cdE5B28C6894E3ddF4F8C79F956D395263C3Bf,Q,QA Report,110,https://github.com/code-423n4/2022-03-volt-findings/issues/110,volt,2022/03,bug;duplicate;QA (Quality Assurance)
102,aysha,0xb4cdE5B28C6894E3ddF4F8C79F956D395263C3Bf,2,Missing Two-step change of Critical address,111,https://github.com/code-423n4/2022-03-volt-findings/issues/111,volt,2022/03,bug;duplicate;QA (Quality Assurance)
102,aysha,0xb4cdE5B28C6894E3ddF4F8C79F956D395263C3Bf,Q,QA Report,112,https://github.com/code-423n4/2022-03-volt-findings/issues/112,volt,2022/03,bug;QA (Quality Assurance)
102,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,"Missing `approve(_spender, 0)`",34,https://github.com/code-423n4/2022-03-volt-findings/issues/34,volt,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
102,BouSalman,0xDdd4D4c17971dBfC6FD781c3354DCaa7757a87eb,Q,QA Report,11,https://github.com/code-423n4/2022-03-volt-findings/issues/11,volt,2022/03,bug;QA (Quality Assurance)
102,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2,onlyBurner modifier missing,74,https://github.com/code-423n4/2022-03-volt-findings/issues/74,volt,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
102,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2,Faulty logic at _setBufferCap() function,77,https://github.com/code-423n4/2022-03-volt-findings/issues/77,volt,2022/03,bug;duplicate;2 (Med Risk);disagree with severity
102,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,Q,QA Report,78,https://github.com/code-423n4/2022-03-volt-findings/issues/78,volt,2022/03,bug;QA (Quality Assurance)
102,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,G,Gas Optimizations,79,https://github.com/code-423n4/2022-03-volt-findings/issues/79,volt,2022/03,bug;G (Gas Optimization)
102,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Must approve 0 first,1,https://github.com/code-423n4/2022-03-volt-findings/issues/1,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"When the _updateCPIData function fails, the contract will not be able to update the price within 28 days, resulting in the use of stale data.",2,https://github.com/code-423n4/2022-03-volt-findings/issues/2,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,PCV_CONTROLLER_ROLE can be granted by the deployer of Core and withdraw any tokens form PCVDeposit contract,49,https://github.com/code-423n4/2022-03-volt-findings/issues/49,volt,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
102,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,MINTER_ROLE can be granted by the deployer of Core and mint arbitrary amount of Volt.,50,https://github.com/code-423n4/2022-03-volt-findings/issues/50,volt,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
102,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,Q,QA Report,51,https://github.com/code-423n4/2022-03-volt-findings/issues/51,volt,2022/03,bug;QA (Quality Assurance)
102,CertoraInc,0x777bA383e74062dd7948A61471267E8e4370EA39,2,Problem with requestCPIData,52,https://github.com/code-423n4/2022-03-volt-findings/issues/52,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,CertoraInc,0x777bA383e74062dd7948A61471267E8e4370EA39,2, governors privileges problems,54,https://github.com/code-423n4/2022-03-volt-findings/issues/54,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,CertoraInc,0x777bA383e74062dd7948A61471267E8e4370EA39,2,rateLimitPerAddress don't changing with the limits,67,https://github.com/code-423n4/2022-03-volt-findings/issues/67,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,CertoraInc,0x777bA383e74062dd7948A61471267E8e4370EA39,3,Re-entrace danger in `PCVDeposit`,69,https://github.com/code-423n4/2022-03-volt-findings/issues/69,volt,2022/03,bug;invalid;3 (High Risk);sponsor disputed
102,CertoraInc,0x777bA383e74062dd7948A61471267E8e4370EA39,Q,QA Report,70,https://github.com/code-423n4/2022-03-volt-findings/issues/70,volt,2022/03,bug;duplicate;QA (Quality Assurance)
102,CertoraInc,0x777bA383e74062dd7948A61471267E8e4370EA39,G,Gas Optimizations,71,https://github.com/code-423n4/2022-03-volt-findings/issues/71,volt,2022/03,bug;duplicate;G (Gas Optimization)
102,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,81,https://github.com/code-423n4/2022-03-volt-findings/issues/81,volt,2022/03,bug;QA (Quality Assurance)
102,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,82,https://github.com/code-423n4/2022-03-volt-findings/issues/82,volt,2022/03,bug;G (Gas Optimization)
102,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Division by zero in isWithinDeviationThreshold,127,https://github.com/code-423n4/2022-03-volt-findings/issues/127,volt,2022/03,duplicate;2 (Med Risk)
102,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Oracle price does not compound,22,https://github.com/code-423n4/2022-03-volt-findings/issues/22,volt,2022/03,bug;3 (High Risk);sponsor confirmed
102,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Protocol reverts on CPI growth changes of more than 20%,23,https://github.com/code-423n4/2022-03-volt-findings/issues/23,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity;sponsor acknowledged
102,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Compound PCV does not work with Compound's USDT market,24,https://github.com/code-423n4/2022-03-volt-findings/issues/24,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Minting does not support fee-on-transfer tokens,25,https://github.com/code-423n4/2022-03-volt-findings/issues/25,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`OracleRef` assumes backup oracle uses the same normalizer as main oracle,26,https://github.com/code-423n4/2022-03-volt-findings/issues/26,volt,2022/03,bug;2 (Med Risk);sponsor confirmed
102,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Updating rate limit for addresses restores their entire buffer amount,27,https://github.com/code-423n4/2022-03-volt-findings/issues/27,volt,2022/03,bug;2 (Med Risk);sponsor confirmed
102,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Can mint more VOLT than buffer allows if `doPartialAction == true`,28,https://github.com/code-423n4/2022-03-volt-findings/issues/28,volt,2022/03,bug;duplicate;QA (Quality Assurance)
102,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Setting new buffer does not reduce current buffer to cap,29,https://github.com/code-423n4/2022-03-volt-findings/issues/29,volt,2022/03,bug;2 (Med Risk);sponsor confirmed
102,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,Q,QA Report,30,https://github.com/code-423n4/2022-03-volt-findings/issues/30,volt,2022/03,bug;QA (Quality Assurance)
102,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,35,https://github.com/code-423n4/2022-03-volt-findings/issues/35,volt,2022/03,bug;G (Gas Optimization)
102,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,36,https://github.com/code-423n4/2022-03-volt-findings/issues/36,volt,2022/03,bug;QA (Quality Assurance)
102,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,admin can rug by setting malicious  PCVDeposit,53,https://github.com/code-423n4/2022-03-volt-findings/issues/53,volt,2022/03,bug;QA (Quality Assurance);disagree with severity
102,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,115,https://github.com/code-423n4/2022-03-volt-findings/issues/115,volt,2022/03,bug;QA (Quality Assurance)
102,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,119,https://github.com/code-423n4/2022-03-volt-findings/issues/119,volt,2022/03,bug;G (Gas Optimization)
102,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Inconsistent use of oracle,120,https://github.com/code-423n4/2022-03-volt-findings/issues/120,volt,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
102,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Unchangeable Feeder After ChainlinkOracle Initialization,124,https://github.com/code-423n4/2022-03-volt-findings/issues/124,volt,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
102,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Chain ID Is Not Resistant To Hard Fork and Other Token Supports In The Oracle Contract,37,https://github.com/code-423n4/2022-03-volt-findings/issues/37,volt,2022/03,bug;invalid;2 (Med Risk);disagree with severity
102,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,38,https://github.com/code-423n4/2022-03-volt-findings/issues/38,volt,2022/03,bug;G (Gas Optimization)
102,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,39,https://github.com/code-423n4/2022-03-volt-findings/issues/39,volt,2022/03,bug;QA (Quality Assurance)
102,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,104,https://github.com/code-423n4/2022-03-volt-findings/issues/104,volt,2022/03,bug;G (Gas Optimization)
102,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,Q,QA Report,105,https://github.com/code-423n4/2022-03-volt-findings/issues/105,volt,2022/03,bug;QA (Quality Assurance)
102,georgypetrov,0x0ed7C72398379F60CeEC0659E3AD6bFdBAa465a8,2,"If currentMonth in init is 0, then CPI update will revert, zero div",128,https://github.com/code-423n4/2022-03-volt-findings/issues/128,volt,2022/03,duplicate;2 (Med Risk)
102,georgypetrov,0x0ed7C72398379F60CeEC0659E3AD6bFdBAa465a8,G,Gas Optimizations,85,https://github.com/code-423n4/2022-03-volt-findings/issues/85,volt,2022/03,bug;G (Gas Optimization)
102,georgypetrov,0x0ed7C72398379F60CeEC0659E3AD6bFdBAa465a8,Q,QA Report,86,https://github.com/code-423n4/2022-03-volt-findings/issues/86,volt,2022/03,bug;QA (Quality Assurance)
102,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,Q,QA Report,19,https://github.com/code-423n4/2022-03-volt-findings/issues/19,volt,2022/03,bug;QA (Quality Assurance)
102,Hawkeye, 0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,G,Gas Optimizations,96,https://github.com/code-423n4/2022-03-volt-findings/issues/96,volt,2022/03,bug;G (Gas Optimization)
102,Hawkeye, 0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,98,https://github.com/code-423n4/2022-03-volt-findings/issues/98,volt,2022/03,bug;QA (Quality Assurance)
102,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,3,Possibility of stale and static value of VOLT for longer duration on change of ScalingPriceOracle,87,https://github.com/code-423n4/2022-03-volt-findings/issues/87,volt,2022/03,bug;invalid;3 (High Risk);sponsor disputed
102,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,Q,QA Report,93,https://github.com/code-423n4/2022-03-volt-findings/issues/93,volt,2022/03,bug;QA (Quality Assurance)
102,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,"NonCustodialPSM.mint ignores mint buffer reduced amount, mostly disabling mint rate control",113,https://github.com/code-423n4/2022-03-volt-findings/issues/113,volt,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
102,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,NonCustodialPSM's _getMintAmountOut and _getRedeemAmountOut don't account for underlyingToken decimals,116,https://github.com/code-423n4/2022-03-volt-findings/issues/116,volt,2022/03,bug;invalid;3 (High Risk);sponsor disputed
102,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,NonCustodialPSM.mint double counts mint buffer depletion and GlobalRateLimitedMinter.mintVolt allows for minting in excess of the global mint buffer limit,126,https://github.com/code-423n4/2022-03-volt-findings/issues/126,volt,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
102,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,NonCustodialPSM can become insolvent as CPI index rises,83,https://github.com/code-423n4/2022-03-volt-findings/issues/83,volt,2022/03,bug;2 (Med Risk);disagree with severity
102,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,NonCustodialPSM.mint and redeem using mint control buffer in the inverted way,91,https://github.com/code-423n4/2022-03-volt-findings/issues/91,volt,2022/03,bug;invalid;3 (High Risk);sponsor disputed
102,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,"Code credits fee-on-transfer tokens for amount stated, not amount transferred",100,https://github.com/code-423n4/2022-03-volt-findings/issues/100,volt,2022/03,bug;duplicate;QA (Quality Assurance)
102,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,`CompoundPCVDepositBase` is unable to `withdraw()` fee-on-transfer tokens,114,https://github.com/code-423n4/2022-03-volt-findings/issues/114,volt,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
102,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Division by zero,130,https://github.com/code-423n4/2022-03-volt-findings/issues/130,volt,2022/03,duplicate;2 (Med Risk)
102,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Calls to `approve()` are not safe,45,https://github.com/code-423n4/2022-03-volt-findings/issues/45,volt,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
102,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Code cannot handle hyperinflation,46,https://github.com/code-423n4/2022-03-volt-findings/issues/46,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,47,https://github.com/code-423n4/2022-03-volt-findings/issues/47,volt,2022/03,bug;G (Gas Optimization)
102,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,48,https://github.com/code-423n4/2022-03-volt-findings/issues/48,volt,2022/03,bug;QA (Quality Assurance)
102,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,G,Gas Optimizations,40,https://github.com/code-423n4/2022-03-volt-findings/issues/40,volt,2022/03,bug;G (Gas Optimization)
102,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,MINTER_ROLE can be granted by the deployer of Volt and mint arbitrary amount of tokens,55,https://github.com/code-423n4/2022-03-volt-findings/issues/55,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,A Single Malicious Trusted Account Can Takeover the Protocol,66,https://github.com/code-423n4/2022-03-volt-findings/issues/66,volt,2022/03,bug;QA (Quality Assurance);disagree with severity
102,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,G,Gas Optimizations,41,https://github.com/code-423n4/2022-03-volt-findings/issues/41,volt,2022/03,bug;duplicate;G (Gas Optimization)
102,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,G,Gas Optimizations,42,https://github.com/code-423n4/2022-03-volt-findings/issues/42,volt,2022/03,bug;G (Gas Optimization)
102,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,Q,QA Report,43,https://github.com/code-423n4/2022-03-volt-findings/issues/43,volt,2022/03,bug;duplicate;QA (Quality Assurance)
102,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,Q,QA Report,44,https://github.com/code-423n4/2022-03-volt-findings/issues/44,volt,2022/03,bug;QA (Quality Assurance)
102,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,121,https://github.com/code-423n4/2022-03-volt-findings/issues/121,volt,2022/03,bug;G (Gas Optimization)
102,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,122,https://github.com/code-423n4/2022-03-volt-findings/issues/122,volt,2022/03,bug;QA (Quality Assurance)
102,Kthere,0xe3D091E8122E65a0bD6a3B1bc1Ee12B7C4ebb61f,Q,QA Report,12,https://github.com/code-423n4/2022-03-volt-findings/issues/12,volt,2022/03,bug;invalid;QA (Quality Assurance);disagree with severity
102,Kthere,0xe3D091E8122E65a0bD6a3B1bc1Ee12B7C4ebb61f,2,Setting the minter address to address(0) can lead to breaking the contract set.,3,https://github.com/code-423n4/2022-03-volt-findings/issues/3,volt,2022/03,bug;invalid;2 (Med Risk);disagree with severity
102,Kthere,0xe3D091E8122E65a0bD6a3B1bc1Ee12B7C4ebb61f,Q,QA Report,5,https://github.com/code-423n4/2022-03-volt-findings/issues/5,volt,2022/03,bug;QA (Quality Assurance)
102,Kthere,0xe3D091E8122E65a0bD6a3B1bc1Ee12B7C4ebb61f,2,Use `.call` instead of `.transfer` for increased security,6,https://github.com/code-423n4/2022-03-volt-findings/issues/6,volt,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
102,Kthere,0xe3D091E8122E65a0bD6a3B1bc1Ee12B7C4ebb61f,3,`.approve()` might fail for USDT in case of multiple deposits,7,https://github.com/code-423n4/2022-03-volt-findings/issues/7,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,kyliek,0xdE624A36bcCd38DB850365b34Bc99ab3b1252415,2,Short cpiData memory makes the system less resilient to potentially erroneous/wild oracle return,123,https://github.com/code-423n4/2022-03-volt-findings/issues/123,volt,2022/03,bug;duplicate;QA (Quality Assurance);sponsor disputed
102,kyliek,0xdE624A36bcCd38DB850365b34Bc99ab3b1252415,Q,QA Report,125,https://github.com/code-423n4/2022-03-volt-findings/issues/125,volt,2022/03,bug;QA (Quality Assurance)
102,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Gas Optimizations,14,https://github.com/code-423n4/2022-03-volt-findings/issues/14,volt,2022/03,bug;duplicate;G (Gas Optimization)
102,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Gas Optimizations,15,https://github.com/code-423n4/2022-03-volt-findings/issues/15,volt,2022/03,bug;G (Gas Optimization)
102,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,Q,QA Report,16,https://github.com/code-423n4/2022-03-volt-findings/issues/16,volt,2022/03,bug;QA (Quality Assurance)
102,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,2,Admin Can Withdraw VOLT Tokens from NonCustodialPSM.sol,17,https://github.com/code-423n4/2022-03-volt-findings/issues/17,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,Assume Price Changes Not More Than 20% In a Month May Break Protocol,18,https://github.com/code-423n4/2022-03-volt-findings/issues/18,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,okkothejawa,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,G,Gas Optimizations,4,https://github.com/code-423n4/2022-03-volt-findings/issues/4,volt,2022/03,bug;G (Gas Optimization)
102,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,Q,QA Report,97,https://github.com/code-423n4/2022-03-volt-findings/issues/97,volt,2022/03,bug;QA (Quality Assurance)
102,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`BufferStored` could be larger than `BufferCap` after `_setBufferCap()`,129,https://github.com/code-423n4/2022-03-volt-findings/issues/129,volt,2022/03,duplicate;2 (Med Risk)
102,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,`vcon` address change not persistent across protocol components,60,https://github.com/code-423n4/2022-03-volt-findings/issues/60,volt,2022/03,bug;2 (Med Risk);disagree with severity
102,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`NonCustodialPSM` does not follow whitepaper and allows existence of redeem fee,61,https://github.com/code-423n4/2022-03-volt-findings/issues/61,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`NonCustodialPSM.mint` does not deposit collateral into yield venue automatically,62,https://github.com/code-423n4/2022-03-volt-findings/issues/62,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`requestCPIData` timeout potentially denies price update for February,63,https://github.com/code-423n4/2022-03-volt-findings/issues/63,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,64,https://github.com/code-423n4/2022-03-volt-findings/issues/64,volt,2022/03,bug;QA (Quality Assurance)
102,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,65,https://github.com/code-423n4/2022-03-volt-findings/issues/65,volt,2022/03,bug;G (Gas Optimization)
102,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,Q,QA Report,117,https://github.com/code-423n4/2022-03-volt-findings/issues/117,volt,2022/03,bug;QA (Quality Assurance)
102,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,118,https://github.com/code-423n4/2022-03-volt-findings/issues/118,volt,2022/03,bug;G (Gas Optimization)
102,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,56,https://github.com/code-423n4/2022-03-volt-findings/issues/56,volt,2022/03,bug;G (Gas Optimization)
102,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2, Unsafe Cast,57,https://github.com/code-423n4/2022-03-volt-findings/issues/57,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity;sponsor acknowledged
102,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Div by 0,58,https://github.com/code-423n4/2022-03-volt-findings/issues/58,volt,2022/03,bug;2 (Med Risk);sponsor confirmed
102,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,59,https://github.com/code-423n4/2022-03-volt-findings/issues/59,volt,2022/03,bug;QA (Quality Assurance)
102,sahar,0x86AB7f14002412fb8609C670c3E49F949AED3989,2,The problem of incompatible governer and Gaurdian in minting and redeeming,103,https://github.com/code-423n4/2022-03-volt-findings/issues/103,volt,2022/03,bug;duplicate;QA (Quality Assurance)
102,sahar,0x86AB7f14002412fb8609C670c3E49F949AED3989,2,Dangerous of one-step change of privileged roles,106,https://github.com/code-423n4/2022-03-volt-findings/issues/106,volt,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
102,sahar,0x86AB7f14002412fb8609C670c3E49F949AED3989,G,Gas Optimizations,107,https://github.com/code-423n4/2022-03-volt-findings/issues/107,volt,2022/03,bug;invalid;G (Gas Optimization)
102,sahar,0x86AB7f14002412fb8609C670c3E49F949AED3989,2,Missing balance checking before giving approve to another address,108,https://github.com/code-423n4/2022-03-volt-findings/issues/108,volt,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
102,sahar,0x86AB7f14002412fb8609C670c3E49F949AED3989,2,Missing balance check before permitting,109,https://github.com/code-423n4/2022-03-volt-findings/issues/109,volt,2022/03,bug;invalid;2 (Med Risk)
102,sahar,0x86AB7f14002412fb8609C670c3E49F949AED3989,Q,QA Report,84,https://github.com/code-423n4/2022-03-volt-findings/issues/84,volt,2022/03,bug;duplicate;QA (Quality Assurance)
102,sahar,0x86AB7f14002412fb8609C670c3E49F949AED3989,Q,QA Report,88,https://github.com/code-423n4/2022-03-volt-findings/issues/88,volt,2022/03,bug;QA (Quality Assurance)
102,sahar,0x86AB7f14002412fb8609C670c3E49F949AED3989,3,Dangerous One-step change of privileged roles,92,https://github.com/code-423n4/2022-03-volt-findings/issues/92,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,sahar,0x86AB7f14002412fb8609C670c3E49F949AED3989,2,Involve governer to run this function,94,https://github.com/code-423n4/2022-03-volt-findings/issues/94,volt,2022/03,bug;invalid;2 (Med Risk);disagree with severity
102,sahar,0x86AB7f14002412fb8609C670c3E49F949AED3989,2,Wrong modfier ,95,https://github.com/code-423n4/2022-03-volt-findings/issues/95,volt,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
102,sahar,0x86AB7f14002412fb8609C670c3E49F949AED3989,2,Need to change the logic of smart contracts in the face of negative inflation,99,https://github.com/code-423n4/2022-03-volt-findings/issues/99,volt,2022/03,bug;invalid;2 (Med Risk);sponsor disputed
102,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Gas Optimizations,72,https://github.com/code-423n4/2022-03-volt-findings/issues/72,volt,2022/03,bug;G (Gas Optimization)
102,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,20,https://github.com/code-423n4/2022-03-volt-findings/issues/20,volt,2022/03,bug;G (Gas Optimization)
102,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,Q,QA Report,31,https://github.com/code-423n4/2022-03-volt-findings/issues/31,volt,2022/03,bug;QA (Quality Assurance)
102,Sleepy,0xa0B9905166C2773941CDBd287B3f1b6Ab76f96B1,Q,QA Report,89,https://github.com/code-423n4/2022-03-volt-findings/issues/89,volt,2022/03,bug;QA (Quality Assurance)
102,Sleepy,0xa0B9905166C2773941CDBd287B3f1b6Ab76f96B1,G,Gas Optimizations,90,https://github.com/code-423n4/2022-03-volt-findings/issues/90,volt,2022/03,bug;G (Gas Optimization)
102,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,Q,QA Report,8,https://github.com/code-423n4/2022-03-volt-findings/issues/8,volt,2022/03,bug;QA (Quality Assurance)
102,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,G,Gas Optimizations,9,https://github.com/code-423n4/2022-03-volt-findings/issues/9,volt,2022/03,bug;G (Gas Optimization)
102,teryanarmen,0x9e255e1544E5D9B5C7766076890B059a27CAFCC1,2,Data Update Fails For Most Crucial Months,13,https://github.com/code-423n4/2022-03-volt-findings/issues/13,volt,2022/03,bug;duplicate;QA (Quality Assurance);disagree with severity
102,teryanarmen,0x9e255e1544E5D9B5C7766076890B059a27CAFCC1,2,Incompatibility with deflationary/fee-on-transfer tokens,21,https://github.com/code-423n4/2022-03-volt-findings/issues/21,volt,2022/03,bug;QA (Quality Assurance);disagree with severity
113,0x1337,0x4C024e5B3AE9B56319ed7c2D0F73A8535DDFF47e,3,The fee balance of all `NFTPair` clones can be drained by hackers,36,https://github.com/code-423n4/2022-04-abranft-findings/issues/36,abranft,2022/04,bug;invalid;sponsor disputed
113,0x1337,0x4C024e5B3AE9B56319ed7c2D0F73A8535DDFF47e,3,Critical Oracle Manipulation Risk by Lender,37,https://github.com/code-423n4/2022-04-abranft-findings/issues/37,abranft,2022/04,bug;3 (High Risk);sponsor confirmed
113,0x1337,0x4C024e5B3AE9B56319ed7c2D0F73A8535DDFF47e,3,Protocol fee balance of all `NFTPairWithOracle` and `NFTPair` clones can be drained by hackers,39,https://github.com/code-423n4/2022-04-abranft-findings/issues/39,abranft,2022/04,bug;invalid;sponsor disputed
113,0x1337,0x4C024e5B3AE9B56319ed7c2D0F73A8535DDFF47e,3,No Check for Deflationary Tokens,41,https://github.com/code-423n4/2022-04-abranft-findings/issues/41,abranft,2022/04,bug;QA (Quality Assurance);sponsor disputed
113,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Steal tokens from the contract,17,https://github.com/code-423n4/2022-04-abranft-findings/issues/17,abranft,2022/04,bug;invalid;sponsor disputed
113,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,It's possible to burn tokens.,18,https://github.com/code-423n4/2022-04-abranft-findings/issues/18,abranft,2022/04,bug;invalid;sponsor disputed
113,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Steal collateral NFT tokens from NFTPair,22,https://github.com/code-423n4/2022-04-abranft-findings/issues/22,abranft,2022/04,bug;invalid;sponsor disputed
113,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Steal collateral NFT tokens from NFTPairWithOracle,23,https://github.com/code-423n4/2022-04-abranft-findings/issues/23,abranft,2022/04,bug;invalid;sponsor disputed
113,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,empty address in ecrecover was not checked in NFTPairWithOracle,24,https://github.com/code-423n4/2022-04-abranft-findings/issues/24,abranft,2022/04,bug;duplicate;QA (Quality Assurance)
113,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,empty address in ecrecover was not checked in NFTPair,25,https://github.com/code-423n4/2022-04-abranft-findings/issues/25,abranft,2022/04,bug;duplicate;QA (Quality Assurance)
113,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,empty address in ecrecover was not checked in NFTPair,26,https://github.com/code-423n4/2022-04-abranft-findings/issues/26,abranft,2022/04,bug;duplicate;QA (Quality Assurance)
113,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,It's possible to transfer the `asset` funds of NFTPair,27,https://github.com/code-423n4/2022-04-abranft-findings/issues/27,abranft,2022/04,bug;invalid;sponsor disputed
113,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,It's possible to transfer the `asset` funds of NFTPairWithOracle,28,https://github.com/code-423n4/2022-04-abranft-findings/issues/28,abranft,2022/04,bug;invalid;sponsor disputed
113,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,29,https://github.com/code-423n4/2022-04-abranft-findings/issues/29,abranft,2022/04,G (Gas Optimization);sponsor disputed
113,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,30,https://github.com/code-423n4/2022-04-abranft-findings/issues/30,abranft,2022/04,bug;QA (Quality Assurance);sponsor disputed
113,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,FlashLoans vulnerables to steal unexpected tokens,31,https://github.com/code-423n4/2022-04-abranft-findings/issues/31,abranft,2022/04,bug;invalid;sponsor disputed
113,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Borrower NFT can be stuck in contract due to lack of Zero Address check,91,https://github.com/code-423n4/2022-04-abranft-findings/issues/91,abranft,2022/04,bug;QA (Quality Assurance);sponsor disputed
113,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,G,Gas Optimizations,94,https://github.com/code-423n4/2022-04-abranft-findings/issues/94,abranft,2022/04,bug;invalid;G (Gas Optimization);sponsor disputed
113,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,3,The bool return value of variable success is not checked/handled in removeCollateral() of NFTPairWithOracle.sol,201,https://github.com/code-423n4/2022-04-abranft-findings/issues/201,abranft,2022/04,bug;duplicate;3 (High Risk)
113,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,Q,QA Report,77,https://github.com/code-423n4/2022-04-abranft-findings/issues/77,abranft,2022/04,bug;QA (Quality Assurance)
113,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,G,Gas Optimizations,78,https://github.com/code-423n4/2022-04-abranft-findings/issues/78,abranft,2022/04,bug;G (Gas Optimization)
113,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,G,Gas Optimizations,111,https://github.com/code-423n4/2022-04-abranft-findings/issues/111,abranft,2022/04,bug;G (Gas Optimization)
113,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,98,https://github.com/code-423n4/2022-04-abranft-findings/issues/98,abranft,2022/04,bug;G (Gas Optimization)
113,antonttc,0x386f6B908640d9f394EF37bC1b8c3a4018fa3dB1,G,Gas Optimizations,182,https://github.com/code-423n4/2022-04-abranft-findings/issues/182,abranft,2022/04,bug;G (Gas Optimization)
113,antonttc,0x386f6B908640d9f394EF37bC1b8c3a4018fa3dB1,2,NFT oracle price request successful or not is not checked,183,https://github.com/code-423n4/2022-04-abranft-findings/issues/183,abranft,2022/04,bug;duplicate;3 (High Risk)
113,antonttc,0x386f6B908640d9f394EF37bC1b8c3a4018fa3dB1,2,"msg.value is not checked in `cook`, might lead to loss of user funds.",187,https://github.com/code-423n4/2022-04-abranft-findings/issues/187,abranft,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
113,antonttc,0x386f6B908640d9f394EF37bC1b8c3a4018fa3dB1,Q,QA Report,195,https://github.com/code-423n4/2022-04-abranft-findings/issues/195,abranft,2022/04,bug;QA (Quality Assurance)
113,AuditsAreUS,0x8f6e76F3059DcFAC435bBb7029294eB6ceEcab23,3,Users Who `approve()` ERC20 Tokens for `NFTPair` of `NFTPairWithOracle` Contracts May Have Their Allowances Stole By Any User,181,https://github.com/code-423n4/2022-04-abranft-findings/issues/181,abranft,2022/04,bug;invalid;3 (High Risk);sponsor disputed
113,AuditsAreUS,0x8f6e76F3059DcFAC435bBb7029294eB6ceEcab23,2,Reentrancy in `removeCollateral()` / `requestLoan()`,186,https://github.com/code-423n4/2022-04-abranft-findings/issues/186,abranft,2022/04,bug;duplicate;2 (Med Risk)
113,AuditsAreUS,0x8f6e76F3059DcFAC435bBb7029294eB6ceEcab23,2,Skim Functionality Is Front-runnable,188,https://github.com/code-423n4/2022-04-abranft-findings/issues/188,abranft,2022/04,bug;duplicate;invalid
113,AuditsAreUS,0x8f6e76F3059DcFAC435bBb7029294eB6ceEcab23,2,`removeCollateral()` May Be Called in When Loan Status is Initial,191,https://github.com/code-423n4/2022-04-abranft-findings/issues/191,abranft,2022/04,bug;invalid
113,AuditsAreUS,0x8f6e76F3059DcFAC435bBb7029294eB6ceEcab23,2,`init()` Is Payable But `msg.value` Is Not Used,192,https://github.com/code-423n4/2022-04-abranft-findings/issues/192,abranft,2022/04,bug;QA (Quality Assurance);sponsor disputed
113,AuditsAreUS,0x8f6e76F3059DcFAC435bBb7029294eB6ceEcab23,2,Signature Verification Functions Do Not Check Address Is Not Zero,194,https://github.com/code-423n4/2022-04-abranft-findings/issues/194,abranft,2022/04,bug;duplicate;QA (Quality Assurance)
113,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,Q,QA Report,128,https://github.com/code-423n4/2022-04-abranft-findings/issues/128,abranft,2022/04,bug;QA (Quality Assurance)
113,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Unchecked oracle return value,130,https://github.com/code-423n4/2022-04-abranft-findings/issues/130,abranft,2022/04,bug;duplicate;3 (High Risk)
113,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,3,Reducing loan valuation via `updateLoanParams()` after lending results in loss of funds for lender on repay,162,https://github.com/code-423n4/2022-04-abranft-findings/issues/162,abranft,2022/04,bug;invalid;sponsor disputed
113,bobi,0x8F24B7bEe60c5421101e2e596b1008522368920F,Q,QA Report,66,https://github.com/code-423n4/2022-04-abranft-findings/issues/66,abranft,2022/04,bug;QA (Quality Assurance)
113,bobirichman,0x0BacBAd41a499bADcD35eF1b7bDC951A119BBD86,Q,QA Report,121,https://github.com/code-423n4/2022-04-abranft-findings/issues/121,abranft,2022/04,bug;QA (Quality Assurance)
113,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,G,Gas Optimizations,126,https://github.com/code-423n4/2022-04-abranft-findings/issues/126,abranft,2022/04,bug;G (Gas Optimization)
113,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,Loss of Collateral Via Malicious Oracle,131,https://github.com/code-423n4/2022-04-abranft-findings/issues/131,abranft,2022/04,bug;duplicate;3 (High Risk)
113,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,Avoidance of Liquidation Via Malicious Oracle,136,https://github.com/code-423n4/2022-04-abranft-findings/issues/136,abranft,2022/04,bug;3 (High Risk);sponsor confirmed
113,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,Q,QA Report,137,https://github.com/code-423n4/2022-04-abranft-findings/issues/137,abranft,2022/04,bug;QA (Quality Assurance);sponsor disputed
113,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,Loss Of Collateral Via Illegitimate Liquidation,140,https://github.com/code-423n4/2022-04-abranft-findings/issues/140,abranft,2022/04,bug;duplicate;3 (High Risk)
113,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,Blocking of Legitimate Liquidation,141,https://github.com/code-423n4/2022-04-abranft-findings/issues/141,abranft,2022/04,bug;invalid;3 (High Risk);sponsor disputed
113,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,Use Victims Collateral by Frontrunning,153,https://github.com/code-423n4/2022-04-abranft-findings/issues/153,abranft,2022/04,bug;duplicate;invalid;3 (High Risk)
113,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,Frontrunning Attack - Steal Victims Collateral,154,https://github.com/code-423n4/2022-04-abranft-findings/issues/154,abranft,2022/04,bug;duplicate;invalid
113,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,Skim Accidental Transfer of Collateral,155,https://github.com/code-423n4/2022-04-abranft-findings/issues/155,abranft,2022/04,bug;duplicate;invalid;3 (High Risk)
113,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,Missing zero address check on _requestLoan,156,https://github.com/code-423n4/2022-04-abranft-findings/issues/156,abranft,2022/04,bug;duplicate;QA (Quality Assurance)
113,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,No successful transfer check on _requestLoan,157,https://github.com/code-423n4/2022-04-abranft-findings/issues/157,abranft,2022/04,bug;invalid;sponsor disputed
113,broccolirob,0x5233af283e7c359a1011dc0ff480298e90c8cfd6,3,`ecrecover` return not checked for 0 address,199,https://github.com/code-423n4/2022-04-abranft-findings/issues/199,abranft,2022/04,bug;QA (Quality Assurance)
113,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,3,Lender can seize the collateral by decreasing the LTV,54,https://github.com/code-423n4/2022-04-abranft-findings/issues/54,abranft,2022/04,bug;duplicate;3 (High Risk)
113,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,3,Mistake while checking LTV to lender accepted LTV,55,https://github.com/code-423n4/2022-04-abranft-findings/issues/55,abranft,2022/04,bug;3 (High Risk);sponsor confirmed
113,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2,Missing check if an oracle is used for the loan,56,https://github.com/code-423n4/2022-04-abranft-findings/issues/56,abranft,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
113,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2,Missing check for success from oracle.get(),57,https://github.com/code-423n4/2022-04-abranft-findings/issues/57,abranft,2022/04,bug;duplicate;3 (High Risk)
113,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2,cook() is susceptible to DOS attacks,58,https://github.com/code-423n4/2022-04-abranft-findings/issues/58,abranft,2022/04,bug;invalid;sponsor disputed
113,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,Q,QA Report,59,https://github.com/code-423n4/2022-04-abranft-findings/issues/59,abranft,2022/04,bug;QA (Quality Assurance);sponsor disputed
113,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,G,Gas Optimizations,60,https://github.com/code-423n4/2022-04-abranft-findings/issues/60,abranft,2022/04,bug;G (Gas Optimization)
113,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,BentoBoxV1: A malicious user can drain all the ether in the contract,14,https://github.com/code-423n4/2022-04-abranft-findings/issues/14,abranft,2022/04,bug;invalid;sponsor disputed
113,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,BentoBoxV1: Unsupported fee-on-transfer tokens,16,https://github.com/code-423n4/2022-04-abranft-findings/issues/16,abranft,2022/04,bug;invalid;sponsor disputed
113,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,"When the skim parameter is true, the user may be subject to a front-running attack",19,https://github.com/code-423n4/2022-04-abranft-findings/issues/19,abranft,2022/04,bug;invalid;sponsor disputed
113,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"to/loan.borrower is unchecked in removeCollateral()/repay(), which can cause user's collateral NFT to be frozen",20,https://github.com/code-423n4/2022-04-abranft-findings/issues/20,abranft,2022/04,bug;QA (Quality Assurance);sponsor disputed
113,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,The return value `success` of the get function of the INFTOracle interface is not checked,21,https://github.com/code-423n4/2022-04-abranft-findings/issues/21,abranft,2022/04,bug;3 (High Risk);sponsor confirmed
113,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,NFTPairWithOracle: Malicious borrower can prevent lender from early liquidation through malicious oracle,62,https://github.com/code-423n4/2022-04-abranft-findings/issues/62,abranft,2022/04,bug;invalid;sponsor disputed
113,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,NFTPairWithOracle: Malicious lender can liquidate early by updating the oracle address via updateLoanParams,63,https://github.com/code-423n4/2022-04-abranft-findings/issues/63,abranft,2022/04,bug;duplicate;3 (High Risk)
113,CertoraInc,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,3,Steal user's nft if he tries to use `request_loan` with `skim = true`,32,https://github.com/code-423n4/2022-04-abranft-findings/issues/32,abranft,2022/04,bug;invalid;sponsor disputed
113,CertoraInc,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,3,Fron run attack to Steal user's nft.,33,https://github.com/code-423n4/2022-04-abranft-findings/issues/33,abranft,2022/04,bug;invalid;sponsor disputed
113,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,80,https://github.com/code-423n4/2022-04-abranft-findings/issues/80,abranft,2022/04,bug;G (Gas Optimization)
113,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,81,https://github.com/code-423n4/2022-04-abranft-findings/issues/81,abranft,2022/04,bug;QA (Quality Assurance)
113,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,3,Low level call returns true if the address doesn't exist,82,https://github.com/code-423n4/2022-04-abranft-findings/issues/82,abranft,2022/04,bug;invalid;3 (High Risk);sponsor disputed
113,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,borrower can steal NFT,6,https://github.com/code-423n4/2022-04-abranft-findings/issues/6,abranft,2022/04,bug;invalid;sponsor disputed
113,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,2,Possible to steal collateral during a reentrant collateral transfer,177,https://github.com/code-423n4/2022-04-abranft-findings/issues/177,abranft,2022/04,bug;duplicate;2 (Med Risk)
113,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,request loan with existing NFT,127,https://github.com/code-423n4/2022-04-abranft-findings/issues/127,abranft,2022/04,bug;duplicate;invalid
113,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,165,https://github.com/code-423n4/2022-04-abranft-findings/issues/165,abranft,2022/04,bug;QA (Quality Assurance);sponsor disputed
113,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,167,https://github.com/code-423n4/2022-04-abranft-findings/issues/167,abranft,2022/04,bug;G (Gas Optimization)
113,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Possible Overflow in the Multiple Functions,170,https://github.com/code-423n4/2022-04-abranft-findings/issues/170,abranft,2022/04,bug;invalid;sponsor disputed
113,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,G,Gas Optimizations,132,https://github.com/code-423n4/2022-04-abranft-findings/issues/132,abranft,2022/04,bug;G (Gas Optimization)
113,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,Q,QA Report,134,https://github.com/code-423n4/2022-04-abranft-findings/issues/134,abranft,2022/04,bug;QA (Quality Assurance)
113,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,G,Gas Optimizations,13,https://github.com/code-423n4/2022-04-abranft-findings/issues/13,abranft,2022/04,bug;G (Gas Optimization);sponsor disputed
113,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,158,https://github.com/code-423n4/2022-04-abranft-findings/issues/158,abranft,2022/04,bug;G (Gas Optimization)
113,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,Q,QA Report,159,https://github.com/code-423n4/2022-04-abranft-findings/issues/159,abranft,2022/04,bug;QA (Quality Assurance)
113,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,`requestLoan()` has a front-running issue,112,https://github.com/code-423n4/2022-04-abranft-findings/issues/112,abranft,2022/04,bug;invalid;sponsor disputed
113,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,`repay()` has a frontrun issue,113,https://github.com/code-423n4/2022-04-abranft-findings/issues/113,abranft,2022/04,bug;duplicate;invalid;3 (High Risk)
113,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,Borrower can manipulate `rate` value from oracle,114,https://github.com/code-423n4/2022-04-abranft-findings/issues/114,abranft,2022/04,bug;duplicate;invalid;sponsor disputed
113,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,Reentrancy attack in `collateral.transferFrom` that borrowers can trick lenders to lend but the lenders will never get the collateral,115,https://github.com/code-423n4/2022-04-abranft-findings/issues/115,abranft,2022/04,bug;duplicate;2 (Med Risk)
113,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,`updateLoanParams` can update to any malicious oracle address,116,https://github.com/code-423n4/2022-04-abranft-findings/issues/116,abranft,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
113,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,Transfer collateral will fail when users try to use `safeTransferFrom`,117,https://github.com/code-423n4/2022-04-abranft-findings/issues/117,abranft,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
113,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,"If borrower and lender don’t handle ERC721 received, the ERC721 token will be frozen",118,https://github.com/code-423n4/2022-04-abranft-findings/issues/118,abranft,2022/04,bug;duplicate;QA (Quality Assurance)
113,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,119,https://github.com/code-423n4/2022-04-abranft-findings/issues/119,abranft,2022/04,bug;QA (Quality Assurance);sponsor disputed
113,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,120,https://github.com/code-423n4/2022-04-abranft-findings/issues/120,abranft,2022/04,G (Gas Optimization);sponsor disputed
113,gs8nrv,0xCF263cEe139763114fAaFC5F52865135412F50Ec,3,Any funds/tokens sent before interacting with the contracts will be lost,129,https://github.com/code-423n4/2022-04-abranft-findings/issues/129,abranft,2022/04,bug;duplicate;invalid
113,gs8nrv,0xCF263cEe139763114fAaFC5F52865135412F50Ec,3,Wrong computation of interest in the `calculateInterest` function,133,https://github.com/code-423n4/2022-04-abranft-findings/issues/133,abranft,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
113,gs8nrv,0xCF263cEe139763114fAaFC5F52865135412F50Ec,Q,QA Report,135,https://github.com/code-423n4/2022-04-abranft-findings/issues/135,abranft,2022/04,bug;QA (Quality Assurance);sponsor disputed
113,gs8nrv,0xCF263cEe139763114fAaFC5F52865135412F50Ec,3,Oracle,139,https://github.com/code-423n4/2022-04-abranft-findings/issues/139,abranft,2022/04,bug;duplicate;invalid;sponsor disputed
113,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Lender can unconditionally liquidate borrower by changing `ltvBPS` to 0,144,https://github.com/code-423n4/2022-04-abranft-findings/issues/144,abranft,2022/04,bug;duplicate;3 (High Risk)
113,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Lender can unconditionally liquidate borrower by changing oracle,145,https://github.com/code-423n4/2022-04-abranft-findings/issues/145,abranft,2022/04,bug;duplicate;3 (High Risk)
113,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Borrower can frontrun lender's call to `lend` to increase ltvBPS and avoid liquidation,146,https://github.com/code-423n4/2022-04-abranft-findings/issues/146,abranft,2022/04,bug;duplicate;3 (High Risk)
113,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Borrower can frontrun lender's call to `lend` to change the price oracle,147,https://github.com/code-423n4/2022-04-abranft-findings/issues/147,abranft,2022/04,bug;duplicate;3 (High Risk)
113,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,148,https://github.com/code-423n4/2022-04-abranft-findings/issues/148,abranft,2022/04,bug;G (Gas Optimization)
113,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,149,https://github.com/code-423n4/2022-04-abranft-findings/issues/149,abranft,2022/04,bug;QA (Quality Assurance)
113,Hawkeye,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,G,Gas Optimizations,189,https://github.com/code-423n4/2022-04-abranft-findings/issues/189,abranft,2022/04,bug;G (Gas Optimization);sponsor disputed
113,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,3,Malicious lender can change price oracle for outstanding loan,166,https://github.com/code-423n4/2022-04-abranft-findings/issues/166,abranft,2022/04,bug;duplicate;3 (High Risk)
113,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,Q,QA Report,168,https://github.com/code-423n4/2022-04-abranft-findings/issues/168,abranft,2022/04,bug;QA (Quality Assurance)
113,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,G,Gas Optimizations,169,https://github.com/code-423n4/2022-04-abranft-findings/issues/169,abranft,2022/04,bug;G (Gas Optimization)
113,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,"NFT token will get stuck in the NFTPair contract, if requestLoan initiated with null 'to' address",101,https://github.com/code-423n4/2022-04-abranft-findings/issues/101,abranft,2022/04,bug;QA (Quality Assurance)
113,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,Any non-native asset on the NFTPair or NFTPairWithOracle balance except collateral is a free grab,164,https://github.com/code-423n4/2022-04-abranft-findings/issues/164,abranft,2022/04,bug;invalid;sponsor disputed
113,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,Params.oracle can be changed to a fake one by front running NFTPairWithOracle's lend function,171,https://github.com/code-423n4/2022-04-abranft-findings/issues/171,abranft,2022/04,bug;duplicate;3 (High Risk)
113,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,Q,QA Report,180,https://github.com/code-423n4/2022-04-abranft-findings/issues/180,abranft,2022/04,bug;QA (Quality Assurance)
113,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,Outstanding loan Oracle can be arbitrary changed by a lender,184,https://github.com/code-423n4/2022-04-abranft-findings/issues/184,abranft,2022/04,bug;duplicate;3 (High Risk)
113,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,No success required for Oracle market rate queries,190,https://github.com/code-423n4/2022-04-abranft-findings/issues/190,abranft,2022/04,bug;duplicate;3 (High Risk)
113,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,NFTPairWithOracle's _lend ignores accepted.oracle and allows to start loan with empty params.oracle,198,https://github.com/code-423n4/2022-04-abranft-findings/issues/198,abranft,2022/04,bug;duplicate;3 (High Risk)
113,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,"Lower LVT is treated as less restrictive, while it's vice versa",200,https://github.com/code-423n4/2022-04-abranft-findings/issues/200,abranft,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
113,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,Intentional use of skim can be front run,87,https://github.com/code-423n4/2022-04-abranft-findings/issues/87,abranft,2022/04,bug;invalid
113,ilan,0xEEBd02ddc406754621ff674c19f048fdF95C6D2B,2,Non gas limited `.call{}()` can cause an accidental DOS,106,https://github.com/code-423n4/2022-04-abranft-findings/issues/106,abranft,2022/04,bug;invalid;sponsor disputed
113,ilan,0xEEBd02ddc406754621ff674c19f048fdF95C6D2B,3,"The `skim` option is dangerous, An attacker can steal the collateral of any loan requester",108,https://github.com/code-423n4/2022-04-abranft-findings/issues/108,abranft,2022/04,bug;duplicate;invalid
113,ilan,0xEEBd02ddc406754621ff674c19f048fdF95C6D2B,2,Use of unsafe `ERC721.transferFrom` rather than `safeTransferFrom`,109,https://github.com/code-423n4/2022-04-abranft-findings/issues/109,abranft,2022/04,bug;QA (Quality Assurance)
113,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,`updateLoanParams()` can be used to make collateral seizable,69,https://github.com/code-423n4/2022-04-abranft-findings/issues/69,abranft,2022/04,bug;duplicate;3 (High Risk)
113,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Array length mismatch may lead to collateral being seized,70,https://github.com/code-423n4/2022-04-abranft-findings/issues/70,abranft,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
113,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Protocol fees during origination are based on another fee rather than on the loan amount,71,https://github.com/code-423n4/2022-04-abranft-findings/issues/71,abranft,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
113,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Insufficient oracle validation,72,https://github.com/code-423n4/2022-04-abranft-findings/issues/72,abranft,2022/04,bug;duplicate;3 (High Risk)
113,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Use of `transferFrom()` with ERC721 tokens,73,https://github.com/code-423n4/2022-04-abranft-findings/issues/73,abranft,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
113,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,74,https://github.com/code-423n4/2022-04-abranft-findings/issues/74,abranft,2022/04,bug;G (Gas Optimization)
113,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,75,https://github.com/code-423n4/2022-04-abranft-findings/issues/75,abranft,2022/04,bug;QA (Quality Assurance)
113,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,3,TokenloanParams is not updated ,76,https://github.com/code-423n4/2022-04-abranft-findings/issues/76,abranft,2022/04,bug;invalid;sponsor disputed
113,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,3,use of transferFrom,83,https://github.com/code-423n4/2022-04-abranft-findings/issues/83,abranft,2022/04,bug;duplicate;QA (Quality Assurance)
113,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,3,user funds can be locked ,102,https://github.com/code-423n4/2022-04-abranft-findings/issues/102,abranft,2022/04,bug;invalid;sponsor disputed
113,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,3,BoringBatchable.PermitToken() will not work if the token entered is weth,105,https://github.com/code-423n4/2022-04-abranft-findings/issues/105,abranft,2022/04,bug;invalid;sponsor disputed
113,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,3,lack of access modifier in BentoboxV1.transfer(),185,https://github.com/code-423n4/2022-04-abranft-findings/issues/185,abranft,2022/04,bug;invalid;sponsor disputed
113,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,Q,QA Report,107,https://github.com/code-423n4/2022-04-abranft-findings/issues/107,abranft,2022/04,bug;QA (Quality Assurance)
113,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,G,Gas Optimizations,110,https://github.com/code-423n4/2022-04-abranft-findings/issues/110,abranft,2022/04,bug;G (Gas Optimization)
113,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,2,FAILED TRANSFER WITH LOW LEVEL CALL COULD BE OVERLOOKED,163,https://github.com/code-423n4/2022-04-abranft-findings/issues/163,abranft,2022/04,bug;duplicate;invalid
113,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,2,"`TO` IS UNCHECKED IN  `REMOVECOLLATERAL()`, WHICH CAN CAUSE USER’S COLLATERAL NFT TO BE FROZEN",175,https://github.com/code-423n4/2022-04-abranft-findings/issues/175,abranft,2022/04,bug;duplicate;QA (Quality Assurance)
113,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,2,"Using ""transfer/transferFrom"" instead of ""safeTransfer/safeTransferFrom"" throughout the contracts",85,https://github.com/code-423n4/2022-04-abranft-findings/issues/85,abranft,2022/04,bug;QA (Quality Assurance);sponsor disputed
113,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,196,https://github.com/code-423n4/2022-04-abranft-findings/issues/196,abranft,2022/04,bug;G (Gas Optimization)
113,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,197,https://github.com/code-423n4/2022-04-abranft-findings/issues/197,abranft,2022/04,bug;QA (Quality Assurance)
113,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,Q,QA Report,172,https://github.com/code-423n4/2022-04-abranft-findings/issues/172,abranft,2022/04,bug;QA (Quality Assurance)
113,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Reentrancy at _requestLoan allows requesting a loan without supplying collateral,61,https://github.com/code-423n4/2022-04-abranft-findings/issues/61,abranft,2022/04,bug;2 (Med Risk);sponsor disputed
113,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,3,Lender can change NFT valuation oracle without borrower permission,64,https://github.com/code-423n4/2022-04-abranft-findings/issues/64,abranft,2022/04,bug;duplicate;3 (High Risk)
113,Kulk0,0xa192fBe6bb68113d9b86Ef118ED5696CA70fb405,G,Gas Optimizations,173,https://github.com/code-423n4/2022-04-abranft-findings/issues/173,abranft,2022/04,bug;G (Gas Optimization)
113,m9800,0x367bF4A80DA0Ed955DbeFb228c60fDf20C2f85B2,Q,QA Report,193,https://github.com/code-423n4/2022-04-abranft-findings/issues/193,abranft,2022/04,bug;QA (Quality Assurance)
113,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,ecrecover returns address(0) which may allow lending,1,https://github.com/code-423n4/2022-04-abranft-findings/issues/1,abranft,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance)
113,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,ecrecover returns address(0) which may allow borrowing,2,https://github.com/code-423n4/2022-04-abranft-findings/issues/2,abranft,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
113,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,ecrecover returns address(0) which may allow lending,3,https://github.com/code-423n4/2022-04-abranft-findings/issues/3,abranft,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance)
113,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,ecrecover returns address(0) which may allow borrowing,4,https://github.com/code-423n4/2022-04-abranft-findings/issues/4,abranft,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
113,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,Q,QA Report,42,https://github.com/code-423n4/2022-04-abranft-findings/issues/42,abranft,2022/04,bug;QA (Quality Assurance);sponsor disputed
113,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,Q,QA Report,97,https://github.com/code-423n4/2022-04-abranft-findings/issues/97,abranft,2022/04,bug;duplicate;QA (Quality Assurance)
113,mics,0xAA69a63F3E6150df1880Fdbf46A422b45beb4113,Q,QA Report,122,https://github.com/code-423n4/2022-04-abranft-findings/issues/122,abranft,2022/04,bug;QA (Quality Assurance)
113,NoamYakov,0x972a7c4EE6d0988A010CafB09F794Cd1a169293F,G,Gas Optimizations,8,https://github.com/code-423n4/2022-04-abranft-findings/issues/8,abranft,2022/04,bug;G (Gas Optimization)
113,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,Q,QA Report,15,https://github.com/code-423n4/2022-04-abranft-findings/issues/15,abranft,2022/04,bug;QA (Quality Assurance)
113,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,G,Gas Optimizations,5,https://github.com/code-423n4/2022-04-abranft-findings/issues/5,abranft,2022/04,bug;G (Gas Optimization)
113,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,Lender can instantly seize the collateral,176,https://github.com/code-423n4/2022-04-abranft-findings/issues/176,abranft,2022/04,bug;invalid;sponsor disputed
113,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,Q,QA Report,178,https://github.com/code-423n4/2022-04-abranft-findings/issues/178,abranft,2022/04,bug;QA (Quality Assurance)
113,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Gas Optimizations,179,https://github.com/code-423n4/2022-04-abranft-findings/issues/179,abranft,2022/04,bug;G (Gas Optimization)
113,plotchy,0x2a1e0000010d393cf93f89000000617a00d50000,3,Borrower can update loan parameters and force lender into accepting near-unliquidatable loan,150,https://github.com/code-423n4/2022-04-abranft-findings/issues/150,abranft,2022/04,bug;duplicate;3 (High Risk)
113,plotchy,0x2a1e0000010d393cf93f89000000617a00d50000,3,Lender can adjust ltvBPS and instantly sieze collateral,151,https://github.com/code-423n4/2022-04-abranft-findings/issues/151,abranft,2022/04,bug;duplicate;3 (High Risk)
113,plotchy,0x2a1e0000010d393cf93f89000000617a00d50000,3,Oracle failure allows NFT to be stolen,152,https://github.com/code-423n4/2022-04-abranft-findings/issues/152,abranft,2022/04,bug;duplicate;3 (High Risk)
113,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,G,Gas Optimizations,100,https://github.com/code-423n4/2022-04-abranft-findings/issues/100,abranft,2022/04,bug;G (Gas Optimization)
113,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,2,Denial of Service - requestAndBorrow and takeCollateralAndLend,48,https://github.com/code-423n4/2022-04-abranft-findings/issues/48,abranft,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
113,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,2,Using skimming as EOA leading to loss of collateral and assets,86,https://github.com/code-423n4/2022-04-abranft-findings/issues/86,abranft,2022/04,bug;invalid;sponsor disputed
113,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,Q,QA Report,95,https://github.com/code-423n4/2022-04-abranft-findings/issues/95,abranft,2022/04,bug;QA (Quality Assurance);sponsor disputed
113,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,124,https://github.com/code-423n4/2022-04-abranft-findings/issues/124,abranft,2022/04,bug;QA (Quality Assurance)
113,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,125,https://github.com/code-423n4/2022-04-abranft-findings/issues/125,abranft,2022/04,bug;G (Gas Optimization)
113,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,Contract doesn't distribute fees correctly,38,https://github.com/code-423n4/2022-04-abranft-findings/issues/38,abranft,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
113,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,Lender is able to seize collateral if oracle returns invalid value,50,https://github.com/code-423n4/2022-04-abranft-findings/issues/50,abranft,2022/04,bug;duplicate;3 (High Risk)
113,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,Lender is able to seize the collateral by changing the loan parameters,51,https://github.com/code-423n4/2022-04-abranft-findings/issues/51,abranft,2022/04,bug;3 (High Risk);sponsor confirmed
113,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,67,https://github.com/code-423n4/2022-04-abranft-findings/issues/67,abranft,2022/04,bug;QA (Quality Assurance);sponsor disputed
113,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,10,https://github.com/code-423n4/2022-04-abranft-findings/issues/10,abranft,2022/04,bug;duplicate;G (Gas Optimization)
113,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,Q,QA Report,12,https://github.com/code-423n4/2022-04-abranft-findings/issues/12,abranft,2022/04,bug;QA (Quality Assurance);sponsor disputed
113,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,7,https://github.com/code-423n4/2022-04-abranft-findings/issues/7,abranft,2022/04,bug;G (Gas Optimization)
113,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,9,https://github.com/code-423n4/2022-04-abranft-findings/issues/9,abranft,2022/04,bug;duplicate;G (Gas Optimization);sponsor disputed
113,scaraven,0xac3A826c8ea76Ab6FCE817d3e54da0acb5fd30d5,3,Lender can immediately liquidate valued Collateral in NFTPairWithOracle contract,174,https://github.com/code-423n4/2022-04-abranft-findings/issues/174,abranft,2022/04,bug;duplicate;3 (High Risk)
113,sikorico,0x0E8ea7AD139C5EB10C6D1076962617D458D0Aed6,Q,QA Report,123,https://github.com/code-423n4/2022-04-abranft-findings/issues/123,abranft,2022/04,bug;QA (Quality Assurance)
113,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,G,Gas Optimizations,142,https://github.com/code-423n4/2022-04-abranft-findings/issues/142,abranft,2022/04,bug;G (Gas Optimization);sponsor disputed
113,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,Q,QA Report,143,https://github.com/code-423n4/2022-04-abranft-findings/issues/143,abranft,2022/04,bug;QA (Quality Assurance)
113,slywaters,0xcdc82d78cb49d4baa06d0988afdd27261b0667b2,G,Gas Optimizations,11,https://github.com/code-423n4/2022-04-abranft-findings/issues/11,abranft,2022/04,bug;G (Gas Optimization)
113,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,G,Gas Optimizations,103,https://github.com/code-423n4/2022-04-abranft-findings/issues/103,abranft,2022/04,bug;G (Gas Optimization)
113,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,Q,QA Report,104,https://github.com/code-423n4/2022-04-abranft-findings/issues/104,abranft,2022/04,invalid;QA (Quality Assurance);sponsor disputed
113,Tadashi,0x8638c0a8C936DeFaCB575a2AD5B103F2a3876cE7,G,Gas Optimizations,65,https://github.com/code-423n4/2022-04-abranft-findings/issues/65,abranft,2022/04,bug;G (Gas Optimization)
113,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,3,Borrower is in full control over the proposed oracle which can lead to lender losing assets.,79,https://github.com/code-423n4/2022-04-abranft-findings/issues/79,abranft,2022/04,bug;duplicate;invalid
113,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,2,NFT unrecoverable. Lender might not be able to handle NFT collateral if not implemented `onERC721Received()` function.,84,https://github.com/code-423n4/2022-04-abranft-findings/issues/84,abranft,2022/04,bug;disagree with severity;QA (Quality Assurance)
113,tintin,0xAA371e26742290063d92F0Bd7197aC2D8d3aC4f1,3,Malicious user can use ACTION_CALL with cook to steal ERC20 asset from pair,35,https://github.com/code-423n4/2022-04-abranft-findings/issues/35,abranft,2022/04,bug;duplicate;invalid
113,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,40,https://github.com/code-423n4/2022-04-abranft-findings/issues/40,abranft,2022/04,bug;G (Gas Optimization)
113,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,G,Gas Optimizations,99,https://github.com/code-423n4/2022-04-abranft-findings/issues/99,abranft,2022/04,bug;G (Gas Optimization)
113,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,2,INIT() function is callable by everyone for MasterContract and they can set collateral and asset address ,43,https://github.com/code-423n4/2022-04-abranft-findings/issues/43,abranft,2022/04,bug;invalid;sponsor disputed
113,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,2,withdrawFees() function shoud require `to` address to not be zero,44,https://github.com/code-423n4/2022-04-abranft-findings/issues/44,abranft,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
113,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,2,In requestAndBorrow() and takeCollateralAndLend() signature validation can be by passed by sending zero address for lender or browser,45,https://github.com/code-423n4/2022-04-abranft-findings/issues/45,abranft,2022/04,bug;QA (Quality Assurance)
113,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,Front-Running attack in takeCollateralAndLend which will cause fund lose for users,46,https://github.com/code-423n4/2022-04-abranft-findings/issues/46,abranft,2022/04,bug;invalid;sponsor disputed
113,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,Front-Running attack in requestAndBorrow() which will cause total fund lose for lender,47,https://github.com/code-423n4/2022-04-abranft-findings/issues/47,abranft,2022/04,bug;invalid;sponsor disputed
113,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,front-running attack for cook() function which can cause fund lose,49,https://github.com/code-423n4/2022-04-abranft-findings/issues/49,abranft,2022/04,bug;duplicate;invalid
113,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,Reentrancy Attack in requestAndBorrow() can make user lose fund or attacker can take unauthorized ownership of user NFT during transaction,52,https://github.com/code-423n4/2022-04-abranft-findings/issues/52,abranft,2022/04,bug;invalid;sponsor disputed
113,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3, Reentrancy Attack in cook() can make user lose fund or attacker can take ownership of user NFT's during transaction,53,https://github.com/code-423n4/2022-04-abranft-findings/issues/53,abranft,2022/04,bug;duplicate;invalid
113,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,2,"[WP-M3] `NFTPair.sol#repay()` `loan.borrower` can be a contract with no `onERC721Received` method, which may cause the NFT to be frozen and put user's funds at risk",88,https://github.com/code-423n4/2022-04-abranft-findings/issues/88,abranft,2022/04,bug;QA (Quality Assurance)
113,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,3,[WP-H4] Wrong check of `ltvBPS` in `updateLoanParams()` allows a malicious lender to can change `ltvBPS` to a lower value or even `0` to liquidate the borrower and get the collateral immediately with `removeCollateral()`,89,https://github.com/code-423n4/2022-04-abranft-findings/issues/89,abranft,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
113,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,3,[WP-H5] Wrong check of `ltvBPS` in `updateLoanParams()` allows a malicious borrower to frontrun lender's `lend()` tx and set ltvBPS to a higher value to prevent the loan from being liquidated,90,https://github.com/code-423n4/2022-04-abranft-findings/issues/90,abranft,2022/04,bug;duplicate;3 (High Risk)
113,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,3,"[WP-H6] The validity of the oracle price is ignored, making it possible for the loan to be liquidated unfairly with an invalid or stale price",92,https://github.com/code-423n4/2022-04-abranft-findings/issues/92,abranft,2022/04,bug;duplicate;3 (High Risk)
113,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,3,[WP-H8] Special ERC721 compatible implementation may allow an attacker to `requestLoan` without transferring in the NFT collateral,93,https://github.com/code-423n4/2022-04-abranft-findings/issues/93,abranft,2022/04,bug;duplicate;2 (Med Risk)
113,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,2,[WP-M9] Missing the implementation of `onERC721Received()` makes it impossible to transfer the NFT in with `safeTransferFrom`,96,https://github.com/code-423n4/2022-04-abranft-findings/issues/96,abranft,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor disputed
113,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,G,Gas Optimizations,160,https://github.com/code-423n4/2022-04-abranft-findings/issues/160,abranft,2022/04,bug;G (Gas Optimization)
113,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,Q,QA Report,161,https://github.com/code-423n4/2022-04-abranft-findings/issues/161,abranft,2022/04,bug;QA (Quality Assurance)
109,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,3,reentrancy modifier is not initialized correctly,1,https://github.com/code-423n4/2022-04-axelar-findings/issues/1,axelar,2022/04,bug;invalid;disagree with severity
109,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,2,https://github.com/code-423n4/2022-04-axelar-findings/issues/2,axelar,2022/04,bug;G (Gas Optimization)
109,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,G,Gas Optimizations,33,https://github.com/code-423n4/2022-04-axelar-findings/issues/33,axelar,2022/04,bug;G (Gas Optimization)
109,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,13,https://github.com/code-423n4/2022-04-axelar-findings/issues/13,axelar,2022/04,bug;G (Gas Optimization);sponsor confirmed
109,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Unsupported fee-on-transfer tokens,5,https://github.com/code-423n4/2022-04-axelar-findings/issues/5,axelar,2022/04,bug;2 (Med Risk);sponsor confirmed
109,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,Q,QA Report,6,https://github.com/code-423n4/2022-04-axelar-findings/issues/6,axelar,2022/04,bug;QA (Quality Assurance);sponsor disputed
109,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,10,https://github.com/code-423n4/2022-04-axelar-findings/issues/10,axelar,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
109,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,2,Low level call returns true if the address doesn't exist,11,https://github.com/code-423n4/2022-04-axelar-findings/issues/11,axelar,2022/04,bug;2 (Med Risk);disagree with severity;sponsor confirmed
109,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,2,User's funds can get lost when transferring to other chain,12,https://github.com/code-423n4/2022-04-axelar-findings/issues/12,axelar,2022/04,bug;2 (Med Risk);sponsor acknowledged
109,CertoraInc,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,2,Waste a lot of gas to the nodes.,25,https://github.com/code-423n4/2022-04-axelar-findings/issues/25,axelar,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
109,CertoraInc,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,2,Users loses funds if mistaken with chain.,26,https://github.com/code-423n4/2022-04-axelar-findings/issues/26,axelar,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance)
109,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,9,https://github.com/code-423n4/2022-04-axelar-findings/issues/9,axelar,2022/04,bug;G (Gas Optimization)
109,Chom,0xf01Dd015Bc442d872275A79b9caE84A6ff9B2A27,G,Gas Optimizations,22,https://github.com/code-423n4/2022-04-axelar-findings/issues/22,axelar,2022/04,bug;G (Gas Optimization);sponsor acknowledged
109,Chom,0xf01Dd015Bc442d872275A79b9caE84A6ff9B2A27,3,"Tokens will be forever burned if contract call never success. Moreover, it may not retriable after OLD_KEY_RETENTION + 1 epochs has passed.",24,https://github.com/code-423n4/2022-04-axelar-findings/issues/24,axelar,2022/04,bug;duplicate;3 (High Risk);disagree with severity
109,csanuragjain,0xd295584135829d89427674b72560222b06e08a15,2,Last Admin gets advantage over others,7,https://github.com/code-423n4/2022-04-axelar-findings/issues/7,axelar,2022/04,bug;invalid;sponsor disputed
109,csanuragjain,0xd295584135829d89427674b72560222b06e08a15,2,Incorrect votes counted,8,https://github.com/code-423n4/2022-04-axelar-findings/issues/8,axelar,2022/04,bug;invalid;sponsor disputed
109,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,Q,QA Report,4,https://github.com/code-423n4/2022-04-axelar-findings/issues/4,axelar,2022/04,bug;QA (Quality Assurance);sponsor confirmed
109,dirk_y,0x00db4d01c8953a707239DC168E466F64dD97Fe9c,Q,QA Report,18,https://github.com/code-423n4/2022-04-axelar-findings/issues/18,axelar,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
109,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,14,https://github.com/code-423n4/2022-04-axelar-findings/issues/14,axelar,2022/04,bug;G (Gas Optimization);sponsor confirmed
109,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,15,https://github.com/code-423n4/2022-04-axelar-findings/issues/15,axelar,2022/04,bug;QA (Quality Assurance);sponsor disputed
109,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,29,https://github.com/code-423n4/2022-04-axelar-findings/issues/29,axelar,2022/04,bug;G (Gas Optimization)
109,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,Q,QA Report,30,https://github.com/code-423n4/2022-04-axelar-findings/issues/30,axelar,2022/04,bug;QA (Quality Assurance);sponsor confirmed
109,Hawkeye, 0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,G,Gas Optimizations,28,https://github.com/code-423n4/2022-04-axelar-findings/issues/28,axelar,2022/04,bug;G (Gas Optimization);sponsor acknowledged
109,ilan,0xEEBd02ddc406754621ff674c19f048fdF95C6D2B,G,Gas Optimizations,31,https://github.com/code-423n4/2022-04-axelar-findings/issues/31,axelar,2022/04,bug;G (Gas Optimization)
109,ilan,0xEEBd02ddc406754621ff674c19f048fdF95C6D2B,Q,QA Report,34,https://github.com/code-423n4/2022-04-axelar-findings/issues/34,axelar,2022/04,bug;QA (Quality Assurance)
109,ilan,0xEEBd02ddc406754621ff674c19f048fdF95C6D2B,2,`transferOwnership` potentially locking contract,36,https://github.com/code-423n4/2022-04-axelar-findings/issues/36,axelar,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor acknowledged
109,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Infinite `TokenType.External` tokens can be minted on other chains if the token is ever destructed,37,https://github.com/code-423n4/2022-04-axelar-findings/issues/37,axelar,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance)
109,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,38,https://github.com/code-423n4/2022-04-axelar-findings/issues/38,axelar,2022/04,bug;QA (Quality Assurance)
109,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,39,https://github.com/code-423n4/2022-04-axelar-findings/issues/39,axelar,2022/04,bug;G (Gas Optimization)
109,nahnah,0xc950cAeC29f157EB49f37b8c57c737E79037B655,G,Gas Optimizations,40,https://github.com/code-423n4/2022-04-axelar-findings/issues/40,axelar,2022/04,bug;G (Gas Optimization);sponsor disputed
109,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,`_execute` can be abused to replay previous batches of commands and execute failed ones out of the original intended context,16,https://github.com/code-423n4/2022-04-axelar-findings/issues/16,axelar,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor acknowledged
109,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,"`_execute` can potentially reorder a batch of commands while executing, breaking any assumptions on command orders.",17,https://github.com/code-423n4/2022-04-axelar-findings/issues/17,axelar,2022/04,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
109,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`AxelarGateway._burnToken` relies on the correctness of self-destructible contracts,19,https://github.com/code-423n4/2022-04-axelar-findings/issues/19,axelar,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
109,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,20,https://github.com/code-423n4/2022-04-axelar-findings/issues/20,axelar,2022/04,bug;QA (Quality Assurance)
109,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,21,https://github.com/code-423n4/2022-04-axelar-findings/issues/21,axelar,2022/04,bug;G (Gas Optimization)
109,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,27,https://github.com/code-423n4/2022-04-axelar-findings/issues/27,axelar,2022/04,bug;G (Gas Optimization)
109,rishabh,0xaf55d73461836577FEEbe04Ca5CFFFD1918B345C,3,Anybody can destroy contract and take all the ether,3,https://github.com/code-423n4/2022-04-axelar-findings/issues/3,axelar,2022/04,bug;disagree with severity;QA (Quality Assurance);sponsor acknowledged
109,sseefried,0x033e21B02373489ff2f7a2c2f1B109a1bC6158aD,2,Cross-chain smart contract calls can revert but source chain tokens remain burnt and are not refunded,35,https://github.com/code-423n4/2022-04-axelar-findings/issues/35,axelar,2022/04,bug;3 (High Risk);sponsor acknowledged
109,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,32,https://github.com/code-423n4/2022-04-axelar-findings/issues/32,axelar,2022/04,bug;G (Gas Optimization)
109,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,3,Lock of fund in DepositHandler,23,https://github.com/code-423n4/2022-04-axelar-findings/issues/23,axelar,2022/04,bug;invalid;sponsor disputed
112,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,Q,QA Report,29,https://github.com/code-423n4/2022-04-backd-findings/issues/29,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,30,https://github.com/code-423n4/2022-04-backd-findings/issues/30,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Owner can burn arbitrary LpToken,149,https://github.com/code-423n4/2022-04-backd-findings/issues/149,backd,2022/04,invalid;sponsor disputed;reviewed
112,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Oracle price could not be fresh,155,https://github.com/code-423n4/2022-04-backd-findings/issues/155,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,156,https://github.com/code-423n4/2022-04-backd-findings/issues/156,backd,2022/04,bug;G (Gas Optimization);reviewed
112,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,112,https://github.com/code-423n4/2022-04-backd-findings/issues/112,backd,2022/04,bug;duplicate;G (Gas Optimization);resolved;reviewed
112,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,115,https://github.com/code-423n4/2022-04-backd-findings/issues/115,backd,2022/04,bug;duplicate;G (Gas Optimization);resolved;reviewed
112,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,141,https://github.com/code-423n4/2022-04-backd-findings/issues/141,backd,2022/04,bug;invalid;G (Gas Optimization);sponsor disputed;reviewed
112,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,68,https://github.com/code-423n4/2022-04-backd-findings/issues/68,backd,2022/04,bug;duplicate;G (Gas Optimization);sponsor disputed;reviewed
112,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,69,https://github.com/code-423n4/2022-04-backd-findings/issues/69,backd,2022/04,bug;duplicate;G (Gas Optimization);sponsor disputed;reviewed
112,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,70,https://github.com/code-423n4/2022-04-backd-findings/issues/70,backd,2022/04,bug;duplicate;G (Gas Optimization);sponsor disputed;reviewed
112,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,71,https://github.com/code-423n4/2022-04-backd-findings/issues/71,backd,2022/04,bug;duplicate;G (Gas Optimization);sponsor disputed;reviewed
112,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,72,https://github.com/code-423n4/2022-04-backd-findings/issues/72,backd,2022/04,bug;duplicate;G (Gas Optimization);sponsor disputed;reviewed
112,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,Q,QA Report,73,https://github.com/code-423n4/2022-04-backd-findings/issues/73,backd,2022/04,bug;duplicate;G (Gas Optimization);sponsor disputed;reviewed
112,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,74,https://github.com/code-423n4/2022-04-backd-findings/issues/74,backd,2022/04,bug;duplicate;G (Gas Optimization);sponsor disputed;reviewed
112,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,75,https://github.com/code-423n4/2022-04-backd-findings/issues/75,backd,2022/04,bug;duplicate;G (Gas Optimization);sponsor disputed;reviewed
112,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,76,https://github.com/code-423n4/2022-04-backd-findings/issues/76,backd,2022/04,bug;duplicate;G (Gas Optimization);sponsor disputed;reviewed
112,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,77,https://github.com/code-423n4/2022-04-backd-findings/issues/77,backd,2022/04,bug;duplicate;G (Gas Optimization);sponsor disputed;reviewed
112,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,78,https://github.com/code-423n4/2022-04-backd-findings/issues/78,backd,2022/04,bug;duplicate;G (Gas Optimization);sponsor disputed;reviewed
112,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,79,https://github.com/code-423n4/2022-04-backd-findings/issues/79,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,80,https://github.com/code-423n4/2022-04-backd-findings/issues/80,backd,2022/04,bug;duplicate;G (Gas Optimization);resolved;reviewed
112,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,2,Position owner should set allowed slippage,87,https://github.com/code-423n4/2022-04-backd-findings/issues/87,backd,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed;reviewed
112,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,Q,QA Report,88,https://github.com/code-423n4/2022-04-backd-findings/issues/88,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,3,Flashloan Swap Manipulation,98,https://github.com/code-423n4/2022-04-backd-findings/issues/98,backd,2022/04,invalid;sponsor disputed;reviewed
112,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,Q,QA Report,172,https://github.com/code-423n4/2022-04-backd-findings/issues/172,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,G,Gas Optimizations,175,https://github.com/code-423n4/2022-04-backd-findings/issues/175,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,3,User can steal all rewards due to checkpoint after transfer,36,https://github.com/code-423n4/2022-04-backd-findings/issues/36,backd,2022/04,bug;3 (High Risk);resolved;sponsor confirmed;reviewed
112,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Call to Chainlink Oracle lacks proper checks,37,https://github.com/code-423n4/2022-04-backd-findings/issues/37,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Setter functions pertaining to imbalance threshold lacking crucial checks,38,https://github.com/code-423n4/2022-04-backd-findings/issues/38,backd,2022/04,invalid;sponsor disputed;reviewed
112,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Griefer can extend period of higher withdrawal fees,56,https://github.com/code-423n4/2022-04-backd-findings/issues/56,backd,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed;reviewed
112,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,2,ChainLink latestRoundData data may be stale,220,https://github.com/code-423n4/2022-04-backd-findings/issues/220,backd,2022/04,bug;duplicate;2 (Med Risk)
112,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,G,Gas Optimizations,62,https://github.com/code-423n4/2022-04-backd-findings/issues/62,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,Q,QA Report,63,https://github.com/code-423n4/2022-04-backd-findings/issues/63,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,2,Uniswap V2 swap can be sandwiched,64,https://github.com/code-423n4/2022-04-backd-findings/issues/64,backd,2022/04,invalid;sponsor disputed;reviewed
112,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,2,Incorrect Aave handler getReserveData call,65,https://github.com/code-423n4/2022-04-backd-findings/issues/65,backd,2022/04,invalid;sponsor disputed;reviewed
112,0xmint,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,2,Error in _rebalance logic will result in limited funds in strategy to earn yield ,205,https://github.com/code-423n4/2022-04-backd-findings/issues/205,backd,2022/04,invalid;sponsor disputed;reviewed
112,0xmint,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,G,Gas Optimizations,207,https://github.com/code-423n4/2022-04-backd-findings/issues/207,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,0xmint,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,210,https://github.com/code-423n4/2022-04-backd-findings/issues/210,backd,2022/04,bug;duplicate;G (Gas Optimization);sponsor disputed;reviewed
112,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,16,https://github.com/code-423n4/2022-04-backd-findings/issues/16,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,antonttc,0x386f6B908640d9f394EF37bC1b8c3a4018fa3dB1,2,_revokeRole doesn't remove account from roleMember set,164,https://github.com/code-423n4/2022-04-backd-findings/issues/164,backd,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed;reviewed
112,antonttc,0x386f6B908640d9f394EF37bC1b8c3a4018fa3dB1,2,Bad updatedAt returned by ChainlinkUsdWrapper.latestRoundData,165,https://github.com/code-423n4/2022-04-backd-findings/issues/165,backd,2022/04,bug;QA (Quality Assurance);resolved;sponsor confirmed;reviewed
112,antonttc,0x386f6B908640d9f394EF37bC1b8c3a4018fa3dB1,2,Swapper3Crv.sol use the wrong address for sushiswap,166,https://github.com/code-423n4/2022-04-backd-findings/issues/166,backd,2022/04,bug;invalid;2 (Med Risk);resolved;sponsor confirmed;reviewed
112,antonttc,0x386f6B908640d9f394EF37bC1b8c3a4018fa3dB1,2,Unsafe use of .transfer,167,https://github.com/code-423n4/2022-04-backd-findings/issues/167,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,Q,QA Report,138,https://github.com/code-423n4/2022-04-backd-findings/issues/138,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Use of Solidity's `transfer()` function might render ETH impossible to withdraw,139,https://github.com/code-423n4/2022-04-backd-findings/issues/139,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Chainlink's `latestRoundData` might return stale or incorrect results,140,https://github.com/code-423n4/2022-04-backd-findings/issues/140,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,G,Gas Optimizations,103,https://github.com/code-423n4/2022-04-backd-findings/issues/103,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,Q,QA Report,104,https://github.com/code-423n4/2022-04-backd-findings/issues/104,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Chainlink's latestRoundData might return stale or incorrect results,17,https://github.com/code-423n4/2022-04-backd-findings/issues/17,backd,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed;reviewed
112,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,"Some functions calls native payable.transfer, which can be unusable for smart contract calls",18,https://github.com/code-423n4/2022-04-backd-findings/issues/18,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,LiquidityPool:Unsupported fee-on-transfer tokens,34,https://github.com/code-423n4/2022-04-backd-findings/issues/34,backd,2022/04,bug;invalid;2 (Med Risk);sponsor disputed;reviewed
112,CertoraInc,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,2,Steal funds from the system if the there is a problem with an erc20 token.,93,https://github.com/code-423n4/2022-04-backd-findings/issues/93,backd,2022/04,invalid;sponsor disputed;reviewed
112,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,145,https://github.com/code-423n4/2022-04-backd-findings/issues/145,backd,2022/04,bug;duplicate;2 (Med Risk);resolved;reviewed
112,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,39,https://github.com/code-423n4/2022-04-backd-findings/issues/39,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Missing input validation impact ETH price,40,https://github.com/code-423n4/2022-04-backd-findings/issues/40,backd,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed;reviewed
112,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Bypass withdrawal delay,41,https://github.com/code-423n4/2022-04-backd-findings/issues/41,backd,2022/04,invalid;sponsor disputed;reviewed
112,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,topup possible in an unusable cToken address,42,https://github.com/code-423n4/2022-04-backd-findings/issues/42,backd,2022/04,invalid;sponsor disputed;reviewed
112,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,admin can rug pull,100,https://github.com/code-423n4/2022-04-backd-findings/issues/100,backd,2022/04,invalid;sponsor disputed;reviewed
112,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,dangerous transfer,101,https://github.com/code-423n4/2022-04-backd-findings/issues/101,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,first depositor can drain other depositors,102,https://github.com/code-423n4/2022-04-backd-findings/issues/102,backd,2022/04,bug;invalid;3 (High Risk);sponsor confirmed;reviewed
112,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,wrong use of deadline,45,https://github.com/code-423n4/2022-04-backd-findings/issues/45,backd,2022/04,invalid;sponsor disputed;reviewed
112,defsec,0x38bce8c1ca5a061aa8e2b4750c18ba3efb27ced9,G,Gas Optimizations,192,https://github.com/code-423n4/2022-04-backd-findings/issues/192,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,defsec,0x38bce8c1ca5a061aa8e2b4750c18ba3efb27ced9,Q,QA Report,198,https://github.com/code-423n4/2022-04-backd-findings/issues/198,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,defsec,0x38bce8c1ca5a061aa8e2b4750c18ba3efb27ced9,2,The Contract Should approve(0) first,215,https://github.com/code-423n4/2022-04-backd-findings/issues/215,backd,2022/04,bug;duplicate;2 (Med Risk)
112,defsec,0x38bce8c1ca5a061aa8e2b4750c18ba3efb27ced9,2,Should check return data from chainlink aggregators,31,https://github.com/code-423n4/2022-04-backd-findings/issues/31,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,dipp,0x675454Ae78d25632fC26763Fa9CB72a99Cb0A36e,Q,QA Report,191,https://github.com/code-423n4/2022-04-backd-findings/issues/191,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,146,https://github.com/code-423n4/2022-04-backd-findings/issues/146,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Deprecated safeApprove() function,214,https://github.com/code-423n4/2022-04-backd-findings/issues/214,backd,2022/04,bug;duplicate;2 (Med Risk)
112,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,35,https://github.com/code-423n4/2022-04-backd-findings/issues/35,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Missing Validations In Chainlink's `latestRoundData` Function,51,https://github.com/code-423n4/2022-04-backd-findings/issues/51,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,`call()` should be used instead of `transfer()` on an `address payable`,52,https://github.com/code-423n4/2022-04-backd-findings/issues/52,backd,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed;reviewed
112,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Consistently check account balance before and after transfers for Fee-On-Transfer discrepancies,53,https://github.com/code-423n4/2022-04-backd-findings/issues/53,backd,2022/04,invalid;sponsor disputed;reviewed
112,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,G,Gas Optimizations,94,https://github.com/code-423n4/2022-04-backd-findings/issues/94,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,2,does not follow the check effect interact pattern,95,https://github.com/code-423n4/2022-04-backd-findings/issues/95,backd,2022/04,duplicate;invalid;reviewed
112,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,2,Does'nt follow the check-effect-interact pattern,96,https://github.com/code-423n4/2022-04-backd-findings/issues/96,backd,2022/04,duplicate;invalid;reviewed
112,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,2,Inconsistency between constructor and setting method for slippageTolerance,97,https://github.com/code-423n4/2022-04-backd-findings/issues/97,backd,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed;reviewed
112,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,Q,QA Report,99,https://github.com/code-423n4/2022-04-backd-findings/issues/99,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,105,https://github.com/code-423n4/2022-04-backd-findings/issues/105,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,Q,QA Report,107,https://github.com/code-423n4/2022-04-backd-findings/issues/107,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,gs8nrv,0xCF263cEe139763114fAaFC5F52865135412F50Ec,3,RoleManager.sol: `_revokeRole` doesn't remove from the _roleMembers[role] set,158,https://github.com/code-423n4/2022-04-backd-findings/issues/158,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,gs8nrv,0xCF263cEe139763114fAaFC5F52865135412F50Ec,3,Chainlink oracle read can be the inverse of the value you are looking for,159,https://github.com/code-423n4/2022-04-backd-findings/issues/159,backd,2022/04,invalid;sponsor disputed;reviewed
112,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Reentrancy in TopUpAction.resetPosition,122,https://github.com/code-423n4/2022-04-backd-findings/issues/122,backd,2022/04,invalid;sponsor disputed;reviewed
112,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Unbounded size of AddressProvider._actions,123,https://github.com/code-423n4/2022-04-backd-findings/issues/123,backd,2022/04,bug;invalid;2 (Med Risk);sponsor disputed;reviewed
112,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Unbounded size of AddressProvider._stakerVaults,124,https://github.com/code-423n4/2022-04-backd-findings/issues/124,backd,2022/04,bug;invalid;2 (Med Risk);sponsor disputed;reviewed
112,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,127,https://github.com/code-423n4/2022-04-backd-findings/issues/127,backd,2022/04,bug;invalid;G (Gas Optimization);resolved;reviewed
112,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,130,https://github.com/code-423n4/2022-04-backd-findings/issues/130,backd,2022/04,bug;invalid;QA (Quality Assurance);resolved;reviewed
112,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,2,Reputation risk for not being able to rescue unnacounted transfer to pool,186,https://github.com/code-423n4/2022-04-backd-findings/issues/186,backd,2022/04,invalid;sponsor disputed;reviewed
112,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,Q,QA Report,187,https://github.com/code-423n4/2022-04-backd-findings/issues/187,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,G,Gas Optimizations,188,https://github.com/code-423n4/2022-04-backd-findings/issues/188,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,Q,QA Report,199,https://github.com/code-423n4/2022-04-backd-findings/issues/199,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,2,Griefer can force withdrawal to treasury in `CvxCrvRewardsLocker#processExpiredLocks`,201,https://github.com/code-423n4/2022-04-backd-findings/issues/201,backd,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);resolved;sponsor confirmed;reviewed
112,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,G,Gas Optimizations,202,https://github.com/code-423n4/2022-04-backd-findings/issues/202,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,2,Missing freshness validation in ETH price oracle,217,https://github.com/code-423n4/2022-04-backd-findings/issues/217,backd,2022/04,bug;duplicate;2 (Med Risk)
112,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,2,Avoid payable.transfer,219,https://github.com/code-423n4/2022-04-backd-findings/issues/219,backd,2022/04,bug;duplicate;2 (Med Risk)
112,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,No provision to change value of minWithdrawalDelay in VaultReserve,147,https://github.com/code-423n4/2022-04-backd-findings/issues/147,backd,2022/04,invalid;sponsor disputed;reviewed
112,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,Q,QA Report,148,https://github.com/code-423n4/2022-04-backd-findings/issues/148,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,3,Its possible to lose total governance control by mistake,83,https://github.com/code-423n4/2022-04-backd-findings/issues/83,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,Swapper3Crv's swapping path can be suboptimal,184,https://github.com/code-423n4/2022-04-backd-findings/issues/184,backd,2022/04,bug;invalid;2 (Med Risk);sponsor disputed;reviewed
112,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,EthPool use payable.transfer with an arbitrary receiver,190,https://github.com/code-423n4/2022-04-backd-findings/issues/190,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,"ETHVault, BkdEthCvx and VaultReserve use payable.transfer for inter-system transfers",193,https://github.com/code-423n4/2022-04-backd-findings/issues/193,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,StakerVault's unstakeFor allows for reentrancy that can lead to stealing the contract balance,197,https://github.com/code-423n4/2022-04-backd-findings/issues/197,backd,2022/04,duplicate;invalid;reviewed
112,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,AmmGauge stake allows for reentrancy that can lead to stealing the contract balance,200,https://github.com/code-423n4/2022-04-backd-findings/issues/200,backd,2022/04,bug;invalid;3 (High Risk);sponsor disputed;reviewed
112,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,BkdEthCvx's _withdrawAll can be subject to sandwich attacks,208,https://github.com/code-423n4/2022-04-backd-findings/issues/208,backd,2022/04,invalid;sponsor disputed;reviewed
112,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,ChainlinkOracleProvider can provide zero and stale prices,212,https://github.com/code-423n4/2022-04-backd-findings/issues/212,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,Fee on transfer tokens aren't supported by StakerVault's stakeFor,213,https://github.com/code-423n4/2022-04-backd-findings/issues/213,backd,2022/04,invalid;sponsor disputed;reviewed
112,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,Customers cannot `redeem()` LP tokens to non-EOA accounts,177,https://github.com/code-423n4/2022-04-backd-findings/issues/177,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,Customers cannot be `topUp()`ed a second time,178,https://github.com/code-423n4/2022-04-backd-findings/issues/178,backd,2022/04,bug;3 (High Risk);resolved;sponsor confirmed;reviewed
112,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Oracle data feeds are insufficiently validated,179,https://github.com/code-423n4/2022-04-backd-findings/issues/179,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,"Lack of `safeApprove(0)` prevents some registrations, and the changing of stakers and LP tokens",180,https://github.com/code-423n4/2022-04-backd-findings/issues/180,backd,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed;reviewed
112,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,181,https://github.com/code-423n4/2022-04-backd-findings/issues/181,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,182,https://github.com/code-423n4/2022-04-backd-findings/issues/182,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,JayCools,0xb172574825dceA9644a9E341b0dc7d7c830A66CB,G,Gas Optimizations,28,https://github.com/code-423n4/2022-04-backd-findings/issues/28,backd,2022/04,bug;invalid;G (Gas Optimization);sponsor disputed;reviewed
112,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Shadowed inherited value used as argument in `initialize()` function ,3,https://github.com/code-423n4/2022-04-backd-findings/issues/3,backd,2022/04,invalid;sponsor disputed;reviewed
112,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Constructor function used in upgradeability contract ,4,https://github.com/code-423n4/2022-04-backd-findings/issues/4,backd,2022/04,bug;QA (Quality Assurance);sponsor disputed;reviewed
112,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,G,Gas Optimizations,168,https://github.com/code-423n4/2022-04-backd-findings/issues/168,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,Q,QA Report,170,https://github.com/code-423n4/2022-04-backd-findings/issues/170,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,2,Potential reentrancy in unstakeFor function,66,https://github.com/code-423n4/2022-04-backd-findings/issues/66,backd,2022/04,invalid;sponsor disputed;reviewed
112,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,Q,QA Report,67,https://github.com/code-423n4/2022-04-backd-findings/issues/67,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,Q,QA Report,54,https://github.com/code-423n4/2022-04-backd-findings/issues/54,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,2,Missing validations for return value of oracle data feed.,203,https://github.com/code-423n4/2022-04-backd-findings/issues/203,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,204,https://github.com/code-423n4/2022-04-backd-findings/issues/204,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,211,https://github.com/code-423n4/2022-04-backd-findings/issues/211,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,m4rio_eth,0xc8E2806A97413b5496A1ba6050b517CC98D0EfCA,3,"Reentrancy in StakerVault line 110 pool.handleLpTokenTransfer(msg.sender, account, amount); then balances are updated afterwards",24,https://github.com/code-423n4/2022-04-backd-findings/issues/24,backd,2022/04,duplicate;invalid;reviewed
112,m4rio_eth,0xc8E2806A97413b5496A1ba6050b517CC98D0EfCA,3,Reentrancy in StakerVault.unstakeFor,25,https://github.com/code-423n4/2022-04-backd-findings/issues/25,backd,2022/04,duplicate;invalid;reviewed
112,m4rio_eth,0xc8E2806A97413b5496A1ba6050b517CC98D0EfCA,Q,QA Report,26,https://github.com/code-423n4/2022-04-backd-findings/issues/26,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,G,Gas Optimizations,113,https://github.com/code-423n4/2022-04-backd-findings/issues/113,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,Q,QA Report,114,https://github.com/code-423n4/2022-04-backd-findings/issues/114,backd,2022/04,bug;invalid;QA (Quality Assurance);resolved;reviewed
112,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,Use safe ETH transfer instead,19,https://github.com/code-423n4/2022-04-backd-findings/issues/19,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,Update amount_ to the actual contract balance increase.,20,https://github.com/code-423n4/2022-04-backd-findings/issues/20,backd,2022/04,invalid;sponsor disputed;reviewed
112,masih,0x568697D203370BFffe541B3C9eFB368564b7b4C0,2,dont show me Posts to the mainnet backd,27,https://github.com/code-423n4/2022-04-backd-findings/issues/27,backd,2022/04,invalid;sponsor disputed;reviewed
112,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,2,Unable to set LpToken again due to `safeApprove` revert,91,https://github.com/code-423n4/2022-04-backd-findings/issues/91,backd,2022/04,invalid;sponsor disputed;reviewed
112,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,2,Unable to set Staker again due to `safeApprove` revert,92,https://github.com/code-423n4/2022-04-backd-findings/issues/92,backd,2022/04,invalid;sponsor disputed;reviewed
112,NoamYakov,0x972a7c4EE6d0988A010CafB09F794Cd1a169293F,G,Gas Optimizations,136,https://github.com/code-423n4/2022-04-backd-findings/issues/136,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,orion,0xa270bb1241FF428927406e5Fde47e7EA8592aFb1,2,Missing access control on locking functions,23,https://github.com/code-423n4/2022-04-backd-findings/issues/23,backd,2022/04,invalid;sponsor disputed;reviewed
112,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,G,Gas Optimizations,1,https://github.com/code-423n4/2022-04-backd-findings/issues/1,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,Q,QA Report,2,https://github.com/code-423n4/2022-04-backd-findings/issues/2,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,3,Lack of re-entrancy protection,169,https://github.com/code-423n4/2022-04-backd-findings/issues/169,backd,2022/04,invalid;disagree with severity;sponsor confirmed;reviewed
112,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Unbounded loops,171,https://github.com/code-423n4/2022-04-backd-findings/issues/171,backd,2022/04,bug;duplicate;QA (Quality Assurance);reviewed
112,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,Q,QA Report,173,https://github.com/code-423n4/2022-04-backd-findings/issues/173,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Gas Optimizations,174,https://github.com/code-423n4/2022-04-backd-findings/issues/174,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,transfer is used for transfering ether,218,https://github.com/code-423n4/2022-04-backd-findings/issues/218,backd,2022/04,bug;duplicate;2 (Med Risk)
112,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Tokens having more than 18 decimals are not supported,222,https://github.com/code-423n4/2022-04-backd-findings/issues/222,backd,2022/04,bug;duplicate;2 (Med Risk)
112,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,Q,QA Report,196,https://github.com/code-423n4/2022-04-backd-findings/issues/196,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,2,"Function deposit can receive both ETH and tokens, but only compute tokens",206,https://github.com/code-423n4/2022-04-backd-findings/issues/206,backd,2022/04,bug;invalid;2 (Med Risk);resolved;sponsor confirmed;reviewed
112,p_crypt0,0x1928785E5582D2866b293c96Ca8BF0f7a19a1178,3,EthPool.sol Mint Infinite LP Tokens Exploit,110,https://github.com/code-423n4/2022-04-backd-findings/issues/110,backd,2022/04,invalid;sponsor disputed;reviewed
112,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,Transfer ETH by using `transfer()` may cause this transaction to fail,133,https://github.com/code-423n4/2022-04-backd-findings/issues/133,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,Chainlink data could get unintended stale price,134,https://github.com/code-423n4/2022-04-backd-findings/issues/134,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,135,https://github.com/code-423n4/2022-04-backd-findings/issues/135,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,137,https://github.com/code-423n4/2022-04-backd-findings/issues/137,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,`_revokeRole()` doesn’t remove `account` from `_roleMembers[role]`,142,https://github.com/code-423n4/2022-04-backd-findings/issues/142,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`withdrawAll()` has a rug risk in `LiquidityPool.sol`,144,https://github.com/code-423n4/2022-04-backd-findings/issues/144,backd,2022/04,invalid;sponsor disputed;reviewed
112,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,2,Revoking role does not update _roleMembers mapping,58,https://github.com/code-423n4/2022-04-backd-findings/issues/58,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,2,Chainlink's latestRoundData missing/invalid security checks,59,https://github.com/code-423n4/2022-04-backd-findings/issues/59,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,remora,0x1434b95234155DA830c20d02548aF22f14A38FbE,Q,QA Report,160,https://github.com/code-423n4/2022-04-backd-findings/issues/160,backd,2022/04,bug;QA (Quality Assurance);sponsor disputed;reviewed
112,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,143,https://github.com/code-423n4/2022-04-backd-findings/issues/143,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Wrong deadline,10,https://github.com/code-423n4/2022-04-backd-findings/issues/10,backd,2022/04,bug;invalid;sponsor disputed;reviewed
112,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2, Div by 0,11,https://github.com/code-423n4/2022-04-backd-findings/issues/11,backd,2022/04,bug;invalid;sponsor disputed;reviewed
112,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Unsafe Cast,12,https://github.com/code-423n4/2022-04-backd-findings/issues/12,backd,2022/04,bug;duplicate;QA (Quality Assurance);resolved;sponsor confirmed;reviewed
112,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Must approve 0 first,13,https://github.com/code-423n4/2022-04-backd-findings/issues/13,backd,2022/04,invalid;sponsor disputed;reviewed
112,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Tokens with fee on transfer are not supported,14,https://github.com/code-423n4/2022-04-backd-findings/issues/14,backd,2022/04,invalid;sponsor disputed;reviewed
112,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,approve return value is ignored,15,https://github.com/code-423n4/2022-04-backd-findings/issues/15,backd,2022/04,bug;invalid;2 (Med Risk);sponsor disputed;reviewed
112,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,5,https://github.com/code-423n4/2022-04-backd-findings/issues/5,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,6,https://github.com/code-423n4/2022-04-backd-findings/issues/6,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Duplicates in registerSwapper  array,7,https://github.com/code-423n4/2022-04-backd-findings/issues/7,backd,2022/04,invalid;sponsor disputed;reviewed
112,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Potential DoS,8,https://github.com/code-423n4/2022-04-backd-findings/issues/8,backd,2022/04,invalid;sponsor disputed;reviewed
112,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2, Override function but with different argument location,9,https://github.com/code-423n4/2022-04-backd-findings/issues/9,backd,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed;reviewed
112,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,CvxCrvRewardsLocker implements a swap without a slippage check that can result in a loss of funds through MEV,161,https://github.com/code-423n4/2022-04-backd-findings/issues/161,backd,2022/04,bug;2 (Med Risk);sponsor confirmed;reviewed
112,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,189,https://github.com/code-423n4/2022-04-backd-findings/issues/189,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Gas Optimizations,129,https://github.com/code-423n4/2022-04-backd-findings/issues/129,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,securerodd,0x18564BE77AEd882651D2c0c791477BDe4a0F8C3d,2,VaultReserve deposit() function may not always credit ETH deposits,106,https://github.com/code-423n4/2022-04-backd-findings/issues/106,backd,2022/04,invalid;sponsor disputed;reviewed
112,securerodd,0x18564BE77AEd882651D2c0c791477BDe4a0F8C3d,2,TopUpAction execute() performs delegateCall on semi-controllable user input,108,https://github.com/code-423n4/2022-04-backd-findings/issues/108,backd,2022/04,bug;duplicate;QA (Quality Assurance);resolved;sponsor confirmed;reviewed
112,securerodd,0x18564BE77AEd882651D2c0c791477BDe4a0F8C3d,Q,QA Report,109,https://github.com/code-423n4/2022-04-backd-findings/issues/109,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,securerodd,0x18564BE77AEd882651D2c0c791477BDe4a0F8C3d,G,Gas Optimizations,111,https://github.com/code-423n4/2022-04-backd-findings/issues/111,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,2,`LiquidityPool` deposits doesn't account for fee on transfer tokens,46,https://github.com/code-423n4/2022-04-backd-findings/issues/46,backd,2022/04,bug;invalid;2 (Med Risk);sponsor disputed;reviewed
112,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,2,ERC777 tokens can bypass `depositCap` guard,47,https://github.com/code-423n4/2022-04-backd-findings/issues/47,backd,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed;reviewed
112,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,2,Missing sanity check on `slippageTolerance` during initialisation.,48,https://github.com/code-423n4/2022-04-backd-findings/issues/48,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,2,`_decimalMultiplier` doesn't account for tokens with decimals higher than 18,49,https://github.com/code-423n4/2022-04-backd-findings/issues/49,backd,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed;reviewed
112,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,2,`getNewCurrentFees` reverts when `minFeePercentage` > `feeRatio`,50,https://github.com/code-423n4/2022-04-backd-findings/issues/50,backd,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed;reviewed
112,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,Q,QA Report,162,https://github.com/code-423n4/2022-04-backd-findings/issues/162,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,G,Gas Optimizations,163,https://github.com/code-423n4/2022-04-backd-findings/issues/163,backd,2022/04,bug;G (Gas Optimization);sponsor disputed;reviewed
112,slywaters,0xcdc82d78cb49d4baa06d0988afdd27261b0667b2,G,Gas Optimizations,43,https://github.com/code-423n4/2022-04-backd-findings/issues/43,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,2,Chainlink's latestRoundData might return stale or incorrect results.,150,https://github.com/code-423n4/2022-04-backd-findings/issues/150,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,Q,QA Report,151,https://github.com/code-423n4/2022-04-backd-findings/issues/151,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,G,Gas Optimizations,152,https://github.com/code-423n4/2022-04-backd-findings/issues/152,backd,2022/04,bug;duplicate;G (Gas Optimization);sponsor disputed;reviewed
112,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,G,Gas Optimizations,154,https://github.com/code-423n4/2022-04-backd-findings/issues/154,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,sseefried,0x033e21B02373489ff2f7a2c2f1B109a1bC6158aD,2,Malicious Stakers can grief Keepers,194,https://github.com/code-423n4/2022-04-backd-findings/issues/194,backd,2022/04,bug;2 (Med Risk);sponsor confirmed;reviewed
112,sseefried,0x033e21B02373489ff2f7a2c2f1B109a1bC6158aD,2,Staker is overcharged for gas/Keeper is reimbursed too much gas,195,https://github.com/code-423n4/2022-04-backd-findings/issues/195,backd,2022/04,bug;duplicate;QA (Quality Assurance);sponsor confirmed;reviewed
112,sseefried,0x033e21B02373489ff2f7a2c2f1B109a1bC6158aD,Q,QA Report,209,https://github.com/code-423n4/2022-04-backd-findings/issues/209,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,StyxRave,0x55118951Ac44B0f58B9382211bdF58149ef13333,Q,QA Report,153,https://github.com/code-423n4/2022-04-backd-findings/issues/153,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,StyxRave,0x55118951Ac44B0f58B9382211bdF58149ef13333,2,decimalMultiplier assumes tokens have <= 18 decimals,221,https://github.com/code-423n4/2022-04-backd-findings/issues/221,backd,2022/04,bug;duplicate;2 (Med Risk)
112,Tadashi,0x8638c0a8C936DeFaCB575a2AD5B103F2a3876cE7,Q,QA Report,81,https://github.com/code-423n4/2022-04-backd-findings/issues/81,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,Tadashi,0x8638c0a8C936DeFaCB575a2AD5B103F2a3876cE7,G,Gas Optimizations,82,https://github.com/code-423n4/2022-04-backd-findings/issues/82,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,G,Gas Optimizations,84,https://github.com/code-423n4/2022-04-backd-findings/issues/84,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,Q,QA Report,85,https://github.com/code-423n4/2022-04-backd-findings/issues/85,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,tin537,0x7D8e83DB0584334E1FB2A9D218Ec623E32C1646a,G,Gas Optimizations,21,https://github.com/code-423n4/2022-04-backd-findings/issues/21,backd,2022/04,bug;duplicate;G (Gas Optimization);sponsor disputed;reviewed
112,tin537,0x7D8e83DB0584334E1FB2A9D218Ec623E32C1646a,G,Gas Optimizations,22,https://github.com/code-423n4/2022-04-backd-findings/issues/22,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,57,https://github.com/code-423n4/2022-04-backd-findings/issues/57,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,2,Forget to remove account out of _roleMembers[role],216,https://github.com/code-423n4/2022-04-backd-findings/issues/216,backd,2022/04,bug;duplicate;2 (Med Risk)
112,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,Q,QA Report,89,https://github.com/code-423n4/2022-04-backd-findings/issues/89,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
112,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,Unlimited reward minting with Function Transfer in StakerVault (updates balances before calling userCheckpoint),55,https://github.com/code-423n4/2022-04-backd-findings/issues/55,backd,2022/04,bug;duplicate;3 (High Risk);reviewed
112,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,function lockFunds in TopUpActionLibrary can cause serious fund lose. fee and Capped bypass. It's not calling stakerVault.increaseActionLockedBalance when transfers stakes.,60,https://github.com/code-423n4/2022-04-backd-findings/issues/60,backd,2022/04,bug;3 (High Risk);resolved;sponsor confirmed;reviewed
112,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,function exchangeRate() in LiquidityPool returns out of date rate which can cause fund lose and thefts.,61,https://github.com/code-423n4/2022-04-backd-findings/issues/61,backd,2022/04,invalid;sponsor disputed;reviewed
112,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,function withdrawFromStrategy in Vault has potential underflow for variable currentAllocated which can cause serious fund lose,86,https://github.com/code-423n4/2022-04-backd-findings/issues/86,backd,2022/04,invalid;sponsor disputed;reviewed
112,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,2,Possible overflow in register function of TopUpAction contract because of totalTopUpAmount,90,https://github.com/code-423n4/2022-04-backd-findings/issues/90,backd,2022/04,invalid;sponsor disputed;reviewed
112,UnusualTurtle,0xb8E3a52F9871Bd68cCefb4558F00e7135b1A92FB,Q,QA Report,157,https://github.com/code-423n4/2022-04-backd-findings/issues/157,backd,2022/04,bug;duplicate;2 (Med Risk);resolved;reviewed
112,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,G,Gas Optimizations,116,https://github.com/code-423n4/2022-04-backd-findings/issues/116,backd,2022/04,bug;G (Gas Optimization);resolved;reviewed
112,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,3,[WP-H1] `swapForWeth` may use an improper `path` which can cause a loss of the majority of the token,117,https://github.com/code-423n4/2022-04-backd-findings/issues/117,backd,2022/04,invalid;sponsor disputed;reviewed
112,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,3,[WP-H6] `StakerVault.sol` Attacker can steal funds from the vault with re-entrancy from hookable tokens,118,https://github.com/code-423n4/2022-04-backd-findings/issues/118,backd,2022/04,duplicate;invalid;reviewed
112,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,3,[WP-H7] Using `transfer()` makes some users won't be able to withdraw their funds,119,https://github.com/code-423n4/2022-04-backd-findings/issues/119,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,2,[WP-M8] `CompoundHandler#topUp()` Using the wrong function selector makes native token `topUp()` always revert,120,https://github.com/code-423n4/2022-04-backd-findings/issues/120,backd,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed;reviewed
112,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,2,[WP-M9] `CEthInterface#repayBorrowBehalf()` reading non-existing returns makes  `_repayAnyDebt()` with CEther always revert,121,https://github.com/code-423n4/2022-04-backd-findings/issues/121,backd,2022/04,bug;2 (Med Risk);sponsor confirmed;reviewed
112,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,2,[WP-M11] `CEthInterface#mint()` reading non-existing returns makes `topUp()` with native token alway revert,125,https://github.com/code-423n4/2022-04-backd-findings/issues/125,backd,2022/04,bug;2 (Med Risk);sponsor confirmed;reviewed
112,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,2,[WP-M12] Tokens with decimals larger than `18` are not supported,126,https://github.com/code-423n4/2022-04-backd-findings/issues/126,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,2,[WP-M13] Chainlink's `latestRoundData` might return stale or incorrect results,128,https://github.com/code-423n4/2022-04-backd-findings/issues/128,backd,2022/04,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed;reviewed
112,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,3,"[WP-H14] `AmmConvexGauge.sol#poolCheckpoint()` will most certainly revert, makes `unstakeFor()` fails, and freeze users' funds",131,https://github.com/code-423n4/2022-04-backd-findings/issues/131,backd,2022/04,invalid;sponsor disputed;reviewed
112,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,3,[WP-H15] `AmmConvexGauge.sol#poolCheckpoint()` `cvxStakedIntegral` can be manipulated by the attacker,132,https://github.com/code-423n4/2022-04-backd-findings/issues/132,backd,2022/04,bug;invalid;3 (High Risk);sponsor confirmed;reviewed
112,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,3,"EthPool doTransferOut functions call native payable.transfer, which can be unusable for smart contract calls",32,https://github.com/code-423n4/2022-04-backd-findings/issues/32,backd,2022/04,bug;duplicate;2 (Med Risk);reviewed
112,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,2,Deposit cap in LiquidityPool can be by pass when deal with ERC721,33,https://github.com/code-423n4/2022-04-backd-findings/issues/33,backd,2022/04,bug;duplicate;2 (Med Risk);sponsor disputed;reviewed
112,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,2,Re-enterable Code When Calling unstakeFor in StakerVault,44,https://github.com/code-423n4/2022-04-backd-findings/issues/44,backd,2022/04,duplicate;invalid;reviewed
112,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,G,Gas Optimizations,183,https://github.com/code-423n4/2022-04-backd-findings/issues/183,backd,2022/04,bug;G (Gas Optimization);reviewed
112,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,Q,QA Report,185,https://github.com/code-423n4/2022-04-backd-findings/issues/185,backd,2022/04,bug;QA (Quality Assurance);resolved;reviewed
106,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,76,https://github.com/code-423n4/2022-04-backed-findings/issues/76,backed,2022/04,bug;G (Gas Optimization);sponsor acknowledged
106,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,Q,QA Report,77,https://github.com/code-423n4/2022-04-backed-findings/issues/77,backed,2022/04,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
106,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,Reentrancy,78,https://github.com/code-423n4/2022-04-backed-findings/issues/78,backed,2022/04,invalid;sponsor disputed
106,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,4,https://github.com/code-423n4/2022-04-backed-findings/issues/4,backed,2022/04,bug;G (Gas Optimization);sponsor disputed
106,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,5,https://github.com/code-423n4/2022-04-backed-findings/issues/5,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,3,Malicious lender can seize collateral and receive buyout payment due to reentrancy,64,https://github.com/code-423n4/2022-04-backed-findings/issues/64,backed,2022/04,invalid;sponsor disputed
106,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Protocol doesn't handle fee on transfer tokens,75,https://github.com/code-423n4/2022-04-backed-findings/issues/75,backed,2022/04,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
106,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,3,Borrower can be their own lender and steal funds from buyout due to reentrancy,85,https://github.com/code-423n4/2022-04-backed-findings/issues/85,backed,2022/04,bug;3 (High Risk);resolved;sponsor confirmed
106,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,Q,QA Report,87,https://github.com/code-423n4/2022-04-backed-findings/issues/87,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,2,Lender gets no reward for flashloan,117,https://github.com/code-423n4/2022-04-backed-findings/issues/117,backed,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor acknowledged
106,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,Q,QA Report,118,https://github.com/code-423n4/2022-04-backed-findings/issues/118,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,G,Gas Optimizations,119,https://github.com/code-423n4/2022-04-backed-findings/issues/119,backed,2022/04,bug;G (Gas Optimization);sponsor acknowledged
106,AuditsAreUS,0x8f6e76F3059DcFAC435bBb7029294eB6ceEcab23,2,DoS: Owner May Prevent Any Buyouts By Setting `requiredImprovementRate` to Max Uint256,16,https://github.com/code-423n4/2022-04-backed-findings/issues/16,backed,2022/04,invalid;disagree with severity;sponsor disputed
106,AuditsAreUS,0x8f6e76F3059DcFAC435bBb7029294eB6ceEcab23,2,Lack of Limit on `amount` Allows Borrowers To Be Extorted For Interest Payments,17,https://github.com/code-423n4/2022-04-backed-findings/issues/17,backed,2022/04,bug;duplicate;3 (High Risk)
106,AuditsAreUS,0x8f6e76F3059DcFAC435bBb7029294eB6ceEcab23,2,Duration Increase Is Not Measure Correctly For BuyOuts,3,https://github.com/code-423n4/2022-04-backed-findings/issues/3,backed,2022/04,invalid;sponsor disputed
106,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Use `safeTransferFrom()` consistently instead of `transferFrom()`,106,https://github.com/code-423n4/2022-04-backed-findings/issues/106,backed,2022/04,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
106,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,Q,QA Report,108,https://github.com/code-423n4/2022-04-backed-findings/issues/108,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,BouSalman,0x7c44A7afc34abE118aB752c836680aD7682b9273,Q,QA Report,2,https://github.com/code-423n4/2022-04-backed-findings/issues/2,backed,2022/04,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
106,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,NFTLoanFacilitator: repayAndCloseLoan may cause users to lose assets,19,https://github.com/code-423n4/2022-04-backed-findings/issues/19,backed,2022/04,invalid;disagree with severity;sponsor acknowledged
106,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,NFTLoanFacilitator: Unsupported fee-on-transfer tokens,21,https://github.com/code-423n4/2022-04-backed-findings/issues/21,backed,2022/04,bug;duplicate;2 (Med Risk)
106,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,53,https://github.com/code-423n4/2022-04-backed-findings/issues/53,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,54,https://github.com/code-423n4/2022-04-backed-findings/issues/54,backed,2022/04,bug;G (Gas Optimization);sponsor acknowledged;sponsor disputed
106,CertoraInc,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,2,Take other lender loanTicket without improving any of the loan conditions,96,https://github.com/code-423n4/2022-04-backed-findings/issues/96,backed,2022/04,bug;duplicate;2 (Med Risk)
106,CertoraInc,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,2,Lend transactions without fees for the protocol.,97,https://github.com/code-423n4/2022-04-backed-findings/issues/97,backed,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor acknowledged
106,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Can force borrower to pay huge interest,24,https://github.com/code-423n4/2022-04-backed-findings/issues/24,backed,2022/04,bug;enhancement;3 (High Risk);sponsor disputed
106,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,"New lenders pay interest **for all** previous lenders, not just the current lender",25,https://github.com/code-423n4/2022-04-backed-findings/issues/25,backed,2022/04,invalid;disagree with severity;sponsor acknowledged;sponsor disputed
106,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Non-existent loan ids can be closed leading to loss of NFTs,26,https://github.com/code-423n4/2022-04-backed-findings/issues/26,backed,2022/04,invalid;sponsor disputed
106,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Borrowers lose funds if they call `repayAndCloseLoan` instead of `closeLoan`,27,https://github.com/code-423n4/2022-04-backed-findings/issues/27,backed,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed
106,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Might not get desired min loan amount if `_originationFeeRate` changes,28,https://github.com/code-423n4/2022-04-backed-findings/issues/28,backed,2022/04,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
106,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,G,Gas Optimizations,29,https://github.com/code-423n4/2022-04-backed-findings/issues/29,backed,2022/04,bug;invalid;G (Gas Optimization);sponsor disputed
106,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,10,https://github.com/code-423n4/2022-04-backed-findings/issues/10,backed,2022/04,bug;G (Gas Optimization);sponsor acknowledged
106,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,7,https://github.com/code-423n4/2022-04-backed-findings/issues/7,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged;sponsor disputed
106,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Lender can lose funds,8,https://github.com/code-423n4/2022-04-backed-findings/issues/8,backed,2022/04,bug;duplicate;2 (Med Risk);sponsor acknowledged
106,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Borrower collateral can be stolen,9,https://github.com/code-423n4/2022-04-backed-findings/issues/9,backed,2022/04,bug;duplicate;3 (High Risk);disagree with severity;sponsor disputed
106,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,loan amount is unbounded,30,https://github.com/code-423n4/2022-04-backed-findings/issues/30,backed,2022/04,bug;duplicate;3 (High Risk);disagree with severity;sponsor acknowledged
106,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,130,https://github.com/code-423n4/2022-04-backed-findings/issues/130,backed,2022/04,bug;QA (Quality Assurance);resolved;sponsor confirmed
106,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Consistently check account balance before and after transfers for Fee-On-Transfer discrepancies,133,https://github.com/code-423n4/2022-04-backed-findings/issues/133,backed,2022/04,bug;duplicate;2 (Med Risk)
106,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,20,https://github.com/code-423n4/2022-04-backed-findings/issues/20,backed,2022/04,bug;G (Gas Optimization);resolved;sponsor confirmed
106,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,The ERC721 `_burn()` function is never called in `BorrowTicket.sol`,50,https://github.com/code-423n4/2022-04-backed-findings/issues/50,backed,2022/04,invalid;disagree with severity;sponsor acknowledged
106,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Using `transferFrom` on ERC721 tokens,51,https://github.com/code-423n4/2022-04-backed-findings/issues/51,backed,2022/04,bug;duplicate;2 (Med Risk);disagree with severity
106,FSchmoede,0xa806D8B9be2C56376264F81F62416cB704ce81BD,G,Gas Optimizations,103,https://github.com/code-423n4/2022-04-backed-findings/issues/103,backed,2022/04,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
106,FSchmoede,0xa806D8B9be2C56376264F81F62416cB704ce81BD,Q,QA Report,104,https://github.com/code-423n4/2022-04-backed-findings/issues/104,backed,2022/04,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
106,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,101,https://github.com/code-423n4/2022-04-backed-findings/issues/101,backed,2022/04,bug;G (Gas Optimization);sponsor acknowledged
106,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,100,https://github.com/code-423n4/2022-04-backed-findings/issues/100,backed,2022/04,bug;invalid;QA (Quality Assurance);sponsor disputed
106,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,XSS in NFT svg generation,102,https://github.com/code-423n4/2022-04-backed-findings/issues/102,backed,2022/04,invalid;sponsor acknowledged
106,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,99,https://github.com/code-423n4/2022-04-backed-findings/issues/99,backed,2022/04,bug;invalid;G (Gas Optimization);sponsor acknowledged
106,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,2,Lender can stop others from offering higher rates.,112,https://github.com/code-423n4/2022-04-backed-findings/issues/112,backed,2022/04,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
106,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,2,Burning `collateralContractAddress` by mistake in `closeLoan`,115,https://github.com/code-423n4/2022-04-backed-findings/issues/115,backed,2022/04,bug;duplicate;2 (Med Risk);disagree with severity
106,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,Q,QA Report,126,https://github.com/code-423n4/2022-04-backed-findings/issues/126,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,G,Gas Optimizations,127,https://github.com/code-423n4/2022-04-backed-findings/issues/127,backed,2022/04,bug;invalid;G (Gas Optimization);sponsor disputed
106,Hawkeye,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,109,https://github.com/code-423n4/2022-04-backed-findings/issues/109,backed,2022/04,bug;QA (Quality Assurance);sponsor disputed
106,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,NFTLoanFacilitator: Insufficient granularity allows for same-term loans to be accepted,1,https://github.com/code-423n4/2022-04-backed-findings/issues/1,backed,2022/04,bug;duplicate;2 (Med Risk);sponsor confirmed
106,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,2,Lend and borrow tickets can be transferred to the NFTLoanFacilitator using `transferFrom`,116,https://github.com/code-423n4/2022-04-backed-findings/issues/116,backed,2022/04,invalid;disagree with severity;sponsor acknowledged
106,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,Q,QA Report,120,https://github.com/code-423n4/2022-04-backed-findings/issues/120,backed,2022/04,bug;QA (Quality Assurance);resolved;sponsor confirmed
106,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,The protocol does not check if the loanAssetContractAddress is rebase token,105,https://github.com/code-423n4/2022-04-backed-findings/issues/105,backed,2022/04,invalid;disagree with severity;sponsor acknowledged
106,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,Q,QA Report,110,https://github.com/code-423n4/2022-04-backed-findings/issues/110,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,Loan buyouts can stick users with huge surprise bills,131,https://github.com/code-423n4/2022-04-backed-findings/issues/131,backed,2022/04,bug;duplicate;3 (High Risk)
106,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,"Code credits fee-on-transfer tokens for amount stated, not amount transferred",132,https://github.com/code-423n4/2022-04-backed-findings/issues/132,backed,2022/04,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
106,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,134,https://github.com/code-423n4/2022-04-backed-findings/issues/134,backed,2022/04,bug;QA (Quality Assurance);resolved;sponsor confirmed
106,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,135,https://github.com/code-423n4/2022-04-backed-findings/issues/135,backed,2022/04,bug;G (Gas Optimization);sponsor acknowledged
106,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,2,use of transferFrom,11,https://github.com/code-423n4/2022-04-backed-findings/issues/11,backed,2022/04,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
106,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,3,use of transferFrom ,40,https://github.com/code-423n4/2022-04-backed-findings/issues/40,backed,2022/04,invalid;sponsor disputed
106,joshie,0x2f1c5628e931fc75cf097072f61b9dc72d1d827f,2,Borrower may be forced to pay more interest than he expected,14,https://github.com/code-423n4/2022-04-backed-findings/issues/14,backed,2022/04,bug;duplicate;3 (High Risk);disagree with severity;sponsor acknowledged
106,joshie,0x2f1c5628e931fc75cf097072f61b9dc72d1d827f,G,Gas Optimizations,6,https://github.com/code-423n4/2022-04-backed-findings/issues/6,backed,2022/04,bug;G (Gas Optimization);resolved;sponsor confirmed
106,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,G,Gas Optimizations,65,https://github.com/code-423n4/2022-04-backed-findings/issues/65,backed,2022/04,bug;G (Gas Optimization);sponsor acknowledged
106,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,G,Gas Optimizations,66,https://github.com/code-423n4/2022-04-backed-findings/issues/66,backed,2022/04,bug;duplicate;G (Gas Optimization);sponsor acknowledged
106,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,Q,QA Report,67,https://github.com/code-423n4/2022-04-backed-findings/issues/67,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,G,Gas Optimizations,68,https://github.com/code-423n4/2022-04-backed-findings/issues/68,backed,2022/04,bug;duplicate;G (Gas Optimization);sponsor acknowledged
106,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,Q,QA Report,69,https://github.com/code-423n4/2022-04-backed-findings/issues/69,backed,2022/04,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
106,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,Q,QA Report,70,https://github.com/code-423n4/2022-04-backed-findings/issues/70,backed,2022/04,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
106,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,2,Improper Loan Duration,71,https://github.com/code-423n4/2022-04-backed-findings/issues/71,backed,2022/04,invalid;disagree with severity;sponsor acknowledged
106,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,Q,QA Report,72,https://github.com/code-423n4/2022-04-backed-findings/issues/72,backed,2022/04,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
106,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,2,Loan Can Be Repaid After Duration Has Passed,73,https://github.com/code-423n4/2022-04-backed-findings/issues/73,backed,2022/04,invalid;disagree with severity;sponsor acknowledged
106,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,Q,QA Report,74,https://github.com/code-423n4/2022-04-backed-findings/issues/74,backed,2022/04,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
106,m9800,0x367bF4A80DA0Ed955DbeFb228c60fDf20C2f85B2,Q,QA Report,95,https://github.com/code-423n4/2022-04-backed-findings/issues/95,backed,2022/04,bug;QA (Quality Assurance);resolved;sponsor acknowledged;sponsor confirmed
106,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,2,createLoan() Possible to Bypass Restriction collateralContractAddress != TicketContract,59,https://github.com/code-423n4/2022-04-backed-findings/issues/59,backed,2022/04,invalid;disagree with severity;sponsor acknowledged
106,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,Q,QA Report,60,https://github.com/code-423n4/2022-04-backed-findings/issues/60,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Gas Optimizations,61,https://github.com/code-423n4/2022-04-backed-findings/issues/61,backed,2022/04,bug;G (Gas Optimization);sponsor acknowledged
106,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,2,Using `transferFrom` on ERC721 tokens transfer,98,https://github.com/code-423n4/2022-04-backed-findings/issues/98,backed,2022/04,bug;duplicate;2 (Med Risk)
106,obront,0xf346100e892553DcEb41A927Fb668DA7B0b7C964,G,Gas Optimizations,13,https://github.com/code-423n4/2022-04-backed-findings/issues/13,backed,2022/04,bug;G (Gas Optimization);sponsor acknowledged
106,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Owner can steal tokens from loan,122,https://github.com/code-423n4/2022-04-backed-findings/issues/122,backed,2022/04,invalid;sponsor disputed
106,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,Q,QA Report,35,https://github.com/code-423n4/2022-04-backed-findings/issues/35,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,G,Gas Optimizations,36,https://github.com/code-423n4/2022-04-backed-findings/issues/36,backed,2022/04,bug;invalid;G (Gas Optimization);sponsor disputed
106,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,currentLoanOwner can manipulate loanInfo when any lenders try to buyout,88,https://github.com/code-423n4/2022-04-backed-findings/issues/88,backed,2022/04,bug;help wanted;3 (High Risk);resolved;sponsor confirmed
106,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,"When an attacker lends to a loan, the attacker can trigger DoS that any lenders can not buyout it",89,https://github.com/code-423n4/2022-04-backed-findings/issues/89,backed,2022/04,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
106,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,Borrower can repay indefinitely,90,https://github.com/code-423n4/2022-04-backed-findings/issues/90,backed,2022/04,invalid;disagree with severity;sponsor acknowledged
106,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,91,https://github.com/code-423n4/2022-04-backed-findings/issues/91,backed,2022/04,bug;QA (Quality Assurance);resolved;sponsor confirmed
106,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,92,https://github.com/code-423n4/2022-04-backed-findings/issues/92,backed,2022/04,bug;G (Gas Optimization);resolved;sponsor confirmed
106,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,Q,QA Report,121,https://github.com/code-423n4/2022-04-backed-findings/issues/121,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,2,LendTicket balanceOf Underflow,15,https://github.com/code-423n4/2022-04-backed-findings/issues/15,backed,2022/04,invalid;sponsor disputed
106,renniepak,0xeEF05b25dF83A481D22778a2d28CaFAD38d0fA59,Q,QA Report,12,https://github.com/code-423n4/2022-04-backed-findings/issues/12,backed,2022/04,bug;invalid;QA (Quality Assurance);sponsor disputed
106,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,123,https://github.com/code-423n4/2022-04-backed-findings/issues/123,backed,2022/04,bug;G (Gas Optimization);sponsor acknowledged
106,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,Q,QA Report,125,https://github.com/code-423n4/2022-04-backed-findings/issues/125,backed,2022/04,bug;invalid;QA (Quality Assurance);sponsor disputed
106,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,31,https://github.com/code-423n4/2022-04-backed-findings/issues/31,backed,2022/04,bug;help wanted;QA (Quality Assurance);sponsor disputed
106,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,32,https://github.com/code-423n4/2022-04-backed-findings/issues/32,backed,2022/04,bug;G (Gas Optimization);resolved;sponsor confirmed
106,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2, Tokens with fee on transfer are not supported,33,https://github.com/code-423n4/2022-04-backed-findings/issues/33,backed,2022/04,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
106,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Div by 0,34,https://github.com/code-423n4/2022-04-backed-findings/issues/34,backed,2022/04,invalid;sponsor disputed
106,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Facilitator fee is higher than it should be if loan asset has fees on transfer,41,https://github.com/code-423n4/2022-04-backed-findings/issues/41,backed,2022/04,bug;duplicate;2 (Med Risk)
106,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,Allowing the lender to finalize a loan with an arbitrarily high amount can cause the borrower to default,42,https://github.com/code-423n4/2022-04-backed-findings/issues/42,backed,2022/04,bug;duplicate;3 (High Risk)
106,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,43,https://github.com/code-423n4/2022-04-backed-findings/issues/43,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Gas Optimizations,79,https://github.com/code-423n4/2022-04-backed-findings/issues/79,backed,2022/04,bug;G (Gas Optimization);sponsor acknowledged
106,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,2,No check on loanId while lending,38,https://github.com/code-423n4/2022-04-backed-findings/issues/38,backed,2022/04,documentation;invalid;sponsor disputed
106,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,2,Multiple lending can be done with same loan id,39,https://github.com/code-423n4/2022-04-backed-findings/issues/39,backed,2022/04,documentation;invalid;sponsor disputed
106,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,Q,QA Report,49,https://github.com/code-423n4/2022-04-backed-findings/issues/49,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,securerodd,0x18564BE77AEd882651D2c0c791477BDe4a0F8C3d,Q,QA Report,18,https://github.com/code-423n4/2022-04-backed-findings/issues/18,backed,2022/04,bug;QA (Quality Assurance);sponsor disputed
106,securerodd,0x18564BE77AEd882651D2c0c791477BDe4a0F8C3d,G,Gas Optimizations,47,https://github.com/code-423n4/2022-04-backed-findings/issues/47,backed,2022/04,bug;G (Gas Optimization);resolved;sponsor confirmed
106,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,Q,QA Report,52,https://github.com/code-423n4/2022-04-backed-findings/issues/52,backed,2022/04,bug;QA (Quality Assurance);resolved;sponsor acknowledged;sponsor confirmed
106,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,G,Gas Optimizations,62,https://github.com/code-423n4/2022-04-backed-findings/issues/62,backed,2022/04,bug;G (Gas Optimization);sponsor acknowledged
106,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,Q,QA Report,63,https://github.com/code-423n4/2022-04-backed-findings/issues/63,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged;sponsor disputed
106,t11s,0x7eD52863829AB99354F3a0503A622e82AcD5F7d3,G,Gas Optimizations,22,https://github.com/code-423n4/2022-04-backed-findings/issues/22,backed,2022/04,bug;G (Gas Optimization);resolved;sponsor confirmed
106,t11s,0x7eD52863829AB99354F3a0503A622e82AcD5F7d3,3,Bad Incentives For Lenders Who Buy Out Other Lenders,23,https://github.com/code-423n4/2022-04-backed-findings/issues/23,backed,2022/04,bug;duplicate;3 (High Risk);sponsor disputed
106,t11s,0x7eD52863829AB99354F3a0503A622e82AcD5F7d3,2,0x7eD52863829AB99354F3a0503A622e82AcD5F7d3,46,https://github.com/code-423n4/2022-04-backed-findings/issues/46,backed,2022/04,bug;disagree with severity;QA (Quality Assurance);resolved;sponsor confirmed
106,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,3,Malicious NFT (ERC721) can be set at createLoan function at NFTLoanFacilitator.sol,55,https://github.com/code-423n4/2022-04-backed-findings/issues/55,backed,2022/04,bug;disagree with severity;QA (Quality Assurance);sponsor acknowledged
106,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,3,Attacker groups can collude together by offering better terms so that the NFT looks to be valuable,56,https://github.com/code-423n4/2022-04-backed-findings/issues/56,backed,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor acknowledged
106,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,G,Gas Optimizations,58,https://github.com/code-423n4/2022-04-backed-findings/issues/58,backed,2022/04,bug;G (Gas Optimization);sponsor acknowledged
106,teryanarmen,0x9e255e1544E5D9B5C7766076890B059a27CAFCC1,Q,QA Report,107,https://github.com/code-423n4/2022-04-backed-findings/issues/107,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,teryanarmen,0x9e255e1544E5D9B5C7766076890B059a27CAFCC1,2,Malicious owner can steal some funds from borrower,111,https://github.com/code-423n4/2022-04-backed-findings/issues/111,backed,2022/04,bug;duplicate;2 (Med Risk);disagree with severity;sponsor acknowledged
106,teryanarmen,0x9e255e1544E5D9B5C7766076890B059a27CAFCC1,2,Owner can break buyout functionality,113,https://github.com/code-423n4/2022-04-backed-findings/issues/113,backed,2022/04,duplicate;invalid
106,teryanarmen,0x9e255e1544E5D9B5C7766076890B059a27CAFCC1,2,Protocol fees can be locked in the contract by owner.,114,https://github.com/code-423n4/2022-04-backed-findings/issues/114,backed,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor acknowledged
106,tintin,0xAA371e26742290063d92F0Bd7197aC2D8d3aC4f1,3,"Malicious users can frontrun borrowers trying to repay loans, causing DoS and possibly a loan default",124,https://github.com/code-423n4/2022-04-backed-findings/issues/124,backed,2022/04,bug;duplicate;3 (High Risk);disagree with severity;sponsor acknowledged
106,tintin,0xAA371e26742290063d92F0Bd7197aC2D8d3aC4f1,2,"A borrower can lend to themselves, receiving a borrowTicket and lendTicket for the same loanId",129,https://github.com/code-423n4/2022-04-backed-findings/issues/129,backed,2022/04,invalid;disagree with severity;sponsor acknowledged
106,tintin,0xAA371e26742290063d92F0Bd7197aC2D8d3aC4f1,Q,QA Report,44,https://github.com/code-423n4/2022-04-backed-findings/issues/44,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,tintin,0xAA371e26742290063d92F0Bd7197aC2D8d3aC4f1,2,NFTLoanFacilitator lend() function vulnerable to re-entrancy,45,https://github.com/code-423n4/2022-04-backed-findings/issues/45,backed,2022/04,invalid;disagree with severity;sponsor acknowledged
106,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,128,https://github.com/code-423n4/2022-04-backed-findings/issues/128,backed,2022/04,bug;G (Gas Optimization);sponsor acknowledged
106,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,Q,QA Report,57,https://github.com/code-423n4/2022-04-backed-findings/issues/57,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`requiredImprovementRate` can not work as expected when `previousInterestRate` less than 10 due to precision loss,80,https://github.com/code-423n4/2022-04-backed-findings/issues/80,backed,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed
106,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,"`mintBorrowTicketTo` can be a contract with no `onERC721Received` method, which may cause the BorrowTicket NFT to be frozen and put users' funds at risk",81,https://github.com/code-423n4/2022-04-backed-findings/issues/81,backed,2022/04,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
106,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Loan can not be repaid when the BorrowTicket's owner is a contract with no `onERC721Received` method,82,https://github.com/code-423n4/2022-04-backed-findings/issues/82,backed,2022/04,bug;invalid;2 (Med Risk);disagree with severity;sponsor acknowledged
106,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,"`sendCollateralTo` is unchecked in `closeLoan()`, which can cause user's collateral NFT to be frozen",83,https://github.com/code-423n4/2022-04-backed-findings/issues/83,backed,2022/04,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
106,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,Q,QA Report,84,https://github.com/code-423n4/2022-04-backed-findings/issues/84,backed,2022/04,bug;QA (Quality Assurance);sponsor disputed
106,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Gas Optimizations,86,https://github.com/code-423n4/2022-04-backed-findings/issues/86,backed,2022/04,bug;invalid;G (Gas Optimization);sponsor disputed
106,yash90,0xD0d82c095d184e6E2c8B72689c9171DE59FFd28d,3,Borrower can repay and close the loan even after the loan duration is over,37,https://github.com/code-423n4/2022-04-backed-findings/issues/37,backed,2022/04,invalid;disagree with severity;sponsor acknowledged
106,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,Q,QA Report,93,https://github.com/code-423n4/2022-04-backed-findings/issues/93,backed,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
106,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,G,Gas Optimizations,94,https://github.com/code-423n4/2022-04-backed-findings/issues/94,backed,2022/04,bug;G (Gas Optimization);sponsor acknowledged
110,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,127,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/127,badger citadel,2022/04,bug;G (Gas Optimization)
110,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,Q,QA Report,128,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/128,badger citadel,2022/04,bug;QA (Quality Assurance)
110,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,centralization risk,129,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/129,badger citadel,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
110,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,117,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/117,badger citadel,2022/04,bug;G (Gas Optimization)
110,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,118,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/118,badger citadel,2022/04,bug;QA (Quality Assurance)
110,0xAsm0d3us,0x7d47b0719f67915761B1D47339813b9d27082205,G,Gas Optimizations,11,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/11,badger citadel,2022/04,bug;G (Gas Optimization)
110,0xBug,0x2c71B7615Db471630fc4DBDDBc20223D9C526509,3,Incorrect function interface IVesting::setupVesting() in StakedCitadel::_withdraw(),39,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/39,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,0xBug,0x2c71B7615Db471630fc4DBDDBc20223D9C526509,2,Funding.sol::getAmountOut() returns 0 when funding.discount = 0,40,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/40,badger citadel,2022/04,bug;duplicate;2 (Med Risk);sponsor confirmed
110,0xBug,0x2c71B7615Db471630fc4DBDDBc20223D9C526509,G,Gas Optimizations,50,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/50,badger citadel,2022/04,bug;G (Gas Optimization)
110,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Linear vesting logic is incorrect for subsequent withdrawals,186,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/186,badger citadel,2022/04,bug;duplicate;2 (Med Risk);sponsor confirmed
110,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Reliance on ERC20Upgradable.decimals() will always return 18 despite actual token decimals,202,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/202,badger citadel,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
110,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,Q,QA Report,207,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/207,badger citadel,2022/04,bug;QA (Quality Assurance)
110,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,G,Gas Optimizations,209,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/209,badger citadel,2022/04,bug;G (Gas Optimization)
110,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,3,Early Depositor can steal funds from subsequent depositors,87,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/87,badger citadel,2022/04,bug;duplicate;3 (High Risk);disagree with severity;sponsor confirmed
110,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Funding contract fails without discount,88,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/88,badger citadel,2022/04,bug;duplicate;2 (Med Risk);sponsor confirmed
110,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,3,Vesting contract function does not comply with interface causing all withdrawals to fail,89,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/89,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,G,Gas Optimizations,85,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/85,badger citadel,2022/04,bug;G (Gas Optimization)
110,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,Q,QA Report,86,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/86,badger citadel,2022/04,bug;QA (Quality Assurance)
110,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,91,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/91,badger citadel,2022/04,bug;G (Gas Optimization)
110,AmitN,0xE629013195BF847de6333929AF0833aD5F2855D9,2,no sanity checks on minDiscount,185,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/185,badger citadel,2022/04,bug;QA (Quality Assurance);sponsor confirmed
110,AmitN,0xE629013195BF847de6333929AF0833aD5F2855D9,3,users lose money in withdraw,194,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/194,badger citadel,2022/04,bug;duplicate;QA (Quality Assurance)
110,AmitN,0xE629013195BF847de6333929AF0833aD5F2855D9,3,earn can be called many times,198,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/198,badger citadel,2022/04,bug;invalid;3 (High Risk);sponsor disputed
110,AmitN,0xE629013195BF847de6333929AF0833aD5F2855D9,3,the governance can mint citadel tokens for themselves,208,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/208,badger citadel,2022/04,bug;invalid;3 (High Risk);sponsor disputed
110,bae11,0x7693c3545667309F112EB2d1A0d7BDfCFc536411,G,Gas Optimizations,29,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/29,badger citadel,2022/04,bug;G (Gas Optimization)
110,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,G,Gas Optimizations,121,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/121,badger citadel,2022/04,bug;G (Gas Optimization)
110,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,Q,QA Report,122,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/122,badger citadel,2022/04,bug;QA (Quality Assurance)
110,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,3,DoS in `StakedCitadel._withdraw()` due to missing `StakedCitadelVester.setupVesting()` function,123,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/123,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,3,Initial `StakedCitadel` deposit with `amount=1 wei` causes very expensive share price leading to precision errors and loss of funds,124,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/124,badger citadel,2022/04,bug;duplicate;3 (High Risk);disagree with severity;sponsor acknowledged
110,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,Funding: citadelPriceInAsset is only lazily updated,106,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/106,badger citadel,2022/04,bug;invalid;3 (High Risk);sponsor disputed
110,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,KnightingRound: tokenOutPrice is only lazily updated,108,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/108,badger citadel,2022/04,bug;invalid;3 (High Risk);sponsor disputed
110,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,StakedCitadelVester: Incorrect calculations prevent users from vesting tokens linearly,13,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/13,badger citadel,2022/04,bug;duplicate;2 (Med Risk);sponsor confirmed
110,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,KnightingRound: buy function should add tokenOutMin parameter,2,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/2,badger citadel,2022/04,bug;duplicate;2 (Med Risk);disagree with severity;sponsor confirmed
110,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,StakedCitadel: balance() function incorrect implementation,6,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/6,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,StakedCitadel: wrong setupVesting function name,9,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/9,badger citadel,2022/04,bug;3 (High Risk);sponsor confirmed
110,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,164,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/164,badger citadel,2022/04,bug;QA (Quality Assurance)
110,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,2,Function name doesn't match the interface,165,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/165,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor acknowledged
110,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,166,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/166,badger citadel,2022/04,bug;G (Gas Optimization)
110,Cityscape,0x46686E5420B34d5950d37855291d970fBa5527b6,G,Gas Optimizations,196,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/196,badger citadel,2022/04,bug;G (Gas Optimization)
110,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`KnightingRound` needs to trust governance to receive purchased tokens,61,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/61,badger citadel,2022/04,bug;invalid;2 (Med Risk);disagree with severity;sponsor acknowledged
110,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`KnightingRound`: Users can lose funds when token price is changed,62,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/62,badger citadel,2022/04,bug;duplicate;2 (Med Risk);disagree with severity;sponsor confirmed
110,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`StakedCitadel`: more shares might be burned,63,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/63,badger citadel,2022/04,bug;QA (Quality Assurance);sponsor disputed
110,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Can steal `StakedCitadel` deposits due to bad initial `shares` calculation,64,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/64,badger citadel,2022/04,bug;duplicate;3 (High Risk);disagree with severity;sponsor acknowledged
110,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Vesting is always reset,65,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/65,badger citadel,2022/04,bug;duplicate;2 (Med Risk);sponsor confirmed
110,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Bypass vesting duration on active vests,113,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/113,badger citadel,2022/04,bug;duplicate;QA (Quality Assurance);sponsor confirmed
110,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,114,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/114,badger citadel,2022/04,bug;QA (Quality Assurance)
110,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,115,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/115,badger citadel,2022/04,bug;G (Gas Optimization)
110,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Owner can takeover funds meant for distribution,116,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/116,badger citadel,2022/04,bug;invalid;3 (High Risk);sponsor disputed
110,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Sale parameters can be changed even after sale has started,140,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/140,badger citadel,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance)
110,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,User funds stuck - buy works even after sale ends,142,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/142,badger citadel,2022/04,bug;invalid;3 (High Risk);sponsor disputed
110,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,2,Economic calculation may not be precise enough,201,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/201,badger citadel,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
110,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,loss of funds if there is no discount,135,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/135,badger citadel,2022/04,bug;duplicate;2 (Med Risk);disagree with severity;sponsor confirmed
110,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,cannot set asset cap to the current cumulative funded amount,146,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/146,badger citadel,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor disputed
110,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,minDiscound can be greater than maxDiscount,147,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/147,badger citadel,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor confirmed
110,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,the earning amount can bypass toEarnBps,150,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/150,badger citadel,2022/04,bug;QA (Quality Assurance);sponsor disputed
110,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,withdrawal amount might be wrong,167,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/167,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,3,first depositor in StakedCitadel can drain other depositors,171,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/171,badger citadel,2022/04,bug;duplicate;3 (High Risk);disagree with severity
110,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,admin can rug,205,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/205,badger citadel,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
110,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,162,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/162,badger citadel,2022/04,bug;G (Gas Optimization)
110,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,170,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/170,badger citadel,2022/04,bug;QA (Quality Assurance)
110,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Governor Infinitely Extend To Vesting Period,92,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/92,badger citadel,2022/04,bug;invalid;2 (Med Risk);sponsor acknowledged
110,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Re-entrancy Guard Upgradeable Contract Is Not Initialized,95,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/95,badger citadel,2022/04,bug;duplicate;disagree with severity;G (Gas Optimization)
110,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,Q,QA Report,78,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/78,badger citadel,2022/04,bug;QA (Quality Assurance)
110,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,G,Gas Optimizations,80,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/80,badger citadel,2022/04,bug;G (Gas Optimization)
110,dipp,0x675454Ae78d25632fC26763Fa9CB72a99Cb0A36e,Q,QA Report,191,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/191,badger citadel,2022/04,bug;QA (Quality Assurance)
110,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,68,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/68,badger citadel,2022/04,bug;G (Gas Optimization)
110,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,90,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/90,badger citadel,2022/04,bug;QA (Quality Assurance)
110,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,2,Missing check in `setCitadelAssetPriceBounds()`.,175,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/175,badger citadel,2022/04,bug;duplicate;QA (Quality Assurance);sponsor confirmed
110,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,Q,QA Report,177,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/177,badger citadel,2022/04,bug;QA (Quality Assurance)
110,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,G,Gas Optimizations,179,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/179,badger citadel,2022/04,bug;G (Gas Optimization)
110,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,G,Gas Optimizations,20,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/20,badger citadel,2022/04,bug;G (Gas Optimization)
110,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,Q,QA Report,23,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/23,badger citadel,2022/04,bug;QA (Quality Assurance)
110,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,2, possible DoS to setDiscount() from governance,25,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/25,badger citadel,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
110,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,2, Incorrect behaviors when setting inconsistently in setCitadelAssetPriceBounds(),26,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/26,badger citadel,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor confirmed
110,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,Q,QA Report,130,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/130,badger citadel,2022/04,bug;QA (Quality Assurance)
110,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,132,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/132,badger citadel,2022/04,bug;G (Gas Optimization)
110,georgypetrov,0x0ed7C72398379F60CeEC0659E3AD6bFdBAa465a8,2,Incorrect function call,69,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/69,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,georgypetrov,0x0ed7C72398379F60CeEC0659E3AD6bFdBAa465a8,3,Guaranteed citadel profit,71,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/71,badger citadel,2022/04,bug;2 (Med Risk);disagree with severity;sponsor confirmed
110,georgypetrov,0x0ed7C72398379F60CeEC0659E3AD6bFdBAa465a8,2,Dust accumulation in minter,72,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/72,badger citadel,2022/04,bug;disagree with severity;QA (Quality Assurance)
110,gs8nrv,0xF2796FB43fF00b5b3c7575d6D6F17D7eD74bFD5A,3,Staked Citadel function `balance` and `reportHarvest`,174,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/174,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,gs8nrv,0xF2796FB43fF00b5b3c7575d6D6F17D7eD74bFD5A,3,StakedCitadel withdraw when available balance is not sufficient --> rekt some of the capital of the user,183,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/183,badger citadel,2022/04,bug;QA (Quality Assurance);sponsor disputed
110,gs8nrv,0xF2796FB43fF00b5b3c7575d6D6F17D7eD74bFD5A,2,Race between governance and strategist on other token earned,184,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/184,badger citadel,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
110,gs8nrv,0xF2796FB43fF00b5b3c7575d6D6F17D7eD74bFD5A,3,GlobalAccessControl roles admin not set and CONTRACT_GOVERNANCE_ROLE can change admin even if it is not an admin,188,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/188,badger citadel,2022/04,bug;invalid;3 (High Risk);sponsor disputed
110,gs8nrv,0xF2796FB43fF00b5b3c7575d6D6F17D7eD74bFD5A,2,In the citadelMinter there is a missing check on the `mintAndDistribute ()` function,190,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/190,badger citadel,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor confirmed
110,gs8nrv,0xF2796FB43fF00b5b3c7575d6D6F17D7eD74bFD5A,G,Gas Optimizations,193,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/193,badger citadel,2022/04,bug;G (Gas Optimization)
110,gs8nrv,0xF2796FB43fF00b5b3c7575d6D6F17D7eD74bFD5A,2,Removing Provider could lead to no provider at all,195,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/195,badger citadel,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
110,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Wrong `getAmountOut` calculation,151,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/151,badger citadel,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
110,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,New vest reset `unlockBegin` of existing vest without removing vested amount,158,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/158,badger citadel,2022/04,bug;2 (Med Risk);sponsor confirmed
110,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Funding contract calculate `citadelAmount` wrongly,159,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/159,badger citadel,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
110,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,160,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/160,badger citadel,2022/04,bug;G (Gas Optimization)
110,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,161,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/161,badger citadel,2022/04,bug;QA (Quality Assurance)
110,Hawkeye,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,231,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/231,badger citadel,2022/04,bug;QA (Quality Assurance)
110,Hawkeye,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,G,Gas Optimizations,233,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/233,badger citadel,2022/04,bug;G (Gas Optimization)
110,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,Q,QA Report,103,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/103,badger citadel,2022/04,bug;QA (Quality Assurance)
110,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,G,Gas Optimizations,104,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/104,badger citadel,2022/04,bug;G (Gas Optimization)
110,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,2,Incorrect interface for `StakedCitadelVester` causes withdrawals to revert,105,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/105,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,Function claim() in StakedCitadelVester.sol not protected when protocol in pause mode,172,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/172,badger citadel,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor confirmed
110,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,"Use of whenNotPaused, or gacPausable() for functions protected by governance role",187,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/187,badger citadel,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
110,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,Q,QA Report,206,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/206,badger citadel,2022/04,bug;QA (Quality Assurance)
110,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,StakedCitadel withdraw burns extra shares on Strategy liquidity issues,210,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/210,badger citadel,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
110,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,StakedCitadel depositors can be attacked by the first depositor with depressing of vault token denomination,217,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/217,badger citadel,2022/04,bug;3 (High Risk);disagree with severity;sponsor acknowledged
110,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,Funding.getAmountOut returns zero when there is no discount set,219,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/219,badger citadel,2022/04,bug;duplicate;2 (Med Risk);sponsor confirmed
110,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,Funding.citadelPriceInAsset can quickly become stale while its update can be front run,228,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/228,badger citadel,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor acknowledged
110,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,Q,QA Report,235,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/235,badger citadel,2022/04,bug;QA (Quality Assurance)
110,ilan,0xEEBd02ddc406754621ff674c19f048fdF95C6D2B,G,Gas Optimizations,211,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/211,badger citadel,2022/04,bug;G (Gas Optimization)
110,ilan,0xEEBd02ddc406754621ff674c19f048fdF95C6D2B,Q,QA Report,212,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/212,badger citadel,2022/04,bug;QA (Quality Assurance)
110,ilan,0xEEBd02ddc406754621ff674c19f048fdF95C6D2B,2,"Funding pools, stakers, and lockers could lose Citadel tokens they deserve with `mintAndDistribute`",214,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/214,badger citadel,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance)
110,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,`deposit()`ing when there is no discount results in zero xCitadel bought,173,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/173,badger citadel,2022/04,bug;duplicate;2 (Med Risk);sponsor confirmed
110,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Stale price used when `citadelPriceFlag` is cleared,176,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/176,badger citadel,2022/04,bug;2 (Med Risk);sponsor confirmed
110,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,"Code credits fee-on-transfer tokens for amount stated, not amount transferred",178,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/178,badger citadel,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
110,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,180,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/180,badger citadel,2022/04,bug;QA (Quality Assurance)
110,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,181,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/181,badger citadel,2022/04,bug;G (Gas Optimization)
110,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,2,missing check ,33,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/33,badger citadel,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
110,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,3,Missing check for critical function   ,34,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/34,badger citadel,2022/04,bug;invalid;3 (High Risk);disagree with severity;sponsor disputed
110,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,G,Gas Optimizations,35,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/35,badger citadel,2022/04,bug;G (Gas Optimization)
110,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,Q,QA Report,36,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/36,badger citadel,2022/04,bug;duplicate;QA (Quality Assurance)
110,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,2,missing a check ,81,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/81,badger citadel,2022/04,bug;invalid;2 (Med Risk);disagree with severity
110,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,Q,QA Report,82,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/82,badger citadel,2022/04,bug;QA (Quality Assurance)
110,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,There is no way to revoke roles,3,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/3,badger citadel,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
110,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Function can fail due to missing underflow check ,4,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/4,badger citadel,2022/04,bug;invalid;2 (Med Risk);disagree with severity;sponsor disputed
110,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Use of deprecated `safeApprove()` function ,5,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/5,badger citadel,2022/04,bug;invalid;3 (High Risk);disagree with severity;sponsor disputed
110,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Use of deprecated `safeApprove()` function  ,7,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/7,badger citadel,2022/04,bug;invalid;3 (High Risk);disagree with severity;sponsor disputed
110,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,Q,QA Report,223,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/223,badger citadel,2022/04,bug;QA (Quality Assurance)
110,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,G,Gas Optimizations,224,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/224,badger citadel,2022/04,bug;G (Gas Optimization)
110,joshie,0x2f1c5628e931fc75cf097072f61b9dc72d1d827f,G,Gas Optimizations,133,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/133,badger citadel,2022/04,bug;G (Gas Optimization)
110,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Out of Gas can block the MedianOracle,168,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/168,badger citadel,2022/04,bug;disagree with severity;QA (Quality Assurance)
110,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,Q,QA Report,101,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/101,badger citadel,2022/04,bug;QA (Quality Assurance)
110,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,G,Gas Optimizations,102,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/102,badger citadel,2022/04,bug;G (Gas Optimization)
110,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,2,No checks against reentrancy in claimAssetToTreasury(),27,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/27,badger citadel,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
110,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,2,TECH_OPERATIONS_ROLE is not initialized properly,96,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/96,badger citadel,2022/04,bug;invalid;2 (Med Risk);disagree with severity
110,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,3,TREASURY_OPERATIONS_ROLE is not initialized properly,97,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/97,badger citadel,2022/04,bug;invalid;3 (High Risk);sponsor disputed
110,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,227,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/227,badger citadel,2022/04,bug;QA (Quality Assurance)
110,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,229,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/229,badger citadel,2022/04,bug;G (Gas Optimization)
110,kyliek,0xdE624A36bcCd38DB850365b34Bc99ab3b1252415,3,One could get up to 20x more xCTDL tokens when deposit right after earn().,125,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/125,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,kyliek,0xdE624A36bcCd38DB850365b34Bc99ab3b1252415,2,`getPricePerFullShare()` can be much lower than expected,126,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/126,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,kyliek,0xdE624A36bcCd38DB850365b34Bc99ab3b1252415,2,Accounts not on GuestList can deposit any amount in StakedCitadel,131,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/131,badger citadel,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
110,kyliek,0xdE624A36bcCd38DB850365b34Bc99ab3b1252415,Q,QA Report,134,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/134,badger citadel,2022/04,bug;QA (Quality Assurance)
110,m9800,0x367bF4A80DA0Ed955DbeFb228c60fDf20C2f85B2,3, The name of the function to setup a vesting in the interface IVesting.sol doesn’t match with the name of the function to setup a vesting in StakeCitadelVester.sol. ,215,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/215,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,m9800,0x367bF4A80DA0Ed955DbeFb228c60fDf20C2f85B2,3," If the funding discount is set to 0 in Funding.sol, getAmountOut() will return always 0, no matter the amount of asset in.",218,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/218,badger citadel,2022/04,bug;duplicate;2 (Med Risk);disagree with severity;sponsor confirmed
110,m9800,0x367bF4A80DA0Ed955DbeFb228c60fDf20C2f85B2,Q,QA Report,234,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/234,badger citadel,2022/04,bug;QA (Quality Assurance)
110,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,G,Gas Optimizations,111,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/111,badger citadel,2022/04,bug;G (Gas Optimization)
110,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,G,Gas Optimizations,112,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/112,badger citadel,2022/04,bug;duplicate;G (Gas Optimization)
110,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,G,Gas Optimizations,22,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/22,badger citadel,2022/04,bug;duplicate;G (Gas Optimization)
110,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,Q,QA Report,24,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/24,badger citadel,2022/04,bug;QA (Quality Assurance)
110,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,Incorrect calculation getAmountOut without discount applied ,28,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/28,badger citadel,2022/04,bug;duplicate;2 (Med Risk);sponsor confirmed
110,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,setStrategy() Can Happen Without Timelock,119,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/119,badger citadel,2022/04,bug;invalid;3 (High Risk);sponsor disputed
110,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,Is Possible Attacker Block setStrategy() When Already Existing Strategy,120,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/120,badger citadel,2022/04,bug;invalid;3 (High Risk);sponsor disputed
110,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,3,Zero amount out after deposit in `Funding` when `discount = 0`,46,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/46,badger citadel,2022/04,bug;duplicate;2 (Med Risk);disagree with severity;sponsor confirmed
110,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,3,Unable to claim vesting linearly when vesting 2 times,47,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/47,badger citadel,2022/04,bug;duplicate;2 (Med Risk);sponsor confirmed
110,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,2,Small amount of `CTDL` is locked in `CitadelMinter`,48,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/48,badger citadel,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor confirmed
110,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,3,`balance()` function in `StakedCitadel` is wrong,60,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/60,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,3,`balance()` function in `StakedCitadel` is wrong,83,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/83,badger citadel,2022/04,bug;invalid;3 (High Risk);sponsor confirmed
110,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,Q,QA Report,84,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/84,badger citadel,2022/04,bug;QA (Quality Assurance)
110,nahnah,0xc950cAeC29f157EB49f37b8c57c737E79037B655,G,Gas Optimizations,226,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/226,badger citadel,2022/04,bug;G (Gas Optimization)
110,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,G,Gas Optimizations,52,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/52,badger citadel,2022/04,bug;G (Gas Optimization)
110,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,Q,QA Report,53,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/53,badger citadel,2022/04,bug;duplicate;QA (Quality Assurance)
110,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,Q,QA Report,54,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/54,badger citadel,2022/04,bug;QA (Quality Assurance)
110,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,If there is no discount then buying citadel in funding will always return 0 citadel,216,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/216,badger citadel,2022/04,bug;duplicate;2 (Med Risk);sponsor confirmed
110,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Sweep function made for extra tokens can be used,222,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/222,badger citadel,2022/04,bug;invalid;2 (Med Risk);disagree with severity
110,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,3,Users wont be able to withdraw staked tokens since vesting function is called differently in interface and implementation,225,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/225,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor acknowledged
110,peritoflores,0xca14410735e29650dc240245d96bb376c51477c1,Q,QA Report,213,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/213,badger citadel,2022/04,bug;QA (Quality Assurance)
110,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,2,`StakedCitadel` should implement EIP-4626,100,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/100,badger citadel,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
110,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,Q,QA Report,99,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/99,badger citadel,2022/04,bug;QA (Quality Assurance)
110,p_crypt0,0x1928785E5582D2866b293c96Ca8BF0f7a19a1178,Q,QA Report,148,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/148,badger citadel,2022/04,bug;duplicate;QA (Quality Assurance)
110,p_crypt0,0x1928785e5582d2866b293c96ca8bf0f7a19a1178,Q,QA Report,8,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/8,badger citadel,2022/04,bug;QA (Quality Assurance);sponsor confirmed
110,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,IVesting(vesting).setupVesting is not implemented in StakedCitadelVester.sol.,189,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/189,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,`_mintSharesFor` doesn’t check whether the `pool` is zero.,192,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/192,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor disputed
110,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`StakedCitadelVester/claimableBalance()` has problems when users keep vesting.,197,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/197,badger citadel,2022/04,bug;duplicate;2 (Med Risk);sponsor confirmed
110,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,199,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/199,badger citadel,2022/04,bug;QA (Quality Assurance)
110,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,200,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/200,badger citadel,2022/04,bug;G (Gas Optimization)
110,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,3,Mismatch between Interface and Implementation Leading to Loss of Funds,37,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/37,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,2,KnightingRound broken accounting of buy function,67,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/67,badger citadel,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor confirmed
110,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,2,KnightingRound tokenOutPrice changes,73,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/73,badger citadel,2022/04,bug;2 (Med Risk);sponsor confirmed
110,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,Q,QA Report,98,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/98,badger citadel,2022/04,bug;QA (Quality Assurance)
110,remora,0x1434b95234155DA830c20d02548aF22f14A38FbE,3,"In `Funding.sol`#`getAmountOut()`, `citadelAmount_` doesnot account for case of discount",107,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/107,badger citadel,2022/04,bug;duplicate;2 (Med Risk)
110,remora,0x1434b95234155DA830c20d02548aF22f14A38FbE,Q,QA Report,138,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/138,badger citadel,2022/04,bug;QA (Quality Assurance)
110,remora,0x1434b95234155DA830c20d02548aF22f14A38FbE,2,Call to `deposit()` before setting the value of `citadelPriceInAsset` can lead to deposit of zero xCTDL,70,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/70,badger citadel,2022/04,bug;invalid;2 (Med Risk);sponsor acknowledged
110,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,152,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/152,badger citadel,2022/04,bug;G (Gas Optimization)
110,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,Q,QA Report,153,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/153,badger citadel,2022/04,bug;QA (Quality Assurance)
110,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,15,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/15,badger citadel,2022/04,bug;QA (Quality Assurance)
110,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,16,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/16,badger citadel,2022/04,bug;G (Gas Optimization)
110,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Funding.deposit() doesn't work if there is no discount set,149,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/149,badger citadel,2022/04,bug;2 (Med Risk);sponsor confirmed
110,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,157,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/157,badger citadel,2022/04,bug;QA (Quality Assurance)
110,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,StakedCitadel doesn't use correct balance for internal accounting,74,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/74,badger citadel,2022/04,bug;3 (High Risk);sponsor confirmed
110,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Gas Optimizations,136,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/136,badger citadel,2022/04,bug;G (Gas Optimization)
110,scaraven,0xac3A826c8ea76Ab6FCE817d3e54da0acb5fd30d5,Q,QA Report,93,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/93,badger citadel,2022/04,bug;QA (Quality Assurance)
110,scaraven,0xac3A826c8ea76Ab6FCE817d3e54da0acb5fd30d5,3,Incorrect Function Call to Vesting Contract,94,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/94,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,securerodd,0x18564BE77AEd882651D2c0c791477BDe4a0F8C3d,2,reportHarvest Function Lacks Protective Constraints,38,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/38,badger citadel,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
110,securerodd,0x18564BE77AEd882651D2c0c791477BDe4a0F8C3d,Q,QA Report,77,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/77,badger citadel,2022/04,bug;QA (Quality Assurance)
110,securerodd,0x18564BE77AEd882651D2c0c791477BDe4a0F8C3d,G,Gas Optimizations,79,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/79,badger citadel,2022/04,bug;G (Gas Optimization)
110,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,3,`StakedCitadel.getAmountOut()` outputs wrong amount when funding discount is zero,55,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/55,badger citadel,2022/04,bug;duplicate;2 (Med Risk);sponsor confirmed
110,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,3,Incorrect implementation of `StakedCitadel.balance()`,56,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/56,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,Q,QA Report,57,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/57,badger citadel,2022/04,bug;QA (Quality Assurance)
110,simon135,0x3cCB94045AFff72173d66B813Eb42177325C4B13,G,Gas Optimizations,204,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/204,badger citadel,2022/04,bug;G (Gas Optimization)
110,slywaters,0xcdc82d78cb49d4baa06d0988afdd27261b0667b2,G,Gas Optimizations,1,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/1,badger citadel,2022/04,bug;G (Gas Optimization)
110,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,Q,QA Report,155,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/155,badger citadel,2022/04,bug;QA (Quality Assurance)
110,SolidityScan,0xB5E576E33a7A06cB96F08B1ef2e712b9Cdb22D58,G,Gas Optimizations,156,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/156,badger citadel,2022/04,bug;G (Gas Optimization)
110,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,2,Deleting the structure will fail in MedianOracle.sol,137,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/137,badger citadel,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor confirmed
110,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,2,Users with assets will have more disadvantage during market fluctuations ,139,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/139,badger citadel,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
110,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,2,Citadel price may malfunction due to number of Oracle provider setting,141,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/141,badger citadel,2022/04,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
110,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,3,DoS at CitadelMinter.sol,143,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/143,badger citadel,2022/04,bug;invalid;3 (High Risk);disagree with severity;sponsor disputed
110,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,Q,QA Report,144,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/144,badger citadel,2022/04,bug;QA (Quality Assurance)
110,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,G,Gas Optimizations,145,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/145,badger citadel,2022/04,bug;G (Gas Optimization)
110,tchkvsky,0x4f472C2ddbd12CAe65609782c7155e608FEdFE97,Q,QA Report,220,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/220,badger citadel,2022/04,bug;QA (Quality Assurance)
110,tchkvsky,0x4f472C2ddbd12CAe65609782c7155e608FEdFE97,G,Gas Optimizations,232,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/232,badger citadel,2022/04,bug;G (Gas Optimization)
110,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,G,Gas Optimizations,109,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/109,badger citadel,2022/04,bug;G (Gas Optimization)
110,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,Q,QA Report,110,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/110,badger citadel,2022/04,bug;QA (Quality Assurance)
110,teryanarmen,0x9e255e1544E5D9B5C7766076890B059a27CAFCC1,Q,QA Report,154,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/154,badger citadel,2022/04,bug;invalid;QA (Quality Assurance)
110,teryanarmen,0x9e255e1544E5D9B5C7766076890B059a27CAFCC1,Q,QA Report,163,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/163,badger citadel,2022/04,bug;QA (Quality Assurance)
110,teryanarmen,0x9e255e1544E5D9B5C7766076890B059a27CAFCC1,G,Gas Optimizations,169,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/169,badger citadel,2022/04,bug;G (Gas Optimization)
110,teryanarmen,0x9e255e1544E5D9B5C7766076890B059a27CAFCC1,2,Strategist can make atomic changes that benefit him/her,182,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/182,badger citadel,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance)
110,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Gas Optimizations,30,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/30,badger citadel,2022/04,bug;G (Gas Optimization)
110,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,Q,QA Report,31,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/31,badger citadel,2022/04,bug;QA (Quality Assurance)
110,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,230,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/230,badger citadel,2022/04,bug;G (Gas Optimization)
110,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,3,wrong function name ,14,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/14,badger citadel,2022/04,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
110,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,2,User can’t withdraw their token in their second vesting,17,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/17,badger citadel,2022/04,bug;duplicate;2 (Med Risk);sponsor confirmed
110,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,3,Wrong formula (funding.sol),18,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/18,badger citadel,2022/04,bug;duplicate;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
110,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,3,Wrong getAmountOut formula  (KnightingRound.sol),19,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/19,badger citadel,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor acknowledged
110,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,3,Wrong balance() function (StakedCitadel.sol),51,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/51,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,2,Token get locked in contract because of round-off error (Funding.sol),66,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/66,badger citadel,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor acknowledged
110,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,G,Gas Optimizations,75,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/75,badger citadel,2022/04,bug;G (Gas Optimization)
110,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,Q,QA Report,76,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/76,badger citadel,2022/04,bug;QA (Quality Assurance)
110,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,3,Upgraded Q -> H from 41 [1655143123011],237,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/237,badger citadel,2022/04,bug;duplicate;3 (High Risk);upgraded by judge
110,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,Q,QA Report,41,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/41,badger citadel,2022/04,bug;QA (Quality Assurance)
110,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,2,First depositor can break StakedCitadel xCTDL share into fraction and zero,42,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/42,badger citadel,2022/04,bug;duplicate;3 (High Risk);disagree with severity;sponsor acknowledged
110,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,3,Missing xCitadel total balance count from IStrategy allow arbitrage opportunity to multiply xCTDL deposit,43,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/43,badger citadel,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
110,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,3,`balance()` in StakedCitadel calculates balance incorrectly,12,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/12,badger citadel,2022/04,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
110,wuwe1,0xA8022F2b43e4823B8286601329504001f8A78652,2,vest should be setupVesting in StakedCitadelVester,21,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/21,badger citadel,2022/04,bug;duplicate;3 (High Risk);resolved;sponsor confirmed
110,Yiko,0x5966e906080c39D4d57d2410B6Ff3803561aA3B0,Q,QA Report,10,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/10,badger citadel,2022/04,bug;QA (Quality Assurance)
110,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,Q,QA Report,58,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/58,badger citadel,2022/04,bug;QA (Quality Assurance)
110,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,G,Gas Optimizations,59,https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/59,badger citadel,2022/04,bug;G (Gas Optimization)
108,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,Q,QA Report,35,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/35,dualityfocus,2022/04,bug;QA (Quality Assurance)
108,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Front running attack in approve.,6,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/6,dualityfocus,2022/04,bug;duplicate;QA (Quality Assurance);resolved;sponsor confirmed
108,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Unauthorized ERC20 changes,7,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/7,dualityfocus,2022/04,bug;duplicate;2 (Med Risk)
108,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,8,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/8,dualityfocus,2022/04,bug;QA (Quality Assurance)
108,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,Q,QA Report,32,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/32,dualityfocus,2022/04,bug;QA (Quality Assurance)
108,bugwriter001,0x71e6B570A4CE5ab1AcE7BDF3Bb1E642955cbdacB,2,Re-entry possibility,20,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/20,dualityfocus,2022/04,bug;invalid;disagree with severity
108,bugwriter001,0x71e6B570A4CE5ab1AcE7BDF3Bb1E642955cbdacB,2,"when using safe transfer token, it is better to check the address to must be contract",23,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/23,dualityfocus,2022/04,bug;disagree with severity;QA (Quality Assurance)
108,bugwriter001,0x71e6B570A4CE5ab1AcE7BDF3Bb1E642955cbdacB,2,redeemfresh reentry,24,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/24,dualityfocus,2022/04,bug;invalid;disagree with severity
108,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,2,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/2,dualityfocus,2022/04,bug;duplicate;QA (Quality Assurance)
108,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Must approve 0 first,21,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/21,dualityfocus,2022/04,bug;duplicate;2 (Med Risk);sponsor confirmed
108,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,No slippage control on _swap of UniV3LpVault,22,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/22,dualityfocus,2022/04,bug;QA (Quality Assurance)
108,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,18,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/18,dualityfocus,2022/04,bug;invalid;G (Gas Optimization)
108,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,19,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/19,dualityfocus,2022/04,bug;QA (Quality Assurance)
108,Chom,0xf01Dd015Bc442d872275A79b9caE84A6ff9B2A27,2,addNFTCollateral may be failed if there are too many Uniswap V3 LP Vault,27,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/27,dualityfocus,2022/04,bug;invalid;sponsor disputed
108,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,Undercollateralized loans possible,12,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/12,dualityfocus,2022/04,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
108,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Transferring admins does not work for CToken,13,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/13,dualityfocus,2022/04,bug;duplicate;2 (Med Risk);disagree with severity
108,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Wrong authorization for `CToken._setNameAndSymbol`,14,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/14,dualityfocus,2022/04,bug;duplicate;2 (Med Risk)
108,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,No ERC20 safe* versions called,15,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/15,dualityfocus,2022/04,bug;duplicate;QA (Quality Assurance)
108,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,Q,QA Report,16,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/16,dualityfocus,2022/04,bug;QA (Quality Assurance)
108,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,3,ERC777 & Gnosis Chain Bridge Tokens Re-entrancy Vulnerability,17,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/17,dualityfocus,2022/04,bug;invalid;disagree with severity
108,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,33,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/33,dualityfocus,2022/04,bug;QA (Quality Assurance)
108,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,43,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/43,dualityfocus,2022/04,bug;QA (Quality Assurance)
108,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Consistently check account balance before and after transfers for Fee-On-Transfer discrepancies,45,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/45,dualityfocus,2022/04,bug;invalid;sponsor disputed
108,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,UniV3LpVault swaps can be subject to sandwich attacks as total output can't be user controlled,42,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/42,dualityfocus,2022/04,bug;disagree with severity;QA (Quality Assurance)
108,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,FlashLoan can miss borrowed funds repayment,44,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/44,dualityfocus,2022/04,bug;invalid;sponsor disputed
108,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,UniV3LpVault flash loans can become unavailable if a user didn't utilized the full limit,46,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/46,dualityfocus,2022/04,bug;duplicate;2 (Med Risk);sponsor confirmed
108,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,36,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/36,dualityfocus,2022/04,bug;QA (Quality Assurance)
108,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Unchecked low level `call()`s,37,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/37,dualityfocus,2022/04,bug;invalid;sponsor disputed
108,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Forcing `IERC20` when calling `transfer()`/`transferFrom()` reverts when used with some ERC20 tokens,38,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/38,dualityfocus,2022/04,bug;duplicate;QA (Quality Assurance)
108,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Not calling `approve(0)` before setting a new approval causes the call to revert when used with Tether (USDT),39,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/39,dualityfocus,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed
108,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Return value of `transfer()`/`transferFrom()` is not checked,40,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/40,dualityfocus,2022/04,bug;duplicate;QA (Quality Assurance);sponsor confirmed
108,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,Q,QA Report,34,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/34,dualityfocus,2022/04,bug;QA (Quality Assurance)
108,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`Comptroller._setUniV3LpVault` will always cause in-use uniswapV3 positions to become stuck in `UniV3LpVault`,28,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/28,dualityfocus,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed
108,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,Dysfunctional `CToken._acceptAdmin` due to lack of function to assign `pendingAdmin`,29,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/29,dualityfocus,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed
108,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,30,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/30,dualityfocus,2022/04,bug;QA (Quality Assurance)
108,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,Arbitrary contract call within `UniV3LpVault._swap` with controllable `swapPath`,31,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/31,dualityfocus,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed
108,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,2,ERC20 Return Values Not Check,41,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/41,dualityfocus,2022/04,bug;QA (Quality Assurance)
108,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Missing Slippage Protection,3,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/3,dualityfocus,2022/04,bug;duplicate;QA (Quality Assurance)
108,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,4,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/4,dualityfocus,2022/04,bug;QA (Quality Assurance)
108,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,5,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/5,dualityfocus,2022/04,bug;invalid;G (Gas Optimization)
108,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,1,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/1,dualityfocus,2022/04,bug;invalid;G (Gas Optimization)
108,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,Q,QA Report,10,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/10,dualityfocus,2022/04,bug;duplicate;QA (Quality Assurance)
108,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,Q,QA Report,11,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/11,dualityfocus,2022/04,bug;QA (Quality Assurance)
108,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,9,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/9,dualityfocus,2022/04,bug;invalid;G (Gas Optimization)
108,Sleepy,0xa0B9905166C2773941CDBd287B3f1b6Ab76f96B1,2,Improper Access Control,25,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/25,dualityfocus,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed
108,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,Q,QA Report,26,https://github.com/code-423n4/2022-04-dualityfocus-findings/issues/26,dualityfocus,2022/04,bug;QA (Quality Assurance)
107,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,32,https://github.com/code-423n4/2022-04-jpegd-findings/issues/32,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,2,"Minter role can mint infinite/total supply of tokens,if get compromised, Similar cases included",33,https://github.com/code-423n4/2022-04-jpegd-findings/issues/33,jpegd,2022/04,bug;invalid;sponsor disputed
107,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Possible Token lost in Flash Escrow,88,https://github.com/code-423n4/2022-04-jpegd-findings/issues/88,jpegd,2022/04,bug;invalid;sponsor disputed
107,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Wrong lockFor can lost tokens,89,https://github.com/code-423n4/2022-04-jpegd-findings/issues/89,jpegd,2022/04,bug;duplicate;3 (High Risk)
107,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,90,https://github.com/code-423n4/2022-04-jpegd-findings/issues/90,jpegd,2022/04,bug;QA (Quality Assurance);resolved;sponsor confirmed
107,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,91,https://github.com/code-423n4/2022-04-jpegd-findings/issues/91,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Owner of LPFarming.sol can DOS rewards by stopping epoch at any time,103,https://github.com/code-423n4/2022-04-jpegd-findings/issues/103,jpegd,2022/04,bug;duplicate;invalid
107,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,insuraceRepurchaseTimeLimit Missing Setter and validation,105,https://github.com/code-423n4/2022-04-jpegd-findings/issues/105,jpegd,2022/04,bug;invalid;sponsor disputed
107,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Oracle Prices Used Could Be Stale Or Manipulated due to latestAnswer() call,108,https://github.com/code-423n4/2022-04-jpegd-findings/issues/108,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,3,Early Depositor can steal funds from subsequent depositors,208,https://github.com/code-423n4/2022-04-jpegd-findings/issues/208,jpegd,2022/04,bug;duplicate;3 (High Risk)
107,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,Q,QA Report,215,https://github.com/code-423n4/2022-04-jpegd-findings/issues/215,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,G,Gas Optimizations,218,https://github.com/code-423n4/2022-04-jpegd-findings/issues/218,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,G,Gas Optimizations,195,https://github.com/code-423n4/2022-04-jpegd-findings/issues/195,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,Q,QA Report,196,https://github.com/code-423n4/2022-04-jpegd-findings/issues/196,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,2,Usage of deprecated ChainLink API,197,https://github.com/code-423n4/2022-04-jpegd-findings/issues/197,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,2,Uniswap V2 Swap is Sandwichable,198,https://github.com/code-423n4/2022-04-jpegd-findings/issues/198,jpegd,2022/04,bug;invalid
107,0xkatana,0x12B340447509D55E7883a2EcB8C3F59E46F253f7,2,Uniswap V3 Swap is Sandwichable,199,https://github.com/code-423n4/2022-04-jpegd-findings/issues/199,jpegd,2022/04,bug;invalid
107,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,127,https://github.com/code-423n4/2022-04-jpegd-findings/issues/127,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,AuditsAreUS,0x8f6e76F3059DcFAC435bBb7029294eB6ceEcab23,3,`finalizePendingNFTValue()` May Lock an NFT Value Twice Overwriting The Previous Call,101,https://github.com/code-423n4/2022-04-jpegd-findings/issues/101,jpegd,2022/04,bug;duplicate;3 (High Risk)
107,AuditsAreUS,0x8f6e76F3059DcFAC435bBb7029294eB6ceEcab23,2,Division before Multiplication May Result In No Interest Being Accrued,97,https://github.com/code-423n4/2022-04-jpegd-findings/issues/97,jpegd,2022/04,bug;2 (Med Risk)
107,AuditsAreUS,0x8f6e76F3059DcFAC435bBb7029294eB6ceEcab23,2,Insured Liquidations Can Be Closed By Owner Before Repurchase,98,https://github.com/code-423n4/2022-04-jpegd-findings/issues/98,jpegd,2022/04,bug;QA (Quality Assurance)
107,AuditsAreUS,0x8f6e76F3059DcFAC435bBb7029294eB6ceEcab23,2,Reentrancy Issue Due to Lack of Reentrancy Guard on `closePosition()`,99,https://github.com/code-423n4/2022-04-jpegd-findings/issues/99,jpegd,2022/04,bug;invalid;sponsor disputed
107,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,G,Gas Optimizations,111,https://github.com/code-423n4/2022-04-jpegd-findings/issues/111,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,Q,QA Report,112,https://github.com/code-423n4/2022-04-jpegd-findings/issues/112,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Use of Solidity's `transfer()` function might render ETH impossible to withdraw,113,https://github.com/code-423n4/2022-04-jpegd-findings/issues/113,jpegd,2022/04,bug;duplicate;QA (Quality Assurance)
107,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Use `safeTransfer()`/`safeTransferFrom()` consistently instead of `transfer()`/`transferFrom()`,114,https://github.com/code-423n4/2022-04-jpegd-findings/issues/114,jpegd,2022/04,bug;invalid
107,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Use of deprecated Chainlink oracle aggregator function `latestAnswer`,115,https://github.com/code-423n4/2022-04-jpegd-findings/issues/115,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,3,Initial `yVault` deposit with `amount=1 wei` causes very expensive share price leading to precision errors and loss of funds,116,https://github.com/code-423n4/2022-04-jpegd-findings/issues/116,jpegd,2022/04,bug;duplicate;3 (High Risk)
107,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,3,Wrong calculation for yVault price per share if decimals != 18,117,https://github.com/code-423n4/2022-04-jpegd-findings/issues/117,jpegd,2022/04,bug;2 (Med Risk);sponsor disputed
107,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2,Critical updates executed by privileged users should have a timelock.,106,https://github.com/code-423n4/2022-04-jpegd-findings/issues/106,jpegd,2022/04,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
107,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2,Liquidation Limit Rate updates effect the liquidation limit of the current loans as well.,107,https://github.com/code-423n4/2022-04-jpegd-findings/issues/107,jpegd,2022/04,bug;invalid;sponsor disputed
107,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2,Debt interest rate updates effect the interest rate of the existing loans as well.,109,https://github.com/code-423n4/2022-04-jpegd-findings/issues/109,jpegd,2022/04,bug;invalid;sponsor disputed
107,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,G,Gas Optimizations,110,https://github.com/code-423n4/2022-04-jpegd-findings/issues/110,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,Q,QA Report,120,https://github.com/code-423n4/2022-04-jpegd-findings/issues/120,jpegd,2022/04,bug;QA (Quality Assurance);sponsor disputed
107,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"When _lpToken is jpeg, reward calculation is incorrect",1,https://github.com/code-423n4/2022-04-jpegd-findings/issues/1,jpegd,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed
107,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"When _lpToken is duplicated, reward calculation is incorrect",2,https://github.com/code-423n4/2022-04-jpegd-findings/issues/2,jpegd,2022/04,bug;invalid;sponsor disputed
107,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,LPFarming: Unsupported fee-on-transfer tokens,3,https://github.com/code-423n4/2022-04-jpegd-findings/issues/3,jpegd,2022/04,bug;invalid;sponsor disputed
107,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Chainlink pricer is using a deprecated API,4,https://github.com/code-423n4/2022-04-jpegd-findings/issues/4,jpegd,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed
107,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,"FungibleAssetVaultForDAO: The withdraw function calls native payable.transfer, which can be unusable for smart contract calls",53,https://github.com/code-423n4/2022-04-jpegd-findings/issues/53,jpegd,2022/04,bug;QA (Quality Assurance)
107,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,No slippage control on harvest of StrategyPUSDConvex,64,https://github.com/code-423n4/2022-04-jpegd-findings/issues/64,jpegd,2022/04,bug;invalid;sponsor disputed
107,Cityscape,0x46686E5420B34d5950d37855291d970fBa5527b6,G,Gas Optimizations,153,https://github.com/code-423n4/2022-04-jpegd-findings/issues/153,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,Cityscape,0x46686E5420B34d5950d37855291d970fBa5527b6,Q,QA Report,154,https://github.com/code-423n4/2022-04-jpegd-findings/issues/154,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`LPFarming` does not work correctly when adding duplicate `lpToken`s,74,https://github.com/code-423n4/2022-04-jpegd-findings/issues/74,jpegd,2022/04,bug;duplicate;invalid
107,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`YVaultLPFarming` rewards can be timed,75,https://github.com/code-423n4/2022-04-jpegd-findings/issues/75,jpegd,2022/04,bug;invalid;sponsor disputed
107,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`FungibleAssetVaultForDAO` does not work with fee-on-transfer tokens,77,https://github.com/code-423n4/2022-04-jpegd-findings/issues/77,jpegd,2022/04,bug;duplicate;invalid
107,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,2,`setDebtInterestApr` should accrue debt first,78,https://github.com/code-423n4/2022-04-jpegd-findings/issues/78,jpegd,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed
107,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Can claim liquidated NFT collateral without repaying,79,https://github.com/code-423n4/2022-04-jpegd-findings/issues/79,jpegd,2022/04,bug;QA (Quality Assurance);disagree with severity;resolved;sponsor confirmed
107,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Setting new controller can break YVaultLPFarming,80,https://github.com/code-423n4/2022-04-jpegd-findings/issues/80,jpegd,2022/04,bug;3 (High Risk);sponsor acknowledged
107,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Reentrancy issue in `yVault.deposit`,81,https://github.com/code-423n4/2022-04-jpegd-findings/issues/81,jpegd,2022/04,bug;3 (High Risk);resolved;sponsor confirmed
107,cmichel,0x6823636c2462cfdcD8d33fE53fBCD0EdbE2752ad,3,Can steal `yVault` deposits due to bad initial `shares` calculation,82,https://github.com/code-423n4/2022-04-jpegd-findings/issues/82,jpegd,2022/04,bug;duplicate;3 (High Risk)
107,Cr4ckM3,0x20dd6b24f1f9ebf4dbc5a330b0fe708f2b37ebf7,2,Using deprecated Chainlink function `latestAnswer`,34,https://github.com/code-423n4/2022-04-jpegd-findings/issues/34,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,Cr4ckM3,0x20dd6b24f1f9ebf4dbc5a330b0fe708f2b37ebf7,G,Gas Optimizations,35,https://github.com/code-423n4/2022-04-jpegd-findings/issues/35,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,Cr4ckM3,0x20dd6b24f1f9ebf4dbc5a330b0fe708f2b37ebf7,Q,QA Report,36,https://github.com/code-423n4/2022-04-jpegd-findings/issues/36,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,old strategy approval is not set to false,118,https://github.com/code-423n4/2022-04-jpegd-findings/issues/118,jpegd,2022/04,bug;invalid;sponsor disputed
107,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Unfair lock time for users,76,https://github.com/code-423n4/2022-04-jpegd-findings/issues/76,jpegd,2022/04,bug;invalid;sponsor disputed
107,danb,0x5aDFFa8A38adc0810c1D714624F8Ce52A3a27961,2,performance fee can be more than 100 percent,41,https://github.com/code-423n4/2022-04-jpegd-findings/issues/41,jpegd,2022/04,bug;invalid;sponsor disputed
107,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Use of deprecated Chainlink API,173,https://github.com/code-423n4/2022-04-jpegd-findings/issues/173,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Owner can lock NFT infinitely,176,https://github.com/code-423n4/2022-04-jpegd-findings/issues/176,jpegd,2022/04,bug;invalid;sponsor disputed
107,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,Q,QA Report,177,https://github.com/code-423n4/2022-04-jpegd-findings/issues/177,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,G,Gas Optimizations,180,https://github.com/code-423n4/2022-04-jpegd-findings/issues/180,jpegd,2022/04,bug;G (Gas Optimization);sponsor disputed
107,dirk_y,0x00db4d01c8953a707239DC168E466F64dD97Fe9c,2,A whitelisted sender can drain free collateral from FungibleAssetVaultForDAO,42,https://github.com/code-423n4/2022-04-jpegd-findings/issues/42,jpegd,2022/04,bug;invalid;sponsor disputed
107,dirk_y,0x00db4d01c8953a707239DC168E466F64dD97Fe9c,G,Gas Optimizations,43,https://github.com/code-423n4/2022-04-jpegd-findings/issues/43,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,121,https://github.com/code-423n4/2022-04-jpegd-findings/issues/121,jpegd,2022/04,bug;G (Gas Optimization);resolved;sponsor confirmed
107,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,225,https://github.com/code-423n4/2022-04-jpegd-findings/issues/225,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,3,Update initializer modifier to prevent reentrancy during initialization,227,https://github.com/code-423n4/2022-04-jpegd-findings/issues/227,jpegd,2022/04,bug;3 (High Risk);disagree with severity;resolved;sponsor confirmed
107,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,"Instead of `call()`, `transfer()` is used for the withdraw mechanism",234,https://github.com/code-423n4/2022-04-jpegd-findings/issues/234,jpegd,2022/04,bug;duplicate;QA (Quality Assurance)
107,dy,0xff9f1159199c885d177FF2AdbB2867d7f9227180,Q,QA Report,188,https://github.com/code-423n4/2022-04-jpegd-findings/issues/188,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,2,`NFTVault.sol::overrideFloor()` should have upper and lower bounds set.,181,https://github.com/code-423n4/2022-04-jpegd-findings/issues/181,jpegd,2022/04,bug;invalid;sponsor disputed
107,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,2,Unsafe transfer in `FungibleAssetVaultForDAO.sol::withdraw()`.,182,https://github.com/code-423n4/2022-04-jpegd-findings/issues/182,jpegd,2022/04,bug;duplicate;QA (Quality Assurance)
107,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,Q,QA Report,183,https://github.com/code-423n4/2022-04-jpegd-findings/issues/183,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,G,Gas Optimizations,185,https://github.com/code-423n4/2022-04-jpegd-findings/issues/185,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,Foundation,0xdb92C096bc5Efa8aDB48F05CD601DDdb75228203,G,Gas Optimizations,143,https://github.com/code-423n4/2022-04-jpegd-findings/issues/143,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,Foundation,0xdb92C096bc5Efa8aDB48F05CD601DDdb75228203,Q,QA Report,144,https://github.com/code-423n4/2022-04-jpegd-findings/issues/144,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,Foundation,0xdb92C096bc5Efa8aDB48F05CD601DDdb75228203,3,JPEGLock lockups overwrite previous data,145,https://github.com/code-423n4/2022-04-jpegd-findings/issues/145,jpegd,2022/04,bug;duplicate;3 (High Risk)
107,Foundation,0xdb92C096bc5Efa8aDB48F05CD601DDdb75228203,3,LPFarming: large `allocPoints` can cause overflow and lock funds,146,https://github.com/code-423n4/2022-04-jpegd-findings/issues/146,jpegd,2022/04,bug;duplicate;invalid
107,Foundation,0xdb92C096bc5Efa8aDB48F05CD601DDdb75228203,2,FungibleAssetVaultForDAO: direct value transfers,147,https://github.com/code-423n4/2022-04-jpegd-findings/issues/147,jpegd,2022/04,bug;invalid
107,FSchmoede,0xa806D8B9be2C56376264F81F62416cB704ce81BD,G,Gas Optimizations,170,https://github.com/code-423n4/2022-04-jpegd-findings/issues/170,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,Q,QA Report,148,https://github.com/code-423n4/2022-04-jpegd-findings/issues/148,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,149,https://github.com/code-423n4/2022-04-jpegd-findings/issues/149,jpegd,2022/04,bug;G (Gas Optimization);sponsor disputed
107,georgypetrov,0x0ed7C72398379F60CeEC0659E3AD6bFdBAa465a8,2,LPFarming DoS,86,https://github.com/code-423n4/2022-04-jpegd-findings/issues/86,jpegd,2022/04,bug;invalid;sponsor disputed
107,georgypetrov,0x0ed7C72398379F60CeEC0659E3AD6bFdBAa465a8,2,JPEG minting to the different address,87,https://github.com/code-423n4/2022-04-jpegd-findings/issues/87,jpegd,2022/04,bug;invalid;sponsor disputed
107,Hawkeye,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,G,Gas Optimizations,191,https://github.com/code-423n4/2022-04-jpegd-findings/issues/191,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,Hawkeye,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,192,https://github.com/code-423n4/2022-04-jpegd-findings/issues/192,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,"Existing user’s locked JPEG could be overwritten by new user, causing permanent loss of JPEG funds",10,https://github.com/code-423n4/2022-04-jpegd-findings/issues/10,jpegd,2022/04,bug;3 (High Risk);resolved;sponsor confirmed
107,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,yVault: First depositor can break minting of shares,12,https://github.com/code-423n4/2022-04-jpegd-findings/issues/12,jpegd,2022/04,bug;3 (High Risk);disagree with severity;resolved;sponsor confirmed
107,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,yVaultLPFarming: No guarantee JPEG currentBalance > previousBalance,56,https://github.com/code-423n4/2022-04-jpegd-findings/issues/56,jpegd,2022/04,bug;3 (High Risk);disagree with severity;resolved;sponsor confirmed
107,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Controller: Strategy migration will fail,57,https://github.com/code-423n4/2022-04-jpegd-findings/issues/57,jpegd,2022/04,bug;3 (High Risk);resolved;sponsor confirmed
107,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,"LPFarming: Reward calculation may overflow, bricking contract functionality",58,https://github.com/code-423n4/2022-04-jpegd-findings/issues/58,jpegd,2022/04,bug;invalid;sponsor disputed
107,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,NFTVault: Floor price can be set to 0 via setNFTTypeValueETH(),59,https://github.com/code-423n4/2022-04-jpegd-findings/issues/59,jpegd,2022/04,bug;invalid;disagree with severity;sponsor acknowledged
107,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,FungibleAssetVaultForDAO: Use latestRoundData + validate data freshness,60,https://github.com/code-423n4/2022-04-jpegd-findings/issues/60,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,LPFarming: Duplicate LP tokens can be added,61,https://github.com/code-423n4/2022-04-jpegd-findings/issues/61,jpegd,2022/04,bug;duplicate;invalid
107,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,Q,QA Report,62,https://github.com/code-423n4/2022-04-jpegd-findings/issues/62,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Gas Optimizations,63,https://github.com/code-423n4/2022-04-jpegd-findings/issues/63,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,2,Owner can set very large lock duration,228,https://github.com/code-423n4/2022-04-jpegd-findings/issues/228,jpegd,2022/04,bug;invalid
107,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,2,Use of deprecated oracle API in `_normalizeAggregatorAnswer`,229,https://github.com/code-423n4/2022-04-jpegd-findings/issues/229,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,2,Use of deprecated oracle API in `_collateralPriceUsd`,231,https://github.com/code-423n4/2022-04-jpegd-findings/issues/231,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,Q,QA Report,232,https://github.com/code-423n4/2022-04-jpegd-findings/issues/232,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,missing lowerbounds for critical parameters creditLimitRate & liquidationLimitRate.,159,https://github.com/code-423n4/2022-04-jpegd-findings/issues/159,jpegd,2022/04,bug;invalid;sponsor disputed
107,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,calling pause() in StableCoin.sol has no effect,162,https://github.com/code-423n4/2022-04-jpegd-findings/issues/162,jpegd,2022/04,bug;invalid;sponsor disputed
107,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,possible misuse of setPendingNFTValueETH,165,https://github.com/code-423n4/2022-04-jpegd-findings/issues/165,jpegd,2022/04,bug;invalid
107,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,3,withdraw in FungibleAssetVaultForDAO.sol can be unusable for smart contract calls,175,https://github.com/code-423n4/2022-04-jpegd-findings/issues/175,jpegd,2022/04,bug;duplicate;QA (Quality Assurance)
107,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,Q,QA Report,178,https://github.com/code-423n4/2022-04-jpegd-findings/issues/178,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,Uncontrolled usage of Chainlink API for core price retrieval,172,https://github.com/code-423n4/2022-04-jpegd-findings/issues/172,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,NFTVault will freeze any directly sent NFT,193,https://github.com/code-423n4/2022-04-jpegd-findings/issues/193,jpegd,2022/04,bug;invalid;sponsor disputed
107,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,"LPFarming, yVault and yVaultLPFarming contract white listing can be surpassed",205,https://github.com/code-423n4/2022-04-jpegd-findings/issues/205,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,"FungibleAssetVaultForDAO.withdraw calls native token payable.transfer, which is unsafe for smart contracts",211,https://github.com/code-423n4/2022-04-jpegd-findings/issues/211,jpegd,2022/04,bug;duplicate;QA (Quality Assurance)
107,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,Q,QA Report,222,https://github.com/code-423n4/2022-04-jpegd-findings/issues/222,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,NFTVault lending rate compounding is ambiguous,230,https://github.com/code-423n4/2022-04-jpegd-findings/issues/230,jpegd,2022/04,bug;invalid
107,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,New YVault depositors can be attacked by depressing share decimals,235,https://github.com/code-423n4/2022-04-jpegd-findings/issues/235,jpegd,2022/04,bug;duplicate;3 (High Risk)
107,ilan,0xEEBd02ddc406754621ff674c19f048fdF95C6D2B,G,Gas Optimizations,210,https://github.com/code-423n4/2022-04-jpegd-findings/issues/210,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,ilan,0xEEBd02ddc406754621ff674c19f048fdF95C6D2B,Q,QA Report,212,https://github.com/code-423n4/2022-04-jpegd-findings/issues/212,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,ilan,0xEEBd02ddc406754621ff674c19f048fdF95C6D2B,2,Re-entrerable code in NFTVault.repurchase,213,https://github.com/code-423n4/2022-04-jpegd-findings/issues/213,jpegd,2022/04,bug;invalid;sponsor disputed
107,ilan,0xEEBd02ddc406754621ff674c19f048fdF95C6D2B,2,Return value not checked at `transferFrom` call,221,https://github.com/code-423n4/2022-04-jpegd-findings/issues/221,jpegd,2022/04,bug;invalid;sponsor disputed
107,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,204,https://github.com/code-423n4/2022-04-jpegd-findings/issues/204,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,207,https://github.com/code-423n4/2022-04-jpegd-findings/issues/207,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,External call is made before user balance is updated,18,https://github.com/code-423n4/2022-04-jpegd-findings/issues/18,jpegd,2022/04,bug;duplicate;QA (Quality Assurance);disagree with severity;resolved;sponsor confirmed
107,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,User token balance is updated after external call,20,https://github.com/code-423n4/2022-04-jpegd-findings/issues/20,jpegd,2022/04,bug;duplicate;QA (Quality Assurance);disagree with severity;resolved;sponsor confirmed
107,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,`NFTVault` wont be able to bypass `onlyOwner` modifier on `transferFrom()` function ,24,https://github.com/code-423n4/2022-04-jpegd-findings/issues/24,jpegd,2022/04,bug;invalid;sponsor disputed
107,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,`MINTER_ROLE` is never set in `StableCoin.sol`,31,https://github.com/code-423n4/2022-04-jpegd-findings/issues/31,jpegd,2022/04,bug;invalid;sponsor disputed
107,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,`_borrow()` has important state updates after external call,6,https://github.com/code-423n4/2022-04-jpegd-findings/issues/6,jpegd,2022/04,bug;duplicate;QA (Quality Assurance);disagree with severity;resolved;sponsor confirmed
107,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Use of `transferFrom()` instead of `safeTransferFrom()` in `repurchase()` function ,7,https://github.com/code-423n4/2022-04-jpegd-findings/issues/7,jpegd,2022/04,bug;invalid;sponsor disputed
107,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,`NFTVault` may not be able to bypass `onlyOwner` modifier ,8,https://github.com/code-423n4/2022-04-jpegd-findings/issues/8,jpegd,2022/04,bug;invalid;sponsor disputed
107,JC,0xFc06B4C7b226C0bE3766656Fe4165592d9E7749f,3,External call in modifier (1),194,https://github.com/code-423n4/2022-04-jpegd-findings/issues/194,jpegd,2022/04,bug;invalid;sponsor disputed
107,JC,0xFc06B4C7b226C0bE3766656Fe4165592d9E7749f,3,inheritance (virtual function),200,https://github.com/code-423n4/2022-04-jpegd-findings/issues/200,jpegd,2022/04,bug;invalid;sponsor disputed
107,JC,0xFc06B4C7b226C0bE3766656Fe4165592d9E7749f,2,Configuration,201,https://github.com/code-423n4/2022-04-jpegd-findings/issues/201,jpegd,2022/04,bug;invalid;sponsor disputed
107,JC,0xFc06B4C7b226C0bE3766656Fe4165592d9E7749f,Q,QA Report,202,https://github.com/code-423n4/2022-04-jpegd-findings/issues/202,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,JC,0xFc06B4C7b226C0bE3766656Fe4165592d9E7749f,3,External call in modifier (2),203,https://github.com/code-423n4/2022-04-jpegd-findings/issues/203,jpegd,2022/04,bug;invalid;sponsor disputed
107,JC,0xFc06B4C7b226C0bE3766656Fe4165592d9E7749f,3,External call in modifier (3),209,https://github.com/code-423n4/2022-04-jpegd-findings/issues/209,jpegd,2022/04,bug;invalid
107,JC,0xFc06B4C7b226C0bE3766656Fe4165592d9E7749f,2,inheritance,214,https://github.com/code-423n4/2022-04-jpegd-findings/issues/214,jpegd,2022/04,bug;invalid;sponsor disputed
107,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,3,lack of checks for approved strategy in  Controller.earn(),122,https://github.com/code-423n4/2022-04-jpegd-findings/issues/122,jpegd,2022/04,bug;invalid;sponsor disputed
107,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,use of Transfer() instead of call() to send eth,123,https://github.com/code-423n4/2022-04-jpegd-findings/issues/123,jpegd,2022/04,bug;duplicate;QA (Quality Assurance)
107,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,use of deprecated chainlink oracle method,124,https://github.com/code-423n4/2022-04-jpegd-findings/issues/124,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,2,unhandled return value form transfer() and transferFrom() in  JpegStaking.sol,125,https://github.com/code-423n4/2022-04-jpegd-findings/issues/125,jpegd,2022/04,bug;duplicate;invalid
107,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,Q,QA Report,126,https://github.com/code-423n4/2022-04-jpegd-findings/issues/126,jpegd,2022/04,bug;QA (Quality Assurance);sponsor disputed
107,JMukesh,0x70aF29f754988473fcAbA6E01AbfbafF871046d1,G,Gas Optimizations,142,https://github.com/code-423n4/2022-04-jpegd-findings/issues/142,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,joshie,0x2f1c5628e931fc75cf097072f61b9dc72d1d827f,2,Oracle might be providing stale prices,5,https://github.com/code-423n4/2022-04-jpegd-findings/issues/5,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Tokens with fee on transfer are not supported,104,https://github.com/code-423n4/2022-04-jpegd-findings/issues/104,jpegd,2022/04,bug;duplicate;invalid
107,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Usage of deprecated ChainLink API in `FungibleAssetVaultForDAO`,52,https://github.com/code-423n4/2022-04-jpegd-findings/issues/52,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,3,Oracle data feed is insufficiently validated.,54,https://github.com/code-423n4/2022-04-jpegd-findings/issues/54,jpegd,2022/04,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
107,Jujic,0x6E1DA38F9d9D87ce228234a570D992D4DB294fA1,2,Transfer is bad practice,55,https://github.com/code-423n4/2022-04-jpegd-findings/issues/55,jpegd,2022/04,bug;QA (Quality Assurance)
107,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,Q,QA Report,189,https://github.com/code-423n4/2022-04-jpegd-findings/issues/189,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,G,Gas Optimizations,190,https://github.com/code-423n4/2022-04-jpegd-findings/issues/190,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,3,Intended checks regarding the prices DAO sets for an NFT not in place,44,https://github.com/code-423n4/2022-04-jpegd-findings/issues/44,jpegd,2022/04,bug;invalid;sponsor disputed
107,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,2,Checks described in comment not in place,49,https://github.com/code-423n4/2022-04-jpegd-findings/issues/49,jpegd,2022/04,bug;invalid;sponsor disputed
107,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,2,Deposits to Fungible Asset Vault might not work as intended with fee-on transfer tokens,50,https://github.com/code-423n4/2022-04-jpegd-findings/issues/50,jpegd,2022/04,bug;invalid;sponsor disputed
107,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,2,NFTHelper Contract Allows Owner to Burn NFTs,47,https://github.com/code-423n4/2022-04-jpegd-findings/issues/47,jpegd,2022/04,bug;2 (Med Risk);sponsor acknowledged
107,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,223,https://github.com/code-423n4/2022-04-jpegd-findings/issues/223,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,224,https://github.com/code-423n4/2022-04-jpegd-findings/issues/224,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,Kong,0x7F97cACd05988fFE8bcBA0284c2362cABE5Fcfcc,2,Unintended additional rewards,13,https://github.com/code-423n4/2022-04-jpegd-findings/issues/13,jpegd,2022/04,bug;invalid;sponsor disputed
107,Kthere,0xe3D091E8122E65a0bD6a3B1bc1Ee12B7C4ebb61f,Q,QA Report,71,https://github.com/code-423n4/2022-04-jpegd-findings/issues/71,jpegd,2022/04,bug;QA (Quality Assurance);sponsor disputed
107,Kthere,0xe3D091E8122E65a0bD6a3B1bc1Ee12B7C4ebb61f,2,Locked amount incorrectly updated in `JPEGLock.sol`,72,https://github.com/code-423n4/2022-04-jpegd-findings/issues/72,jpegd,2022/04,bug;duplicate;3 (High Risk)
107,Kthere,0xe3D091E8122E65a0bD6a3B1bc1Ee12B7C4ebb61f,2,Use `.call` instead of `.transfer` to make ETH transfers,73,https://github.com/code-423n4/2022-04-jpegd-findings/issues/73,jpegd,2022/04,bug;duplicate;QA (Quality Assurance)
107,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,G,Gas Optimizations,25,https://github.com/code-423n4/2022-04-jpegd-findings/issues/25,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,Q,QA Report,26,https://github.com/code-423n4/2022-04-jpegd-findings/issues/26,jpegd,2022/04,bug;invalid;sponsor disputed
107,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,User Who Lock Up JPEG More Than Once Will Permanantly Lock Their Previous Deposited JPEG into Contract,27,https://github.com/code-423n4/2022-04-jpegd-findings/issues/27,jpegd,2022/04,bug;duplicate;3 (High Risk)
107,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,2,onlyOwner Can Withdraw Nearly ALL Remaining LP Reward JPEGS When Call newEpoch(),28,https://github.com/code-423n4/2022-04-jpegd-findings/issues/28,jpegd,2022/04,bug;invalid;sponsor disputed
107,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,DAO Can Mint Unlimited PUSD by Abusing overrideFloor(),29,https://github.com/code-423n4/2022-04-jpegd-findings/issues/29,jpegd,2022/04,bug;invalid;sponsor disputed
107,Meta0xNull,0xfa2Df13a636b8F2FAaA179785797f1f16fDdF8ED,3,DAO Can Open New FungibleAssetVaultForDAO Contract for Same Asset Rather Than Deposit More Collateral When Undercollateralization,30,https://github.com/code-423n4/2022-04-jpegd-findings/issues/30,jpegd,2022/04,bug;invalid;sponsor disputed
107,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,3,Reward could be locked in `LPFarming` because of using `balanceOf` to calculate `lpSupply`.,37,https://github.com/code-423n4/2022-04-jpegd-findings/issues/37,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,2,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,38,https://github.com/code-423n4/2022-04-jpegd-findings/issues/38,jpegd,2022/04,bug;duplicate;invalid
107,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,3,Using `transfer` for native token do not work when recipient is smart contract.,39,https://github.com/code-423n4/2022-04-jpegd-findings/issues/39,jpegd,2022/04,bug;QA (Quality Assurance);disagree with severity;resolved;sponsor confirmed
107,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,Q,QA Report,40,https://github.com/code-423n4/2022-04-jpegd-findings/issues/40,jpegd,2022/04,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
107,nahnah,0xc950cAeC29f157EB49f37b8c57c737E79037B655,G,Gas Optimizations,226,https://github.com/code-423n4/2022-04-jpegd-findings/issues/226,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,Q,QA Report,184,https://github.com/code-423n4/2022-04-jpegd-findings/issues/184,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Gas Optimizations,186,https://github.com/code-423n4/2022-04-jpegd-findings/issues/186,jpegd,2022/04,bug;invalid;sponsor disputed
107,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,setDebtInterestApr() doesn't accrue interest before changing it,119,https://github.com/code-423n4/2022-04-jpegd-findings/issues/119,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Dao can lower liquidation limit to 0 and freely liquidate all positions,219,https://github.com/code-423n4/2022-04-jpegd-findings/issues/219,jpegd,2022/04,bug;invalid;sponsor disputed
107,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Use of deprecated API for chainlink aggregator,95,https://github.com/code-423n4/2022-04-jpegd-findings/issues/95,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,peritoflores,0xca14410735e29650dc240245d96bb376c51477c1,2,Insecure transfer can lead to mint/burn tokens incorrectly,206,https://github.com/code-423n4/2022-04-jpegd-findings/issues/206,jpegd,2022/04,bug;invalid;sponsor disputed
107,peritoflores,0xca14410735e29650dc240245d96bb376c51477c1,2,Exposed public `burn()` for stablecoins .,220,https://github.com/code-423n4/2022-04-jpegd-findings/issues/220,jpegd,2022/04,bug;invalid;sponsor disputed
107,peritoflores,0xca14410735e29650dc240245d96bb376c51477c1,2,Deprecated CHAINLINK API usage ,233,https://github.com/code-423n4/2022-04-jpegd-findings/issues/233,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,Q,QA Report,150,https://github.com/code-423n4/2022-04-jpegd-findings/issues/150,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,G,Gas Optimizations,151,https://github.com/code-423n4/2022-04-jpegd-findings/issues/151,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,2,modifier noContract() needs to be changed,83,https://github.com/code-423n4/2022-04-jpegd-findings/issues/83,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,Q,QA Report,84,https://github.com/code-423n4/2022-04-jpegd-findings/issues/84,jpegd,2022/04,bug;QA (Quality Assurance);sponsor disputed
107,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,G,Gas Optimizations,85,https://github.com/code-423n4/2022-04-jpegd-findings/issues/85,jpegd,2022/04,bug;G (Gas Optimization);sponsor disputed
107,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`!_account.isContract()` can be bypassed,128,https://github.com/code-423n4/2022-04-jpegd-findings/issues/128,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,"`JPEGLock.lockFor` can relock for specific nft, which overwrites previous lock and cause `JPEG` loss of the locker",129,https://github.com/code-423n4/2022-04-jpegd-findings/issues/129,jpegd,2022/04,bug;duplicate;3 (High Risk)
107,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,"`JPEGLock` does not require NFT value proposal finalizers to truly stake `JPEG` tokens, creating a nothing at stake scenario where NFT holders profit and stablecoin holders suffer",130,https://github.com/code-423n4/2022-04-jpegd-findings/issues/130,jpegd,2022/04,bug;invalid;sponsor disputed
107,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,Use `latestRoundData` instead `latestAnswer` of Chainlink aggregators,131,https://github.com/code-423n4/2022-04-jpegd-findings/issues/131,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,Collect interest and fees before be repaid will cause inflation of stablecoin,132,https://github.com/code-423n4/2022-04-jpegd-findings/issues/132,jpegd,2022/04,bug;invalid;sponsor disputed
107,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,NFTVault uses compound interest instead of simple interest,133,https://github.com/code-423n4/2022-04-jpegd-findings/issues/133,jpegd,2022/04,bug;invalid;sponsor disputed
107,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`transfer` function will fail due to EIP-1884,134,https://github.com/code-423n4/2022-04-jpegd-findings/issues/134,jpegd,2022/04,bug;duplicate;QA (Quality Assurance)
107,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,"`YVault` does not tie `deposit` together with `earn`, thus allowing griefing attacks to prevent normal users from earning `token` yields",135,https://github.com/code-423n4/2022-04-jpegd-findings/issues/135,jpegd,2022/04,bug;invalid;sponsor disputed
107,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,"`Controller.setStrategy` tries to withdraw `JPEG` token with incorrect function `strategy.withdraw(address)`, leading to certain revert and renders `setStrategy` unuseable",136,https://github.com/code-423n4/2022-04-jpegd-findings/issues/136,jpegd,2022/04,bug;duplicate;3 (High Risk)
107,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,"`StrategyPUSDConvex`, `Controller` and `YVault` does not check corresponding `Controller`, `YVault`, `YFaultLPFarming` when calculating balance and accepting deposits. Allowing malicious users to create fake instances for phishing attacks",137,https://github.com/code-423n4/2022-04-jpegd-findings/issues/137,jpegd,2022/04,bug;invalid;sponsor disputed
107,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,"`StrategyPUSDConvex.balanceOfJPEG` calculates the amount of `JPEG` interest incorrectly, leading to incorrect updates in `YVaultLPFarming._computeUpdate`",138,https://github.com/code-423n4/2022-04-jpegd-findings/issues/138,jpegd,2022/04,bug;invalid;sponsor disputed
107,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,"`StrategyPUSDConvex.balanceOfJPEG` uses incorrect function signature while calling `extraReward.earned`, causing the function to unexpectedly revert everytime",139,https://github.com/code-423n4/2022-04-jpegd-findings/issues/139,jpegd,2022/04,bug;3 (High Risk);disagree with severity;resolved;sponsor confirmed
107,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,140,https://github.com/code-423n4/2022-04-jpegd-findings/issues/140,jpegd,2022/04,bug;QA (Quality Assurance);sponsor disputed
107,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,141,https://github.com/code-423n4/2022-04-jpegd-findings/issues/141,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,2,Usage of legacy ETH transfer function,94,https://github.com/code-423n4/2022-04-jpegd-findings/issues/94,jpegd,2022/04,bug;QA (Quality Assurance)
107,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,2,Usage of deprecated Chainlink's latestAnswer function,96,https://github.com/code-423n4/2022-04-jpegd-findings/issues/96,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,216,https://github.com/code-423n4/2022-04-jpegd-findings/issues/216,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,Q,QA Report,217,https://github.com/code-423n4/2022-04-jpegd-findings/issues/217,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Wrong Deadline,66,https://github.com/code-423n4/2022-04-jpegd-findings/issues/66,jpegd,2022/04,bug;invalid;sponsor disputed
107,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Tokens with fee on transfer are not supported,67,https://github.com/code-423n4/2022-04-jpegd-findings/issues/67,jpegd,2022/04,bug;invalid;sponsor disputed
107,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Div by 0,68,https://github.com/code-423n4/2022-04-jpegd-findings/issues/68,jpegd,2022/04,bug;invalid;sponsor disputed
107,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,69,https://github.com/code-423n4/2022-04-jpegd-findings/issues/69,jpegd,2022/04,bug;QA (Quality Assurance);sponsor disputed
107,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,70,https://github.com/code-423n4/2022-04-jpegd-findings/issues/70,jpegd,2022/04,bug;G (Gas Optimization);sponsor disputed
107,rokinot,0x798349E06c67272465123B91bd88C5d19b8c7878,G,Gas Optimizations,51,https://github.com/code-423n4/2022-04-jpegd-findings/issues/51,jpegd,2022/04,bug;G (Gas Optimization);sponsor disputed
107,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Usage of deprecated Chainlink functions,155,https://github.com/code-423n4/2022-04-jpegd-findings/issues/155,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,179,https://github.com/code-423n4/2022-04-jpegd-findings/issues/179,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Gas Optimizations,152,https://github.com/code-423n4/2022-04-jpegd-findings/issues/152,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,Q,QA Report,22,https://github.com/code-423n4/2022-04-jpegd-findings/issues/22,jpegd,2022/04,bug;QA (Quality Assurance);resolved;sponsor confirmed
107,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,2,JPEG can be withdrawn even after strategy is revoked.,9,https://github.com/code-423n4/2022-04-jpegd-findings/issues/9,jpegd,2022/04,bug;invalid;sponsor disputed
107,securerodd,0x18564BE77AEd882651D2c0c791477BDe4a0F8C3d,G,Gas Optimizations,102,https://github.com/code-423n4/2022-04-jpegd-findings/issues/102,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,securerodd,0x18564BE77AEd882651D2c0c791477BDe4a0F8C3d,Q,QA Report,65,https://github.com/code-423n4/2022-04-jpegd-findings/issues/65,jpegd,2022/04,bug;invalid;sponsor disputed
107,Silencezhl,0xc2cA7A683Db047D221F5F8cF2de34361a399a6d5,G,Gas Optimizations,23,https://github.com/code-423n4/2022-04-jpegd-findings/issues/23,jpegd,2022/04,bug;invalid;sponsor disputed
107,slywaters,0xcdc82d78cb49d4baa06d0988afdd27261b0667b2,G,Gas Optimizations,100,https://github.com/code-423n4/2022-04-jpegd-findings/issues/100,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,smiling_heretic,0xe180d626a4229c1F1C4cb0278cE071dBcC172AdB,2,"For any (sufficiently regular) smart contract, there exists a smart contract that bypasses `noContract` modifier and still has the same functionality",93,https://github.com/code-423n4/2022-04-jpegd-findings/issues/93,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,G,Gas Optimizations,174,https://github.com/code-423n4/2022-04-jpegd-findings/issues/174,jpegd,2022/04,bug;G (Gas Optimization);sponsor disputed
107,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,G,Gas Optimizations,45,https://github.com/code-423n4/2022-04-jpegd-findings/issues/45,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,Q,QA Report,46,https://github.com/code-423n4/2022-04-jpegd-findings/issues/46,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,187,https://github.com/code-423n4/2022-04-jpegd-findings/issues/187,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,2,reward will be locked in the farm if no LP join the pool at epoch.startBlock ,14,https://github.com/code-423n4/2022-04-jpegd-findings/issues/14,jpegd,2022/04,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
107,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,2,rewards was locked in the farming pool due to the round-off error ,15,https://github.com/code-423n4/2022-04-jpegd-findings/issues/15,jpegd,2022/04,bug;invalid;sponsor disputed
107,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,2,rewards will be locked if admin create 2 more pools with the same lpToken,16,https://github.com/code-423n4/2022-04-jpegd-findings/issues/16,jpegd,2022/04,bug;duplicate;invalid
107,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,2,reward will be locked in the farm because of round-off error,17,https://github.com/code-423n4/2022-04-jpegd-findings/issues/17,jpegd,2022/04,bug;invalid
107,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,3,rewards will be locked if user transfer directly to pool without using deposit function ,19,https://github.com/code-423n4/2022-04-jpegd-findings/issues/19,jpegd,2022/04,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
107,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,Q,QA Report,21,https://github.com/code-423n4/2022-04-jpegd-findings/issues/21,jpegd,2022/04,bug;QA (Quality Assurance);resolved;sponsor confirmed
107,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,3,The JPEG's DAO have extreme high Privilege and incentive to defraud,48,https://github.com/code-423n4/2022-04-jpegd-findings/issues/48,jpegd,2022/04,bug;invalid;sponsor acknowledged
107,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H5] `yVault.sol` A malicious early user/attacker can manipulate the vault's pricePerShare to take an unfair share of future users' deposits,156,https://github.com/code-423n4/2022-04-jpegd-findings/issues/156,jpegd,2022/04,bug;duplicate;3 (High Risk)
107,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H9] `_swapUniswapV2` may use an improper `path` which can cause a loss of the majority of the rewardTokens,157,https://github.com/code-423n4/2022-04-jpegd-findings/issues/157,jpegd,2022/04,bug;2 (Med Risk);sponsor disputed
107,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Use of deprecated Chainlink function `latestAnswer`,158,https://github.com/code-423n4/2022-04-jpegd-findings/issues/158,jpegd,2022/04,bug;duplicate;2 (Med Risk)
107,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H13] `LockPosition` can be overwritten by new `lockFor()` which leads to user's funds loss,160,https://github.com/code-423n4/2022-04-jpegd-findings/issues/160,jpegd,2022/04,bug;duplicate;3 (High Risk)
107,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M17] `pendingNFTValueETH` should have an expiration time,161,https://github.com/code-423n4/2022-04-jpegd-findings/issues/161,jpegd,2022/04,bug;invalid;sponsor disputed
107,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,[WP-M18] `nftValueETH` should expire after JPEG unlocked,163,https://github.com/code-423n4/2022-04-jpegd-findings/issues/163,jpegd,2022/04,bug;invalid;sponsor disputed
107,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"[WP-H19] `NFTVault.sol` collateral NFT can be frozen in the NFTVault contract, when a contract with no `onERC721Received` method called `liquidate()` on a  `USE_INSURANCE` position",164,https://github.com/code-423n4/2022-04-jpegd-findings/issues/164,jpegd,2022/04,bug;invalid;sponsor disputed
107,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H20] A malicious early user/attacker can manipulate the `accRewardPerShare` to break `deposit`,166,https://github.com/code-423n4/2022-04-jpegd-findings/issues/166,jpegd,2022/04,bug;invalid;sponsor disputed
107,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H22] Bad debts should not continue to accrue interest,167,https://github.com/code-423n4/2022-04-jpegd-findings/issues/167,jpegd,2022/04,bug;3 (High Risk);disagree with severity;sponsor acknowledged
107,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H23] `YVaultLPFarming.sol` Pending JPEG rewards can be stolen by attacker,168,https://github.com/code-423n4/2022-04-jpegd-findings/issues/168,jpegd,2022/04,bug;invalid;sponsor disputed
107,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Gas Optimizations,169,https://github.com/code-423n4/2022-04-jpegd-findings/issues/169,jpegd,2022/04,bug;G (Gas Optimization);sponsor acknowledged
107,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,Q,QA Report,171,https://github.com/code-423n4/2022-04-jpegd-findings/issues/171,jpegd,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
107,Wayne,0xF6D05046b2F80C664484Ee61b813E60DAf186668,2,The noContract modifier does not work as expected.,11,https://github.com/code-423n4/2022-04-jpegd-findings/issues/11,jpegd,2022/04,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
115,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,78,https://github.com/code-423n4/2022-04-mimo-findings/issues/78,mimo,2022/04,bug;G (Gas Optimization)
115,0x1337,0x4C024e5B3AE9B56319ed7c2D0F73A8535DDFF47e,3,Potential Sandwich Attack: Arbitrage bots can front run reward tokens being sent to the liquidity mining contracts,64,https://github.com/code-423n4/2022-04-mimo-findings/issues/64,mimo,2022/04,bug;invalid;3 (High Risk);sponsor disputed
115,0x1337,0x4C024e5B3AE9B56319ed7c2D0F73A8535DDFF47e,3,Moral hazard of borrower calling `liquidate()` and potential Oracle manipulation,65,https://github.com/code-423n4/2022-04-mimo-findings/issues/65,mimo,2022/04,bug;invalid;3 (High Risk);sponsor disputed
115,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Oracle price could not be fresh,54,https://github.com/code-423n4/2022-04-mimo-findings/issues/54,mimo,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
115,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Decimal token underflow could produce loose of funds,55,https://github.com/code-423n4/2022-04-mimo-findings/issues/55,mimo,2022/04,bug;2 (Med Risk);sponsor confirmed
115,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Oracle price could not be fresh in GUniLPOracle ,56,https://github.com/code-423n4/2022-04-mimo-findings/issues/56,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk);sponsor disputed
115,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Oracle price could not be fresh in ChainlinkInceptionPriceFeed,57,https://github.com/code-423n4/2022-04-mimo-findings/issues/57,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,58,https://github.com/code-423n4/2022-04-mimo-findings/issues/58,mimo,2022/04,bug;QA (Quality Assurance)
115,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,59,https://github.com/code-423n4/2022-04-mimo-findings/issues/59,mimo,2022/04,bug;G (Gas Optimization)
115,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,2,https://github.com/code-423n4/2022-04-mimo-findings/issues/2,mimo,2022/04,bug;G (Gas Optimization)
115,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,Q,QA Report,3,https://github.com/code-423n4/2022-04-mimo-findings/issues/3,mimo,2022/04,bug;QA (Quality Assurance)
115,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,Q,QA Report,4,https://github.com/code-423n4/2022-04-mimo-findings/issues/4,mimo,2022/04,bug;duplicate;QA (Quality Assurance)
115,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,5,https://github.com/code-423n4/2022-04-mimo-findings/issues/5,mimo,2022/04,bug;duplicate;G (Gas Optimization)
115,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,6,https://github.com/code-423n4/2022-04-mimo-findings/issues/6,mimo,2022/04,bug;duplicate;G (Gas Optimization)
115,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,Q,QA Report,7,https://github.com/code-423n4/2022-04-mimo-findings/issues/7,mimo,2022/04,bug;duplicate;QA (Quality Assurance)
115,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,8,https://github.com/code-423n4/2022-04-mimo-findings/issues/8,mimo,2022/04,bug;duplicate;G (Gas Optimization)
115,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,9,https://github.com/code-423n4/2022-04-mimo-findings/issues/9,mimo,2022/04,bug;duplicate;G (Gas Optimization)
115,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,3,BalancerV2LPOracle.sol incorrectly values LP when oracle decimals don't match,66,https://github.com/code-423n4/2022-04-mimo-findings/issues/66,mimo,2022/04,bug;disagree with severity;QA (Quality Assurance);sponsor acknowledged
115,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,3,BalancerV2LPOracle and GUniLPOracle do not properly adjust output decimal,67,https://github.com/code-423n4/2022-04-mimo-findings/issues/67,mimo,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance)
115,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Upgraded Q -> M from 87 [1654442977298],169,https://github.com/code-423n4/2022-04-mimo-findings/issues/169,mimo,2022/04,bug;duplicate;2 (Med Risk);upgraded by judge
115,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,3,User can call liquidate() and steal all collateral due to arbitrary router call,83,https://github.com/code-423n4/2022-04-mimo-findings/issues/83,mimo,2022/04,bug;3 (High Risk);sponsor confirmed
115,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Call to Chainlink oracles lack proper checks,85,https://github.com/code-423n4/2022-04-mimo-findings/issues/85,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Risk of reentrancy in releaseRewards(),86,https://github.com/code-423n4/2022-04-mimo-findings/issues/86,mimo,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance)
115,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,Q,QA Report,87,https://github.com/code-423n4/2022-04-mimo-findings/issues/87,mimo,2022/04,bug;QA (Quality Assurance)
115,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,G,Gas Optimizations,88,https://github.com/code-423n4/2022-04-mimo-findings/issues/88,mimo,2022/04,bug;G (Gas Optimization)
115,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,Q,QA Report,70,https://github.com/code-423n4/2022-04-mimo-findings/issues/70,mimo,2022/04,bug;invalid;QA (Quality Assurance);sponsor disputed
115,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,G,Gas Optimizations,71,https://github.com/code-423n4/2022-04-mimo-findings/issues/71,mimo,2022/04,bug;G (Gas Optimization)
115,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,82,https://github.com/code-423n4/2022-04-mimo-findings/issues/82,mimo,2022/04,bug;G (Gas Optimization)
115,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,2,Uninitialized Local Variable,143,https://github.com/code-423n4/2022-04-mimo-findings/issues/143,mimo,2022/04,bug;invalid;sponsor disputed
115,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,2,Reentrancy Bugs in GenericMinerV2,148,https://github.com/code-423n4/2022-04-mimo-findings/issues/148,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,2,ABDKMath64 performs multiplication on results of division,151,https://github.com/code-423n4/2022-04-mimo-findings/issues/151,mimo,2022/04,bug;2 (Med Risk);sponsor acknowledged
115,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,Q,QA Report,154,https://github.com/code-423n4/2022-04-mimo-findings/issues/154,mimo,2022/04,bug;QA (Quality Assurance)
115,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,Q,QA Report,158,https://github.com/code-423n4/2022-04-mimo-findings/issues/158,mimo,2022/04,bug;invalid;QA (Quality Assurance)
115,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,Q,QA Report,117,https://github.com/code-423n4/2022-04-mimo-findings/issues/117,mimo,2022/04,bug;QA (Quality Assurance)
115,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Missing `approve(0)`,118,https://github.com/code-423n4/2022-04-mimo-findings/issues/118,mimo,2022/04,bug;duplicate;2 (Med Risk)
115,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Use `safeTransfer()`/`safeTransferFrom()` consistently instead of `transfer()`/`transferFrom()`,119,https://github.com/code-423n4/2022-04-mimo-findings/issues/119,mimo,2022/04,bug;duplicate;QA (Quality Assurance)
115,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Unchecked low level calls,120,https://github.com/code-423n4/2022-04-mimo-findings/issues/120,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Inconsistent balance when supplying fee-on transfer tokens,121,https://github.com/code-423n4/2022-04-mimo-findings/issues/121,mimo,2022/04,bug;duplicate;QA (Quality Assurance)
115,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Chainlink's `latestRoundData` might return stale or incorrect results,122,https://github.com/code-423n4/2022-04-mimo-findings/issues/122,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,3,Vault liquidator can steal collateral without repaying,131,https://github.com/code-423n4/2022-04-mimo-findings/issues/131,mimo,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
115,broccolirob,0x5233af283e7c359a1011dc0ff480298e90c8cfd6,3,Unbound loop can brick contract and freeze miner payments,160,https://github.com/code-423n4/2022-04-mimo-findings/issues/160,mimo,2022/04,bug;invalid;3 (High Risk);sponsor disputed
115,broccolirob,0x5233af283e7c359a1011dc0ff480298e90c8cfd6,3,Balance underflow for tokens with more than 18 decimals,77,https://github.com/code-423n4/2022-04-mimo-findings/issues/77,mimo,2022/04,bug;duplicate;2 (Med Risk);disagree with severity
115,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,burn function could burn tokens of any user,52,https://github.com/code-423n4/2022-04-mimo-findings/issues/52,mimo,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
115,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Chainlink's latestRoundData might return stale or incorrect results,53,https://github.com/code-423n4/2022-04-mimo-findings/issues/53,mimo,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
115,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,InceptionVaultsCore:Unsupported fee-on-transfer tokens,61,https://github.com/code-423n4/2022-04-mimo-findings/issues/61,mimo,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
115,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,"When the owner uses the cloneInceptionVault function to create an InceptionVault, he can control the oracle address",62,https://github.com/code-423n4/2022-04-mimo-findings/issues/62,mimo,2022/04,bug;invalid;3 (High Risk);disagree with severity
115,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"PARMinerV2: When the return value of _a.parallel().core() is changed, it can DOS liquidate().",80,https://github.com/code-423n4/2022-04-mimo-findings/issues/80,mimo,2022/04,bug;invalid;2 (Med Risk);disagree with severity
115,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Must approve 0 first,81,https://github.com/code-423n4/2022-04-mimo-findings/issues/81,mimo,2022/04,bug;duplicate;2 (Med Risk)
115,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Should check return data from chainlink aggregators,1,https://github.com/code-423n4/2022-04-mimo-findings/issues/1,mimo,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
115,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,124,https://github.com/code-423n4/2022-04-mimo-findings/issues/124,mimo,2022/04,bug;QA (Quality Assurance)
115,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,129,https://github.com/code-423n4/2022-04-mimo-findings/issues/129,mimo,2022/04,bug;G (Gas Optimization)
115,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Upgraded Q -> M from 124 [1654442937681],168,https://github.com/code-423n4/2022-04-mimo-findings/issues/168,mimo,2022/04,bug;duplicate;2 (Med Risk);upgraded by judge
115,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Upgraded Q -> M from 124 [1654443300023],171,https://github.com/code-423n4/2022-04-mimo-findings/issues/171,mimo,2022/04,bug;duplicate;2 (Med Risk);upgraded by judge
115,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Upgraded Q -> M from 124 [1654443719989],172,https://github.com/code-423n4/2022-04-mimo-findings/issues/172,mimo,2022/04,invalid;upgraded by judge
115,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,G,Gas Optimizations,140,https://github.com/code-423n4/2022-04-mimo-findings/issues/140,mimo,2022/04,bug;G (Gas Optimization)
115,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,Q,QA Report,141,https://github.com/code-423n4/2022-04-mimo-findings/issues/141,mimo,2022/04,bug;QA (Quality Assurance)
115,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,2,Missing `0` approval ,163,https://github.com/code-423n4/2022-04-mimo-findings/issues/163,mimo,2022/04,bug;duplicate;2 (Med Risk)
115,dipp,0x675454Ae78d25632fC26763Fa9CB72a99Cb0A36e,Q,QA Report,113,https://github.com/code-423n4/2022-04-mimo-findings/issues/113,mimo,2022/04,bug;QA (Quality Assurance)
115,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,139,https://github.com/code-423n4/2022-04-mimo-findings/issues/139,mimo,2022/04,bug;G (Gas Optimization)
115,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Missing Validations In Chainlink's `latestRoundData` Function,142,https://github.com/code-423n4/2022-04-mimo-findings/issues/142,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Missing Validations In Chainlink's `latestRoundData` Function,144,https://github.com/code-423n4/2022-04-mimo-findings/issues/144,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,153,https://github.com/code-423n4/2022-04-mimo-findings/issues/153,mimo,2022/04,bug;QA (Quality Assurance)
115,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Consistently check account balance before and after transfers for Fee-On-Transfer discrepancies,156,https://github.com/code-423n4/2022-04-mimo-findings/issues/156,mimo,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance)
115,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,150,https://github.com/code-423n4/2022-04-mimo-findings/issues/150,mimo,2022/04,bug;G (Gas Optimization)
115,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,Q,QA Report,152,https://github.com/code-423n4/2022-04-mimo-findings/issues/152,mimo,2022/04,bug;QA (Quality Assurance)
115,GalloDaSballo,0x4666e94300429C6d3340449bC828E4218F360672,2,Generic ReEntrancy in DemandMinerV2 deposit and withdraw,12,https://github.com/code-423n4/2022-04-mimo-findings/issues/12,mimo,2022/04,bug;QA (Quality Assurance);sponsor disputed
115,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,89,https://github.com/code-423n4/2022-04-mimo-findings/issues/89,mimo,2022/04,bug;G (Gas Optimization)
115,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,It doesn't handle fees when transferring tokens,90,https://github.com/code-423n4/2022-04-mimo-findings/issues/90,mimo,2022/04,bug;duplicate;QA (Quality Assurance)
115,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,Price oracle could get a stale price,91,https://github.com/code-423n4/2022-04-mimo-findings/issues/91,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,92,https://github.com/code-423n4/2022-04-mimo-findings/issues/92,mimo,2022/04,bug;QA (Quality Assurance)
115,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,3,`withdrawETH` might fail if `msg.sender` is a smart contract.,76,https://github.com/code-423n4/2022-04-mimo-findings/issues/76,mimo,2022/04,bug;invalid;3 (High Risk);sponsor disputed
115,Hawkeye,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,162,https://github.com/code-423n4/2022-04-mimo-findings/issues/162,mimo,2022/04,bug;QA (Quality Assurance)
115,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,PARMinerV2's liquidate can become stuck,135,https://github.com/code-423n4/2022-04-mimo-findings/issues/135,mimo,2022/04,bug;duplicate;2 (Med Risk);sponsor acknowledged
115,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,SuperVault's leverageSwap and emptyVaultOperation can become stuck,145,https://github.com/code-423n4/2022-04-mimo-findings/issues/145,mimo,2022/04,bug;2 (Med Risk);sponsor acknowledged
115,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,SuperVault depositToVault use unchecked transferFrom with an arbitrary ERC20 asset,147,https://github.com/code-423n4/2022-04-mimo-findings/issues/147,mimo,2022/04,bug;duplicate;QA (Quality Assurance)
115,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,ChainlinkInceptionPriceFeed can report stale price,155,https://github.com/code-423n4/2022-04-mimo-findings/issues/155,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,GUniLPOracle can provide stale prices,159,https://github.com/code-423n4/2022-04-mimo-findings/issues/159,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,"SuperVault's aggregatorSwap doesn't check router call success, proceeding anyway",164,https://github.com/code-423n4/2022-04-mimo-findings/issues/164,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,Q,QA Report,165,https://github.com/code-423n4/2022-04-mimo-findings/issues/165,mimo,2022/04,bug;QA (Quality Assurance)
115,ilan,0xEEBd02ddc406754621ff674c19f048fdF95C6D2B,2,Return values are not checked for `transferFrom` and `transfer` calls to external tokens,110,https://github.com/code-423n4/2022-04-mimo-findings/issues/110,mimo,2022/04,bug;QA (Quality Assurance);sponsor disputed
115,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,G,Gas Optimizations,111,https://github.com/code-423n4/2022-04-mimo-findings/issues/111,mimo,2022/04,bug;G (Gas Optimization)
115,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,Q,QA Report,114,https://github.com/code-423n4/2022-04-mimo-findings/issues/114,mimo,2022/04,bug;QA (Quality Assurance)
115,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,2,INCOMPATIBILITY WITH REBASING/DEFLATIONARY/INFLATIONARY TOKENS CAN RESULT IN UNDERCOLLATERALIZED LOAN,126,https://github.com/code-423n4/2022-04-mimo-findings/issues/126,mimo,2022/04,bug;duplicate;QA (Quality Assurance)
115,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,2,RETURN VALUE OF .TRANSFER() NOT CHECKED CAN RESULT IN VAULT OWNER LOSING COLLATERAL,130,https://github.com/code-423n4/2022-04-mimo-findings/issues/130,mimo,2022/04,bug;duplicate;QA (Quality Assurance)
115,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,2,Upgraded Q -> M from 114 [1654442763376],166,https://github.com/code-423n4/2022-04-mimo-findings/issues/166,mimo,2022/04,bug;duplicate;2 (Med Risk);upgraded by judge
115,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,2,"Using ""transfer/transferFrom"" instead of ""safeTransfer/safeTransferFrom"" throughout the contracts",116,https://github.com/code-423n4/2022-04-mimo-findings/issues/116,mimo,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance)
115,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,Q,QA Report,74,https://github.com/code-423n4/2022-04-mimo-findings/issues/74,mimo,2022/04,bug;QA (Quality Assurance)
115,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,G,Gas Optimizations,75,https://github.com/code-423n4/2022-04-mimo-findings/issues/75,mimo,2022/04,bug;G (Gas Optimization)
115,luduvigo,0x30b0EAe5e9Df8a1C95dFdB7AF86aa4e7F3B51f13,2,Misleading variable usage,10,https://github.com/code-423n4/2022-04-mimo-findings/issues/10,mimo,2022/04,bug;disagree with severity;QA (Quality Assurance)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,_depositAmount requires to be updated to contract balance increase,24,https://github.com/code-423n4/2022-04-mimo-findings/issues/24,mimo,2022/04,bug;duplicate;QA (Quality Assurance)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,_amount requires to be updated to contract balance increase,25,https://github.com/code-423n4/2022-04-mimo-findings/issues/25,mimo,2022/04,bug;duplicate;QA (Quality Assurance)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,_amount requires to be updated to contract balance increase (2),26,https://github.com/code-423n4/2022-04-mimo-findings/issues/26,mimo,2022/04,bug;duplicate;invalid;3 (High Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,_amount requires to be updated to contract balance increase (3),27,https://github.com/code-423n4/2022-04-mimo-findings/issues/27,mimo,2022/04,bug;duplicate;invalid;3 (High Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,_amount requires to be updated to contract balance increase (4),28,https://github.com/code-423n4/2022-04-mimo-findings/issues/28,mimo,2022/04,bug;duplicate;invalid;3 (High Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,amount requires to be updated to contract balance increase (5),29,https://github.com/code-423n4/2022-04-mimo-findings/issues/29,mimo,2022/04,bug;invalid;3 (High Risk);sponsor disputed
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,_increaseStake must be called before the transfer (re-entrancy attack),30,https://github.com/code-423n4/2022-04-mimo-findings/issues/30,mimo,2022/04,bug;duplicate;QA (Quality Assurance)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,_decreaseStake must be called before the transfer (re-entrancy attack),31,https://github.com/code-423n4/2022-04-mimo-findings/issues/31,mimo,2022/04,bug;duplicate;QA (Quality Assurance)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeApprove is recommended instead of approve,32,https://github.com/code-423n4/2022-04-mimo-findings/issues/32,mimo,2022/04,bug;duplicate;2 (Med Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeApprove is recommended instead of approve (2),33,https://github.com/code-423n4/2022-04-mimo-findings/issues/33,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,depositAmount requires to be updated to contract balance increase (6),34,https://github.com/code-423n4/2022-04-mimo-findings/issues/34,mimo,2022/04,bug;invalid;3 (High Risk);sponsor disputed
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeApprove is recommended instead of approve (3),35,https://github.com/code-423n4/2022-04-mimo-findings/issues/35,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeApprove is recommended instead of approve (4),36,https://github.com/code-423n4/2022-04-mimo-findings/issues/36,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeApprove is recommended instead of approve (5),37,https://github.com/code-423n4/2022-04-mimo-findings/issues/37,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeApprove is recommended instead of approve (6),38,https://github.com/code-423n4/2022-04-mimo-findings/issues/38,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeApprove is recommended instead of approve (7),39,https://github.com/code-423n4/2022-04-mimo-findings/issues/39,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeTransferFrom is recommended instead of transferFrom (7),40,https://github.com/code-423n4/2022-04-mimo-findings/issues/40,mimo,2022/04,bug;duplicate;invalid
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeTransferFrom is recommended instead of transferFrom (1),41,https://github.com/code-423n4/2022-04-mimo-findings/issues/41,mimo,2022/04,bug;duplicate;invalid
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeTransferFrom is recommended instead of transferFrom (2),42,https://github.com/code-423n4/2022-04-mimo-findings/issues/42,mimo,2022/04,bug;duplicate;invalid
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeTransfer is recommended instead of transfer (1),43,https://github.com/code-423n4/2022-04-mimo-findings/issues/43,mimo,2022/04,bug;duplicate;QA (Quality Assurance)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeTransfer is recommended instead of transfer (2),44,https://github.com/code-423n4/2022-04-mimo-findings/issues/44,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeTransfer is recommended instead of transfer (3),45,https://github.com/code-423n4/2022-04-mimo-findings/issues/45,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeTransfer is recommended instead of transfer (4),46,https://github.com/code-423n4/2022-04-mimo-findings/issues/46,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeTransfer is recommended instead of transfer (5),47,https://github.com/code-423n4/2022-04-mimo-findings/issues/47,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeTransfer is recommended instead of transfer (6),48,https://github.com/code-423n4/2022-04-mimo-findings/issues/48,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeTransfer is recommended instead of transfer (7),49,https://github.com/code-423n4/2022-04-mimo-findings/issues/49,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,safeTransfer is recommended instead of transfer (8),50,https://github.com/code-423n4/2022-04-mimo-findings/issues/50,mimo,2022/04,bug;duplicate;invalid;2 (Med Risk)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,Q,QA Report,51,https://github.com/code-423n4/2022-04-mimo-findings/issues/51,mimo,2022/04,bug;QA (Quality Assurance)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,G,Gas Optimizations,60,https://github.com/code-423n4/2022-04-mimo-findings/issues/60,mimo,2022/04,bug;G (Gas Optimization)
115,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,Q,QA Report,69,https://github.com/code-423n4/2022-04-mimo-findings/issues/69,mimo,2022/04,bug;duplicate;QA (Quality Assurance)
115,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,G,Gas Optimizations,20,https://github.com/code-423n4/2022-04-mimo-findings/issues/20,mimo,2022/04,bug;G (Gas Optimization)
115,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,Q,QA Report,21,https://github.com/code-423n4/2022-04-mimo-findings/issues/21,mimo,2022/04,bug;invalid;QA (Quality Assurance)
115,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Manager can grief with fees,132,https://github.com/code-423n4/2022-04-mimo-findings/issues/132,mimo,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance)
115,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Impossible to liquidate small amounts,133,https://github.com/code-423n4/2022-04-mimo-findings/issues/133,mimo,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
115,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,The liquidator can double dip from the liquidation,134,https://github.com/code-423n4/2022-04-mimo-findings/issues/134,mimo,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance)
115,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,Q,QA Report,137,https://github.com/code-423n4/2022-04-mimo-findings/issues/137,mimo,2022/04,bug;QA (Quality Assurance)
115,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Gas Optimizations,138,https://github.com/code-423n4/2022-04-mimo-findings/issues/138,mimo,2022/04,bug;G (Gas Optimization)
115,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,2,Upgraded Q -> M from 137 [1654449389324],173,https://github.com/code-423n4/2022-04-mimo-findings/issues/173,mimo,2022/04,bug;duplicate;2 (Med Risk);upgraded by judge
115,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,2,Usage of deprecated transfer to send ETH in VaultsCore.sol,146,https://github.com/code-423n4/2022-04-mimo-findings/issues/146,mimo,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
115,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,Q,QA Report,149,https://github.com/code-423n4/2022-04-mimo-findings/issues/149,mimo,2022/04,bug;QA (Quality Assurance)
115,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,3,Usage of insecure  ERC20.transferFrom in some critical deposits,161,https://github.com/code-423n4/2022-04-mimo-findings/issues/161,mimo,2022/04,bug;duplicate;QA (Quality Assurance);sponsor disputed
115,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,3,Anyone can rebalance vaults on behalf of owner and eventually extract funds,107,https://github.com/code-423n4/2022-04-mimo-findings/issues/107,mimo,2022/04,bug;duplicate;3 (High Risk);sponsor confirmed
115,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,G,Gas Optimizations,108,https://github.com/code-423n4/2022-04-mimo-findings/issues/108,mimo,2022/04,bug;G (Gas Optimization)
115,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,Q,QA Report,109,https://github.com/code-423n4/2022-04-mimo-findings/issues/109,mimo,2022/04,bug;QA (Quality Assurance)
115,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,104,https://github.com/code-423n4/2022-04-mimo-findings/issues/104,mimo,2022/04,bug;QA (Quality Assurance)
115,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,105,https://github.com/code-423n4/2022-04-mimo-findings/issues/105,mimo,2022/04,bug;G (Gas Optimization)
115,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Upgraded Q -> M from 104 [1654442859269],167,https://github.com/code-423n4/2022-04-mimo-findings/issues/167,mimo,2022/04,bug;duplicate;2 (Med Risk);upgraded by judge
115,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Upgraded Q -> M from 104 [1654443194486],170,https://github.com/code-423n4/2022-04-mimo-findings/issues/170,mimo,2022/04,bug;duplicate;2 (Med Risk);upgraded by judge
115,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,G,Gas Optimizations,14,https://github.com/code-423n4/2022-04-mimo-findings/issues/14,mimo,2022/04,bug;G (Gas Optimization)
115,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,G,Gas Optimizations,15,https://github.com/code-423n4/2022-04-mimo-findings/issues/15,mimo,2022/04,bug;duplicate;G (Gas Optimization)
115,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,G,Gas Optimizations,16,https://github.com/code-423n4/2022-04-mimo-findings/issues/16,mimo,2022/04,bug;duplicate;G (Gas Optimization)
115,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,G,Gas Optimizations,17,https://github.com/code-423n4/2022-04-mimo-findings/issues/17,mimo,2022/04,bug;duplicate;G (Gas Optimization)
115,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,G,Gas Optimizations,18,https://github.com/code-423n4/2022-04-mimo-findings/issues/18,mimo,2022/04,bug;duplicate;G (Gas Optimization)
115,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,G,Gas Optimizations,19,https://github.com/code-423n4/2022-04-mimo-findings/issues/19,mimo,2022/04,bug;duplicate;G (Gas Optimization)
115,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,G,Gas Optimizations,22,https://github.com/code-423n4/2022-04-mimo-findings/issues/22,mimo,2022/04,bug;duplicate;G (Gas Optimization)
115,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,Q,QA Report,23,https://github.com/code-423n4/2022-04-mimo-findings/issues/23,mimo,2022/04,bug;QA (Quality Assurance)
115,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,11,https://github.com/code-423n4/2022-04-mimo-findings/issues/11,mimo,2022/04,bug;G (Gas Optimization)
115,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,Q,QA Report,13,https://github.com/code-423n4/2022-04-mimo-findings/issues/13,mimo,2022/04,bug;QA (Quality Assurance)
115,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,84,https://github.com/code-423n4/2022-04-mimo-findings/issues/84,mimo,2022/04,bug;invalid;G (Gas Optimization);sponsor disputed
115,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,2,Missing validation could cause `liquidatePartial` to revert,79,https://github.com/code-423n4/2022-04-mimo-findings/issues/79,mimo,2022/04,bug;disagree with severity;QA (Quality Assurance)
115,sikorico,0x0E8ea7AD139C5EB10C6D1076962617D458D0Aed6,Q,QA Report,106,https://github.com/code-423n4/2022-04-mimo-findings/issues/106,mimo,2022/04,bug;QA (Quality Assurance)
115,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,Q,QA Report,72,https://github.com/code-423n4/2022-04-mimo-findings/issues/72,mimo,2022/04,bug;QA (Quality Assurance);sponsor disputed
115,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,G,Gas Optimizations,73,https://github.com/code-423n4/2022-04-mimo-findings/issues/73,mimo,2022/04,bug;invalid;G (Gas Optimization)
115,slywaters,0xcdc82d78cb49d4baa06d0988afdd27261b0667b2,G,Gas Optimizations,68,https://github.com/code-423n4/2022-04-mimo-findings/issues/68,mimo,2022/04,bug;G (Gas Optimization)
115,smiling_heretic,0xe180d626a4229c1F1C4cb0278cE071dBcC172AdB,2,Users can use updateBoost function to claim unfairly large rewards from liquidity mining contracts for themselves at cost of other users.,136,https://github.com/code-423n4/2022-04-mimo-findings/issues/136,mimo,2022/04,bug;2 (Med Risk);sponsor confirmed
115,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,G,Gas Optimizations,101,https://github.com/code-423n4/2022-04-mimo-findings/issues/101,mimo,2022/04,bug;G (Gas Optimization)
115,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,Q,QA Report,102,https://github.com/code-423n4/2022-04-mimo-findings/issues/102,mimo,2022/04,bug;QA (Quality Assurance)
115,Tadashi,0x8638c0a8C936DeFaCB575a2AD5B103F2a3876cE7,G,Gas Optimizations,157,https://github.com/code-423n4/2022-04-mimo-findings/issues/157,mimo,2022/04,bug;G (Gas Optimization)
115,tintin,0xAA371e26742290063d92F0Bd7197aC2D8d3aC4f1,3,"VaultCore's `withdrawETH` uses `transfer` function, which can be unusable for some smart contracts",99,https://github.com/code-423n4/2022-04-mimo-findings/issues/99,mimo,2022/04,bug;invalid;3 (High Risk);sponsor disputed
115,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,97,https://github.com/code-423n4/2022-04-mimo-findings/issues/97,mimo,2022/04,bug;G (Gas Optimization)
115,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,2,"Fund lose In DemandMinerV2, because of token can be PAR and constructor don't check for token!=PAR",100,https://github.com/code-423n4/2022-04-mimo-findings/issues/100,mimo,2022/04,bug;invalid;disagree with severity
115,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,In GenericMinerV2 get more reward by staking in votingEscrow and calling syncStake(),103,https://github.com/code-423n4/2022-04-mimo-findings/issues/103,mimo,2022/04,bug;invalid;3 (High Risk);sponsor disputed
115,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,Fund theft In GenericMinerV2 with calling updateBoost() to update user.stakeWithBoost without updating accAmountPerShare and accParAmountPerShare,112,https://github.com/code-423n4/2022-04-mimo-findings/issues/112,mimo,2022/04,bug;duplicate;2 (Med Risk)
115,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,Fund theft In PARMinerV2 with depositing in VotingEscrow and calling updateBoost() to update user.stakeWithBoost without updating accAmountPerShare and accParAmountPerShare. and then collecting more rewards,115,https://github.com/code-423n4/2022-04-mimo-findings/issues/115,mimo,2022/04,bug;duplicate;invalid;3 (High Risk)
115,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,Fund loss or theft by attacker with creating a flash loan and setting SuperVault as receiver so executeOperation()  will be get called by lendingPool but with attackers specified params,123,https://github.com/code-423n4/2022-04-mimo-findings/issues/123,mimo,2022/04,bug;3 (High Risk);sponsor confirmed
115,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,2,Fund theft in InceptionVaultsCore.depositByVaultId() if _vaultId is not for initialized vault (front-running attack),93,https://github.com/code-423n4/2022-04-mimo-findings/issues/93,mimo,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
115,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,2,"in contract DemandMinerV2, function setFeeCollector() allows to set ZERO address for _feeCollector",98,https://github.com/code-423n4/2022-04-mimo-findings/issues/98,mimo,2022/04,bug;disagree with severity;QA (Quality Assurance)
115,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,3,ERC20 tokens with no return value will fail to transfer,125,https://github.com/code-423n4/2022-04-mimo-findings/issues/125,mimo,2022/04,bug;duplicate;2 (Med Risk)
115,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,3,Non-standard ERC20 Tokens are Not Supported,127,https://github.com/code-423n4/2022-04-mimo-findings/issues/127,mimo,2022/04,bug;2 (Med Risk);sponsor acknowledged
115,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,G,Gas Optimizations,128,https://github.com/code-423n4/2022-04-mimo-findings/issues/128,mimo,2022/04,bug;G (Gas Optimization)
115,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,2,Check `.call()` return value in `SuperVault.sol::aggregatorSwap()`,94,https://github.com/code-423n4/2022-04-mimo-findings/issues/94,mimo,2022/04,bug;invalid;2 (Med Risk);sponsor disputed
115,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,G,Gas Optimizations,95,https://github.com/code-423n4/2022-04-mimo-findings/issues/95,mimo,2022/04,bug;G (Gas Optimization)
115,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,Q,QA Report,96,https://github.com/code-423n4/2022-04-mimo-findings/issues/96,mimo,2022/04,bug;QA (Quality Assurance)
90,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,Q,QA Report,95,https://github.com/code-423n4/2022-04-phuture-findings/issues/95,phuture,2022/04,bug;QA (Quality Assurance)
90,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,98,https://github.com/code-423n4/2022-04-phuture-findings/issues/98,phuture,2022/04,bug;G (Gas Optimization)
90,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Potentially Incomplete or Stale Data from Oracle,46,https://github.com/code-423n4/2022-04-phuture-findings/issues/46,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,Q,QA Report,49,https://github.com/code-423n4/2022-04-phuture-findings/issues/49,phuture,2022/04,bug;QA (Quality Assurance)
90,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,G,Gas Optimizations,50,https://github.com/code-423n4/2022-04-phuture-findings/issues/50,phuture,2022/04,bug;G (Gas Optimization)
90,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,G,Gas Optimizations,7,https://github.com/code-423n4/2022-04-phuture-findings/issues/7,phuture,2022/04,bug;G (Gas Optimization)
90,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,Q,QA Report,8,https://github.com/code-423n4/2022-04-phuture-findings/issues/8,phuture,2022/04,bug;QA (Quality Assurance)
90,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,2,latestRoundData data insufficiently validated,9,https://github.com/code-423n4/2022-04-phuture-findings/issues/9,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,14,https://github.com/code-423n4/2022-04-phuture-findings/issues/14,phuture,2022/04,bug;G (Gas Optimization)
90,abhinavmir,0xB47E50B7B67971713f80eC7Ec26332f18a7CF738,Q,QA Report,72,https://github.com/code-423n4/2022-04-phuture-findings/issues/72,phuture,2022/04,bug;QA (Quality Assurance)
90,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Chainlink's `latestRoundData` might return stale or incorrect results,44,https://github.com/code-423n4/2022-04-phuture-findings/issues/44,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,broccolirob,0x5233aF283E7C359a1011Dc0ff480298E90c8CFd6,3,vToken initialization function can be front-run,27,https://github.com/code-423n4/2022-04-phuture-findings/issues/27,phuture,2022/04,bug;invalid;sponsor disputed
90,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Chainlink's latestRoundData might return stale or incorrect results,1,https://github.com/code-423n4/2022-04-phuture-findings/issues/1,phuture,2022/04,bug;2 (Med Risk);sponsor confirmed
90,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,IndexLogic: An attacker can mint tokens for himself using assets deposited by other users,19,https://github.com/code-423n4/2022-04-phuture-findings/issues/19,phuture,2022/04,bug;3 (High Risk)
90,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,IndexLogic: An attacker can burn other users' tokens to transfer assets to himself,20,https://github.com/code-423n4/2022-04-phuture-findings/issues/20,phuture,2022/04,bug;duplicate;3 (High Risk)
90,CertoraInc,0x777bA383e74062dd7948A61471267E8e4370EA39,2,Burn function doesn't burn the correct value,51,https://github.com/code-423n4/2022-04-phuture-findings/issues/51,phuture,2022/04,bug;invalid;sponsor disputed
90,CertoraInc,0x777bA383e74062dd7948A61471267E8e4370EA39,2,There is no check of address that no 0,52,https://github.com/code-423n4/2022-04-phuture-findings/issues/52,phuture,2022/04,bug;invalid;sponsor disputed
90,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Asset Manager can update existing _assetAggregator,22,https://github.com/code-423n4/2022-04-phuture-findings/issues/22,phuture,2022/04,bug;2 (Med Risk)
90,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Duplicate asset can be added,23,https://github.com/code-423n4/2022-04-phuture-findings/issues/23,phuture,2022/04,bug;2 (Med Risk)
90,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,2,Should check return data from chainlink aggregators,6,https://github.com/code-423n4/2022-04-phuture-findings/issues/6,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,69,https://github.com/code-423n4/2022-04-phuture-findings/issues/69,phuture,2022/04,bug;G (Gas Optimization)
90,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,71,https://github.com/code-423n4/2022-04-phuture-findings/issues/71,phuture,2022/04,bug;QA (Quality Assurance)
90,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,11,https://github.com/code-423n4/2022-04-phuture-findings/issues/11,phuture,2022/04,bug;G (Gas Optimization)
90,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,12,https://github.com/code-423n4/2022-04-phuture-findings/issues/12,phuture,2022/04,bug;QA (Quality Assurance)
90,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Improper Validation Of Chainlink's `latestRoundData` Function,2,https://github.com/code-423n4/2022-04-phuture-findings/issues/2,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,G,Gas Optimizations,85,https://github.com/code-423n4/2022-04-phuture-findings/issues/85,phuture,2022/04,bug;G (Gas Optimization)
90,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,Q,QA Report,86,https://github.com/code-423n4/2022-04-phuture-findings/issues/86,phuture,2022/04,bug;QA (Quality Assurance)
90,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,G,Gas Optimizations,25,https://github.com/code-423n4/2022-04-phuture-findings/issues/25,phuture,2022/04,bug;G (Gas Optimization)
90,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,2,ORACLE Data is not properly validated in ChainlinkPriceOracle.sol,74,https://github.com/code-423n4/2022-04-phuture-findings/issues/74,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,G,Gas Optimizations,80,https://github.com/code-423n4/2022-04-phuture-findings/issues/80,phuture,2022/04,bug;G (Gas Optimization)
90,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,Q,QA Report,81,https://github.com/code-423n4/2022-04-phuture-findings/issues/81,phuture,2022/04,bug;QA (Quality Assurance)
90,foobar,0xe5ee2B9d5320f2D1492e16567F36b578372B3d9F,Q,QA Report,88,https://github.com/code-423n4/2022-04-phuture-findings/issues/88,phuture,2022/04,bug;QA (Quality Assurance)
90,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,76,https://github.com/code-423n4/2022-04-phuture-findings/issues/76,phuture,2022/04,bug;G (Gas Optimization)
90,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,77,https://github.com/code-423n4/2022-04-phuture-findings/issues/77,phuture,2022/04,bug;QA (Quality Assurance)
90,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,Index mint and burn calls can be front run,90,https://github.com/code-423n4/2022-04-phuture-findings/issues/90,phuture,2022/04,bug;duplicate;3 (High Risk)
90,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,Q,QA Report,99,https://github.com/code-423n4/2022-04-phuture-findings/issues/99,phuture,2022/04,bug;QA (Quality Assurance)
90,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Insufficient oracle data feed validation,53,https://github.com/code-423n4/2022-04-phuture-findings/issues/53,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Inactive skipped assets can be drained from the index,54,https://github.com/code-423n4/2022-04-phuture-findings/issues/54,phuture,2022/04,bug;2 (Med Risk)
90,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Index managers can rug user funds,55,https://github.com/code-423n4/2022-04-phuture-findings/issues/55,phuture,2022/04,bug;2 (Med Risk)
90,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,56,https://github.com/code-423n4/2022-04-phuture-findings/issues/56,phuture,2022/04,bug;QA (Quality Assurance)
90,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,57,https://github.com/code-423n4/2022-04-phuture-findings/issues/57,phuture,2022/04,bug;G (Gas Optimization)
90,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,2,latestRoundData  might return stale,3,https://github.com/code-423n4/2022-04-phuture-findings/issues/3,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,G,Gas Optimizations,89,https://github.com/code-423n4/2022-04-phuture-findings/issues/89,phuture,2022/04,bug;G (Gas Optimization)
90,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,Q,QA Report,92,https://github.com/code-423n4/2022-04-phuture-findings/issues/92,phuture,2022/04,bug;QA (Quality Assurance)
90,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,2,Chainlink oracle might return stale data,15,https://github.com/code-423n4/2022-04-phuture-findings/issues/15,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,Q,QA Report,70,https://github.com/code-423n4/2022-04-phuture-findings/issues/70,phuture,2022/04,bug;QA (Quality Assurance)
90,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,3,Orderers Can Unauthorized Transfer User's Share In Single Step,31,https://github.com/code-423n4/2022-04-phuture-findings/issues/31,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,3,Index Minting and Redemption Can Be Frontrun,33,https://github.com/code-423n4/2022-04-phuture-findings/issues/33,phuture,2022/04,bug;duplicate;3 (High Risk)
90,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,2,Unvalidated Uniswap Oracle Zero Average Price,34,https://github.com/code-423n4/2022-04-phuture-findings/issues/34,phuture,2022/04,bug;invalid
90,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,Q,QA Report,35,https://github.com/code-423n4/2022-04-phuture-findings/issues/35,phuture,2022/04,bug;QA (Quality Assurance)
90,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,G,Gas Optimizations,36,https://github.com/code-423n4/2022-04-phuture-findings/issues/36,phuture,2022/04,bug;G (Gas Optimization)
90,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,2,Missing Validations for the return values of Chainlink Price feeds,45,https://github.com/code-423n4/2022-04-phuture-findings/issues/45,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,91,https://github.com/code-423n4/2022-04-phuture-findings/issues/91,phuture,2022/04,bug;G (Gas Optimization)
90,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,93,https://github.com/code-423n4/2022-04-phuture-findings/issues/93,phuture,2022/04,bug;QA (Quality Assurance)
90,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,G,Gas Optimizations,21,https://github.com/code-423n4/2022-04-phuture-findings/issues/21,phuture,2022/04,bug;G (Gas Optimization);sponsor disputed
90,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,refreshedAssetPerBaseInUQ may returns incorrect value,4,https://github.com/code-423n4/2022-04-phuture-findings/issues/4,phuture,2022/04,bug;invalid;sponsor disputed
90,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,lastAssetPerBaseInUQ may return incorrect value,5,https://github.com/code-423n4/2022-04-phuture-findings/issues/5,phuture,2022/04,bug;duplicate;invalid
90,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,Q,QA Report,78,https://github.com/code-423n4/2022-04-phuture-findings/issues/78,phuture,2022/04,bug;QA (Quality Assurance)
90,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,G,Gas Optimizations,79,https://github.com/code-423n4/2022-04-phuture-findings/issues/79,phuture,2022/04,bug;G (Gas Optimization)
90,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,G,Gas Optimizations,16,https://github.com/code-423n4/2022-04-phuture-findings/issues/16,phuture,2022/04,bug;G (Gas Optimization)
90,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,Q,QA Report,17,https://github.com/code-423n4/2022-04-phuture-findings/issues/17,phuture,2022/04,bug;QA (Quality Assurance)
90,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,3,Attacker can cause minter to lose his funds by calling sync() between deposit and mint(),65,https://github.com/code-423n4/2022-04-phuture-findings/issues/65,phuture,2022/04,bug;duplicate;3 (High Risk)
90,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Chainlink oracle data can be stale,66,https://github.com/code-423n4/2022-04-phuture-findings/issues/66,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,peritoflores,0xca14410735e29650dc240245d96bb376c51477c1,2,Unchecked parameters in Chainlink latestRounddata() could lead to retrieve stale data,87,https://github.com/code-423n4/2022-04-phuture-findings/issues/87,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`basePrice` and `quotePrice` values are insufficiently validated,60,https://github.com/code-423n4/2022-04-phuture-findings/issues/60,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,61,https://github.com/code-423n4/2022-04-phuture-findings/issues/61,phuture,2022/04,bug;G (Gas Optimization)
90,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`mint` is public in `IndexLogic.sol`,67,https://github.com/code-423n4/2022-04-phuture-findings/issues/67,phuture,2022/04,bug;invalid;sponsor disputed
90,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,68,https://github.com/code-423n4/2022-04-phuture-findings/issues/68,phuture,2022/04,bug;QA (Quality Assurance)
90,reassor,0x4135B2eE90622e19C736a4988A073432a72eca95,2,Chainlink's latestRoundData missing security checks,24,https://github.com/code-423n4/2022-04-phuture-findings/issues/24,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,remora,0x1434b95234155DA830c20d02548aF22f14A38FbE,3,reweight() in ReweightingLogic contracts are missing role based guard checks as in Index contracts,32,https://github.com/code-423n4/2022-04-phuture-findings/issues/32,phuture,2022/04,bug;invalid;sponsor disputed
90,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,84,https://github.com/code-423n4/2022-04-phuture-findings/issues/84,phuture,2022/04,bug;G (Gas Optimization)
90,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,38,https://github.com/code-423n4/2022-04-phuture-findings/issues/38,phuture,2022/04,bug;QA (Quality Assurance)
90,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,39,https://github.com/code-423n4/2022-04-phuture-findings/issues/39,phuture,2022/04,bug;G (Gas Optimization)
90,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Two arrays length mismatch,41,https://github.com/code-423n4/2022-04-phuture-findings/issues/41,phuture,2022/04,bug;invalid;sponsor disputed
90,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Div by 0,42,https://github.com/code-423n4/2022-04-phuture-findings/issues/42,phuture,2022/04,bug;invalid;sponsor disputed
90,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,2,Tokens with fee on transfer are not supported,43,https://github.com/code-423n4/2022-04-phuture-findings/issues/43,phuture,2022/04,bug;2 (Med Risk);sponsor confirmed
90,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,G,Gas Optimizations,13,https://github.com/code-423n4/2022-04-phuture-findings/issues/13,phuture,2022/04,bug;G (Gas Optimization)
90,slywaters,0xcdc82d78cb49d4baa06d0988afdd27261b0667b2,G,Gas Optimizations,10,https://github.com/code-423n4/2022-04-phuture-findings/issues/10,phuture,2022/04,bug;G (Gas Optimization)
90,sseefried,0x033e21B02373489ff2f7a2c2f1B109a1bC6158aD,Q,QA Report,94,https://github.com/code-423n4/2022-04-phuture-findings/issues/94,phuture,2022/04,bug;QA (Quality Assurance)
90,sseefried,0x033e21B02373489ff2f7a2c2f1B109a1bC6158aD,3,Subtraction of values of two different units causing arbitrary results,96,https://github.com/code-423n4/2022-04-phuture-findings/issues/96,phuture,2022/04,bug;invalid;sponsor disputed
90,sseefried,0x033e21B02373489ff2f7a2c2f1B109a1bC6158aD,2,`vToken`s may not be minted in `IndexLogic.mint` function,97,https://github.com/code-423n4/2022-04-phuture-findings/issues/97,phuture,2022/04,bug;invalid
90,tabish,0xD6FCD2F85fE975bB9b0f3C1B1c6802bB09d33E43,2,Price can be stale leading to wrong return value in refreshedAssetPerBaseInUQ in ChainlinkPriceOracle.sol,37,https://github.com/code-423n4/2022-04-phuture-findings/issues/37,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,Tadashi,0x8638c0a8C936DeFaCB575a2AD5B103F2a3876cE7,Q,QA Report,82,https://github.com/code-423n4/2022-04-phuture-findings/issues/82,phuture,2022/04,bug;QA (Quality Assurance)
90,Tadashi,0x8638c0a8C936DeFaCB575a2AD5B103F2a3876cE7,G,Gas Optimizations,83,https://github.com/code-423n4/2022-04-phuture-findings/issues/83,phuture,2022/04,bug;G (Gas Optimization);sponsor disputed
90,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,Q,QA Report,28,https://github.com/code-423n4/2022-04-phuture-findings/issues/28,phuture,2022/04,bug;QA (Quality Assurance)
90,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,G,Gas Optimizations,29,https://github.com/code-423n4/2022-04-phuture-findings/issues/29,phuture,2022/04,bug;G (Gas Optimization)
90,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,75,https://github.com/code-423n4/2022-04-phuture-findings/issues/75,phuture,2022/04,bug;G (Gas Optimization)
90,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,2,Wrong shareChange() function (vToken.sol),26,https://github.com/code-423n4/2022-04-phuture-findings/issues/26,phuture,2022/04,bug;2 (Med Risk)
90,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,2,Wrong requirement in reweight function (ManagedIndexReweightingLogic.sol),40,https://github.com/code-423n4/2022-04-phuture-findings/issues/40,phuture,2022/04,bug;2 (Med Risk);resolved;sponsor confirmed
90,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,G,Gas Optimizations,47,https://github.com/code-423n4/2022-04-phuture-findings/issues/47,phuture,2022/04,bug;G (Gas Optimization)
90,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,2,Should implement a periphery contract for user to mint indexToken  ,48,https://github.com/code-423n4/2022-04-phuture-findings/issues/48,phuture,2022/04,bug;duplicate;3 (High Risk)
90,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`UniswapV2PriceOracle.sol` `currentCumulativePrices()` will revert when `priceCumulative` addition overflow,62,https://github.com/code-423n4/2022-04-phuture-findings/issues/62,phuture,2022/04,bug;3 (High Risk);resolved;sponsor confirmed
90,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`UniswapV2PriceOracle#refreshedAssetPerBaseInUQ()` will revert when pair cumulative prices underflow,63,https://github.com/code-423n4/2022-04-phuture-findings/issues/63,phuture,2022/04,bug;duplicate;3 (High Risk)
90,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Chainlink's `latestRoundData` might return stale or incorrect results,64,https://github.com/code-423n4/2022-04-phuture-findings/issues/64,phuture,2022/04,bug;duplicate;2 (Med Risk)
90,windhustler,0x93b45518025a21611843933087157eA8AF0Af4aF,G,Gas Optimizations,73,https://github.com/code-423n4/2022-04-phuture-findings/issues/73,phuture,2022/04,bug;G (Gas Optimization)
90,xpriment626,0xA66D38D132461f69b5aA1958233Ee120f513D451,Q,QA Report,18,https://github.com/code-423n4/2022-04-phuture-findings/issues/18,phuture,2022/04,bug;QA (Quality Assurance)
90,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,Q,QA Report,58,https://github.com/code-423n4/2022-04-phuture-findings/issues/58,phuture,2022/04,bug;QA (Quality Assurance)
90,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,G,Gas Optimizations,59,https://github.com/code-423n4/2022-04-phuture-findings/issues/59,phuture,2022/04,bug;G (Gas Optimization);sponsor disputed
114,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,11,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/11,pooltogether,2022/04,bug;G (Gas Optimization);sponsor confirmed
114,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Lack of require in redeemToken could produce token loses,10,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/10,pooltogether,2022/04,bug;duplicate;2 (Med Risk);sponsor disputed
114,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,9,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/9,pooltogether,2022/04,bug;G (Gas Optimization);sponsor confirmed
114,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,14,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/14,pooltogether,2022/04,bug;duplicate;G (Gas Optimization)
114,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,15,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/15,pooltogether,2022/04,bug;G (Gas Optimization)
114,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,2,Bug in calculation it should use aToken balance instead of totalSupply,16,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/16,pooltogether,2022/04,bug;duplicate;invalid;sponsor disputed
114,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,17,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/17,pooltogether,2022/04,bug;duplicate;G (Gas Optimization);sponsor confirmed
114,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,18,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/18,pooltogether,2022/04,bug;duplicate;G (Gas Optimization);sponsor confirmed
114,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,19,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/19,pooltogether,2022/04,bug;duplicate;G (Gas Optimization);sponsor confirmed
114,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,2,supplyTokenTo allows users to bypass prize pool,3,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/3,pooltogether,2022/04,bug;invalid;sponsor disputed
114,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,Q,QA Report,4,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/4,pooltogether,2022/04,bug;QA (Quality Assurance);sponsor confirmed
114,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Early Depositor can DOS Deposits,26,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/26,pooltogether,2022/04,bug;duplicate;3 (High Risk)
114,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,Q,QA Report,33,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/33,pooltogether,2022/04,bug;QA (Quality Assurance)
114,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,G,Gas Optimizations,34,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/34,pooltogether,2022/04,bug;G (Gas Optimization)
114,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,G,Gas Optimizations,41,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/41,pooltogether,2022/04,bug;G (Gas Optimization);sponsor acknowledged
114,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,Q,QA Report,42,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/42,pooltogether,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
114,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,G,Gas Optimizations,60,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/60,pooltogether,2022/04,bug;G (Gas Optimization)
114,242,0x8C67Cc76e6043d9DfE47Eb1a24d69cAf0Bc40bab,G,Gas Optimizations,40,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/40,pooltogether,2022/04,bug;G (Gas Optimization)
114,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Inconsistent balance when supplying fee-on transfer tokens,81,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/81,pooltogether,2022/04,bug;duplicate;2 (Med Risk)
114,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Initial `supplyTokenTo()` with `_depositAmount=1 wei` causes expensive share price,82,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/82,pooltogether,2022/04,bug;duplicate;3 (High Risk)
114,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"When the return value of _pool () is changed, it can DOS supplyTokenTo().",27,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/27,pooltogether,2022/04,bug;invalid;sponsor disputed
114,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Manager or owner can send rewards to any address,29,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/29,pooltogether,2022/04,bug;invalid;sponsor disputed
114,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Manager or owner can send rewards to any address,30,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/30,pooltogether,2022/04,bug;duplicate;invalid;2 (Med Risk)
114,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,Q,QA Report,31,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/31,pooltogether,2022/04,bug;duplicate;2 (Med Risk)
114,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,3,Fee-on-transfer tokens will mess up the internal accounting of the contract,46,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/46,pooltogether,2022/04,bug;duplicate;2 (Med Risk)
114,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,3,"An attacker can make users' funds get ""locked"" in the contract (the owner can get them out and transfer them back to the users)",47,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/47,pooltogether,2022/04,bug;duplicate;3 (High Risk)
114,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,3,"An attacker can make users' funds get ""locked"" in the contract (the owner can get them out and transfer them back to the users)",48,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/48,pooltogether,2022/04,bug;duplicate;3 (High Risk)
114,CertoraInc,0x009dA689fE16166448B0D6C0f5D2F82033A16B8A,3,Frontrun attack to steal first depositor money,49,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/49,pooltogether,2022/04,bug;duplicate;3 (High Risk)
114,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,77,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/77,pooltogether,2022/04,bug;G (Gas Optimization)
114,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,78,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/78,pooltogether,2022/04,bug;invalid;QA (Quality Assurance)
114,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,Q,QA Report,62,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/62,pooltogether,2022/04,bug;QA (Quality Assurance)
114,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,50,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/50,pooltogether,2022/04,bug;G (Gas Optimization)
114,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,53,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/53,pooltogether,2022/04,bug;QA (Quality Assurance)
114,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,G,Gas Optimizations,32,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/32,pooltogether,2022/04,bug;G (Gas Optimization);sponsor confirmed
114,GermanKuber,0x1Fc3Db9f68C8bae27a1B6F2f15e111268358F9eF,Q,QA Report,35,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/35,pooltogether,2022/04,bug;invalid;sponsor confirmed
114,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,_tokenToShares() doesn’t check division by zero problem,54,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/54,pooltogether,2022/04,bug;duplicate;invalid
114,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`claimRewards()` may have a rug risk.,55,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/55,pooltogether,2022/04,bug;duplicate;2 (Med Risk);sponsor acknowledged
114,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,56,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/56,pooltogether,2022/04,bug;QA (Quality Assurance)
114,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,57,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/57,pooltogether,2022/04,bug;G (Gas Optimization)
114,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Rounding-error can be redeemed for free,100,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/100,pooltogether,2022/04,bug;duplicate;3 (High Risk)
114,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,58,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/58,pooltogether,2022/04,bug;G (Gas Optimization)
114,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,59,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/59,pooltogether,2022/04,bug;QA (Quality Assurance)
114,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,3,Malicious competitor/attacker could make users receive less tokens per share than they should.,23,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/23,pooltogether,2022/04,bug;invalid;sponsor disputed
114,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,Q,QA Report,24,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/24,pooltogether,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
114,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,G,Gas Optimizations,25,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/25,pooltogether,2022/04,bug;G (Gas Optimization)
114,Hawkeye,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,97,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/97,pooltogether,2022/04,bug;duplicate;invalid
114,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,Q,QA Report,96,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/96,pooltogether,2022/04,bug;G (Gas Optimization)
114,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,G,Gas Optimizations,98,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/98,pooltogether,2022/04,bug;duplicate;G (Gas Optimization);sponsor confirmed
114,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,84,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/84,pooltogether,2022/04,bug;G (Gas Optimization);sponsor confirmed
114,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,85,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/85,pooltogether,2022/04,bug;QA (Quality Assurance);sponsor confirmed
114,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,Yield source does not correctly calculate share conversions,86,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/86,pooltogether,2022/04,bug;2 (Med Risk);sponsor acknowledged
114,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Yield source cannot deposit fee-on-transfer tokens,88,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/88,pooltogether,2022/04,bug;duplicate;2 (Med Risk)
114,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Owner or Managers can rug Aave rewards,89,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/89,pooltogether,2022/04,bug;2 (Med Risk)
114,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Yield source unnecesarily loses money to fees,90,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/90,pooltogether,2022/04,bug;invalid;sponsor disputed
114,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,G,Gas Optimizations,73,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/73,pooltogether,2022/04,bug;G (Gas Optimization)
114,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,2,Calculation without check may result in tiny loss of user funds,74,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/74,pooltogether,2022/04,bug;duplicate;3 (High Risk)
114,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,Q,QA Report,76,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/76,pooltogether,2022/04,bug;QA (Quality Assurance)
114,Kulk0,0xa192fBe6bb68113d9b86Ef118ED5696CA70fb405,G,Gas Optimizations,71,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/71,pooltogether,2022/04,bug;invalid;G (Gas Optimization);sponsor disputed
114,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,Contract Can Be Bricked by Transferring a Large Amount of `aTokens`,63,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/63,pooltogether,2022/04,bug;duplicate;3 (High Risk)
114,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,Owner of the `PoolAddressesProviderRegistry` Contract Can Update the Pool Address and Effectively Lock Deposited Funds by Preventing All Withdrawals,65,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/65,pooltogether,2022/04,bug;duplicate;invalid;2 (Med Risk)
114,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,`RewardsController` Emission Manager Can Authorize Users to Claim on Behalf of the `AaveV3YieldSource` Contract and Siphon Yield,70,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/70,pooltogether,2022/04,bug;2 (Med Risk);sponsor acknowledged
114,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,Q,QA Report,12,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/12,pooltogether,2022/04,bug;QA (Quality Assurance)
114,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,G,Gas Optimizations,13,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/13,pooltogether,2022/04,bug;G (Gas Optimization);sponsor acknowledged
114,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,Incorrect _tokenToShares calculation (division by zero + wrong shares output if _supply is zero),7,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/7,pooltogether,2022/04,bug;invalid;sponsor disputed
114,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,_depositAmount requires to be updated to contract balance increase,8,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/8,pooltogether,2022/04,bug;2 (Med Risk);sponsor acknowledged
114,miguelmtzinf,0xBc281b36D91Aa9c7a6D0eF6312845c01c4666a7c,G,Gas Optimizations,83,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/83,pooltogether,2022/04,bug;duplicate;G (Gas Optimization)
114,miguelmtzinf,0xBc281b36D91Aa9c7a6D0eF6312845c01c4666a7c,G,Gas Optimizations,91,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/91,pooltogether,2022/04,bug;G (Gas Optimization)
114,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,G,Gas Optimizations,6,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/6,pooltogether,2022/04,bug;invalid;G (Gas Optimization);sponsor disputed
114,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,Q,QA Report,79,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/79,pooltogether,2022/04,bug;QA (Quality Assurance)
114,pauliax,0x0c4243ca087F4e4738596F33292064e847DA80dA,G,Gas Optimizations,80,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/80,pooltogether,2022/04,bug;G (Gas Optimization)
114,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,Owner can steal rewards,72,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/72,pooltogether,2022/04,bug;duplicate;invalid;2 (Med Risk)
114,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,3,Pool has free access to all funds without using the redeem method,87,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/87,pooltogether,2022/04,bug;invalid;3 (High Risk);sponsor disputed
114,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,Q,QA Report,94,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/94,pooltogether,2022/04,bug;G (Gas Optimization)
114,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,G,Gas Optimizations,95,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/95,pooltogether,2022/04,bug;duplicate;G (Gas Optimization)
114,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,G,Gas Optimizations,92,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/92,pooltogether,2022/04,bug;G (Gas Optimization)
114,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,Q,QA Report,93,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/93,pooltogether,2022/04,bug;invalid;QA (Quality Assurance);sponsor disputed
114,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,Q,QA Report,61,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/61,pooltogether,2022/04,bug;QA (Quality Assurance);sponsor acknowledged
114,reassor,0xd822554aBe37B52E34D0C599EC828dC8C46721FF,2,Missing support for ERC20 with fee,64,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/64,pooltogether,2022/04,bug;duplicate;2 (Med Risk)
114,reassor,0xd822554aBe37B52E34D0C599EC828dC8C46721FF,Q,QA Report,75,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/75,pooltogether,2022/04,bug;QA (Quality Assurance)
114,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,G,Gas Optimizations,1,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/1,pooltogether,2022/04,bug;duplicate;G (Gas Optimization);sponsor confirmed
114,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,G,Gas Optimizations,2,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/2,pooltogether,2022/04,bug;G (Gas Optimization);sponsor confirmed
114,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,G,Gas Optimizations,5,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/5,pooltogether,2022/04,bug;duplicate;G (Gas Optimization);sponsor acknowledged
114,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,G,Gas Optimizations,67,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/67,pooltogether,2022/04,bug;G (Gas Optimization);sponsor confirmed
114,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,Q,QA Report,68,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/68,pooltogether,2022/04,bug;invalid;sponsor disputed
114,slywaters,0xcdc82d78cb49d4baa06d0988afdd27261b0667b2,G,Gas Optimizations,20,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/20,pooltogether,2022/04,bug;G (Gas Optimization)
114,tabish,0xD6FCD2F85fE975bB9b0f3C1B1c6802bB09d33E43,Q,QA Report,28,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/28,pooltogether,2022/04,bug;G (Gas Optimization)
114,Tadashi,0x8638c0a8C936DeFaCB575a2AD5B103F2a3876cE7,G,Gas Optimizations,66,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/66,pooltogether,2022/04,bug;G (Gas Optimization)
114,Tadashi,0x8638c0a8C936DeFaCB575a2AD5B103F2a3876cE7,Q,QA Report,69,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/69,pooltogether,2022/04,bug;invalid;QA (Quality Assurance)
114,Tadashi,0x8638c0a8C936DeFaCB575a2AD5B103F2a3876cE7,3,Griefing attack by transferring aTokens to the contract,99,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/99,pooltogether,2022/04,bug;duplicate;3 (High Risk)
114,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Gas Optimizations,51,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/51,pooltogether,2022/04,bug;duplicate;G (Gas Optimization)
114,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,Q,QA Report,52,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/52,pooltogether,2022/04,bug;G (Gas Optimization)
114,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,Q,QA Report,39,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/39,pooltogether,2022/04,bug;G (Gas Optimization)
114,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,User fund lose and DOS attack when totalSupply() is zero ,36,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/36,pooltogether,2022/04,bug;duplicate;3 (High Risk)
114,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,User fund loss in supplyTokenTo() because of rounding,37,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/37,pooltogether,2022/04,bug;2 (Med Risk);sponsor confirmed
114,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,Fund theft in redeemToken() because of rounding in division,38,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/38,pooltogether,2022/04,bug;invalid;3 (High Risk);sponsor disputed
114,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,G,Gas Optimizations,43,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/43,pooltogether,2022/04,bug;G (Gas Optimization)
114,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,3,[WP-H1] A malicious early user/attacker can manipulate the vault's pricePerShare to take an unfair share of future users' deposits,44,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/44,pooltogether,2022/04,bug;3 (High Risk);sponsor confirmed
114,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,2,[WP-M1] `supplyTokenTo()` may fail when Aave Pool address changed,45,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/45,pooltogether,2022/04,bug;duplicate;invalid;2 (Med Risk)
114,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,G,Gas Optimizations,21,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/21,pooltogether,2022/04,bug;G (Gas Optimization)
114,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,Q,QA Report,22,https://github.com/code-423n4/2022-04-pooltogether-findings/issues/22,pooltogether,2022/04,bug;QA (Quality Assurance);sponsor confirmed
111,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,Q,QA Report,13,https://github.com/code-423n4/2022-04-xtribe-findings/issues/13,xtribe,2022/04,bug;sponsor acknowledged;QA (Quality Assurance)
111,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,14,https://github.com/code-423n4/2022-04-xtribe-findings/issues/14,xtribe,2022/04,bug;G (Gas Optimization);sponsor todo
111,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,47,https://github.com/code-423n4/2022-04-xtribe-findings/issues/47,xtribe,2022/04,bug;G (Gas Optimization)
111,0x421f,0xFB9c22c601fbbf84d7DE34F2Dd114fCa1CCa292c,2,None,35,https://github.com/code-423n4/2022-04-xtribe-findings/issues/35,xtribe,2022/04,bug;invalid
111,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,2,_incrementGaugeWeight allows user to add weight to nonexistent gauges,42,https://github.com/code-423n4/2022-04-xtribe-findings/issues/42,xtribe,2022/04,bug;duplicate;2 (Med Risk)
111,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,2,Lack of 0 address checks on crucial functions can result in loss of funds,94,https://github.com/code-423n4/2022-04-xtribe-findings/issues/94,xtribe,2022/04,bug;duplicate;sponsor disputed;QA (Quality Assurance)
111,0xDjango,0x5938Dc681121c306192F3187a3EEe47B9C697BA0,Q,QA Report,97,https://github.com/code-423n4/2022-04-xtribe-findings/issues/97,xtribe,2022/04,bug;QA (Quality Assurance);sponsor todo
111,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,G,Gas Optimizations,41,https://github.com/code-423n4/2022-04-xtribe-findings/issues/41,xtribe,2022/04,bug;G (Gas Optimization)
111,0xmint,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,71,https://github.com/code-423n4/2022-04-xtribe-findings/issues/71,xtribe,2022/04,bug;sponsor acknowledged;QA (Quality Assurance)
111,0xmint,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,G,Gas Optimizations,73,https://github.com/code-423n4/2022-04-xtribe-findings/issues/73,xtribe,2022/04,bug;G (Gas Optimization);sponsor acknowledged
111,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,9,https://github.com/code-423n4/2022-04-xtribe-findings/issues/9,xtribe,2022/04,bug;G (Gas Optimization);sponsor acknowledged
111,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2, Potentially early unlock of reward amount,49,https://github.com/code-423n4/2022-04-xtribe-findings/issues/49,xtribe,2022/04,bug;invalid;sponsor disputed
111,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,Q,QA Report,50,https://github.com/code-423n4/2022-04-xtribe-findings/issues/50,xtribe,2022/04,bug;sponsor disputed;QA (Quality Assurance)
111,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,G,Gas Optimizations,51,https://github.com/code-423n4/2022-04-xtribe-findings/issues/51,xtribe,2022/04,bug;G (Gas Optimization);sponsor confirmed
111,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,"ERC20Gauges: The _incrementGaugeWeight function does not check the gauge parameter enough, so the user may lose rewards.",5,https://github.com/code-423n4/2022-04-xtribe-findings/issues/5,xtribe,2022/04,bug;2 (Med Risk);disagree with severity;sponsor todo
111,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,69,https://github.com/code-423n4/2022-04-xtribe-findings/issues/69,xtribe,2022/04,bug;sponsor confirmed;QA (Quality Assurance);sponsor todo
111,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,70,https://github.com/code-423n4/2022-04-xtribe-findings/issues/70,xtribe,2022/04,bug;G (Gas Optimization);sponsor confirmed
111,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,rewardsCycleEnd is not set properly,18,https://github.com/code-423n4/2022-04-xtribe-findings/issues/18,xtribe,2022/04,bug;invalid;sponsor disputed;sponsor todo
111,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Bypass rewardsCycleEnd duration,19,https://github.com/code-423n4/2022-04-xtribe-findings/issues/19,xtribe,2022/04,bug;invalid;sponsor disputed
111,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,User can steal rewards,20,https://github.com/code-423n4/2022-04-xtribe-findings/issues/20,xtribe,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor todo
111,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,21,https://github.com/code-423n4/2022-04-xtribe-findings/issues/21,xtribe,2022/04,bug;sponsor acknowledged;QA (Quality Assurance)
111,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,31,https://github.com/code-423n4/2022-04-xtribe-findings/issues/31,xtribe,2022/04,bug;G (Gas Optimization);sponsor acknowledged;sponsor todo
111,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,96,https://github.com/code-423n4/2022-04-xtribe-findings/issues/96,xtribe,2022/04,bug;G (Gas Optimization);sponsor todo
111,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,98,https://github.com/code-423n4/2022-04-xtribe-findings/issues/98,xtribe,2022/04,bug;QA (Quality Assurance);sponsor todo
111,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,G,Gas Optimizations,53,https://github.com/code-423n4/2022-04-xtribe-findings/issues/53,xtribe,2022/04,bug;duplicate;G (Gas Optimization)
111,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,Q,QA Report,54,https://github.com/code-423n4/2022-04-xtribe-findings/issues/54,xtribe,2022/04,bug;QA (Quality Assurance);sponsor todo
111,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,G,Gas Optimizations,68,https://github.com/code-423n4/2022-04-xtribe-findings/issues/68,xtribe,2022/04,bug;G (Gas Optimization);sponsor confirmed
111,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,Q,QA Report,80,https://github.com/code-423n4/2022-04-xtribe-findings/issues/80,xtribe,2022/04,bug;invalid;QA (Quality Assurance)
111,dipp,0x675454Ae78d25632fC26763Fa9CB72a99Cb0A36e,Q,QA Report,83,https://github.com/code-423n4/2022-04-xtribe-findings/issues/83,xtribe,2022/04,bug;sponsor disputed;QA (Quality Assurance)
111,djxploit,0x2635BBAB233B9a1CD7703e6c4B80FE39055971d6,G,Gas Optimizations,36,https://github.com/code-423n4/2022-04-xtribe-findings/issues/36,xtribe,2022/04,bug;G (Gas Optimization)
111,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,34,https://github.com/code-423n4/2022-04-xtribe-findings/issues/34,xtribe,2022/04,bug;G (Gas Optimization)
111,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,64,https://github.com/code-423n4/2022-04-xtribe-findings/issues/64,xtribe,2022/04,bug;sponsor disputed;QA (Quality Assurance)
111,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,2,Not checking proper conditions in assert as mentioned in comment,16,https://github.com/code-423n4/2022-04-xtribe-findings/issues/16,xtribe,2022/04,bug;duplicate;sponsor disputed;QA (Quality Assurance);sponsor todo
111,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,G,Gas Optimizations,32,https://github.com/code-423n4/2022-04-xtribe-findings/issues/32,xtribe,2022/04,bug;G (Gas Optimization)
111,fatima_naz,0x63A62BDCA68DCA4B98385De493f73C7393b14F6b,Q,QA Report,33,https://github.com/code-423n4/2022-04-xtribe-findings/issues/33,xtribe,2022/04,bug;QA (Quality Assurance)
111,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,Gas Optimizations,79,https://github.com/code-423n4/2022-04-xtribe-findings/issues/79,xtribe,2022/04,bug;G (Gas Optimization);sponsor acknowledged
111,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,Q,QA Report,88,https://github.com/code-423n4/2022-04-xtribe-findings/issues/88,xtribe,2022/04,bug;invalid;sponsor disputed
111,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,89,https://github.com/code-423n4/2022-04-xtribe-findings/issues/89,xtribe,2022/04,bug;G (Gas Optimization);sponsor acknowledged
111,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,2,Incorrect accounting of free weight in `_decrementWeightUntilFree`,61,https://github.com/code-423n4/2022-04-xtribe-findings/issues/61,xtribe,2022/04,bug;2 (Med Risk);sponsor confirmed;sponsor todo
111,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,62,https://github.com/code-423n4/2022-04-xtribe-findings/issues/62,xtribe,2022/04,bug;G (Gas Optimization);sponsor acknowledged
111,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,63,https://github.com/code-423n4/2022-04-xtribe-findings/issues/63,xtribe,2022/04,bug;sponsor disputed;QA (Quality Assurance)
111,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,2,Unchecked return value for `transfer` and `transferFrom`,86,https://github.com/code-423n4/2022-04-xtribe-findings/issues/86,xtribe,2022/04,bug;invalid;sponsor disputed
111,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,Q,QA Report,87,https://github.com/code-423n4/2022-04-xtribe-findings/issues/87,xtribe,2022/04,bug;sponsor acknowledged;QA (Quality Assurance)
111,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,Q,QA Report,39,https://github.com/code-423n4/2022-04-xtribe-findings/issues/39,xtribe,2022/04,bug;QA (Quality Assurance)
111,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,FlywheelCore's setFlywheelRewards can remove access to reward funds from current users,40,https://github.com/code-423n4/2022-04-xtribe-findings/issues/40,xtribe,2022/04,bug;2 (Med Risk);sponsor acknowledged;sponsor todo
111,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,`FlywheelCore.setBooster()` can be used to steal unclaimed rewards,23,https://github.com/code-423n4/2022-04-xtribe-findings/issues/23,xtribe,2022/04,bug;help wanted;2 (Med Risk)
111,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,`xERC4626` does not work with fee-on-transfer tokens,24,https://github.com/code-423n4/2022-04-xtribe-findings/issues/24,xtribe,2022/04,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor todo
111,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,`xERC4626` can lose funds if `asset` is ever destructed,25,https://github.com/code-423n4/2022-04-xtribe-findings/issues/25,xtribe,2022/04,bug;duplicate;help wanted;QA (Quality Assurance)
111,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,`xERC4626` gives old rewards to new holders too,26,https://github.com/code-423n4/2022-04-xtribe-findings/issues/26,xtribe,2022/04,bug;invalid;sponsor disputed
111,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,27,https://github.com/code-423n4/2022-04-xtribe-findings/issues/27,xtribe,2022/04,bug;QA (Quality Assurance);sponsor todo
111,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,28,https://github.com/code-423n4/2022-04-xtribe-findings/issues/28,xtribe,2022/04,bug;G (Gas Optimization)
111,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,G,Gas Optimizations,74,https://github.com/code-423n4/2022-04-xtribe-findings/issues/74,xtribe,2022/04,bug;G (Gas Optimization);sponsor confirmed
111,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,Q,QA Report,76,https://github.com/code-423n4/2022-04-xtribe-findings/issues/76,xtribe,2022/04,bug;sponsor confirmed;QA (Quality Assurance)
111,joshie,0x2f1c5628e931fc75cf097072f61b9dc72d1d827f,G,Gas Optimizations,8,https://github.com/code-423n4/2022-04-xtribe-findings/issues/8,xtribe,2022/04,bug;G (Gas Optimization);sponsor acknowledged
111,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,Q,QA Report,81,https://github.com/code-423n4/2022-04-xtribe-findings/issues/81,xtribe,2022/04,bug;sponsor disputed;QA (Quality Assurance)
111,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,G,Gas Optimizations,85,https://github.com/code-423n4/2022-04-xtribe-findings/issues/85,xtribe,2022/04,bug;G (Gas Optimization);sponsor todo
111,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,Q,QA Report,10,https://github.com/code-423n4/2022-04-xtribe-findings/issues/10,xtribe,2022/04,bug;sponsor acknowledged;QA (Quality Assurance)
111,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,Q,QA Report,46,https://github.com/code-423n4/2022-04-xtribe-findings/issues/46,xtribe,2022/04,bug;duplicate;QA (Quality Assurance)
111,nahnah,0xc950cAeC29f157EB49f37b8c57c737E79037B655,G,Gas Optimizations,77,https://github.com/code-423n4/2022-04-xtribe-findings/issues/77,xtribe,2022/04,bug;G (Gas Optimization);sponsor confirmed
111,nahnah,0xc950cAeC29f157EB49f37b8c57c737E79037B655,Q,QA Report,78,https://github.com/code-423n4/2022-04-xtribe-findings/issues/78,xtribe,2022/04,bug;invalid;sponsor disputed
111,nahnah,0xc950cAeC29f157EB49f37b8c57c737E79037B655,Q,QA Report,82,https://github.com/code-423n4/2022-04-xtribe-findings/issues/82,xtribe,2022/04,bug;duplicate;invalid;sponsor disputed;QA (Quality Assurance)
111,NoamYakov,0x972a7c4EE6d0988A010CafB09F794Cd1a169293F,G,Gas Optimizations,60,https://github.com/code-423n4/2022-04-xtribe-findings/issues/60,xtribe,2022/04,bug;G (Gas Optimization);sponsor confirmed
111,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,G,Gas Optimizations,1,https://github.com/code-423n4/2022-04-xtribe-findings/issues/1,xtribe,2022/04,bug;duplicate;G (Gas Optimization);sponsor acknowledged
111,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,G,Gas Optimizations,15,https://github.com/code-423n4/2022-04-xtribe-findings/issues/15,xtribe,2022/04,bug;G (Gas Optimization);sponsor todo
111,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,Q,QA Report,2,https://github.com/code-423n4/2022-04-xtribe-findings/issues/2,xtribe,2022/04,bug;sponsor acknowledged;QA (Quality Assurance)
111,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,Q,QA Report,3,https://github.com/code-423n4/2022-04-xtribe-findings/issues/3,xtribe,2022/04,bug;duplicate;sponsor acknowledged;QA (Quality Assurance)
111,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,Q,QA Report,4,https://github.com/code-423n4/2022-04-xtribe-findings/issues/4,xtribe,2022/04,bug;duplicate;sponsor acknowledged;QA (Quality Assurance)
111,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`FlywheelCore/claimRewards()` let users claim rewards on behalf of others,55,https://github.com/code-423n4/2022-04-xtribe-findings/issues/55,xtribe,2022/04,bug;invalid
111,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,56,https://github.com/code-423n4/2022-04-xtribe-findings/issues/56,xtribe,2022/04,bug;sponsor confirmed;QA (Quality Assurance);sponsor todo
111,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`setFlywheelRewards` can take any `rewardToken`,57,https://github.com/code-423n4/2022-04-xtribe-findings/issues/57,xtribe,2022/04,bug;duplicate;2 (Med Risk)
111,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`setBooster` will cause wrong accrued rewards,58,https://github.com/code-423n4/2022-04-xtribe-findings/issues/58,xtribe,2022/04,bug;duplicate;sponsor disputed;QA (Quality Assurance)
111,rayn,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,59,https://github.com/code-423n4/2022-04-xtribe-findings/issues/59,xtribe,2022/04,bug;G (Gas Optimization);sponsor confirmed
111,remora,0x1434b95234155DA830c20d02548aF22f14A38FbE,Q,QA Report,65,https://github.com/code-423n4/2022-04-xtribe-findings/issues/65,xtribe,2022/04,bug;invalid;QA (Quality Assurance)
111,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,6,https://github.com/code-423n4/2022-04-xtribe-findings/issues/6,xtribe,2022/04,bug;disagree with severity;sponsor disputed;QA (Quality Assurance);sponsor todo
111,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,7,https://github.com/code-423n4/2022-04-xtribe-findings/issues/7,xtribe,2022/04,bug;G (Gas Optimization);sponsor acknowledged
111,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,G,Gas Optimizations,90,https://github.com/code-423n4/2022-04-xtribe-findings/issues/90,xtribe,2022/04,bug;G (Gas Optimization);sponsor todo
111,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,G,Gas Optimizations,91,https://github.com/code-423n4/2022-04-xtribe-findings/issues/91,xtribe,2022/04,bug;duplicate;G (Gas Optimization)
111,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,G,Gas Optimizations,92,https://github.com/code-423n4/2022-04-xtribe-findings/issues/92,xtribe,2022/04,bug;duplicate;G (Gas Optimization)
111,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,G,Gas Optimizations,93,https://github.com/code-423n4/2022-04-xtribe-findings/issues/93,xtribe,2022/04,bug;duplicate;G (Gas Optimization)
111,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,xTRIBE reward syncing is not permissionless allowing the owner to grieve users,43,https://github.com/code-423n4/2022-04-xtribe-findings/issues/43,xtribe,2022/04,bug;sponsor disputed;QA (Quality Assurance)
111,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,44,https://github.com/code-423n4/2022-04-xtribe-findings/issues/44,xtribe,2022/04,bug;invalid;sponsor disputed;QA (Quality Assurance)
111,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Gas Optimizations,52,https://github.com/code-423n4/2022-04-xtribe-findings/issues/52,xtribe,2022/04,bug;G (Gas Optimization);sponsor confirmed
111,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,29,https://github.com/code-423n4/2022-04-xtribe-findings/issues/29,xtribe,2022/04,bug;G (Gas Optimization);sponsor acknowledged
111,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,Q,QA Report,30,https://github.com/code-423n4/2022-04-xtribe-findings/issues/30,xtribe,2022/04,bug;QA (Quality Assurance)
111,Scocco,0x8B8Ff1aC1C262405eBa9B5d29DA7a317866bF7FB,G,Gas Optimizations,11,https://github.com/code-423n4/2022-04-xtribe-findings/issues/11,xtribe,2022/04,bug;G (Gas Optimization);sponsor acknowledged
111,Scocco,0x8B8Ff1aC1C262405eBa9B5d29DA7a317866bF7FB,Q,QA Report,12,https://github.com/code-423n4/2022-04-xtribe-findings/issues/12,xtribe,2022/04,bug;invalid;sponsor disputed;QA (Quality Assurance)
111,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,G,Gas Optimizations,72,https://github.com/code-423n4/2022-04-xtribe-findings/issues/72,xtribe,2022/04,bug;sponsor acknowledged;QA (Quality Assurance)
111,smiling_heretic,0xe180d626a4229c1F1C4cb0278cE071dBcC172AdB,2,"In ERC20Gauges, contribution to total weight is double-counted when incrementGauge is called before addGauge for a given gauge.",22,https://github.com/code-423n4/2022-04-xtribe-findings/issues/22,xtribe,2022/04,bug;2 (Med Risk)
111,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,Q,QA Report,37,https://github.com/code-423n4/2022-04-xtribe-findings/issues/37,xtribe,2022/04,bug;QA (Quality Assurance)
111,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,G,Gas Optimizations,38,https://github.com/code-423n4/2022-04-xtribe-findings/issues/38,xtribe,2022/04,bug;G (Gas Optimization)
111,teryanarmen,0x9e255e1544E5D9B5C7766076890B059a27CAFCC1,2,Unbounded delegating increases gas cost of transfer and can lock all funds,75,https://github.com/code-423n4/2022-04-xtribe-findings/issues/75,xtribe,2022/04,bug;sponsor disputed;QA (Quality Assurance)
111,teryanarmen,0x9e255e1544E5D9B5C7766076890B059a27CAFCC1,G,Gas Optimizations,95,https://github.com/code-423n4/2022-04-xtribe-findings/issues/95,xtribe,2022/04,bug;G (Gas Optimization);sponsor todo
111,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,84,https://github.com/code-423n4/2022-04-xtribe-findings/issues/84,xtribe,2022/04,bug;G (Gas Optimization);sponsor confirmed
111,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,3,First xERC4626 deposit exploit can break share calculation,66,https://github.com/code-423n4/2022-04-xtribe-findings/issues/66,xtribe,2022/04,bug;2 (Med Risk)
111,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,2,xERC4626 does not work well with token tax on transfer,67,https://github.com/code-423n4/2022-04-xtribe-findings/issues/67,xtribe,2022/04,bug;sponsor disputed;QA (Quality Assurance)
111,WatchPug,0x192bdd30d272aabc2b1c3c719c518f0f2d10cc60,3,[WP-H0] `xERC4626.sol` Some users may not be able to withdraw until `rewardsCycleEnd` the due to underflow in `beforeWithdraw()`,48,https://github.com/code-423n4/2022-04-xtribe-findings/issues/48,xtribe,2022/04,bug;2 (Med Risk);disagree with severity;sponsor confirmed;sponsor todo
111,ypatil12,0xf8c2Ec0b5AcA5091BB48755260aA307AD14A4c7f,2,"NOT IN SCOPE, BUT BRINGING UP FOR VISIBILITY: Issue with setRewardsInfo and properly accruing rewards in FlywheelStaticRewards ",45,https://github.com/code-423n4/2022-04-xtribe-findings/issues/45,xtribe,2022/04,bug;invalid;sponsor confirmed;sponsor todo
111,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,G,Gas Optimizations,17,https://github.com/code-423n4/2022-04-xtribe-findings/issues/17,xtribe,2022/04,bug;G (Gas Optimization);sponsor acknowledged
120,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,197,https://github.com/code-423n4/2022-05-alchemix-findings/issues/197,alchemix,2022/05,bug;G (Gas Optimization)
120,0x1337,0x4C024e5B3AE9B56319ed7c2D0F73A8535DDFF47e,2,No Storage Gap for Upgradeable Contract Might Lead to Storage Slot Collision,44,https://github.com/code-423n4/2022-05-alchemix-findings/issues/44,alchemix,2022/05,bug;2 (Med Risk);sponsor confirmed
120,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,85,https://github.com/code-423n4/2022-05-alchemix-findings/issues/85,alchemix,2022/05,bug;G (Gas Optimization)
120,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,86,https://github.com/code-423n4/2022-05-alchemix-findings/issues/86,alchemix,2022/05,bug;QA (Quality Assurance)
120,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,User could receive more WETH than expected,87,https://github.com/code-423n4/2022-05-alchemix-findings/issues/87,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Unsafe safe call,88,https://github.com/code-423n4/2022-05-alchemix-findings/issues/88,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,95,https://github.com/code-423n4/2022-05-alchemix-findings/issues/95,alchemix,2022/05,bug;G (Gas Optimization)
120,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,Q,QA Report,96,https://github.com/code-423n4/2022-05-alchemix-findings/issues/96,alchemix,2022/05,bug;QA (Quality Assurance)
120,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,3,TransmuterBuffer.sol calls depositUnderlying with no slippage bounds ,222,https://github.com/code-423n4/2022-05-alchemix-findings/issues/222,alchemix,2022/05,bug;2 (Med Risk);sponsor acknowledged
120,0xDjango,0x886241e011A6C148bdD96B097EB27962f8A1c5F0,Q,QA Report,201,https://github.com/code-423n4/2022-05-alchemix-findings/issues/201,alchemix,2022/05,bug;QA (Quality Assurance)
120,0xDjango,0x886241e011A6C148bdD96B097EB27962f8A1c5F0,G,Gas Optimizations,202,https://github.com/code-423n4/2022-05-alchemix-findings/issues/202,alchemix,2022/05,bug;G (Gas Optimization)
120,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,G,Gas Optimizations,148,https://github.com/code-423n4/2022-05-alchemix-findings/issues/148,alchemix,2022/05,bug;G (Gas Optimization)
120,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,G,Gas Optimizations,124,https://github.com/code-423n4/2022-05-alchemix-findings/issues/124,alchemix,2022/05,bug;G (Gas Optimization)
120,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,Q,QA Report,125,https://github.com/code-423n4/2022-05-alchemix-findings/issues/125,alchemix,2022/05,bug;QA (Quality Assurance)
120,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,56,https://github.com/code-423n4/2022-05-alchemix-findings/issues/56,alchemix,2022/05,bug;G (Gas Optimization)
120,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,Q,QA Report,57,https://github.com/code-423n4/2022-05-alchemix-findings/issues/57,alchemix,2022/05,bug;QA (Quality Assurance)
120,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,2,Lack of Two-Step Process For Critical Operations,58,https://github.com/code-423n4/2022-05-alchemix-findings/issues/58,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,0xsomeone,0x25c84Be73af28d65E71F092344Efd92B2c79e3f9,G,Gas Optimizations,118,https://github.com/code-423n4/2022-05-alchemix-findings/issues/118,alchemix,2022/05,bug;G (Gas Optimization)
120,0xsomeone,0x25c84Be73af28d65E71F092344Efd92B2c79e3f9,Q,QA Report,119,https://github.com/code-423n4/2022-05-alchemix-findings/issues/119,alchemix,2022/05,bug;QA (Quality Assurance)
120,0xsomeone,0x25c84Be73af28d65E71F092344Efd92B2c79e3f9,2,ATB-01M: Inexplicable Capability of Self-Limit Reduction,120,https://github.com/code-423n4/2022-05-alchemix-findings/issues/120,alchemix,2022/05,bug;duplicate;2 (Med Risk)
120,0xsomeone,0x25c84Be73af28d65E71F092344Efd92B2c79e3f9,2,Exchange Rate Race Condition,121,https://github.com/code-423n4/2022-05-alchemix-findings/issues/121,alchemix,2022/05,bug;duplicate;2 (Med Risk)
120,0xsomeone,0x25c84Be73af28d65E71F092344Efd92B2c79e3f9,2,Incorrect Minimum Amount Assumption,122,https://github.com/code-423n4/2022-05-alchemix-findings/issues/122,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,0xsomeone,0x25c84Be73af28d65E71F092344Efd92B2c79e3f9,3,Incorrect Deposit Asset Assumption,123,https://github.com/code-423n4/2022-05-alchemix-findings/issues/123,alchemix,2022/05,bug;invalid
120,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,Q,QA Report,29,https://github.com/code-423n4/2022-05-alchemix-findings/issues/29,alchemix,2022/05,bug;invalid
120,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,G,Gas Optimizations,32,https://github.com/code-423n4/2022-05-alchemix-findings/issues/32,alchemix,2022/05,bug;G (Gas Optimization)
120,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,2,Unused imports with declaration errors preventing solc from compiling - AlchemistV2.sol,33,https://github.com/code-423n4/2022-05-alchemix-findings/issues/33,alchemix,2022/05,bug;invalid
120,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,2,improper import in FustTokenAdapterV1 and LibFuse.sol,34,https://github.com/code-423n4/2022-05-alchemix-findings/issues/34,alchemix,2022/05,bug;invalid
120,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,2,Declaration of UnsupportedOperation in FuseTokenAdapterV1 not found,35,https://github.com/code-423n4/2022-05-alchemix-findings/issues/35,alchemix,2022/05,bug;invalid
120,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,2,Wrong argument count for function call in FuseTokenAdapterV1,36,https://github.com/code-423n4/2022-05-alchemix-findings/issues/36,alchemix,2022/05,bug;invalid
120,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,2,Improper Imports and passing arguments to functions that don't take an argument in WstETHAdapterV1.sol,37,https://github.com/code-423n4/2022-05-alchemix-findings/issues/37,alchemix,2022/05,bug;invalid
120,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,2,Improper Imports and Wrong argument counts in RETHAdapterV1.sol / VesperAdapterV1.sol / libraries/RocketPool.sol / interfaces/rocket/IRETH.sol,38,https://github.com/code-423n4/2022-05-alchemix-findings/issues/38,alchemix,2022/05,bug;invalid
120,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,2,Wrong Argument count for function call in TransmuterConduit.sol,39,https://github.com/code-423n4/2022-05-alchemix-findings/issues/39,alchemix,2022/05,bug;invalid
120,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,2,IWETH9 is not implicitly convertible to expected type contract IERC20 in EthAssetManager.sol,40,https://github.com/code-423n4/2022-05-alchemix-findings/issues/40,alchemix,2022/05,bug;invalid
120,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,2,ThreePoolAssetManager.sol contains improper imports.,41,https://github.com/code-423n4/2022-05-alchemix-findings/issues/41,alchemix,2022/05,bug;invalid
120,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,3,The caller can redirect execution to arbitrary bytecode locations - TransmuterBuffer.sol,42,https://github.com/code-423n4/2022-05-alchemix-findings/issues/42,alchemix,2022/05,bug;invalid
120,AuditsAreUS,0x2e878D5890d8D6f2650043838936fCF9CEf4E4E2,2,Fee on Transfer and Rebasing tokens are not accounted for in adapters or `AlchemistV2`,103,https://github.com/code-423n4/2022-05-alchemix-findings/issues/103,alchemix,2022/05,bug;QA (Quality Assurance);sponsor acknowledged
120,AuditsAreUS,0x2e878D5890d8D6f2650043838936fCF9CEf4E4E2,3,If `totalShares` for a token falls to zero while there is `pendingCredit` the contract will become stuck,104,https://github.com/code-423n4/2022-05-alchemix-findings/issues/104,alchemix,2022/05,bug;2 (Med Risk);sponsor confirmed
120,AuditsAreUS,0x2e878D5890d8D6f2650043838936fCF9CEf4E4E2,2,`lowerHasMinted()` can be used by minters to bypass `mintCeiling`,74,https://github.com/code-423n4/2022-05-alchemix-findings/issues/74,alchemix,2022/05,bug;duplicate;2 (Med Risk)
120,AuditsAreUS,0x2e878D5890d8D6f2650043838936fCF9CEf4E4E2,2,`AlchemicTokenV2Base.setWhitelist()`  does not modify `mintCeiling` and `totalMinted`,75,https://github.com/code-423n4/2022-05-alchemix-findings/issues/75,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,AuditsAreUS,0x2e878D5890d8D6f2650043838936fCF9CEf4E4E2,2,Lack of upper bounds on `flashMintFee` in  `AlchemicTokenV2.sol` and `AlchemicTokenV2Base.sol`,76,https://github.com/code-423n4/2022-05-alchemix-findings/issues/76,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,AuditsAreUS,0x2e878D5890d8D6f2650043838936fCF9CEf4E4E2,2,Lack of upper bounds on `CrossChainCanonicalBase.setSwapFees()`,77,https://github.com/code-423n4/2022-05-alchemix-findings/issues/77,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,AuditsAreUS,0x2e878D5890d8D6f2650043838936fCF9CEf4E4E2,2,`CrossChainCanonicalBase.addBridgeToken()` adds to an unbounded list and may result in the function being stuck,78,https://github.com/code-423n4/2022-05-alchemix-findings/issues/78,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,AuditsAreUS,0x2e878D5890d8D6f2650043838936fCF9CEf4E4E2,2,Owner may bypass `bridgeTokenEnabled` in `CrossChainCanonicalBase.recoverERC20()` to withdraw bridge tokens,79,https://github.com/code-423n4/2022-05-alchemix-findings/issues/79,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,AuditsAreUS,0x2e878D5890d8D6f2650043838936fCF9CEf4E4E2,3,Incorrect decimals used when converting between yield tokens and underlying tokens,80,https://github.com/code-423n4/2022-05-alchemix-findings/issues/80,alchemix,2022/05,bug;invalid
120,AuditsAreUS,0x2e878D5890d8D6f2650043838936fCF9CEf4E4E2,3,Lido adapter incorrectly calculates the price of the underlying token,97,https://github.com/code-423n4/2022-05-alchemix-findings/issues/97,alchemix,2022/05,bug;2 (Med Risk)
120,AuditsAreUS,0x2e878D5890d8D6f2650043838936fCF9CEf4E4E2,3,Unbounded array is iterated over in `AlchemistV2.sol` potentially causing all tokens for a user to be stuck,98,https://github.com/code-423n4/2022-05-alchemix-findings/issues/98,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,augustg,0x87d2dc58f38aB0EE548cD3186EED412b294FEf5B,G,Gas Optimizations,105,https://github.com/code-423n4/2022-05-alchemix-findings/issues/105,alchemix,2022/05,bug;G (Gas Optimization)
120,augustg,0x87d2dc58f38aB0EE548cD3186EED412b294FEf5B,Q,QA Report,106,https://github.com/code-423n4/2022-05-alchemix-findings/issues/106,alchemix,2022/05,bug;invalid
120,bobirichman,0x0BacBAd41a499bADcD35eF1b7bDC951A119BBD86,G,Gas Optimization,91,https://github.com/code-423n4/2022-05-alchemix-findings/issues/91,alchemix,2022/05,bug;G (Gas Optimization)
120,bobirichman,0x0BacBAd41a499bADcD35eF1b7bDC951A119BBD86,Q,QA Report,92,https://github.com/code-423n4/2022-05-alchemix-findings/issues/92,alchemix,2022/05,bug;QA (Quality Assurance)
120,BouSalman,0x7c44A7afc34abE118aB752c836680aD7682b9273,Q,QA Report,116,https://github.com/code-423n4/2022-05-alchemix-findings/issues/116,alchemix,2022/05,bug;QA (Quality Assurance)
120,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,Update initializer modifier to prevent reentrancy during initialization,115,https://github.com/code-423n4/2022-05-alchemix-findings/issues/115,alchemix,2022/05,bug;invalid
120,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,G,Gas Optimizations,137,https://github.com/code-423n4/2022-05-alchemix-findings/issues/137,alchemix,2022/05,bug;G (Gas Optimization)
120,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,Q,QA Report,215,https://github.com/code-423n4/2022-05-alchemix-findings/issues/215,alchemix,2022/05,bug;QA (Quality Assurance)
120,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2,Critical changes executed bu privileged roles should have safeguards,141,https://github.com/code-423n4/2022-05-alchemix-findings/issues/141,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,Q,QA Report,142,https://github.com/code-423n4/2022-05-alchemix-findings/issues/142,alchemix,2022/05,bug;QA (Quality Assurance)
120,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,G,Gas Optimizations,143,https://github.com/code-423n4/2022-05-alchemix-findings/issues/143,alchemix,2022/05,bug;G (Gas Optimization)
120,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,126,https://github.com/code-423n4/2022-05-alchemix-findings/issues/126,alchemix,2022/05,bug;QA (Quality Assurance)
120,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,AutoleverageBase: Must approve 0 first,144,https://github.com/code-423n4/2022-05-alchemix-findings/issues/144,alchemix,2022/05,bug;2 (Med Risk);sponsor confirmed
120,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,CrossChainCanonicalBase: owner can rug all bridgeToken,149,https://github.com/code-423n4/2022-05-alchemix-findings/issues/149,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,CrossChainCanonicalBase:The method of withdrawing the swap fee needs to be changed,150,https://github.com/code-423n4/2022-05-alchemix-findings/issues/150,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,AlchemistV2: The approval of the abandoned adapter is not cleared,43,https://github.com/code-423n4/2022-05-alchemix-findings/issues/43,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,CertoraInc,0x777bA383e74062dd7948A61471267E8e4370EA39,3,DoS in wrap and unwrap,159,https://github.com/code-423n4/2022-05-alchemix-findings/issues/159,alchemix,2022/05,bug;2 (Med Risk);sponsor confirmed
120,CertoraInc,0x777bA383e74062dd7948A61471267E8e4370EA39,2,Contract cannot avoid receive eth from everyone,160,https://github.com/code-423n4/2022-05-alchemix-findings/issues/160,alchemix,2022/05,bug;invalid
120,ch13fd357r0y3r,0xBA23dfd7cCCD3587A1b8909dd5BcCfD92aCeAE6f,2,Manipulating the Exchange Rate of gALCX,1,https://github.com/code-423n4/2022-05-alchemix-findings/issues/1,alchemix,2022/05,bug;invalid
120,Cityscape,0x46686E5420B34d5950d37855291d970fBa5527b6,Q,QA Report,167,https://github.com/code-423n4/2022-05-alchemix-findings/issues/167,alchemix,2022/05,bug;QA (Quality Assurance)
120,Cityscape,0x46686E5420B34d5950d37855291d970fBa5527b6,G,Gas Optimizations,170,https://github.com/code-423n4/2022-05-alchemix-findings/issues/170,alchemix,2022/05,bug;G (Gas Optimization)
120,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,2,Missing input validation on maximum parameter may not allow minter to mint in AlchemicTokenV1.sol,206,https://github.com/code-423n4/2022-05-alchemix-findings/issues/206,alchemix,2022/05,bug;invalid
120,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,2,Missing input validation on maximum parameter may not allow minter to mint in AlchemicTokenV2Base.sol,207,https://github.com/code-423n4/2022-05-alchemix-findings/issues/207,alchemix,2022/05,bug;invalid
120,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,2,Free Flash fee due to zero value check in AlchemicTokenV2Base.sol,208,https://github.com/code-423n4/2022-05-alchemix-findings/issues/208,alchemix,2022/05,bug;invalid
120,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,2,Free Flash fee due to missing zero value check in AlchemicTokenV2.sol,210,https://github.com/code-423n4/2022-05-alchemix-findings/issues/210,alchemix,2022/05,bug;invalid
120,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,Q,QA Report,211,https://github.com/code-423n4/2022-05-alchemix-findings/issues/211,alchemix,2022/05,bug;QA (Quality Assurance)
120,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,Q,QA Report,217,https://github.com/code-423n4/2022-05-alchemix-findings/issues/217,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,45,https://github.com/code-423n4/2022-05-alchemix-findings/issues/45,alchemix,2022/05,bug;G (Gas Optimization)
120,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,46,https://github.com/code-423n4/2022-05-alchemix-findings/issues/46,alchemix,2022/05,bug;QA (Quality Assurance)
120,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,No way to re-enable whitelisting,51,https://github.com/code-423n4/2022-05-alchemix-findings/issues/51,alchemix,2022/05,bug;invalid
120,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,New Alchemist may not support existing underlying tokens,52,https://github.com/code-423n4/2022-05-alchemix-findings/issues/52,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,state.totalUnexchanged is not updated properly,53,https://github.com/code-423n4/2022-05-alchemix-findings/issues/53,alchemix,2022/05,bug;invalid
120,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Duplicate tokens can be added,54,https://github.com/code-423n4/2022-05-alchemix-findings/issues/54,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Distorted list created on duplicate value,55,https://github.com/code-423n4/2022-05-alchemix-findings/issues/55,alchemix,2022/05,bug;invalid
120,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,G,Gas Optimizations,133,https://github.com/code-423n4/2022-05-alchemix-findings/issues/133,alchemix,2022/05,bug;QA (Quality Assurance)
120,dirk_y,0x957342FeBe16d72cE462Ffc649Bfc6fAF96e2da3,2,A well financed attacker could prevent any other users from minting synthetic tokens,155,https://github.com/code-423n4/2022-05-alchemix-findings/issues/155,alchemix,2022/05,bug;2 (Med Risk)
120,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,G,Gas Optimizations,129,https://github.com/code-423n4/2022-05-alchemix-findings/issues/129,alchemix,2022/05,bug;G (Gas Optimization)
120,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,Q,QA Report,130,https://github.com/code-423n4/2022-05-alchemix-findings/issues/130,alchemix,2022/05,bug;QA (Quality Assurance)
120,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,2,No upper bound when setting `flashMintFee`.,131,https://github.com/code-423n4/2022-05-alchemix-findings/issues/131,alchemix,2022/05,bug;invalid
120,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,2,No upper bound when setting `protocolFee`,132,https://github.com/code-423n4/2022-05-alchemix-findings/issues/132,alchemix,2022/05,bug;invalid
120,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,G,Gas Optimizations,220,https://github.com/code-423n4/2022-05-alchemix-findings/issues/220,alchemix,2022/05,bug;G (Gas Optimization)
120,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,Q,QA Report,221,https://github.com/code-423n4/2022-05-alchemix-findings/issues/221,alchemix,2022/05,bug;QA (Quality Assurance)
120,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,2,adding a bridge token does not update all storage variables,227,https://github.com/code-423n4/2022-05-alchemix-findings/issues/227,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor confirmed
120,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,2,a DoS is generated in migrate Source due to relinquishing ownership.,229,https://github.com/code-423n4/2022-05-alchemix-findings/issues/229,alchemix,2022/05,bug;invalid
120,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,Gas Optimizations,188,https://github.com/code-423n4/2022-05-alchemix-findings/issues/188,alchemix,2022/05,bug;G (Gas Optimization)
120,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,153,https://github.com/code-423n4/2022-05-alchemix-findings/issues/153,alchemix,2022/05,bug;G (Gas Optimization)
120,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,Q,QA Report,154,https://github.com/code-423n4/2022-05-alchemix-findings/issues/154,alchemix,2022/05,bug;QA (Quality Assurance)
120,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,There should be a cap on `flashMintFee`,181,https://github.com/code-423n4/2022-05-alchemix-findings/issues/181,alchemix,2022/05,bug;invalid
120,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,Owner can take bridgeToken unconditionally in `recoverERC20()`,183,https://github.com/code-423n4/2022-05-alchemix-findings/issues/183,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,There should be a cap on `swapFees[bridgeTokenAddress]`,184,https://github.com/code-423n4/2022-05-alchemix-findings/issues/184,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,Malicious owner can launch a front-running attack to steal tokens in `exchangeOldForCanonical()` and `exchangeCanonicalForOld()`,185,https://github.com/code-423n4/2022-05-alchemix-findings/issues/185,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,`CrossChainCanonicalGALCX` is not a `gALCX`,186,https://github.com/code-423n4/2022-05-alchemix-findings/issues/186,alchemix,2022/05,bug;invalid
120,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,There should be a cap on `protocolFee`,187,https://github.com/code-423n4/2022-05-alchemix-findings/issues/187,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,Malicious admin can launch a front-running attack to steal tokens in `harvest()`,189,https://github.com/code-423n4/2022-05-alchemix-findings/issues/189,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`setTokenAdapter()` doesn’t call `_checkSupportedUnderlyingToken()` to check whether underlyingToken is supported,190,https://github.com/code-423n4/2022-05-alchemix-findings/issues/190,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,`setWeights()` should confirm `tokens.length == weights.length`,191,https://github.com/code-423n4/2022-05-alchemix-findings/issues/191,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,`setDivertToAmo()` should confirm `amos[underlyingToken] != address(0)`,192,https://github.com/code-423n4/2022-05-alchemix-findings/issues/192,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,193,https://github.com/code-423n4/2022-05-alchemix-findings/issues/193,alchemix,2022/05,bug;QA (Quality Assurance)
120,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,194,https://github.com/code-423n4/2022-05-alchemix-findings/issues/194,alchemix,2022/05,bug;invalid
120,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,195,https://github.com/code-423n4/2022-05-alchemix-findings/issues/195,alchemix,2022/05,bug;G (Gas Optimization)
120,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,3,Compromised `onlyWhitelisted` address could mint unlimited amount of tokens,64,https://github.com/code-423n4/2022-05-alchemix-findings/issues/64,alchemix,2022/05,bug;invalid
120,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,Q,QA Report,65,https://github.com/code-423n4/2022-05-alchemix-findings/issues/65,alchemix,2022/05,bug;QA (Quality Assurance)
120,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,G,Gas Optimizations,66,https://github.com/code-423n4/2022-05-alchemix-findings/issues/66,alchemix,2022/05,bug;G (Gas Optimization)
120,hansfriese,0xf2dCB1d3B7091Dcf2cE87aD115377C108ebE6DD4,G,Gas Optimizations,169,https://github.com/code-423n4/2022-05-alchemix-findings/issues/169,alchemix,2022/05,bug;G (Gas Optimization)
120,Hawkeye,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,G,Gas Optimizations,225,https://github.com/code-423n4/2022-05-alchemix-findings/issues/225,alchemix,2022/05,bug;G (Gas Optimization)
120,Hawkeye,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,226,https://github.com/code-423n4/2022-05-alchemix-findings/issues/226,alchemix,2022/05,bug;QA (Quality Assurance)
120,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,Q,QA Report,218,https://github.com/code-423n4/2022-05-alchemix-findings/issues/218,alchemix,2022/05,bug;QA (Quality Assurance)
120,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,G,Gas Optimizations,219,https://github.com/code-423n4/2022-05-alchemix-findings/issues/219,alchemix,2022/05,bug;G (Gas Optimization)
120,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,AlchemistV2's setTokenAdapter can freeze user funds,109,https://github.com/code-423n4/2022-05-alchemix-findings/issues/109,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,registerAsset misuse can permanently disable TransmuterBuffer and break the system,113,https://github.com/code-423n4/2022-05-alchemix-findings/issues/113,alchemix,2022/05,bug;2 (Med Risk);sponsor acknowledged
120,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,TransmuterBuffer's setAlchemist will freeze deposited funds,117,https://github.com/code-423n4/2022-05-alchemix-findings/issues/117,alchemix,2022/05,bug;2 (Med Risk);sponsor confirmed
120,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,TransmuterBuffer's _alchemistWithdraw use hard coded slippage that can lead to user losses,127,https://github.com/code-423n4/2022-05-alchemix-findings/issues/127,alchemix,2022/05,bug;2 (Med Risk);sponsor acknowledged
120,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,AlchemicTokenV2Base minters can always surpass mint ceiling threshold,128,https://github.com/code-423n4/2022-05-alchemix-findings/issues/128,alchemix,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
120,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,New gALCX token denomination can be depressed by the first depositor,135,https://github.com/code-423n4/2022-05-alchemix-findings/issues/135,alchemix,2022/05,bug;2 (Med Risk);sponsor acknowledged
120,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,Q,QA Report,136,https://github.com/code-423n4/2022-05-alchemix-findings/issues/136,alchemix,2022/05,bug;QA (Quality Assurance)
120,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,EthAssetManager and ThreePoolAssetManager don't control Meta tokens decimals,63,https://github.com/code-423n4/2022-05-alchemix-findings/issues/63,alchemix,2022/05,bug;2 (Med Risk);sponsor confirmed
120,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,YearnTokenAdapter's wrap can become stuck as it uses one step approval for an arbitrary underlying,99,https://github.com/code-423n4/2022-05-alchemix-findings/issues/99,alchemix,2022/05,bug;2 (Med Risk);sponsor confirmed
120,ignacio,0xa166faFf77A6b23Afb23AAAf5f685F9C27896BD2,G,Gas Optimizations,110,https://github.com/code-423n4/2022-05-alchemix-findings/issues/110,alchemix,2022/05,bug;G (Gas Optimization)
120,ignacio,0xa166faFf77A6b23Afb23AAAf5f685F9C27896BD2,G,Gas Optimizations,111,https://github.com/code-423n4/2022-05-alchemix-findings/issues/111,alchemix,2022/05,bug;duplicate;G (Gas Optimization)
120,ignacio,0xa166faFf77A6b23Afb23AAAf5f685F9C27896BD2,G,Gas Optimizations,112,https://github.com/code-423n4/2022-05-alchemix-findings/issues/112,alchemix,2022/05,bug;duplicate;G (Gas Optimization)
120,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,228,https://github.com/code-423n4/2022-05-alchemix-findings/issues/228,alchemix,2022/05,bug;QA (Quality Assurance)
120,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,28,https://github.com/code-423n4/2022-05-alchemix-findings/issues/28,alchemix,2022/05,bug;G (Gas Optimization)
120,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,2,loss should be >=,114,https://github.com/code-423n4/2022-05-alchemix-findings/issues/114,alchemix,2022/05,bug;invalid
120,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,approval not reset when calling `burnFrom()`,67,https://github.com/code-423n4/2022-05-alchemix-findings/issues/67,alchemix,2022/05,bug;invalid
120,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,TokenV2Base `burnFrom()` does not reset when calling `approve()`,68,https://github.com/code-423n4/2022-05-alchemix-findings/issues/68,alchemix,2022/05,bug;duplicate;invalid
120,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,approval not reset when calling `burnFrom()`,69,https://github.com/code-423n4/2022-05-alchemix-findings/issues/69,alchemix,2022/05,bug;invalid
120,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Use of deprecated `safeApprove()` function ,70,https://github.com/code-423n4/2022-05-alchemix-findings/issues/70,alchemix,2022/05,bug;QA (Quality Assurance);sponsor acknowledged
120,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,3,Strict equality check in `executeOperation()`,71,https://github.com/code-423n4/2022-05-alchemix-findings/issues/71,alchemix,2022/05,bug;invalid
120,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Use of `transferFrom()` instead of `safeTransferFrom()`,72,https://github.com/code-423n4/2022-05-alchemix-findings/issues/72,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Looping over an unbounded array ,73,https://github.com/code-423n4/2022-05-alchemix-findings/issues/73,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,JC,0xFc06B4C7b226C0bE3766656Fe4165592d9E7749f,Q,QA Report,212,https://github.com/code-423n4/2022-05-alchemix-findings/issues/212,alchemix,2022/05,bug;QA (Quality Assurance)
120,JC,0xFc06B4C7b226C0bE3766656Fe4165592d9E7749f,G,Gas Optimizations,213,https://github.com/code-423n4/2022-05-alchemix-findings/issues/213,alchemix,2022/05,bug;G (Gas Optimization)
120,joestakey,0xB8590286E70bc58e98962Ad3c5e89Ac725a1624f,G,Gas Optimizations,171,https://github.com/code-423n4/2022-05-alchemix-findings/issues/171,alchemix,2022/05,bug;G (Gas Optimization)
120,joestakey,0xB8590286E70bc58e98962Ad3c5e89Ac725a1624f,Q,QA Report,177,https://github.com/code-423n4/2022-05-alchemix-findings/issues/177,alchemix,2022/05,bug;QA (Quality Assurance)
120,joestakey,0xB8590286E70bc58e98962Ad3c5e89Ac725a1624f,2,UNCHECKED RETURN VALUE OF .APPROVE(),178,https://github.com/code-423n4/2022-05-alchemix-findings/issues/178,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,joestakey,0xB8590286E70bc58e98962Ad3c5e89Ac725a1624f,2,SINGLE-STEP OWNERSHIP TRANSFER,180,https://github.com/code-423n4/2022-05-alchemix-findings/issues/180,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,joestakey,0xB8590286E70bc58e98962Ad3c5e89Ac725a1624f,2,LOW-LEVEL CALLS SUCCEEDING FOR NON-EXISTENT CONTRACT,182,https://github.com/code-423n4/2022-05-alchemix-findings/issues/182,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,Q,QA Report,200,https://github.com/code-423n4/2022-05-alchemix-findings/issues/200,alchemix,2022/05,bug;QA (Quality Assurance)
120,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,G,Gas Optimizations,151,https://github.com/code-423n4/2022-05-alchemix-findings/issues/151,alchemix,2022/05,bug;G (Gas Optimization)
120,kenta,0xE85D65E3927451cCC130457e75bF83ee1a5B85c6,Q,QA Report,152,https://github.com/code-423n4/2022-05-alchemix-findings/issues/152,alchemix,2022/05,bug;QA (Quality Assurance)
120,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,Incorrect cast to int256. Potential overflow.,10,https://github.com/code-423n4/2022-05-alchemix-findings/issues/10,alchemix,2022/05,bug;invalid
120,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,Non-existing recipient will return true on call.,31,https://github.com/code-423n4/2022-05-alchemix-findings/issues/31,alchemix,2022/05,bug;invalid
120,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,Non-existing recipient will return true on call,47,https://github.com/code-423n4/2022-05-alchemix-findings/issues/47,alchemix,2022/05,bug;invalid
120,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,Fee-on-transfer tokens support must be forbidden or allowed with amount update,48,https://github.com/code-423n4/2022-05-alchemix-findings/issues/48,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,G,Gas Optimizations,49,https://github.com/code-423n4/2022-05-alchemix-findings/issues/49,alchemix,2022/05,bug;G (Gas Optimization)
120,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,Q,QA Report,50,https://github.com/code-423n4/2022-05-alchemix-findings/issues/50,alchemix,2022/05,bug;QA (Quality Assurance)
120,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,_poolId incorrect value,7,https://github.com/code-423n4/2022-05-alchemix-findings/issues/7,alchemix,2022/05,bug;invalid
120,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,Use safeApprove instead,9,https://github.com/code-423n4/2022-05-alchemix-findings/issues/9,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,mics,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,81,https://github.com/code-423n4/2022-05-alchemix-findings/issues/81,alchemix,2022/05,bug;G (Gas Optimization)
120,mics,0xAA69a63F3E6150df1880Fdbf46A422b45beb4113,Q,QA Report,82,https://github.com/code-423n4/2022-05-alchemix-findings/issues/82,alchemix,2022/05,bug;QA (Quality Assurance)
120,MiloTruck,0x9834b17a29652e317202109C2e624FE0A32A1383,G,Gas Optimizations,172,https://github.com/code-423n4/2022-05-alchemix-findings/issues/172,alchemix,2022/05,bug;G (Gas Optimization)
120,MiloTruck,0x9834b17a29652e317202109C2e624FE0A32A1383,Q,QA Report,173,https://github.com/code-423n4/2022-05-alchemix-findings/issues/173,alchemix,2022/05,bug;QA (Quality Assurance)
120,ngfam,0x0bC711dd99B0BB2297e514E7B9CACe963daadA15,3,Unfairness in credit distributing and potential front-run,30,https://github.com/code-423n4/2022-05-alchemix-findings/issues/30,alchemix,2022/05,bug;invalid
120,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,G,Gas Optimizations,83,https://github.com/code-423n4/2022-05-alchemix-findings/issues/83,alchemix,2022/05,bug;G (Gas Optimization)
120,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,Q,QA Report,84,https://github.com/code-423n4/2022-05-alchemix-findings/issues/84,alchemix,2022/05,bug;QA (Quality Assurance)
120,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,Q,QA Report,179,https://github.com/code-423n4/2022-05-alchemix-findings/issues/179,alchemix,2022/05,bug;QA (Quality Assurance)
120,Randyyy,0x8a59f36d7d44460418781ded3d1cA45e19F2Ab02,G,Gas Optimizations,176,https://github.com/code-423n4/2022-05-alchemix-findings/issues/176,alchemix,2022/05,bug;G (Gas Optimization)
120,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,93,https://github.com/code-423n4/2022-05-alchemix-findings/issues/93,alchemix,2022/05,bug;G (Gas Optimization)
120,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,94,https://github.com/code-423n4/2022-05-alchemix-findings/issues/94,alchemix,2022/05,bug;QA (Quality Assurance)
120,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,CrossChainCanonicalBase allows the owner to set the swap fees to >100% which will cause swaps to revert,59,https://github.com/code-423n4/2022-05-alchemix-findings/issues/59,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,YearnTokenAdapter allows a maximum loss of 100% when withdrawing,60,https://github.com/code-423n4/2022-05-alchemix-findings/issues/60,alchemix,2022/05,bug;2 (Med Risk);sponsor acknowledged
120,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Protocol doesn't support fee-on-transfer tokens,61,https://github.com/code-423n4/2022-05-alchemix-findings/issues/61,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,62,https://github.com/code-423n4/2022-05-alchemix-findings/issues/62,alchemix,2022/05,bug;QA (Quality Assurance)
120,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,100,https://github.com/code-423n4/2022-05-alchemix-findings/issues/100,alchemix,2022/05,bug;G (Gas Optimization)
120,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,Q,QA Report,101,https://github.com/code-423n4/2022-05-alchemix-findings/issues/101,alchemix,2022/05,bug;QA (Quality Assurance)
120,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,102,https://github.com/code-423n4/2022-05-alchemix-findings/issues/102,alchemix,2022/05,bug;duplicate;G (Gas Optimization)
120,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,2,Missing events,107,https://github.com/code-423n4/2022-05-alchemix-findings/issues/107,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,108,https://github.com/code-423n4/2022-05-alchemix-findings/issues/108,alchemix,2022/05,bug;duplicate;G (Gas Optimization)
120,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,2,https://github.com/code-423n4/2022-05-alchemix-findings/issues/2,alchemix,2022/05,bug;duplicate;G (Gas Optimization)
120,sashik_eth,0xc43622E0F55c772fDc2fD876cE84dFc50D6AB797,G,Gas Optimizations,214,https://github.com/code-423n4/2022-05-alchemix-findings/issues/214,alchemix,2022/05,bug;G (Gas Optimization)
120,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,Q,QA Report,146,https://github.com/code-423n4/2022-05-alchemix-findings/issues/146,alchemix,2022/05,bug;QA (Quality Assurance)
120,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,2,Missing sanity check in critical setter `setMinimumCollateralization` ,147,https://github.com/code-423n4/2022-05-alchemix-findings/issues/147,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor confirmed
120,sikorico,0x0E8ea7AD139C5EB10C6D1076962617D458D0Aed6,G,Gas Optimization,89,https://github.com/code-423n4/2022-05-alchemix-findings/issues/89,alchemix,2022/05,bug;G (Gas Optimization)
120,sikorico,0x0E8ea7AD139C5EB10C6D1076962617D458D0Aed6,Q,QA Report,90,https://github.com/code-423n4/2022-05-alchemix-findings/issues/90,alchemix,2022/05,bug;QA (Quality Assurance)
120,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,Q,QA Report,138,https://github.com/code-423n4/2022-05-alchemix-findings/issues/138,alchemix,2022/05,bug;QA (Quality Assurance)
120,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,G,Gas Optimizations,139,https://github.com/code-423n4/2022-05-alchemix-findings/issues/139,alchemix,2022/05,bug;G (Gas Optimization)
120,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,3,A attack can specify the  index variable thats a uint and it gets turned into a int128 and  overflow causing lost of funds ,140,https://github.com/code-423n4/2022-05-alchemix-findings/issues/140,alchemix,2022/05,bug;invalid
120,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,2,[gALCX.sol] Attacker can make the contract unusable when totalSupply is 0,198,https://github.com/code-423n4/2022-05-alchemix-findings/issues/198,alchemix,2022/05,bug;2 (Med Risk);sponsor acknowledged
120,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,2,[AlchemicTokenV2.sol] flashLoan function can be called by the paused minter,199,https://github.com/code-423n4/2022-05-alchemix-findings/issues/199,alchemix,2022/05,bug;invalid
120,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,2,[AlchemistV2.sol] donate function fails when 1 person occupies the total shares of specific yieldToken,209,https://github.com/code-423n4/2022-05-alchemix-findings/issues/209,alchemix,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
120,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,Q,QA Report,223,https://github.com/code-423n4/2022-05-alchemix-findings/issues/223,alchemix,2022/05,bug;QA (Quality Assurance)
120,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,G,Gas Optimizations,224,https://github.com/code-423n4/2022-05-alchemix-findings/issues/224,alchemix,2022/05,bug;G (Gas Optimization)
120,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,3,No check transferFrom() return value,203,https://github.com/code-423n4/2022-05-alchemix-findings/issues/203,alchemix,2022/05,bug;duplicate;QA (Quality Assurance)
120,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,Q,QA Report,204,https://github.com/code-423n4/2022-05-alchemix-findings/issues/204,alchemix,2022/05,bug;QA (Quality Assurance)
120,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,G,Gas Optimizations,205,https://github.com/code-423n4/2022-05-alchemix-findings/issues/205,alchemix,2022/05,bug;G (Gas Optimization)
120,tintin,0xAA371e26742290063d92F0Bd7197aC2D8d3aC4f1,2,Alchemist can mint `AlTokens` above their assigned ceiling by calling `lowerHasMinted()`,166,https://github.com/code-423n4/2022-05-alchemix-findings/issues/166,alchemix,2022/05,bug;2 (Med Risk);sponsor confirmed
120,tintin,0xAA371e26742290063d92F0Bd7197aC2D8d3aC4f1,Q,QA Report,168,https://github.com/code-423n4/2022-05-alchemix-findings/issues/168,alchemix,2022/05,bug;QA (Quality Assurance)
120,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,145,https://github.com/code-423n4/2022-05-alchemix-findings/issues/145,alchemix,2022/05,bug;G (Gas Optimization)
120,UnusualTurtle,0xb8E3a52F9871Bd68cCefb4558F00e7135b1A92FB,G,Gas Optimizations,196,https://github.com/code-423n4/2022-05-alchemix-findings/issues/196,alchemix,2022/05,bug;G (Gas Optimization)
120,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"[WP-H1] Debt can be repaid with a depegged underlyingToken, which can be exploited by arbitrageurs and drives the market price of alToken to match the worst depegged underlyingToken",161,https://github.com/code-423n4/2022-05-alchemix-findings/issues/161,alchemix,2022/05,bug;2 (Med Risk);disagree with severity;sponsor acknowledged
120,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H2] Always use a 1:1 ratio for all the underlyingTokens when calculating the collateral value is flawed and can cause systemic failure when one of the underlyingTokens is depegged,162,https://github.com/code-423n4/2022-05-alchemix-findings/issues/162,alchemix,2022/05,bug;duplicate;2 (Med Risk);sponsor acknowledged
120,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H3] Lack of liquidation makes it possible for alToken to be undercollateralized,163,https://github.com/code-423n4/2022-05-alchemix-findings/issues/163,alchemix,2022/05,bug;duplicate;2 (Med Risk);sponsor acknowledged
120,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Gas Optimizations,164,https://github.com/code-423n4/2022-05-alchemix-findings/issues/164,alchemix,2022/05,bug;G (Gas Optimization)
120,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,Q,QA Report,165,https://github.com/code-423n4/2022-05-alchemix-findings/issues/165,alchemix,2022/05,bug;QA (Quality Assurance)
120,Waze,0xB649642DEe8E9E25b21cfc67DA7DCf86828dd60D,G,Gas Optimizations,174,https://github.com/code-423n4/2022-05-alchemix-findings/issues/174,alchemix,2022/05,bug;G (Gas Optimization)
120,Waze,0xB649642DEe8E9E25b21cfc67DA7DCf86828dd60D,Q,QA Report,175,https://github.com/code-423n4/2022-05-alchemix-findings/issues/175,alchemix,2022/05,bug;QA (Quality Assurance)
120,_Adam,0xa1a0cb3ce40dc9ef78f05563047f286640dce552,G,Gas Optimizations,216,https://github.com/code-423n4/2022-05-alchemix-findings/issues/216,alchemix,2022/05,bug;G (Gas Optimization)
131,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,17,https://github.com/code-423n4/2022-05-backd-findings/issues/17,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,18,https://github.com/code-423n4/2022-05-backd-findings/issues/18,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Upgraded Q -> M from 18 [1656705895450],181,https://github.com/code-423n4/2022-05-backd-findings/issues/181,backd,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
131,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Upgraded Q -> M from 18 [1656705908645],182,https://github.com/code-423n4/2022-05-backd-findings/issues/182,backd,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
131,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Vulnerable AmmGauge,19,https://github.com/code-423n4/2022-05-backd-findings/issues/19,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,0x29A,0x0Ea7d69Be83460913E8b6428302d468BDa585D1b,G,Gas Optimizations,93,https://github.com/code-423n4/2022-05-backd-findings/issues/93,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,0x29A,0x0Ea7d69Be83460913E8b6428302d468BDa585D1b,Q,QA Report,94,https://github.com/code-423n4/2022-05-backd-findings/issues/94,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,2,Fees from delisted pool still in reward handler will become stuck after delisting,135,https://github.com/code-423n4/2022-05-backd-findings/issues/135,backd,2022/05,bug;2 (Med Risk);sponsor confirmed
131,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,3,Any user can start inflation for Minter.sol,162,https://github.com/code-423n4/2022-05-backd-findings/issues/162,backd,2022/05,bug;duplicate;3 (High Risk)
131,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,Q,QA Report,123,https://github.com/code-423n4/2022-05-backd-findings/issues/123,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,G,Gas Optimizations,124,https://github.com/code-423n4/2022-05-backd-findings/issues/124,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,G,Gas Optimizations,16,https://github.com/code-423n4/2022-05-backd-findings/issues/16,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,0xKitsune,0x08f613Db560a38c330414062e1Aac22e5f80876F,G,Gas Optimizations,27,https://github.com/code-423n4/2022-05-backd-findings/issues/27,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,24,https://github.com/code-423n4/2022-05-backd-findings/issues/24,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,Q,QA Report,25,https://github.com/code-423n4/2022-05-backd-findings/issues/25,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,2,Lack of Two-Step Process For Critical Operations,26,https://github.com/code-423n4/2022-05-backd-findings/issues/26,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,2,Improper Access Control for Governance,43,https://github.com/code-423n4/2022-05-backd-findings/issues/43,backd,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
131,0xNineDec,0x764312Ef291900eF32be90dd3Eb5a1bfa6788E84,3,THE FIRST AMM STAKER WILL HAVE CONTROL OVER HOW THE SHARES ARE CALCULATED,100,https://github.com/code-423n4/2022-05-backd-findings/issues/100,backd,2022/05,bug;2 (Med Risk);disagree with severity;sponsor confirmed
131,0xNineDec,0x764312Ef291900eF32be90dd3Eb5a1bfa6788E84,3,THE FIRST AMM STAKER MAY NOT RECEIVE ACCORDING REWARDS BECAUSE OF POOR CHECKPOINTS,111,https://github.com/code-423n4/2022-05-backd-findings/issues/111,backd,2022/05,bug;2 (Med Risk);disagree with severity;sponsor confirmed
131,0xNineDec,0x764312Ef291900eF32be90dd3Eb5a1bfa6788E84,2,ALL THE REWARDS OF A PERIOD CAN BE TAKEN BY A SINGLE USER BY FRONTRUNNING,50,https://github.com/code-423n4/2022-05-backd-findings/issues/50,backd,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
131,ACai,0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,Q,QA Report,69,https://github.com/code-423n4/2022-05-backd-findings/issues/69,backd,2022/05,bug;invalid;QA (Quality Assurance);sponsor disputed
131,asutorufos,0xB4EBA2c82c248584a2DA0c75e1168D3b931D18af,2,Missing events/timelock for `onlyGovernance` only functions that change critical parameters. ,15,https://github.com/code-423n4/2022-05-backd-findings/issues/15,backd,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
131,asutorufos,0xB4EBA2c82c248584a2DA0c75e1168D3b931D18af,Q,QA Report,60,https://github.com/code-423n4/2022-05-backd-findings/issues/60,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,asutorufos,0xB4EBA2c82c248584a2DA0c75e1168D3b931D18af,G,Gas Optimizations,61,https://github.com/code-423n4/2022-05-backd-findings/issues/61,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,bardamu,0xE2529459fB873dAeeD4714e76b8601807EF68dFF,2,Call to safeApprove without checking previous allowance in burnFees could result in locked funds,137,https://github.com/code-423n4/2022-05-backd-findings/issues/137,backd,2022/05,bug;duplicate;invalid;2 (Med Risk)
131,bardamu,0xE2529459fB873dAeeD4714e76b8601807EF68dFF,2,addGovernor does not require new governor to accept ownership and could result in locked contracts,53,https://github.com/code-423n4/2022-05-backd-findings/issues/53,backd,2022/05,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor confirmed
131,bardamu,0xE2529459fB873dAeeD4714e76b8601807EF68dFF,2,addGovernor does not require new governor to accept ownership and could result in locked contracts,54,https://github.com/code-423n4/2022-05-backd-findings/issues/54,backd,2022/05,bug;invalid;2 (Med Risk)
131,bardamu,0xE2529459fB873dAeeD4714e76b8601807EF68dFF,2,Lack of access control in burnFees function allows front-running / sandwiching and could result in loss of funds,55,https://github.com/code-423n4/2022-05-backd-findings/issues/55,backd,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
131,bardamu,0xE2529459fB873dAeeD4714e76b8601807EF68dFF,2,Missing access control in non-batched InflationManager execute funtions,56,https://github.com/code-423n4/2022-05-backd-findings/issues/56,backd,2022/05,bug;disagree with severity;QA (Quality Assurance);sponsor confirmed
131,bardamu,0xE2529459fB873dAeeD4714e76b8601807EF68dFF,2,LP gauge from removed pool stays whitelisted and with full access to the minter,57,https://github.com/code-423n4/2022-05-backd-findings/issues/57,backd,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
131,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,G,Gas Optimizations,131,https://github.com/code-423n4/2022-05-backd-findings/issues/131,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,Q,QA Report,132,https://github.com/code-423n4/2022-05-backd-findings/issues/132,backd,2022/05,bug;duplicate;QA (Quality Assurance);resolved;sponsor confirmed
131,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Fee-on transfer tokens in `FeeBurner.burnToTarget` will revert transaction,133,https://github.com/code-423n4/2022-05-backd-findings/issues/133,backd,2022/05,bug;QA (Quality Assurance);sponsor disputed
131,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,unstakeFor method in StakerVault.sol does not respect CEI standard.,158,https://github.com/code-423n4/2022-05-backd-findings/issues/158,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,unstakeFor method in AmmConvexGauge.sol does not respect CEI standard.,160,https://github.com/code-423n4/2022-05-backd-findings/issues/160,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,unstakeFor method in AmmGauge.sol does not respect CEI standard.,161,https://github.com/code-423n4/2022-05-backd-findings/issues/161,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,2,Approving from non-zero to non-zero allowance will revert with OZ's `safeApprove()`,163,https://github.com/code-423n4/2022-05-backd-findings/issues/163,backd,2022/05,bug;invalid;2 (Med Risk);sponsor confirmed
131,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,2,Consistently check account balance before and after transfers for Fee-On-Transfer discrepancies,165,https://github.com/code-423n4/2022-05-backd-findings/issues/165,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,BurnToTarget can be exploited to receive more LP tokens,169,https://github.com/code-423n4/2022-05-backd-findings/issues/169,backd,2022/05,bug;invalid;3 (High Risk);sponsor disputed
131,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,Q,QA Report,174,https://github.com/code-423n4/2022-05-backd-findings/issues/174,backd,2022/05,bug;QA (Quality Assurance);sponsor confirmed
131,c3phas,0x440eeef2cea79bc4af1ab533d4b381d453dfc900,G,Gas Optimizations,140,https://github.com/code-423n4/2022-05-backd-findings/issues/140,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,c3phas,0x440eeef2cea79bc4af1ab533d4b381d453dfc900,Q,QA Report,142,https://github.com/code-423n4/2022-05-backd-findings/issues/142,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,Q,QA Report,78,https://github.com/code-423n4/2022-05-backd-findings/issues/78,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,G,Gas Optimizations,79,https://github.com/code-423n4/2022-05-backd-findings/issues/79,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"KeeperGauge: When the Gauge is killed, the epoch can continue to increase, which may DOS the claimRewards function",51,https://github.com/code-423n4/2022-05-backd-findings/issues/51,backd,2022/05,bug;disagree with severity;QA (Quality Assurance);sponsor confirmed
131,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,RewardHandler:Must safeApprove 0 first,52,https://github.com/code-423n4/2022-05-backd-findings/issues/52,backd,2022/05,bug;duplicate;invalid;2 (Med Risk)
131,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"AmmGauge: if AmmGauge is killed, the stakeFor function should revert",76,https://github.com/code-423n4/2022-05-backd-findings/issues/76,backd,2022/05,bug;duplicate;QA (Quality Assurance)
131,ch13fd357r0y3r,0xBA23dfd7cCCD3587A1b8909dd5BcCfD92aCeAE6f,3,Stealing Deposited LP Token Balance of the Contract!,1,https://github.com/code-423n4/2022-05-backd-findings/issues/1,backd,2022/05,bug;invalid;3 (High Risk);sponsor disputed
131,Chom,0xc4c459668fb29833D7Dee997d7D347e2634C9CEF,2,Minus before addition -> underflow risk (But reverted due to solidity 0.8),172,https://github.com/code-423n4/2022-05-backd-findings/issues/172,backd,2022/05,bug;QA (Quality Assurance);sponsor disputed
131,Chom,0xc4c459668fb29833D7Dee997d7D347e2634C9CEF,2,checkpointAllGauges may has gas explode error due to looping too many times,175,https://github.com/code-423n4/2022-05-backd-findings/issues/175,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,Chom,0xc4c459668fb29833D7Dee997d7D347e2634C9CEF,G,Gas Optimizations,178,https://github.com/code-423n4/2022-05-backd-findings/issues/178,backd,2022/05,bug;G (Gas Optimization);sponsor disputed
131,codexploder,0x4f9C70C7F0480fFeDefd32565fb05eFd23d53726,3,Incorrect reward distribution,11,https://github.com/code-423n4/2022-05-backd-findings/issues/11,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,codexploder,0x4f9C70C7F0480fFeDefd32565fb05eFd23d53726,2,User rewards would be lost,12,https://github.com/code-423n4/2022-05-backd-findings/issues/12,backd,2022/05,bug;disagree with severity;QA (Quality Assurance);sponsor confirmed
131,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,3,Users can unstake more AMM Token can their balance,139,https://github.com/code-423n4/2022-05-backd-findings/issues/139,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,Q,QA Report,159,https://github.com/code-423n4/2022-05-backd-findings/issues/159,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,2,Lack of safeApprove(0) may prevent deposits and swapping of token,97,https://github.com/code-423n4/2022-05-backd-findings/issues/97,backd,2022/05,bug;invalid;2 (Med Risk);sponsor confirmed
131,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,User will get free funds,10,https://github.com/code-423n4/2022-05-backd-findings/issues/10,backd,2022/05,bug;invalid;3 (High Risk);sponsor disputed
131,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,5,https://github.com/code-423n4/2022-05-backd-findings/issues/5,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,6,https://github.com/code-423n4/2022-05-backd-findings/issues/6,backd,2022/05,bug;invalid;QA (Quality Assurance);sponsor disputed
131,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,User will get more funds,7,https://github.com/code-423n4/2022-05-backd-findings/issues/7,backd,2022/05,bug;duplicate;2 (Med Risk);sponsor disputed
131,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,BkdLocker depositFees can be blocked,8,https://github.com/code-423n4/2022-05-backd-findings/issues/8,backd,2022/05,bug;2 (Med Risk);sponsor confirmed
131,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Incorrect msg.value usage could lead to fund loss,9,https://github.com/code-423n4/2022-05-backd-findings/issues/9,backd,2022/05,bug;invalid;3 (High Risk);sponsor disputed
131,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,129,https://github.com/code-423n4/2022-05-backd-findings/issues/129,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,134,https://github.com/code-423n4/2022-05-backd-findings/issues/134,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,G,Gas Optimizations,125,https://github.com/code-423n4/2022-05-backd-findings/issues/125,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,Q,QA Report,126,https://github.com/code-423n4/2022-05-backd-findings/issues/126,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,dipp,0x675454Ae78d25632fC26763Fa9CB72a99Cb0A36e,3,More than 1 zero address token in ```burnToTarget``` may lead to draining of ```FeeBurner.sol```,116,https://github.com/code-423n4/2022-05-backd-findings/issues/116,backd,2022/05,bug;invalid;3 (High Risk);sponsor disputed
131,dipp,0x675454Ae78d25632fC26763Fa9CB72a99Cb0A36e,Q,QA Report,155,https://github.com/code-423n4/2022-05-backd-findings/issues/155,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,dipp,0x675454Ae78d25632fC26763Fa9CB72a99Cb0A36e,2,Able to get LP tokens without spending any funds in ```FeeBurner.sol```,156,https://github.com/code-423n4/2022-05-backd-findings/issues/156,backd,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
131,djxploit,0x2635bbab233b9a1cd7703e6c4b80fe39055971d6,G,Gas Optimizations,138,https://github.com/code-423n4/2022-05-backd-findings/issues/138,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,Dravee,0x9399b6934A797f133E452CF1523a4254629Ebf81,G,Gas Optimizations,70,https://github.com/code-423n4/2022-05-backd-findings/issues/70,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,G,Gas Optimizations,32,https://github.com/code-423n4/2022-05-backd-findings/issues/32,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,G,Gas Optimizations,33,https://github.com/code-423n4/2022-05-backd-findings/issues/33,backd,2022/05,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
131,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,Q,QA Report,34,https://github.com/code-423n4/2022-05-backd-findings/issues/34,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,3,DoS on KeeperGauge due to division by zero,35,https://github.com/code-423n4/2022-05-backd-findings/issues/35,backd,2022/05,bug;2 (Med Risk);disagree with severity;sponsor confirmed
131,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,3,DoS in FeeBurner due to address not matching interface.,36,https://github.com/code-423n4/2022-05-backd-findings/issues/36,backd,2022/05,bug;invalid;3 (High Risk);sponsor disputed
131,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,2,Possible wrong state of state because of unstakeFor().,37,https://github.com/code-423n4/2022-05-backd-findings/issues/37,backd,2022/05,bug;invalid;2 (Med Risk);sponsor confirmed
131,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,Gas Optimizations,103,https://github.com/code-423n4/2022-05-backd-findings/issues/103,backd,2022/05,bug;G (Gas Optimization);sponsor disputed
131,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,168,https://github.com/code-423n4/2022-05-backd-findings/issues/168,backd,2022/05,bug;G (Gas Optimization);sponsor disputed
131,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,Q,QA Report,173,https://github.com/code-423n4/2022-05-backd-findings/issues/173,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,170,https://github.com/code-423n4/2022-05-backd-findings/issues/170,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,Q,QA Report,171,https://github.com/code-423n4/2022-05-backd-findings/issues/171,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,3,`RewardHandler.burnFees()` could fail depending on number of pools with `underlying = address(0)`,118,https://github.com/code-423n4/2022-05-backd-findings/issues/118,backd,2022/05,bug;invalid;3 (High Risk);sponsor disputed
131,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,3,Attacker can get drain ETH for `targetLpToken_`,119,https://github.com/code-423n4/2022-05-backd-findings/issues/119,backd,2022/05,bug;invalid;3 (High Risk);sponsor disputed
131,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,2,`RewardHandler.sol`and `FeeBurner.sol` will fail due to inexistent `AddressProvider.sol` getter functions,120,https://github.com/code-423n4/2022-05-backd-findings/issues/120,backd,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
131,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,Q,QA Report,121,https://github.com/code-423n4/2022-05-backd-findings/issues/121,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,G,Gas Optimizations,122,https://github.com/code-423n4/2022-05-backd-findings/issues/122,backd,2022/05,bug;G (Gas Optimization);sponsor disputed
131,hansfriese,0xf2dCB1d3B7091Dcf2cE87aD115377C108ebE6DD4,3,Strategy in StakerVault.sol can steal more rewards even though it's designed strategies shouldn't get rewards.,85,https://github.com/code-423n4/2022-05-backd-findings/issues/85,backd,2022/05,bug;2 (Med Risk);disagree with severity;sponsor confirmed
131,hansfriese,0xf2dCB1d3B7091Dcf2cE87aD115377C108ebE6DD4,2,Users can claim more fees than expected if governance migrates current rewardToken again by fault.,86,https://github.com/code-423n4/2022-05-backd-findings/issues/86,backd,2022/05,bug;2 (Med Risk);sponsor confirmed
131,hansfriese,0xf2dCB1d3B7091Dcf2cE87aD115377C108ebE6DD4,2,"StakerVault.unstake(), StakerVault.unstakeFor() would revert with a uint underflow error of StakerVault.strategiesTotalStaked, StakerVault._poolTotalStaked.",87,https://github.com/code-423n4/2022-05-backd-findings/issues/87,backd,2022/05,bug;2 (Med Risk);sponsor confirmed
131,hansfriese,0xf2dCB1d3B7091Dcf2cE87aD115377C108ebE6DD4,2,RewardHandler.burnFees() will work only once and revert after that if burnedAmount is different.,88,https://github.com/code-423n4/2022-05-backd-findings/issues/88,backd,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
131,hansfriese,0xf2dCB1d3B7091Dcf2cE87aD115377C108ebE6DD4,Q,QA Report,89,https://github.com/code-423n4/2022-05-backd-findings/issues/89,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,hansfriese,0xf2dCB1d3B7091Dcf2cE87aD115377C108ebE6DD4,G,Gas Optimizations,90,https://github.com/code-423n4/2022-05-backd-findings/issues/90,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,AmmGauge stakeFor/unstakeFor allow for reentrancy that can lead to stealing the whole contract balance,62,https://github.com/code-423n4/2022-05-backd-findings/issues/62,backd,2022/05,bug;QA (Quality Assurance);sponsor disputed
131,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,108,https://github.com/code-423n4/2022-05-backd-findings/issues/108,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,109,https://github.com/code-423n4/2022-05-backd-findings/issues/109,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,Users will lose all of their money during pool migration,110,https://github.com/code-423n4/2022-05-backd-findings/issues/110,backd,2022/05,bug;invalid;3 (High Risk);sponsor disputed
131,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Vote locking should block wrapper contracts,112,https://github.com/code-423n4/2022-05-backd-findings/issues/112,backd,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
131,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,There are multiple ways for admins/governance to rug users,113,https://github.com/code-423n4/2022-05-backd-findings/issues/113,backd,2022/05,bug;2 (Med Risk);sponsor disputed
131,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Contracts allow users to steal latent funds as their own,114,https://github.com/code-423n4/2022-05-backd-findings/issues/114,backd,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
131,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,"Code credits fee-on-transfer/rebasing tokens for amount stated, not amount transferred/accrued",115,https://github.com/code-423n4/2022-05-backd-findings/issues/115,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,`StakerVault` re-introduces the `approve()` race condition,117,https://github.com/code-423n4/2022-05-backd-findings/issues/117,backd,2022/05,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor confirmed
131,JC,0xFc06B4C7b226C0bE3766656Fe4165592d9E7749f,2,call() should be used instead or transfer() on an address payable,177,https://github.com/code-423n4/2022-05-backd-findings/issues/177,backd,2022/05,bug;duplicate;2 (Med Risk)
131,Kaiziron,0x0590C193Aa1E23849263FF52Ef769F4CDdb6e947,G,Gas Optimizations,102,https://github.com/code-423n4/2022-05-backd-findings/issues/102,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,Kaiziron,0x0590C193Aa1E23849263FF52Ef769F4CDdb6e947,Q,QA Report,106,https://github.com/code-423n4/2022-05-backd-findings/issues/106,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,Kumpa,0x9813Bb4f6AC2993d67D293ce5eC915661Eb539D2,3,```AmmGauge.unstakeFor``` and ```AmmConvexGauge.unstakeFor``` are susceptible to reentrancy attack ,66,https://github.com/code-423n4/2022-05-backd-findings/issues/66,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,Kumpa,0x9813Bb4f6AC2993d67D293ce5eC915661Eb539D2,2,Having no clear path to define ```totalLpPoolWeight``` and initially set ```totalLpPoolWeight``` to zero maybe problematic for the protocol ,67,https://github.com/code-423n4/2022-05-backd-findings/issues/67,backd,2022/05,bug;QA (Quality Assurance);sponsor disputed
131,masterchief,0x1DBdFB46085a17C3AdB146561EFE7b0e43a8B785,Q,QA Report,176,https://github.com/code-423n4/2022-05-backd-findings/issues/176,backd,2022/05,bug;duplicate;QA (Quality Assurance)
131,MiloTruck,0x9834b17a29652e317202109C2e624FE0A32A1383,G,Gas Optimizations,104,https://github.com/code-423n4/2022-05-backd-findings/issues/104,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,MiloTruck,0x9834b17a29652e317202109C2e624FE0A32A1383,Q,QA Report,105,https://github.com/code-423n4/2022-05-backd-findings/issues/105,backd,2022/05,bug;QA (Quality Assurance);sponsor disputed
131,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,G,Gas Optimizations,2,https://github.com/code-423n4/2022-05-backd-findings/issues/2,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,3,Not following the Checks-Effects-Interactions pattern,3,https://github.com/code-423n4/2022-05-backd-findings/issues/3,backd,2022/05,bug;QA (Quality Assurance);sponsor disputed
131,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,3,unsafe call using msg.value in loop,4,https://github.com/code-423n4/2022-05-backd-findings/issues/4,backd,2022/05,bug;invalid;3 (High Risk);sponsor disputed
131,peritoflores,0xCC9C3D6ed709D47255815FF5b5BB17A745B7CEED,2,Usage of deprecated transfer to send ETH,180,https://github.com/code-423n4/2022-05-backd-findings/issues/180,backd,2022/05,bug;2 (Med Risk);sponsor confirmed
131,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,2,Total Supply is not guaranteed and is not deterministic.,46,https://github.com/code-423n4/2022-05-backd-findings/issues/46,backd,2022/05,bug;3 (High Risk);disagree with severity;sponsor confirmed
131,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,3,Amount distributed can be inaccurate when updating weights ,47,https://github.com/code-423n4/2022-05-backd-findings/issues/47,backd,2022/05,bug;2 (Med Risk);disagree with severity;sponsor confirmed
131,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,G,Gas Optimizations,48,https://github.com/code-423n4/2022-05-backd-findings/issues/48,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,Q,QA Report,49,https://github.com/code-423n4/2022-05-backd-findings/issues/49,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,Randyyy,0x8a59f36d7d44460418781ded3d1cA45e19F2Ab02,G,Gas Optimizations,164,https://github.com/code-423n4/2022-05-backd-findings/issues/164,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,13,https://github.com/code-423n4/2022-05-backd-findings/issues/13,backd,2022/05,bug;invalid;QA (Quality Assurance);resolved;sponsor confirmed
131,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,14,https://github.com/code-423n4/2022-05-backd-findings/issues/14,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,RoiEvenHaim,0xf0734088F16B1F9Ffc22b202756E985535B13e98,G,Gas Optimizations,77,https://github.com/code-423n4/2022-05-backd-findings/issues/77,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,FeeBurner initiates swap without any slippage checks if Chainlink oracle fails ,44,https://github.com/code-423n4/2022-05-backd-findings/issues/44,backd,2022/05,bug;2 (Med Risk);sponsor disputed
131,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,45,https://github.com/code-423n4/2022-05-backd-findings/issues/45,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,User can game BkdLocker's withdraw delay,68,https://github.com/code-423n4/2022-05-backd-findings/issues/68,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,sach1r0,0x0e815C6156E2BE737bd8e81D145D816A517CEBa1,G,Gas Optimizations,40,https://github.com/code-423n4/2022-05-backd-findings/issues/40,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,sach1r0,0x0e815C6156E2BE737bd8e81D145D816A517CEBa1,2, `unstakeFor` function doesn't have a reentrancy guard,41,https://github.com/code-423n4/2022-05-backd-findings/issues/41,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,sach1r0,0x0e815C6156E2BE737bd8e81D145D816A517CEBa1,Q,QA Report,42,https://github.com/code-423n4/2022-05-backd-findings/issues/42,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,sashik_eth,0xc43622E0F55c772fDc2fD876cE84dFc50D6AB797,Q,QA Report,146,https://github.com/code-423n4/2022-05-backd-findings/issues/146,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,sashik_eth,0xc43622E0F55c772fDc2fD876cE84dFc50D6AB797,G,Gas Optimizations,148,https://github.com/code-423n4/2022-05-backd-findings/issues/148,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,scaraven,0xac3A826c8ea76Ab6FCE817d3e54da0acb5fd30d5,G,Gas Optimizations,128,https://github.com/code-423n4/2022-05-backd-findings/issues/128,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,scaraven,0xac3A826c8ea76Ab6FCE817d3e54da0acb5fd30d5,3,Users can claim extremely large rewards or lock rewards from LpGauge due to uninitialised `poolLastUpdate` variable,141,https://github.com/code-423n4/2022-05-backd-findings/issues/141,backd,2022/05,bug;2 (Med Risk);sponsor confirmed
131,scaraven,0xac3A826c8ea76Ab6FCE817d3e54da0acb5fd30d5,3,Governance Token limit can be massively increased due to uninitialised `lastEvent` variable,143,https://github.com/code-423n4/2022-05-backd-findings/issues/143,backd,2022/05,bug;duplicate;3 (High Risk)
131,scaraven,0xac3A826c8ea76Ab6FCE817d3e54da0acb5fd30d5,Q,QA Report,145,https://github.com/code-423n4/2022-05-backd-findings/issues/145,backd,2022/05,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
131,SecureZeroX,0x5847c3294DB1c9D66f5008156829CE0911f0eD58,2,`kill()` function increase `epoch` every time when it calls even already killed,73,https://github.com/code-423n4/2022-05-backd-findings/issues/73,backd,2022/05,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor confirmed
131,SecureZeroX,0x5847c3294DB1c9D66f5008156829CE0911f0eD58,Q,QA Report,74,https://github.com/code-423n4/2022-05-backd-findings/issues/74,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,SecureZeroX,0x5847c3294DB1c9D66f5008156829CE0911f0eD58,G,Gas Optimizations,75,https://github.com/code-423n4/2022-05-backd-findings/issues/75,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,2,Potential DoS when removing keeper gauge,71,https://github.com/code-423n4/2022-05-backd-findings/issues/71,backd,2022/05,bug;2 (Med Risk);sponsor confirmed
131,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,Q,QA Report,72,https://github.com/code-423n4/2022-05-backd-findings/issues/72,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,Q,QA Report,149,https://github.com/code-423n4/2022-05-backd-findings/issues/149,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,G,Gas Optimizations,151,https://github.com/code-423n4/2022-05-backd-findings/issues/151,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,G,Gas Optimizations,101,https://github.com/code-423n4/2022-05-backd-findings/issues/101,backd,2022/05,bug;duplicate;G (Gas Optimization);resolved;sponsor confirmed
131,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,G,Gas Optimizations,63,https://github.com/code-423n4/2022-05-backd-findings/issues/63,backd,2022/05,bug;duplicate;G (Gas Optimization);sponsor disputed
131,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,G,Gas Optimizations,64,https://github.com/code-423n4/2022-05-backd-findings/issues/64,backd,2022/05,bug;duplicate;G (Gas Optimization);sponsor disputed
131,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,Q,QA Report,80,https://github.com/code-423n4/2022-05-backd-findings/issues/80,backd,2022/05,bug;invalid;QA (Quality Assurance);sponsor disputed
131,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,Q,QA Report,81,https://github.com/code-423n4/2022-05-backd-findings/issues/81,backd,2022/05,bug;invalid;QA (Quality Assurance);sponsor disputed
131,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,Q,QA Report,82,https://github.com/code-423n4/2022-05-backd-findings/issues/82,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,Q,QA Report,83,https://github.com/code-423n4/2022-05-backd-findings/issues/83,backd,2022/05,bug;invalid;QA (Quality Assurance);resolved;sponsor confirmed
131,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,Q,QA Report,84,https://github.com/code-423n4/2022-05-backd-findings/issues/84,backd,2022/05,bug;duplicate;QA (Quality Assurance);resolved;sponsor confirmed
131,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,Q,QA Report,91,https://github.com/code-423n4/2022-05-backd-findings/issues/91,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,G,Gas Optimizations,92,https://github.com/code-423n4/2022-05-backd-findings/issues/92,backd,2022/05,bug;G (Gas Optimization);sponsor disputed
131,SmartSek,0x886241e011A6C148bdD96B097EB27962f8A1c5F0,2,Possible future risk of reentrancy for upgradeable token,144,https://github.com/code-423n4/2022-05-backd-findings/issues/144,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,SmartSek,0x886241e011A6C148bdD96B097EB27962f8A1c5F0,2,Inconsistency in view functions can lead to users believing they’re due for more BKD rewards,150,https://github.com/code-423n4/2022-05-backd-findings/issues/150,backd,2022/05,bug;2 (Med Risk);sponsor confirmed
131,SmartSek,0x886241e011A6C148bdD96B097EB27962f8A1c5F0,2,Deposit doesn't initialize WithdrawalMeta,152,https://github.com/code-423n4/2022-05-backd-findings/issues/152,backd,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
131,SmartSek,0x886241e011A6C148bdD96B097EB27962f8A1c5F0,Q,QA Report,153,https://github.com/code-423n4/2022-05-backd-findings/issues/153,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,SmartSek,0x886241e011A6C148bdD96B097EB27962f8A1c5F0,G,Gas Optimizations,154,https://github.com/code-423n4/2022-05-backd-findings/issues/154,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,StyxRave,0x55118951Ac44B0f58B9382211bdF58149ef13333,Q,QA Report,58,https://github.com/code-423n4/2022-05-backd-findings/issues/58,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
131,StyxRave,0x55118951Ac44B0f58B9382211bdF58149ef13333,G,Gas Optimizations,59,https://github.com/code-423n4/2022-05-backd-findings/issues/59,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,StyxRave,0x55118951Ac44B0f58B9382211bdF58149ef13333,2,Using call() instead of transfer() to send ETH,65,https://github.com/code-423n4/2022-05-backd-findings/issues/65,backd,2022/05,bug;duplicate;2 (Med Risk)
131,Tadashi,0x8638c0a8C936DeFaCB575a2AD5B103F2a3876cE7,2,Malicious users can use burnToTarget in FeeBurner contract to use locked funds in SwapperRouter contract ,20,https://github.com/code-423n4/2022-05-backd-findings/issues/20,backd,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
131,Tadashi,0x8638c0a8C936DeFaCB575a2AD5B103F2a3876cE7,Q,QA Report,21,https://github.com/code-423n4/2022-05-backd-findings/issues/21,backd,2022/05,bug;invalid;QA (Quality Assurance);resolved;sponsor confirmed
131,Tadashi,0x8638c0a8C936DeFaCB575a2AD5B103F2a3876cE7,G,Gas Optimizations,22,https://github.com/code-423n4/2022-05-backd-findings/issues/22,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,107,https://github.com/code-423n4/2022-05-backd-findings/issues/107,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,2,it's possible to initialize contract BkdLocker for multiple times by sending startBoost=0 and each time different values for other parameters,136,https://github.com/code-423n4/2022-05-backd-findings/issues/136,backd,2022/05,bug;2 (Med Risk);disagree with severity;sponsor confirmed
131,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,wrong reward distribution and user fund lose if migrate() is called with current rewardToken by mistake or intentionally ,157,https://github.com/code-423n4/2022-05-backd-findings/issues/157,backd,2022/05,bug;duplicate;2 (Med Risk)
131,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,2,lockFor() in BkdLocker don't check that user is not 0x0 and if user by mistake call this function with value 0x0 s/he is going to lose his funds.,166,https://github.com/code-423n4/2022-05-backd-findings/issues/166,backd,2022/05,bug;disagree with severity;QA (Quality Assurance);sponsor confirmed
131,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,2,In BkdLocker codes uses safeTransferFrom() multiple times for reward tokens without considering deflationary tokens,167,https://github.com/code-423n4/2022-05-backd-findings/issues/167,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,2,Function unstakeFor() and  stakeFor() in AmmGauge is vulnerable to reentrancy attacfk,179,https://github.com/code-423n4/2022-05-backd-findings/issues/179,backd,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
131,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`BkdLocker#depositFees()` can be front run to steal the newly added rewardToken,95,https://github.com/code-423n4/2022-05-backd-findings/issues/95,backd,2022/05,bug;2 (Med Risk);sponsor disputed
131,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,Attacker can steal funds from the contract with re-entrancy from hookable tokens,96,https://github.com/code-423n4/2022-05-backd-findings/issues/96,backd,2022/05,bug;QA (Quality Assurance);sponsor disputed
131,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"`Minter.sol#_executeInflationRateUpdate()` `inflationManager().checkpointAllGauges()` is called after InflationRate is updated, causing users to lose rewards",98,https://github.com/code-423n4/2022-05-backd-findings/issues/98,backd,2022/05,bug;2 (Med Risk);disagree with severity;sponsor confirmed
131,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,`Minter.sol#startInflation()` can be bypassed,99,https://github.com/code-423n4/2022-05-backd-findings/issues/99,backd,2022/05,bug;3 (High Risk);sponsor confirmed
131,Waze,0xB649642DEe8E9E25b21cfc67DA7DCf86828dd60D,G,Gas Optimizations,127,https://github.com/code-423n4/2022-05-backd-findings/issues/127,backd,2022/05,bug;G (Gas Optimization);resolved;sponsor confirmed
131,Waze,0xB649642DEe8E9E25b21cfc67DA7DCf86828dd60D,Q,QA Report,130,https://github.com/code-423n4/2022-05-backd-findings/issues/130,backd,2022/05,bug;QA (Quality Assurance);resolved;sponsor confirmed
122,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,223,https://github.com/code-423n4/2022-05-cally-findings/issues/223,cally,2022/05,bug;G (Gas Optimization)
122,0x1337,0x4C024e5B3AE9B56319ed7c2D0F73A8535DDFF47e,3,Arbitrage Bots Could Extract Value From Buyer of Call Options,60,https://github.com/code-423n4/2022-05-cally-findings/issues/60,cally,2022/05,bug;invalid;3 (High Risk);sponsor disputed
122,0x1337,0x4C024e5B3AE9B56319ed7c2D0F73A8535DDFF47e,3,Vault is Not Compatible with Fee Tokens and Vaults with Such Tokens Could Be Exploited,61,https://github.com/code-423n4/2022-05-cally-findings/issues/61,cally,2022/05,bug;2 (Med Risk);sponsor confirmed
122,0x1337,0x4C024e5B3AE9B56319ed7c2D0F73A8535DDFF47e,Q,QA Report,62,https://github.com/code-423n4/2022-05-cally-findings/issues/62,cally,2022/05,bug;QA (Quality Assurance)
122,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,42,https://github.com/code-423n4/2022-05-cally-findings/issues/42,cally,2022/05,bug;G (Gas Optimization)
122,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,43,https://github.com/code-423n4/2022-05-cally-findings/issues/43,cally,2022/05,bug;QA (Quality Assurance)
122,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,The logic it's prone to fake auctions,44,https://github.com/code-423n4/2022-05-cally-findings/issues/44,cally,2022/05,bug;invalid;sponsor disputed
122,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,17,https://github.com/code-423n4/2022-05-cally-findings/issues/17,cally,2022/05,bug;G (Gas Optimization);Gas Report - High quality report
122,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,Q,QA Report,18,https://github.com/code-423n4/2022-05-cally-findings/issues/18,cally,2022/05,bug;QA (Quality Assurance)
122,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,2,Lido eth wrap can fail,253,https://github.com/code-423n4/2022-05-cally-findings/issues/253,cally,2022/05,bug;invalid;sponsor disputed
122,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,3,Cally.sol doesn't handle fee on transfer ERC20 tokens,126,https://github.com/code-423n4/2022-05-cally-findings/issues/126,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,2,Might not get desired eth from exercise if feeRate changes,127,https://github.com/code-423n4/2022-05-cally-findings/issues/127,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,0xDjango,0x886241e011A6C148bdD96B097EB27962f8A1c5F0,3,Fee on transfer tokens cause loss of funds and/or frozen funds for both vault owner and buyer,100,https://github.com/code-423n4/2022-05-cally-findings/issues/100,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,0xDjango,0x886241e011A6C148bdD96B097EB27962f8A1c5F0,Q,QA Report,103,https://github.com/code-423n4/2022-05-cally-findings/issues/103,cally,2022/05,bug;QA (Quality Assurance)
122,0xDjango,0x886241e011A6C148bdD96B097EB27962f8A1c5F0,G,Gas Optimizations,105,https://github.com/code-423n4/2022-05-cally-findings/issues/105,cally,2022/05,bug;G (Gas Optimization)
122,0xDjango,0x886241e011A6C148bdD96B097EB27962f8A1c5F0,2,"setFee() function lacks validation, can lead to less funds than expected for vault beneficiary",90,https://github.com/code-423n4/2022-05-cally-findings/issues/90,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,0xDjango,0x886241e011A6C148bdD96B097EB27962f8A1c5F0,2,Lack of 0 amount check allows malicious user to create infinite vaults,91,https://github.com/code-423n4/2022-05-cally-findings/issues/91,cally,2022/05,bug;2 (Med Risk);resolved;sponsor confirmed
122,0xDjango,0x886241e011A6C148bdD96B097EB27962f8A1c5F0,2,Vault owner can intentionally create a flat auction curve,92,https://github.com/code-423n4/2022-05-cally-findings/issues/92,cally,2022/05,bug;duplicate;QA (Quality Assurance);sponsor confirmed
122,0xDjango,0x886241e011A6C148bdD96B097EB27962f8A1c5F0,2,Cally should ensure ownership of ERC721 to prevent against malicious contracts,94,https://github.com/code-423n4/2022-05-cally-findings/issues/94,cally,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
122,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,2,use of `msg.value >= premium` instead of `==` in `buyOption()`,169,https://github.com/code-423n4/2022-05-cally-findings/issues/169,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,2,`feeRate` can be changed between buying and exercising option. ,170,https://github.com/code-423n4/2022-05-cally-findings/issues/170,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,2,No method to rescue stucked ether and tokens ,171,https://github.com/code-423n4/2022-05-cally-findings/issues/171,cally,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
122,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,Q,QA Report,172,https://github.com/code-423n4/2022-05-cally-findings/issues/172,cally,2022/05,bug;QA (Quality Assurance)
122,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,G,Gas Optimizations,173,https://github.com/code-423n4/2022-05-cally-findings/issues/173,cally,2022/05,bug;G (Gas Optimization)
122,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,G,Gas Optimizations,86,https://github.com/code-423n4/2022-05-cally-findings/issues/86,cally,2022/05,bug;G (Gas Optimization)
122,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,G,Gas Optimizations,88,https://github.com/code-423n4/2022-05-cally-findings/issues/88,cally,2022/05,bug;invalid;G (Gas Optimization)
122,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,26,https://github.com/code-423n4/2022-05-cally-findings/issues/26,cally,2022/05,bug;G (Gas Optimization)
122,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,G,Gas Optimizations,304,https://github.com/code-423n4/2022-05-cally-findings/issues/304,cally,2022/05,bug;G (Gas Optimization)
122,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,Q,QA Report,307,https://github.com/code-423n4/2022-05-cally-findings/issues/307,cally,2022/05,bug;QA (Quality Assurance)
122,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,2,Fee-on-transfer / rebasing ERC20 cannot be used as underlying,308,https://github.com/code-423n4/2022-05-cally-findings/issues/308,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,3,`TokenType` mismatch with true type can be exploited to steal funds,309,https://github.com/code-423n4/2022-05-cally-findings/issues/309,cally,2022/05,bug;duplicate;3 (High Risk);sponsor confirmed
122,0xsanson,0x4DF37CC3C48eC3EB689c8Bf0D91249cE2506f73B,2,Upgraded Q -> M from 307 [1655245513660],345,https://github.com/code-423n4/2022-05-cally-findings/issues/345,cally,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
122,242,0x8C67Cc76e6043d9DfE47Eb1a24d69cAf0Bc40bab,Q,QA Report,122,https://github.com/code-423n4/2022-05-cally-findings/issues/122,cally,2022/05,bug;QA (Quality Assurance)
122,ACai,0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,2,The currentBeneficiary may suffer losses if the owner raise the fee before executing exercise function.,120,https://github.com/code-423n4/2022-05-cally-findings/issues/120,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,ACai,0xa8881ede6ae1404e62f20bb4aa89e5b1a7e1efd8,2,"If the beneficiary variable is not modified in time, the benefit will be lost.",121,https://github.com/code-423n4/2022-05-cally-findings/issues/121,cally,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
122,Aits,0x5178b5223a277de6953bB653DA8BAC141Ee663De,2,Divide before multiply,280,https://github.com/code-423n4/2022-05-cally-findings/issues/280,cally,2022/05,bug;disagree with severity;QA (Quality Assurance)
122,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,Q,QA Report,10,https://github.com/code-423n4/2022-05-cally-findings/issues/10,cally,2022/05,bug;QA (Quality Assurance)
122,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,Q,QA Report,55,https://github.com/code-423n4/2022-05-cally-findings/issues/55,cally,2022/05,bug;duplicate;QA (Quality Assurance)
122,antonttc,0x386f6B908640d9f394EF37bC1b8c3a4018fa3dB1,G,Gas Optimizations,144,https://github.com/code-423n4/2022-05-cally-findings/issues/144,cally,2022/05,bug;G (Gas Optimization)
122,antonttc,0x386f6B908640d9f394EF37bC1b8c3a4018fa3dB1,Q,QA Report,150,https://github.com/code-423n4/2022-05-cally-findings/issues/150,cally,2022/05,bug;QA (Quality Assurance)
122,antonttc,0x386f6B908640d9f394EF37bC1b8c3a4018fa3dB1,2,no protection on feeRate,151,https://github.com/code-423n4/2022-05-cally-findings/issues/151,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,antonttc,0x386f6B908640d9f394EF37bC1b8c3a4018fa3dB1,2,ERC721 callback not called when sending token to user.,161,https://github.com/code-423n4/2022-05-cally-findings/issues/161,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,antonttc,0x386f6B908640d9f394EF37bC1b8c3a4018fa3dB1,3,User NFT could be locked because of wrong parameter specified in `createVault`,222,https://github.com/code-423n4/2022-05-cally-findings/issues/222,cally,2022/05,bug;duplicate;2 (Med Risk);disagree with severity
122,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,Q,QA Report,235,https://github.com/code-423n4/2022-05-cally-findings/issues/235,cally,2022/05,bug;invalid;QA (Quality Assurance);sponsor disputed
122,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Using `transferFrom` on ERC721 tokens,236,https://github.com/code-423n4/2022-05-cally-findings/issues/236,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Overpaying option premium,237,https://github.com/code-423n4/2022-05-cally-findings/issues/237,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Inconsistent balance when depositing fee-on transfer tokens,238,https://github.com/code-423n4/2022-05-cally-findings/issues/238,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Owner can grief with high fees,240,https://github.com/code-423n4/2022-05-cally-findings/issues/240,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,Bludya,0x4f117ce2d1ce1cb0fea24be74eb93bb98cea634e,G,Gas Optimizations,109,https://github.com/code-423n4/2022-05-cally-findings/issues/109,cally,2022/05,bug;G (Gas Optimization);Gas Report - High quality report
122,Bludya,0x4f117ce2d1ce1cb0fea24be74eb93bb98cea634e,2,"Protocol fee amount is calculated on exercise, not at vault creation.",155,https://github.com/code-423n4/2022-05-cally-findings/issues/155,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,Bludya,0x4f117ce2d1ce1cb0fea24be74eb93bb98cea634e,Q,QA Report,159,https://github.com/code-423n4/2022-05-cally-findings/issues/159,cally,2022/05,bug;QA (Quality Assurance)
122,Bludya,0x4f117ce2d1ce1cb0fea24be74eb93bb98cea634e,G,Gas Optimizations,160,https://github.com/code-423n4/2022-05-cally-findings/issues/160,cally,2022/05,bug;duplicate;G (Gas Optimization)
122,bobirichman,0x0BacBAd41a499bADcD35eF1b7bDC951A119BBD86,G,Gas Optimization,218,https://github.com/code-423n4/2022-05-cally-findings/issues/218,cally,2022/05,bug;G (Gas Optimization)
122,bobirichman,0x0BacBAd41a499bADcD35eF1b7bDC951A119BBD86,Q,QA Report,219,https://github.com/code-423n4/2022-05-cally-findings/issues/219,cally,2022/05,bug;QA (Quality Assurance)
122,BondiPestControl,0x28235de0121700a462b5098cff7d3615b050551f,2,`exercise()` Does Not Burn a Vault's NFT,205,https://github.com/code-423n4/2022-05-cally-findings/issues/205,cally,2022/05,bug;invalid;2 (Med Risk);disagree with severity;sponsor acknowledged
122,BondiPestControl,0x28235de0121700a462b5098cff7d3615b050551f,2,`feeRate` is Not Configured Upon Contract Deployment,206,https://github.com/code-423n4/2022-05-cally-findings/issues/206,cally,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
122,BondiPestControl,0x28235de0121700a462b5098cff7d3615b050551f,2,Cally Protocol Does Not Support Cryptopunk or Cryptokitties Tokens,207,https://github.com/code-423n4/2022-05-cally-findings/issues/207,cally,2022/05,bug;disagree with severity;QA (Quality Assurance);sponsor acknowledged
122,BondiPestControl,0x28235de0121700a462b5098cff7d3615b050551f,3,Options Cannot Be Exercised If a Vault is Created Upon a Fee-On-Transfer Token,208,https://github.com/code-423n4/2022-05-cally-findings/issues/208,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,BondiPestControl,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Overflow in `buyOption()`  will prevent buying for more than 195 days,82,https://github.com/code-423n4/2022-05-cally-findings/issues/82,cally,2022/05,bug;duplicate;2 (Med Risk);disagree with severity
122,BondiPestControl,0x28235dE0121700a462B5098Cff7D3615b050551F,2,Lack of upper bound on `feeRate` allows the owner to steal all funds of DoS the contract,83,https://github.com/code-423n4/2022-05-cally-findings/issues/83,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,BondiPestControl,0x28235dE0121700a462B5098Cff7D3615b050551F,2,User's may accidentally overpay in `buyOption()` and the excess will be paid to the vault creator,84,https://github.com/code-423n4/2022-05-cally-findings/issues/84,cally,2022/05,bug;2 (Med Risk);resolved;sponsor confirmed
122,BondiPestControl,0x28235dE0121700a462B5098Cff7D3615b050551F,2,`createVault()` does not verify ERC20 token contract exists before transferring,85,https://github.com/code-423n4/2022-05-cally-findings/issues/85,cally,2022/05,bug;duplicate;3 (High Risk);sponsor confirmed
122,BouSalman,0x7c44A7afc34abE118aB752c836680aD7682b9273,Q,QA Report,108,https://github.com/code-423n4/2022-05-cally-findings/issues/108,cally,2022/05,bug;QA (Quality Assurance)
122,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,G,Gas Optimizations,189,https://github.com/code-423n4/2022-05-cally-findings/issues/189,cally,2022/05,bug;G (Gas Optimization);Gas Report - High quality report
122,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,Q,QA Report,190,https://github.com/code-423n4/2022-05-cally-findings/issues/190,cally,2022/05,bug;QA (Quality Assurance)
122,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,2,Consistently check account balance before and after transfers for Fee-On-Transfer discrepancies,191,https://github.com/code-423n4/2022-05-cally-findings/issues/191,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,Loss of funds due to premiums and proceeds accruing to address(0) by default,194,https://github.com/code-423n4/2022-05-cally-findings/issues/194,cally,2022/05,bug;invalid;3 (High Risk);sponsor disputed
122,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,Loss of funds due to beneficiary override to `address(0)` during transfer,195,https://github.com/code-423n4/2022-05-cally-findings/issues/195,cally,2022/05,bug;invalid;3 (High Risk);sponsor disputed
122,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,3,Loss of asset due to improperly setting dutchAuctionReserveStriked,196,https://github.com/code-423n4/2022-05-cally-findings/issues/196,cally,2022/05,bug;invalid;3 (High Risk);sponsor disputed
122,BowTiedWardens,0x644AEDa9E5797474B28A656d9e2016A927B0aE1B,2,Upgraded Q -> M from 190 [1654475279061],343,https://github.com/code-423n4/2022-05-cally-findings/issues/343,cally,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
122,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2,NFT's can be frozen at exercise(),213,https://github.com/code-423n4/2022-05-cally-findings/issues/213,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2,OnlyOwner functions that make critical changes should have safeguards,214,https://github.com/code-423n4/2022-05-cally-findings/issues/214,cally,2022/05,bug;duplicate;2 (Med Risk)
122,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,Q,QA Report,215,https://github.com/code-423n4/2022-05-cally-findings/issues/215,cally,2022/05,bug;QA (Quality Assurance)
122,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,G,Gas Optimizations,216,https://github.com/code-423n4/2022-05-cally-findings/issues/216,cally,2022/05,bug;G (Gas Optimization)
122,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2," msg.sender is unchecked in exercise(), which can cause user's NFT to be frozen",3,https://github.com/code-423n4/2022-05-cally-findings/issues/3,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,Q,QA Report,33,https://github.com/code-423n4/2022-05-cally-findings/issues/33,cally,2022/05,bug;QA (Quality Assurance)
122,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Unsupported fee-on-transfer tokens,4,https://github.com/code-423n4/2022-05-cally-findings/issues/4,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Excess ether did not return to the user,5,https://github.com/code-423n4/2022-05-cally-findings/issues/5,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,CertoraInc,0x777bA383e74062dd7948A61471267E8e4370EA39,2,Miner motivate the time.,104,https://github.com/code-423n4/2022-05-cally-findings/issues/104,cally,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
122,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,G,Gas Optimizations,283,https://github.com/code-423n4/2022-05-cally-findings/issues/283,cally,2022/05,bug;G (Gas Optimization)
122,CertoraInc,0x4bCc7c54E4e8E9a563B92272A51bBFb5d233de32,Q,QA Report,284,https://github.com/code-423n4/2022-05-cally-findings/issues/284,cally,2022/05,bug;QA (Quality Assurance)
122,CertoraInc,0x777bA383e74062dd7948A61471267E8e4370EA39,3,Re-entance steal token,99,https://github.com/code-423n4/2022-05-cally-findings/issues/99,cally,2022/05,bug;invalid;3 (High Risk);sponsor disputed
122,Cityscape,0x46686E5420B34d5950d37855291d970fBa5527b6,2,Upgraded Q -> M from 98 [1654475216526],342,https://github.com/code-423n4/2022-05-cally-findings/issues/342,cally,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
122,Cityscape,0x46686E5420B34d5950d37855291d970fBa5527b6,G,Gas Optimizations,93,https://github.com/code-423n4/2022-05-cally-findings/issues/93,cally,2022/05,bug;G (Gas Optimization)
122,Cityscape,0x46686E5420B34d5950d37855291d970fBa5527b6,Q,QA Report,98,https://github.com/code-423n4/2022-05-cally-findings/issues/98,cally,2022/05,bug;QA (Quality Assurance)
122,crispymangoes,0x69321ecB1CF0f0581d4b75EAfaAF1df01f24b77E,2,setFee has no maximum check,29,https://github.com/code-423n4/2022-05-cally-findings/issues/29,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,Q,QA Report,111,https://github.com/code-423n4/2022-05-cally-findings/issues/111,cally,2022/05,bug;invalid;QA (Quality Assurance);sponsor disputed
122,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,Q,QA Report,112,https://github.com/code-423n4/2022-05-cally-findings/issues/112,cally,2022/05,bug;invalid;QA (Quality Assurance);sponsor disputed
122,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,Q,QA Report,113,https://github.com/code-423n4/2022-05-cally-findings/issues/113,cally,2022/05,bug;QA (Quality Assurance)
122,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,11,https://github.com/code-423n4/2022-05-cally-findings/issues/11,cally,2022/05,bug;QA (Quality Assurance)
122,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,12,https://github.com/code-423n4/2022-05-cally-findings/issues/12,cally,2022/05,bug;duplicate;QA (Quality Assurance)
122,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,3,Excess Eth not refunded,13,https://github.com/code-423n4/2022-05-cally-findings/issues/13,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,Q,QA Report,296,https://github.com/code-423n4/2022-05-cally-findings/issues/296,cally,2022/05,bug;QA (Quality Assurance)
122,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,2,Fee can possibly be set maliciously,298,https://github.com/code-423n4/2022-05-cally-findings/issues/298,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,Czar102,0x52cAC9F2df3068107c95DB3Acf3f6B1256d75E45,3,System wrapper can trustlessly eliminate fees,299,https://github.com/code-423n4/2022-05-cally-findings/issues/299,cally,2022/05,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor acknowledged
122,DavidGialdi,0x3215E92c52F83f75E7Df1886aA29C11e25f4F2aF,G,Gas Optimizations,259,https://github.com/code-423n4/2022-05-cally-findings/issues/259,cally,2022/05,bug;G (Gas Optimization)
122,defsec,0x38bce8c1ca5a061aa8e2b4750c18ba3efb27ced9,2,Improper Upper Bound Definition on the Fee,275,https://github.com/code-423n4/2022-05-cally-findings/issues/275,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,defsec,0x38bce8c1ca5a061aa8e2b4750c18ba3efb27ced9,G,Gas Optimizations,287,https://github.com/code-423n4/2022-05-cally-findings/issues/287,cally,2022/05,bug;G (Gas Optimization)
122,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,G,Gas Optimizations,141,https://github.com/code-423n4/2022-05-cally-findings/issues/141,cally,2022/05,bug;G (Gas Optimization)
122,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,Q,QA Report,142,https://github.com/code-423n4/2022-05-cally-findings/issues/142,cally,2022/05,bug;QA (Quality Assurance)
122,dipp,0x675454Ae78d25632fC26763Fa9CB72a99Cb0A36e,2,Can send too much ETH in the ```buyOption``` function,263,https://github.com/code-423n4/2022-05-cally-findings/issues/263,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,dipp,0x675454Ae78d25632fC26763Fa9CB72a99Cb0A36e,2,No check for deflationary/fee-on-transfer tokens,282,https://github.com/code-423n4/2022-05-cally-findings/issues/282,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,dipp,0x675454Ae78d25632fC26763Fa9CB72a99Cb0A36e,2,Use safeTransferFrom for ERC721 transfers,285,https://github.com/code-423n4/2022-05-cally-findings/issues/285,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,dipp,0x675454Ae78d25632fC26763Fa9CB72a99Cb0A36e,Q,QA Report,286,https://github.com/code-423n4/2022-05-cally-findings/issues/286,cally,2022/05,bug;QA (Quality Assurance)
122,dirk_y,0x957342FeBe16d72cE462Ffc649Bfc6fAF96e2da3,2,Vault owner can buy their own vault option to game the protocol,106,https://github.com/code-423n4/2022-05-cally-findings/issues/106,cally,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
122,dirk_y,0x957342FeBe16d72cE462Ffc649Bfc6fAF96e2da3,Q,QA Report,107,https://github.com/code-423n4/2022-05-cally-findings/issues/107,cally,2022/05,bug;QA (Quality Assurance)
122,djxploit,0x2635BBAB233B9a1CD7703e6c4B80FE39055971d6,3,User can bypass protocol fee while exercising options,221,https://github.com/code-423n4/2022-05-cally-findings/issues/221,cally,2022/05,bug;duplicate;QA (Quality Assurance);sponsor disputed
122,djxploit,0x2635BBAB233B9a1CD7703e6c4B80FE39055971d6,Q,QA Report,276,https://github.com/code-423n4/2022-05-cally-findings/issues/276,cally,2022/05,bug;QA (Quality Assurance)
122,djxploit,0x2635BBAB233B9a1CD7703e6c4B80FE39055971d6,G,Gas Optimizations,293,https://github.com/code-423n4/2022-05-cally-findings/issues/293,cally,2022/05,bug;G (Gas Optimization)
122,eccentricexit,0x00b55eed88b14bf65b422dfa07fbc4941fc0178f,3,Backdoor/Centralization: The owner can prevent an option from being exercised,63,https://github.com/code-423n4/2022-05-cally-findings/issues/63,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,eccentricexit,0x00b55eed88b14bf65b422dfa07fbc4941fc0178f,Q,QA Report,64,https://github.com/code-423n4/2022-05-cally-findings/issues/64,cally,2022/05,bug;QA (Quality Assurance)
122,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,2,A malicious owner can steal all vault beneficiary's funds.,77,https://github.com/code-423n4/2022-05-cally-findings/issues/77,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,Q,QA Report,78,https://github.com/code-423n4/2022-05-cally-findings/issues/78,cally,2022/05,bug;QA (Quality Assurance);QA - High quality report
122,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,G,Gas Optimizations,79,https://github.com/code-423n4/2022-05-cally-findings/issues/79,cally,2022/05,bug;G (Gas Optimization)
122,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,G,Gas Optimizations,152,https://github.com/code-423n4/2022-05-cally-findings/issues/152,cally,2022/05,bug;G (Gas Optimization)
122,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,Q,QA Report,153,https://github.com/code-423n4/2022-05-cally-findings/issues/153,cally,2022/05,bug;QA (Quality Assurance);sponsor disputed
122,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,2,Wrong input used in getPremium() call inside tokenURI() function,154,https://github.com/code-423n4/2022-05-cally-findings/issues/154,cally,2022/05,bug;duplicate;disagree with severity;QA (Quality Assurance)
122,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,Gas Optimizations,273,https://github.com/code-423n4/2022-05-cally-findings/issues/273,cally,2022/05,bug;G (Gas Optimization)
122,FSchmoede,0xa806D8B9be2C56376264F81F62416cB704ce81BD,Q,QA Report,133,https://github.com/code-423n4/2022-05-cally-findings/issues/133,cally,2022/05,bug;QA (Quality Assurance)
122,FSchmoede,0xa806D8B9be2C56376264F81F62416cB704ce81BD,G,Gas Optimizations,134,https://github.com/code-423n4/2022-05-cally-findings/issues/134,cally,2022/05,bug;G (Gas Optimization)
122,FSchmoede,0xa806D8B9be2C56376264F81F62416cB704ce81BD,2,Missing check for setFee method,135,https://github.com/code-423n4/2022-05-cally-findings/issues/135,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,FSchmoede,0xa806D8B9be2C56376264F81F62416cB704ce81BD,2,Use safeTransferFrom for ERC721,136,https://github.com/code-423n4/2022-05-cally-findings/issues/136,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,230,https://github.com/code-423n4/2022-05-cally-findings/issues/230,cally,2022/05,bug;G (Gas Optimization)
122,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,Q,QA Report,233,https://github.com/code-423n4/2022-05-cally-findings/issues/233,cally,2022/05,bug;QA (Quality Assurance)
122,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,​​Incorrect balance of `CallyNFT` can cause misunderstandings in other marketplaces,239,https://github.com/code-423n4/2022-05-cally-findings/issues/239,cally,2022/05,bug;invalid;sponsor disputed
122,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,There should be a cap on `feeRate`,241,https://github.com/code-423n4/2022-05-cally-findings/issues/241,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,Admin can use a front-running attack to steal ETHs from users,242,https://github.com/code-423n4/2022-05-cally-findings/issues/242,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,`createVault()` does not confirm whether `tokenType` and `token`’s type are the same,243,https://github.com/code-423n4/2022-05-cally-findings/issues/243,cally,2022/05,bug;2 (Med Risk);disagree with severity
122,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,Attackers can re-vault `vault token` to deceive users,244,https://github.com/code-423n4/2022-05-cally-findings/issues/244,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,It should prevent users from sending more native tokens,245,https://github.com/code-423n4/2022-05-cally-findings/issues/245,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,"If users don’t handle ERC721 received, the ERC721 token will be frozen",246,https://github.com/code-423n4/2022-05-cally-findings/issues/246,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,"It doesn't consider the ERC20 transfer fee, resulting in exercise options failing",247,https://github.com/code-423n4/2022-05-cally-findings/issues/247,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,The option token can be re-vault in the protocol leading to phishing attack,248,https://github.com/code-423n4/2022-05-cally-findings/issues/248,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,250,https://github.com/code-423n4/2022-05-cally-findings/issues/250,cally,2022/05,bug;duplicate;2 (Med Risk)
122,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,G,Gas Optimizations,209,https://github.com/code-423n4/2022-05-cally-findings/issues/209,cally,2022/05,bug;G (Gas Optimization)
122,gzeon,0x945D28dF9779795BDab5BC6FDD9f36c0Ef1F7190,3,Lack maximum value of `feeRate`,210,https://github.com/code-423n4/2022-05-cally-findings/issues/210,cally,2022/05,bug;duplicate;2 (Med Risk)
122,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,2,Upgraded Q -> M from 74 [1654474712630],336,https://github.com/code-423n4/2022-05-cally-findings/issues/336,cally,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
122,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,2,Upgraded Q -> M from 74 [1654474884998],337,https://github.com/code-423n4/2022-05-cally-findings/issues/337,cally,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
122,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,3,Option buyer receives no refunds if he sends too much ETH,66,https://github.com/code-423n4/2022-05-cally-findings/issues/66,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,3,Compromised owner key could lead to loss of assets for vault owner,67,https://github.com/code-423n4/2022-05-cally-findings/issues/67,cally,2022/05,bug;duplicate;2 (Med Risk);disagree with severity
122,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,3,Malicious ERC20 or ERC777 could be used as collateral,68,https://github.com/code-423n4/2022-05-cally-findings/issues/68,cally,2022/05,bug;invalid;3 (High Risk);sponsor acknowledged
122,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,3,Vault owner may have premiums frozen in `beneficary` address,69,https://github.com/code-423n4/2022-05-cally-findings/issues/69,cally,2022/05,bug;duplicate;disagree with severity;QA (Quality Assurance)
122,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,3,Premiums can be lost due to lack of zero address check,70,https://github.com/code-423n4/2022-05-cally-findings/issues/70,cally,2022/05,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor acknowledged
122,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,3,No `tokenType` validation may lead to user losing funds,71,https://github.com/code-423n4/2022-05-cally-findings/issues/71,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,3,No way to withdraw unacounted tokens,72,https://github.com/code-423n4/2022-05-cally-findings/issues/72,cally,2022/05,bug;duplicate;QA (Quality Assurance);sponsor confirmed
122,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,2,Missing reentrancy protection,73,https://github.com/code-423n4/2022-05-cally-findings/issues/73,cally,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
122,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,Q,QA Report,74,https://github.com/code-423n4/2022-05-cally-findings/issues/74,cally,2022/05,bug;QA (Quality Assurance)
122,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,G,Gas Optimizations,75,https://github.com/code-423n4/2022-05-cally-findings/issues/75,cally,2022/05,bug;G (Gas Optimization)
122,hansfriese,0xf2dCB1d3B7091Dcf2cE87aD115377C108ebE6DD4,Q,QA Report,101,https://github.com/code-423n4/2022-05-cally-findings/issues/101,cally,2022/05,bug;QA (Quality Assurance)
122,hansfriese,0xf2dCB1d3B7091Dcf2cE87aD115377C108ebE6DD4,G,Gas Optimizations,102,https://github.com/code-423n4/2022-05-cally-findings/issues/102,cally,2022/05,bug;G (Gas Optimization)
122,Hawkeye,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,G,Gas Optimizations,156,https://github.com/code-423n4/2022-05-cally-findings/issues/156,cally,2022/05,bug;G (Gas Optimization)
122,Hawkeye,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,157,https://github.com/code-423n4/2022-05-cally-findings/issues/157,cally,2022/05,bug;QA (Quality Assurance)
122,Hawkeye,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,3,getDutchAuctionStrike () will return an unfavourable output for seller ,312,https://github.com/code-423n4/2022-05-cally-findings/issues/312,cally,2022/05,bug;duplicate;3 (High Risk);sponsor confirmed
122,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,Expiration calculation overflows if call option duration ≥ 195 days,16,https://github.com/code-423n4/2022-05-cally-findings/issues/16,cally,2022/05,bug;2 (Med Risk);resolved;sponsor confirmed
122,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,Upgraded Q -> M from 41 [1654474648312],335,https://github.com/code-423n4/2022-05-cally-findings/issues/335,cally,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
122,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,Use safeTransferFrom instead of transferFrom for ERC721 transfers,38,https://github.com/code-423n4/2022-05-cally-findings/issues/38,cally,2022/05,bug;2 (Med Risk);resolved;sponsor confirmed
122,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,2,Fee-on-transfer tokens are not supported,39,https://github.com/code-423n4/2022-05-cally-findings/issues/39,cally,2022/05,bug;duplicate;2 (Med Risk);resolved;sponsor confirmed
122,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Gas Optimizations,40,https://github.com/code-423n4/2022-05-cally-findings/issues/40,cally,2022/05,bug;G (Gas Optimization);Gas Report - High quality report
122,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,Q,QA Report,41,https://github.com/code-423n4/2022-05-cally-findings/issues/41,cally,2022/05,bug;QA (Quality Assurance)
122,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,Q,QA Report,294,https://github.com/code-423n4/2022-05-cally-findings/issues/294,cally,2022/05,bug;QA (Quality Assurance)
122,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,G,Gas Optimizations,295,https://github.com/code-423n4/2022-05-cally-findings/issues/295,cally,2022/05,bug;G (Gas Optimization)
122,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,2,Fee on transfer tokens block exercises and withdrawals,305,https://github.com/code-423n4/2022-05-cally-findings/issues/305,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,2,Rebasing tokens lock excess balance in contract,306,https://github.com/code-423n4/2022-05-cally-findings/issues/306,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor acknowledged
122,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,2,Upgraded Q -> M from 294 [1654058024144],329,https://github.com/code-423n4/2022-05-cally-findings/issues/329,cally,2022/05,bug;duplicate;2 (Med Risk)
122,horsefacts,0x79d31bFcA5Fda7A4F15b36763d2e44C99D811a6C,2,Upgraded Q -> M from 294 [1654474576938],334,https://github.com/code-423n4/2022-05-cally-findings/issues/334,cally,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
122,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,Inefficiency in the Dutch Auction due to lower duration,138,https://github.com/code-423n4/2022-05-cally-findings/issues/138,cally,2022/05,bug;3 (High Risk);disagree with severity;resolved;sponsor confirmed
122,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,"Risk of receiving lesser beneficiary amount, if feeRate changed after createVault & buyOption",139,https://github.com/code-423n4/2022-05-cally-findings/issues/139,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,Vault owner can block the current auction anytime by calling initiateWithdraw(),140,https://github.com/code-423n4/2022-05-cally-findings/issues/140,cally,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
122,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,2,"If an ERC20 token which has feeOnTransfer is used, option cant be exercised or token withdrawn",255,https://github.com/code-423n4/2022-05-cally-findings/issues/255,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,Q,QA Report,281,https://github.com/code-423n4/2022-05-cally-findings/issues/281,cally,2022/05,bug;QA (Quality Assurance);QA - High quality report
122,hubble,0xc343235Ec8143EAB788d706165D50082833FF137,3,Setting a high feeRate can block `exercise` or cause negative flow of funds,310,https://github.com/code-423n4/2022-05-cally-findings/issues/310,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,Q,QA Report,311,https://github.com/code-423n4/2022-05-cally-findings/issues/311,cally,2022/05,bug;QA (Quality Assurance)
122,ignacio,0xa166faFf77A6b23Afb23AAAf5f685F9C27896BD2,G,Gas Optimizations,117,https://github.com/code-423n4/2022-05-cally-findings/issues/117,cally,2022/05,bug;G (Gas Optimization)
122,ignacio,0xa166faFf77A6b23Afb23AAAf5f685F9C27896BD2,G,Gas Optimizations,147,https://github.com/code-423n4/2022-05-cally-findings/issues/147,cally,2022/05,bug;duplicate;G (Gas Optimization)
122,ignacio,0xa166faFf77A6b23Afb23AAAf5f685F9C27896BD2,G,Gas Optimizations,149,https://github.com/code-423n4/2022-05-cally-findings/issues/149,cally,2022/05,bug;duplicate;G (Gas Optimization)
122,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,45,https://github.com/code-423n4/2022-05-cally-findings/issues/45,cally,2022/05,bug;G (Gas Optimization);Gas Report - High quality report
122,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,46,https://github.com/code-423n4/2022-05-cally-findings/issues/46,cally,2022/05,bug;QA (Quality Assurance);QA - High quality report
122,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Owner can steal the exercise cost which should have gone to the option seller,47,https://github.com/code-423n4/2022-05-cally-findings/issues/47,cally,2022/05,bug;2 (Med Risk);resolved;sponsor confirmed
122,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Owner can force options to be non-exercisable,48,https://github.com/code-423n4/2022-05-cally-findings/issues/48,cally,2022/05,bug;2 (Med Risk);resolved;sponsor confirmed
122,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Vaults lock fee-on-transfer/deflationary tokens,49,https://github.com/code-423n4/2022-05-cally-findings/issues/49,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Vaults steal rebasing tokens' rewards,50,https://github.com/code-423n4/2022-05-cally-findings/issues/50,cally,2022/05,bug;2 (Med Risk);sponsor acknowledged
122,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Option buys do not refund or reject over-payments,51,https://github.com/code-423n4/2022-05-cally-findings/issues/51,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Options can be sold for tokens that have been destructed,52,https://github.com/code-423n4/2022-05-cally-findings/issues/52,cally,2022/05,bug;duplicate;3 (High Risk);sponsor confirmed
122,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,2,use of transferFrom in ERC721 tokens,163,https://github.com/code-423n4/2022-05-cally-findings/issues/163,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,jah,0x6ae089D92a2E88CA18a2d463aD32849cB41C4D0f,3,incorrect calculation of fee,217,https://github.com/code-423n4/2022-05-cally-findings/issues/217,cally,2022/05,bug;QA (Quality Assurance);sponsor disputed
122,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Use of `transferFrom()` instead of `safeTransferFrom()`,14,https://github.com/code-423n4/2022-05-cally-findings/issues/14,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2, Use of `transferFrom()` instead of `safeTransferFrom()`,15,https://github.com/code-423n4/2022-05-cally-findings/issues/15,cally,2022/05,bug;duplicate;invalid;2 (Med Risk);sponsor confirmed
122,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,incorrect operator used in `buyOption()` function,56,https://github.com/code-423n4/2022-05-cally-findings/issues/56,cally,2022/05,bug;duplicate;2 (Med Risk)
122,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,No check if user has already purchased a vault option,58,https://github.com/code-423n4/2022-05-cally-findings/issues/58,cally,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
122,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,Reentrancy guards should be added to other vital functions,65,https://github.com/code-423n4/2022-05-cally-findings/issues/65,cally,2022/05,bug;duplicate;invalid;2 (Med Risk);sponsor disputed
122,jayjonah8,0x75aAfefc48D23C65F49603491630308DcBd468f5,2,No check that `msg.sender` is not the vault itself,87,https://github.com/code-423n4/2022-05-cally-findings/issues/87,cally,2022/05,bug;invalid;2 (Med Risk)
122,JDeryl,0xE8b8DE8b1d04010E169383B132D77A35Cb07af08,Q,QA Report,1,https://github.com/code-423n4/2022-05-cally-findings/issues/1,cally,2022/05,bug;QA (Quality Assurance)
122,JDeryl,0xE8b8DE8b1d04010E169383B132D77A35Cb07af08,Q,QA Report,80,https://github.com/code-423n4/2022-05-cally-findings/issues/80,cally,2022/05,bug;duplicate;QA (Quality Assurance)
122,JDeryl,0xE8b8DE8b1d04010E169383B132D77A35Cb07af08,Q,QA Report,81,https://github.com/code-423n4/2022-05-cally-findings/issues/81,cally,2022/05,bug;duplicate;QA (Quality Assurance)
122,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,G,Gas Optimizations,265,https://github.com/code-423n4/2022-05-cally-findings/issues/265,cally,2022/05,bug;G (Gas Optimization)
122,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,Q,QA Report,268,https://github.com/code-423n4/2022-05-cally-findings/issues/268,cally,2022/05,bug;QA (Quality Assurance)
122,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,2,SINGLE-STEP OWNERSHIP TRANSFER,271,https://github.com/code-423n4/2022-05-cally-findings/issues/271,cally,2022/05,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor acknowledged
122,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,2,NO TIMELOCK ON `SETFEE()`,274,https://github.com/code-423n4/2022-05-cally-findings/issues/274,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,2,ERC721 TRANSFERFROM() MIGHT LEAD TO USER LOSING FUNDS,277,https://github.com/code-423n4/2022-05-cally-findings/issues/277,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,2,Upgraded Q -> M from 268 [1654474507101],333,https://github.com/code-423n4/2022-05-cally-findings/issues/333,cally,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
122,jonatascm,0xDB322Cc0d1A46B0A27e1541C81004065bBA22977,G,Gas Optimizations,125,https://github.com/code-423n4/2022-05-cally-findings/issues/125,cally,2022/05,bug;G (Gas Optimization)
122,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,2,Using transferFrom instead of safeTransferFrom,254,https://github.com/code-423n4/2022-05-cally-findings/issues/254,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,Q,QA Report,174,https://github.com/code-423n4/2022-05-cally-findings/issues/174,cally,2022/05,bug;QA (Quality Assurance)
122,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,G,Gas Optimizations,175,https://github.com/code-423n4/2022-05-cally-findings/issues/175,cally,2022/05,bug;G (Gas Optimization)
122,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,2,ERC721 Underlying Can Be Stuck in Unsupported Contract,176,https://github.com/code-423n4/2022-05-cally-findings/issues/176,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,Kenshin,0x6666660cbB363fc48E0f06C9239641c3302ed862,2,Upgraded Q -> M from 174 [1654475154140],341,https://github.com/code-423n4/2022-05-cally-findings/issues/341,cally,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
122,Kumpa,0x9813Bb4f6AC2993d67D293ce5eC915661Eb539D2,2,Malicious cntract's owner could arbitrarily set the fee rate to get the assets stored in the vault for free,116,https://github.com/code-423n4/2022-05-cally-findings/issues/116,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,Kumpa,0x9813Bb4f6AC2993d67D293ce5eC915661Eb539D2,Q,QA Report,119,https://github.com/code-423n4/2022-05-cally-findings/issues/119,cally,2022/05,bug;QA (Quality Assurance)
122,m9800,0x367bF4A80DA0Ed955DbeFb228c60fDf20C2f85B2,2,"Owner of Cally.sol can set arbitrarily big fees, over 100% and steal the funds.",249,https://github.com/code-423n4/2022-05-cally-findings/issues/249,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,m9800,0x367bF4A80DA0Ed955DbeFb228c60fDf20C2f85B2,2,Extra amount sended to buy an option is not returned.,252,https://github.com/code-423n4/2022-05-cally-findings/issues/252,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,MadWookie,0x00e9114dbFeb686eB736f78Aa481eD0528e200a8,G,Gas Optimizations,164,https://github.com/code-423n4/2022-05-cally-findings/issues/164,cally,2022/05,bug;G (Gas Optimization)
122,MadWookie,0x00e9114dbFeb686eB736f78Aa481eD0528e200a8,2,Upgraded G -> M from 164 [1654114758938],330,https://github.com/code-423n4/2022-05-cally-findings/issues/330,cally,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
122,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,G,Gas Optimizations,6,https://github.com/code-423n4/2022-05-cally-findings/issues/6,cally,2022/05,bug;G (Gas Optimization);Gas Report - High quality report
122,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,Q,QA Report,7,https://github.com/code-423n4/2022-05-cally-findings/issues/7,cally,2022/05,bug;QA (Quality Assurance)
122,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,[1] Missing receive() function,8,https://github.com/code-423n4/2022-05-cally-findings/issues/8,cally,2022/05,bug;invalid;question;2 (Med Risk)
122,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,[2] Fee-on-transfer tokens support must be forbidden or allowed with amount update,9,https://github.com/code-423n4/2022-05-cally-findings/issues/9,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,mics,0xAA69a63F3E6150df1880Fdbf46A422b45beb4113,G,Gas Optimizations,184,https://github.com/code-423n4/2022-05-cally-findings/issues/184,cally,2022/05,bug;G (Gas Optimization)
122,mics,0xAA69a63F3E6150df1880Fdbf46A422b45beb4113,Q,QA Report,185,https://github.com/code-423n4/2022-05-cally-findings/issues/185,cally,2022/05,bug;QA (Quality Assurance)
122,MiloTruck,0x9834b17a29652e317202109C2e624FE0A32A1383,2,Prevent users from sending more ETH than the premium price in buyOption(),128,https://github.com/code-423n4/2022-05-cally-findings/issues/128,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,MiloTruck,0x9834b17a29652e317202109C2e624FE0A32A1383,2,Vaults created with fee on transfer tokens will always fail,129,https://github.com/code-423n4/2022-05-cally-findings/issues/129,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,MiloTruck,0x9834b17a29652e317202109C2e624FE0A32A1383,2,Missing upper limit definition in setFee(),130,https://github.com/code-423n4/2022-05-cally-findings/issues/130,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,MiloTruck,0x9834b17a29652e317202109C2e624FE0A32A1383,Q,QA Report,131,https://github.com/code-423n4/2022-05-cally-findings/issues/131,cally,2022/05,bug;QA (Quality Assurance);QA - High quality report
122,MiloTruck,0x9834b17a29652e317202109C2e624FE0A32A1383,G,Gas Optimizations,132,https://github.com/code-423n4/2022-05-cally-findings/issues/132,cally,2022/05,bug;G (Gas Optimization);Gas Report - High quality report
122,MiloTruck,0x9834b17a29652e317202109C2e624FE0A32A1383,2,Upgraded Q -> M from 131 [1654475029272],339,https://github.com/code-423n4/2022-05-cally-findings/issues/339,cally,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
122,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,2,Upgraded Q -> M from 95 [1654474439349],332,https://github.com/code-423n4/2022-05-cally-findings/issues/332,cally,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
122,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,Q,QA Report,95,https://github.com/code-423n4/2022-05-cally-findings/issues/95,cally,2022/05,bug;QA (Quality Assurance)
122,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,G,Gas Optimizations,96,https://github.com/code-423n4/2022-05-cally-findings/issues/96,cally,2022/05,bug;G (Gas Optimization)
122,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,2,Using `transferFrom` on ERC721 tokens transfer,97,https://github.com/code-423n4/2022-05-cally-findings/issues/97,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,G,Gas Optimizations,19,https://github.com/code-423n4/2022-05-cally-findings/issues/19,cally,2022/05,bug;G (Gas Optimization)
122,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,3,A malicious user can create a vault that is actually empty,20,https://github.com/code-423n4/2022-05-cally-findings/issues/20,cally,2022/05,bug;duplicate;3 (High Risk);sponsor confirmed
122,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,3,It shouldn’t be possible to create a vault with Cally’ own token,224,https://github.com/code-423n4/2022-05-cally-findings/issues/224,cally,2022/05,bug;2 (Med Risk);disagree with severity;resolved;sponsor confirmed
122,pants,1111,G,Gas Optimizations,137,https://github.com/code-423n4/2022-05-cally-findings/issues/137,cally,2022/05,bug;invalid;G (Gas Optimization)
122,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,3,Owner can steal all eth from the contract,145,https://github.com/code-423n4/2022-05-cally-findings/issues/145,cally,2022/05,bug;duplicate;2 (Med Risk)
122,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,Q,QA Report,220,https://github.com/code-423n4/2022-05-cally-findings/issues/220,cally,2022/05,bug;QA (Quality Assurance)
122,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,2,The buyer of an option can overpay,234,https://github.com/code-423n4/2022-05-cally-findings/issues/234,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,peritoflores,0xca14410735e29650dc240245d96bb376c51477c1,2,Events should be emitted in critical operations,289,https://github.com/code-423n4/2022-05-cally-findings/issues/289,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,peritoflores,0xca14410735e29650dc240245d96bb376c51477c1,2,Use ERC721.safertransferFrom instead of ERC721.transferFrom when you send out NFT,300,https://github.com/code-423n4/2022-05-cally-findings/issues/300,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,Q,QA Report,188,https://github.com/code-423n4/2022-05-cally-findings/issues/188,cally,2022/05,bug;invalid;QA (Quality Assurance)
122,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,Q,QA Report,192,https://github.com/code-423n4/2022-05-cally-findings/issues/192,cally,2022/05,bug;QA (Quality Assurance)
122,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,G,Gas Optimizations,193,https://github.com/code-423n4/2022-05-cally-findings/issues/193,cally,2022/05,bug;G (Gas Optimization)
122,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,Q,QA Report,146,https://github.com/code-423n4/2022-05-cally-findings/issues/146,cally,2022/05,bug;QA (Quality Assurance)
122,pmerkleplant,0x7125412fc011d74c26e3ca768ab6224643702313,G,Gas Optimizations,148,https://github.com/code-423n4/2022-05-cally-findings/issues/148,cally,2022/05,bug;G (Gas Optimization)
122,PPrieditis,0x855eAb463C41F6Ba5DE353c462878D930d7895Ea,2,Auctions don't work properly with fee-on transfer tokens,262,https://github.com/code-423n4/2022-05-cally-findings/issues/262,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,radoslav11,0xcC227A599c10A39265Fda98beC977aee99adA5d1,Q,QA Report,118,https://github.com/code-423n4/2022-05-cally-findings/issues/118,cally,2022/05,bug;QA (Quality Assurance)
122,RagePit,0x147Ea4Cb33e215D24f6e81820B6653D978adc346,2,Unbounded feeRate,57,https://github.com/code-423n4/2022-05-cally-findings/issues/57,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,RagePit,0x147Ea4Cb33e215D24f6e81820B6653D978adc346,G,Gas Optimizations,59,https://github.com/code-423n4/2022-05-cally-findings/issues/59,cally,2022/05,bug;G (Gas Optimization)
122,reassor,0xd822554aBe37B52E34D0C599EC828dC8C46721FF,3,Administrator can steal vault's beneficiary funds,158,https://github.com/code-423n4/2022-05-cally-findings/issues/158,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,reassor,0xd822554aBe37B52E34D0C599EC828dC8C46721FF,2,Cally does not support ERC20 tokens with built-in fee,297,https://github.com/code-423n4/2022-05-cally-findings/issues/297,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,reassor,0xd822554aBe37B52E34D0C599EC828dC8C46721FF,Q,QA Report,303,https://github.com/code-423n4/2022-05-cally-findings/issues/303,cally,2022/05,bug;QA (Quality Assurance)
122,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,2,No check that token address is ERC20/ERC721 address,257,https://github.com/code-423n4/2022-05-cally-findings/issues/257,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,290,https://github.com/code-423n4/2022-05-cally-findings/issues/290,cally,2022/05,bug;G (Gas Optimization)
122,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,Q,QA Report,291,https://github.com/code-423n4/2022-05-cally-findings/issues/291,cally,2022/05,bug;QA (Quality Assurance)
122,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,264,https://github.com/code-423n4/2022-05-cally-findings/issues/264,cally,2022/05,bug;G (Gas Optimization)
122,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,266,https://github.com/code-423n4/2022-05-cally-findings/issues/266,cally,2022/05,bug;QA (Quality Assurance)
122,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,G,Gas Optimizations,143,https://github.com/code-423n4/2022-05-cally-findings/issues/143,cally,2022/05,bug;G (Gas Optimization);Gas Report - High quality report
122,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,Allowing the feeRate to be >100% will cause the calls to `exercise()` to revert because of an underflow,110,https://github.com/code-423n4/2022-05-cally-findings/issues/110,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,`buyOption()` allows the buyer to pay more than they need,123,https://github.com/code-423n4/2022-05-cally-findings/issues/123,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,124,https://github.com/code-423n4/2022-05-cally-findings/issues/124,cally,2022/05,bug;QA (Quality Assurance)
122,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,3,`createVault()` can be tricked to initialize a vault without providing any tokens,89,https://github.com/code-423n4/2022-05-cally-findings/issues/89,cally,2022/05,bug;3 (High Risk);resolved;sponsor confirmed
122,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,21,https://github.com/code-423n4/2022-05-cally-findings/issues/21,cally,2022/05,bug;G (Gas Optimization)
122,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,22,https://github.com/code-423n4/2022-05-cally-findings/issues/22,cally,2022/05,bug;duplicate;G (Gas Optimization)
122,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,23,https://github.com/code-423n4/2022-05-cally-findings/issues/23,cally,2022/05,bug;duplicate;G (Gas Optimization)
122,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,24,https://github.com/code-423n4/2022-05-cally-findings/issues/24,cally,2022/05,bug;duplicate;invalid;G (Gas Optimization)
122,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,25,https://github.com/code-423n4/2022-05-cally-findings/issues/25,cally,2022/05,bug;duplicate;G (Gas Optimization)
122,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,27,https://github.com/code-423n4/2022-05-cally-findings/issues/27,cally,2022/05,bug;duplicate;G (Gas Optimization)
122,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,28,https://github.com/code-423n4/2022-05-cally-findings/issues/28,cally,2022/05,bug;duplicate;G (Gas Optimization)
122,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,30,https://github.com/code-423n4/2022-05-cally-findings/issues/30,cally,2022/05,bug;duplicate;G (Gas Optimization)
122,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,31,https://github.com/code-423n4/2022-05-cally-findings/issues/31,cally,2022/05,bug;duplicate;G (Gas Optimization)
122,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,32,https://github.com/code-423n4/2022-05-cally-findings/issues/32,cally,2022/05,bug;duplicate;G (Gas Optimization)
122,seanamani,0xcfd3b0a2a7E1FA924DBDD7A404074CDa3eCb2306,Q,QA Report,197,https://github.com/code-423n4/2022-05-cally-findings/issues/197,cally,2022/05,bug;QA (Quality Assurance)
122,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,2,Protocol fee can be changed anytime,34,https://github.com/code-423n4/2022-05-cally-findings/issues/34,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,2,Fee on transfer ERC20 tokens not supported,35,https://github.com/code-423n4/2022-05-cally-findings/issues/35,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,2,Using `transferFrom` on ERC721 tokens transfer,36,https://github.com/code-423n4/2022-05-cally-findings/issues/36,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,shenwilly,0x8b21033337a7066bCFf10Fe0b3CA2A9DA1c58A1d,Q,QA Report,37,https://github.com/code-423n4/2022-05-cally-findings/issues/37,cally,2022/05,bug;QA (Quality Assurance)
122,shung,0xa8101F6Ec7080dE84233f1eE4fc1D6A2C1568327,G,Gas Optimizations,114,https://github.com/code-423n4/2022-05-cally-findings/issues/114,cally,2022/05,bug;G (Gas Optimization);Gas Report - High quality report
122,shung,0xa8101F6Ec7080dE84233f1eE4fc1D6A2C1568327,Q,QA Report,115,https://github.com/code-423n4/2022-05-cally-findings/issues/115,cally,2022/05,bug;QA (Quality Assurance);QA - High quality report
122,shung,0xa8101F6Ec7080dE84233f1eE4fc1D6A2C1568327,2,Protocol owner can rug vaults,76,https://github.com/code-423n4/2022-05-cally-findings/issues/76,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,sikorico,0x0E8ea7AD139C5EB10C6D1076962617D458D0Aed6,G,Gas Optimization,201,https://github.com/code-423n4/2022-05-cally-findings/issues/201,cally,2022/05,bug;G (Gas Optimization)
122,sikorico,0x0E8ea7AD139C5EB10C6D1076962617D458D0Aed6,Q,QA Report,202,https://github.com/code-423n4/2022-05-cally-findings/issues/202,cally,2022/05,bug;QA (Quality Assurance)
122,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,G,Gas Optimizations,53,https://github.com/code-423n4/2022-05-cally-findings/issues/53,cally,2022/05,bug;G (Gas Optimization)
122,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,Q,QA Report,54,https://github.com/code-423n4/2022-05-cally-findings/issues/54,cally,2022/05,bug;invalid;QA (Quality Assurance)
122,smiling_heretic,0xe180d626a4229c1F1C4cb0278cE071dBcC172AdB,3,“No Revert on Failure“ tokens can be stolen from the contract by disguising them as NFTs.,187,https://github.com/code-423n4/2022-05-cally-findings/issues/187,cally,2022/05,bug;duplicate;3 (High Risk);sponsor confirmed
122,smiling_heretic,0xe180d626a4229c1F1C4cb0278cE071dBcC172AdB,3,The owner can suddenly change feeRate to 100% without giving users time to react.,198,https://github.com/code-423n4/2022-05-cally-findings/issues/198,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,smiling_heretic,0xe180d626a4229c1F1C4cb0278cE071dBcC172AdB,2,Attempts to exercise options for fee on transfer tokens fail,199,https://github.com/code-423n4/2022-05-cally-findings/issues/199,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,smiling_heretic,0xe180d626a4229c1F1C4cb0278cE071dBcC172AdB,2,"If balance of an ERC20 token increases between transfers, then some tokens are locked forever in Cally",200,https://github.com/code-423n4/2022-05-cally-findings/issues/200,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor acknowledged
122,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,Q,QA Report,267,https://github.com/code-423n4/2022-05-cally-findings/issues/267,cally,2022/05,bug;QA (Quality Assurance)
122,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,3,The auction is open for Gas Limit DoS,269,https://github.com/code-423n4/2022-05-cally-findings/issues/269,cally,2022/05,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor acknowledged
122,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,3,Option buyers might loose funds due to vault owner's manipulation,270,https://github.com/code-423n4/2022-05-cally-findings/issues/270,cally,2022/05,bug;invalid;3 (High Risk);sponsor disputed
122,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,3,Race condition in exercising the options,272,https://github.com/code-423n4/2022-05-cally-findings/issues/272,cally,2022/05,bug;invalid;3 (High Risk);sponsor disputed
122,sseefried,0x033e21B02373489ff2f7a2c2f1B109a1bC6158aD,2,Strike price curve of `getDutchAuctionStrike` is not what users expect,165,https://github.com/code-423n4/2022-05-cally-findings/issues/165,cally,2022/05,bug;duplicate;3 (High Risk);sponsor confirmed
122,sseefried,0x033e21B02373489ff2f7a2c2f1B109a1bC6158aD,3,Entering `durationDays` 195 and greater when calling `createVault` causes `buyOption` to revert,166,https://github.com/code-423n4/2022-05-cally-findings/issues/166,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,sseefried,0x033e21B02373489ff2f7a2c2f1B109a1bC6158aD,2,`setFee` can be used set fee rate to any value including 100%,288,https://github.com/code-423n4/2022-05-cally-findings/issues/288,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,sseefried,0x033e21B02373489ff2f7a2c2f1B109a1bC6158aD,Q,QA Report,292,https://github.com/code-423n4/2022-05-cally-findings/issues/292,cally,2022/05,bug;QA (Quality Assurance)
122,Tadashi,0x8638c0a8C936DeFaCB575a2AD5B103F2a3876cE7,G,Gas Optimizations,162,https://github.com/code-423n4/2022-05-cally-findings/issues/162,cally,2022/05,bug;G (Gas Optimization)
122,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,G,Gas Optimizations,301,https://github.com/code-423n4/2022-05-cally-findings/issues/301,cally,2022/05,bug;G (Gas Optimization)
122,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,Q,QA Report,302,https://github.com/code-423n4/2022-05-cally-findings/issues/302,cally,2022/05,bug;invalid;QA (Quality Assurance);sponsor disputed
122,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,2,Admin can change fee parameter at any time. Fee parameter is ubounded,211,https://github.com/code-423n4/2022-05-cally-findings/issues/211,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,throttle,0x210b0D0694ff95c99dD693DD89CDF2f88de6beC4,Q,QA Report,212,https://github.com/code-423n4/2022-05-cally-findings/issues/212,cally,2022/05,bug;duplicate;2 (Med Risk)
122,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,2,Owner of `Cally` may DOS the exercise of options by setting feeRate greater than 100%,251,https://github.com/code-423n4/2022-05-cally-findings/issues/251,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,TomFrenchBlockchain,0x60959Ed8307EE2b0d04306f6b319AEeE8864f1Ee,G,Gas Optimizations,261,https://github.com/code-423n4/2022-05-cally-findings/issues/261,cally,2022/05,bug;G (Gas Optimization);Gas Report - High quality report
122,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,2,User can't exercise also withdraw the token in the vault if token is deflationary tokens ERC20,186,https://github.com/code-423n4/2022-05-cally-findings/issues/186,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,2,[2022-05-cally] User can ise the protocol to scam another user ,203,https://github.com/code-423n4/2022-05-cally-findings/issues/203,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,TrungOre,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,Q,QA Report,204,https://github.com/code-423n4/2022-05-cally-findings/issues/204,cally,2022/05,bug;QA (Quality Assurance)
122,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,2,`buyOption` overflow when durationDays >= 195,177,https://github.com/code-423n4/2022-05-cally-findings/issues/177,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,2,Stuck ETH when `Cally.sol` address is beneficiary,178,https://github.com/code-423n4/2022-05-cally-findings/issues/178,cally,2022/05,bug;duplicate;QA (Quality Assurance);resolved;sponsor confirmed
122,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,2,Cannot exercise vault token take fee on transfer,179,https://github.com/code-423n4/2022-05-cally-findings/issues/179,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,2,Can create Vault of vault of vault,180,https://github.com/code-423n4/2022-05-cally-findings/issues/180,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,G,Gas Optimizations,181,https://github.com/code-423n4/2022-05-cally-findings/issues/181,cally,2022/05,bug;G (Gas Optimization);Gas Report - High quality report
122,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,Q,QA Report,182,https://github.com/code-423n4/2022-05-cally-findings/issues/182,cally,2022/05,bug;QA (Quality Assurance)
122,VAD37,0x6995870D9890e10979aFCbDEA5d8D249e969822D,2,Upgraded Q -> M from 182 [1655245716777],346,https://github.com/code-423n4/2022-05-cally-findings/issues/346,cally,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
122,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,"[WP-H0] Fake balances can be created for not-yet-existing ERC20 tokens, which allows attackers to set traps to steal funds from future users",225,https://github.com/code-423n4/2022-05-cally-findings/issues/225,cally,2022/05,bug;3 (High Risk);resolved;sponsor confirmed
122,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Lack of input validation for `feeRate` can malfunction `exercise()`,226,https://github.com/code-423n4/2022-05-cally-findings/issues/226,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`setVaultBeneficiary()` to a contract address that can not receive ETH may cause user's funds to be frozen,227,https://github.com/code-423n4/2022-05-cally-findings/issues/227,cally,2022/05,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
122,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,"`transferFrom()` is used for ERC721 instead of `safeTransferFrom()`, which can cause user's NFT to be frozen",228,https://github.com/code-423n4/2022-05-cally-findings/issues/228,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Potential fund loss when fee-on-transfer tokens are used as `vault.token`,229,https://github.com/code-423n4/2022-05-cally-findings/issues/229,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Gas Optimizations,231,https://github.com/code-423n4/2022-05-cally-findings/issues/231,cally,2022/05,bug;G (Gas Optimization);Gas Report - High quality report
122,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,Q,QA Report,232,https://github.com/code-423n4/2022-05-cally-findings/issues/232,cally,2022/05,bug;QA (Quality Assurance)
122,Waze,0xB649642DEe8E9E25b21cfc67DA7DCf86828dd60D,G,Gas Optimizations,278,https://github.com/code-423n4/2022-05-cally-findings/issues/278,cally,2022/05,bug;G (Gas Optimization)
122,Waze,0xB649642DEe8E9E25b21cfc67DA7DCf86828dd60D,Q,QA Report,279,https://github.com/code-423n4/2022-05-cally-findings/issues/279,cally,2022/05,bug;QA (Quality Assurance)
122,ynnad,0xe22c36dEBEcE668fd1Cb6CfA99fCC1c61Ce31D53,Q,QA Report,258,https://github.com/code-423n4/2022-05-cally-findings/issues/258,cally,2022/05,bug;duplicate;2 (Med Risk)
122,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,G,Gas Optimizations,256,https://github.com/code-423n4/2022-05-cally-findings/issues/256,cally,2022/05,bug;G (Gas Optimization)
122,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,Q,QA Report,260,https://github.com/code-423n4/2022-05-cally-findings/issues/260,cally,2022/05,bug;QA (Quality Assurance)
122,_Adam,0xa1a0cb3ce40dc9ef78f05563047f286640dce552,2,Contract Owner can alter feeRate to gain vault owners assets. ,167,https://github.com/code-423n4/2022-05-cally-findings/issues/167,cally,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
122,_Adam,0xa1a0cb3ce40dc9ef78f05563047f286640dce552,G,Gas Optimizations,183,https://github.com/code-423n4/2022-05-cally-findings/issues/183,cally,2022/05,bug;G (Gas Optimization)
125,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,51,https://github.com/code-423n4/2022-05-sturdy-findings/issues/51,sturdy,2022/05,bug;G (Gas Optimization)
125,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Reentrancy in LidoVault,16,https://github.com/code-423n4/2022-05-sturdy-findings/issues/16,sturdy,2022/05,bug;duplicate;invalid;2 (Med Risk);disagree with severity
125,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,17,https://github.com/code-423n4/2022-05-sturdy-findings/issues/17,sturdy,2022/05,bug;G (Gas Optimization)
125,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,18,https://github.com/code-423n4/2022-05-sturdy-findings/issues/18,sturdy,2022/05,bug;QA (Quality Assurance)
125,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,23,https://github.com/code-423n4/2022-05-sturdy-findings/issues/23,sturdy,2022/05,bug;G (Gas Optimization)
125,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,Q,QA Report,24,https://github.com/code-423n4/2022-05-sturdy-findings/issues/24,sturdy,2022/05,bug;QA (Quality Assurance)
125,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,Q,QA Report,25,https://github.com/code-423n4/2022-05-sturdy-findings/issues/25,sturdy,2022/05,bug;duplicate;QA (Quality Assurance)
125,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,Q,QA Report,26,https://github.com/code-423n4/2022-05-sturdy-findings/issues/26,sturdy,2022/05,bug;duplicate;QA (Quality Assurance)
125,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,G,Gas Optimizations,27,https://github.com/code-423n4/2022-05-sturdy-findings/issues/27,sturdy,2022/05,bug;duplicate;G (Gas Optimization)
125,0x4non,0x38c40EAd3D0Fe7959eb9DFE8337B3c4929884d2c,2,Lido tokens creation could fail silently and give a bad return,54,https://github.com/code-423n4/2022-05-sturdy-findings/issues/54,sturdy,2022/05,bug;duplicate;3 (High Risk);disagree with severity
125,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,3,YieldManger swap highly vulnerable to sandwich attacks,35,https://github.com/code-423n4/2022-05-sturdy-findings/issues/35,sturdy,2022/05,bug;duplicate;help wanted;2 (Med Risk);sponsor acknowledged
125,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,3,Require incorrect ordering,36,https://github.com/code-423n4/2022-05-sturdy-findings/issues/36,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,2,ETH transefer is not checked properly,115,https://github.com/code-423n4/2022-05-sturdy-findings/issues/115,sturdy,2022/05,bug;duplicate;3 (High Risk);disagree with severity
125,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,Q,QA Report,116,https://github.com/code-423n4/2022-05-sturdy-findings/issues/116,sturdy,2022/05,bug;QA (Quality Assurance)
125,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,G,Gas Optimizations,117,https://github.com/code-423n4/2022-05-sturdy-findings/issues/117,sturdy,2022/05,bug;G (Gas Optimization)
125,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,G,Gas Optimizations,21,https://github.com/code-423n4/2022-05-sturdy-findings/issues/21,sturdy,2022/05,bug;G (Gas Optimization)
125,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,Q,QA Report,22,https://github.com/code-423n4/2022-05-sturdy-findings/issues/22,sturdy,2022/05,bug;QA (Quality Assurance)
125,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,3,Unreachable require to check if ETH was sent,65,https://github.com/code-423n4/2022-05-sturdy-findings/issues/65,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,Q,QA Report,66,https://github.com/code-423n4/2022-05-sturdy-findings/issues/66,sturdy,2022/05,bug;QA (Quality Assurance)
125,0xliumin,0x25E48B090B3104A3fB30B19AFB6f4850316c5bBF,G,Gas Optimizations,67,https://github.com/code-423n4/2022-05-sturdy-findings/issues/67,sturdy,2022/05,bug;G (Gas Optimization)
125,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,28,https://github.com/code-423n4/2022-05-sturdy-findings/issues/28,sturdy,2022/05,bug;G (Gas Optimization)
125,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,Q,QA Report,29,https://github.com/code-423n4/2022-05-sturdy-findings/issues/29,sturdy,2022/05,bug;QA (Quality Assurance)
125,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,3,Integer Overflow in ConvexCurveLPVault.sol,19,https://github.com/code-423n4/2022-05-sturdy-findings/issues/19,sturdy,2022/05,bug;invalid;3 (High Risk);sponsor disputed
125,AlleyCat,0x9dfcc853d908ef27ec32826c96306841218e88f4,Q,QA Report,20,https://github.com/code-423n4/2022-05-sturdy-findings/issues/20,sturdy,2022/05,bug;QA (Quality Assurance)
125,AuditsAreUS,0x8f6e76F3059DcFAC435bBb7029294eB6ceEcab23,2,Payble function allows for Eth transfer even when ERC20 tokens are being used,15,https://github.com/code-423n4/2022-05-sturdy-findings/issues/15,sturdy,2022/05,bug;duplicate;2 (Med Risk)
125,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,Q,QA Report,80,https://github.com/code-423n4/2022-05-sturdy-findings/issues/80,sturdy,2022/05,bug;QA (Quality Assurance)
125,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Ether can be locked in the `ConvexCurveLPVault` contract without a way to retrieve it,81,https://github.com/code-423n4/2022-05-sturdy-findings/issues/81,sturdy,2022/05,bug;duplicate;2 (Med Risk)
125,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Ether can be locked in the `LidoVault` contract without a way to retrieve it,82,https://github.com/code-423n4/2022-05-sturdy-findings/issues/82,sturdy,2022/05,bug;duplicate;2 (Med Risk)
125,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Unchecked low level call due to unreachable code,83,https://github.com/code-423n4/2022-05-sturdy-findings/issues/83,sturdy,2022/05,bug;duplicate;3 (High Risk);disagree with severity
125,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Missing zero-address check for the beneficiary address when withdrawing ETH collateral in `LidoVault`,84,https://github.com/code-423n4/2022-05-sturdy-findings/issues/84,sturdy,2022/05,bug;duplicate;QA (Quality Assurance)
125,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Withdrawing ETH collateral with max uint256 amount value reverts transaction,85,https://github.com/code-423n4/2022-05-sturdy-findings/issues/85,sturdy,2022/05,bug;2 (Med Risk);sponsor confirmed
125,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Slippage check is too strict when withdrawing ETH collateral from `LidoVault`,86,https://github.com/code-423n4/2022-05-sturdy-findings/issues/86,sturdy,2022/05,bug;duplicate;3 (High Risk);disagree with severity
125,Blackrooz,0x7186921AFbed941D1b3380adf2E2cBa745A0F9F3,2,???,56,https://github.com/code-423n4/2022-05-sturdy-findings/issues/56,sturdy,2022/05,bug;invalid;2 (Med Risk);sponsor disputed
125,bobirichman,0x0BacBAd41a499bADcD35eF1b7bDC951A119BBD86,G,Gas Optimization,42,https://github.com/code-423n4/2022-05-sturdy-findings/issues/42,sturdy,2022/05,bug;G (Gas Optimization)
125,bobirichman,0x0BacBAd41a499bADcD35eF1b7bDC951A119BBD86,Q,QA Report,43,https://github.com/code-423n4/2022-05-sturdy-findings/issues/43,sturdy,2022/05,bug;QA (Quality Assurance)
125,BouSalman,0x7c44A7afc34abE118aB752c836680aD7682b9273,Q,QA Report,53,https://github.com/code-423n4/2022-05-sturdy-findings/issues/53,sturdy,2022/05,bug;QA (Quality Assurance)
125,broccolirob,0x5233aF283E7C359a1011Dc0ff480298E90c8CFd6,3,Initialization function can be front-run,165,https://github.com/code-423n4/2022-05-sturdy-findings/issues/165,sturdy,2022/05,bug;invalid;3 (High Risk);sponsor disputed
125,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,3,LidoVault : Wrong code order prevents users from receiving ether,13,https://github.com/code-423n4/2022-05-sturdy-findings/issues/13,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,LidoVault: msg.value == 0 not checked when user deposits LIDO tokens,14,https://github.com/code-423n4/2022-05-sturdy-findings/issues/14,sturdy,2022/05,bug;duplicate;2 (Med Risk)
125,CertoraInc,0x777bA383e74062dd7948A61471267E8e4370EA39,3,Withdraw success check don't happen,96,https://github.com/code-423n4/2022-05-sturdy-findings/issues/96,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,Cityscape,0x46686E5420B34d5950d37855291d970fBa5527b6 ,G,Gas Optimizations,78,https://github.com/code-423n4/2022-05-sturdy-findings/issues/78,sturdy,2022/05,bug;G (Gas Optimization)
125,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,2,Missing approve(0),141,https://github.com/code-423n4/2022-05-sturdy-findings/issues/141,sturdy,2022/05,bug;duplicate;QA (Quality Assurance)
125,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,2,Missing zero address check in LidoVault._withdrawFromYieldPool() could lead to loss of fund,148,https://github.com/code-423n4/2022-05-sturdy-findings/issues/148,sturdy,2022/05,bug;duplicate;QA (Quality Assurance)
125,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,Q,QA Report,149,https://github.com/code-423n4/2022-05-sturdy-findings/issues/149,sturdy,2022/05,bug;QA (Quality Assurance)
125,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,12,https://github.com/code-423n4/2022-05-sturdy-findings/issues/12,sturdy,2022/05,bug;QA (Quality Assurance)
125,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,G,Gas Optimizations,155,https://github.com/code-423n4/2022-05-sturdy-findings/issues/155,sturdy,2022/05,bug;G (Gas Optimization)
125,defsec,0x38BCE8C1Ca5a061aa8e2b4750C18BA3efb27CeD9,Q,QA Report,160,https://github.com/code-423n4/2022-05-sturdy-findings/issues/160,sturdy,2022/05,bug;QA (Quality Assurance)
125,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,G,Gas Optimizations,119,https://github.com/code-423n4/2022-05-sturdy-findings/issues/119,sturdy,2022/05,bug;G (Gas Optimization)
125,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,Q,QA Report,120,https://github.com/code-423n4/2022-05-sturdy-findings/issues/120,sturdy,2022/05,bug;QA (Quality Assurance)
125,dipp,0x675454Ae78d25632fC26763Fa9CB72a99Cb0A36e,2,User may lose ETH when depositing stETH,105,https://github.com/code-423n4/2022-05-sturdy-findings/issues/105,sturdy,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
125,dipp,0x675454Ae78d25632fC26763Fa9CB72a99Cb0A36e,2,Unchecked call in ```_withdrawFromYieldPool```,106,https://github.com/code-423n4/2022-05-sturdy-findings/issues/106,sturdy,2022/05,bug;duplicate;3 (High Risk);disagree with severity
125,dipp,0x675454Ae78d25632fC26763Fa9CB72a99Cb0A36e,Q,QA Report,118,https://github.com/code-423n4/2022-05-sturdy-findings/issues/118,sturdy,2022/05,bug;QA (Quality Assurance)
125,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,G,Gas Optimizations,50,https://github.com/code-423n4/2022-05-sturdy-findings/issues/50,sturdy,2022/05,bug;G (Gas Optimization)
125,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,2,Low-level call return value not checked,52,https://github.com/code-423n4/2022-05-sturdy-findings/issues/52,sturdy,2022/05,bug;duplicate;3 (High Risk);disagree with severity
125,Dravee,0x319DCd0306908Ce08Ffa6F5e5b6B6a4ff8CCB9DE,Q,QA Report,55,https://github.com/code-423n4/2022-05-sturdy-findings/issues/55,sturdy,2022/05,bug;QA (Quality Assurance)
125,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,3,low-level call not validated in lidoVault,154,https://github.com/code-423n4/2022-05-sturdy-findings/issues/154,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,Q,QA Report,158,https://github.com/code-423n4/2022-05-sturdy-findings/issues/158,sturdy,2022/05,bug;QA (Quality Assurance)
125,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,G,Gas Optimizations,162,https://github.com/code-423n4/2022-05-sturdy-findings/issues/162,sturdy,2022/05,bug;G (Gas Optimization)
125,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,Gas Optimizations,126,https://github.com/code-423n4/2022-05-sturdy-findings/issues/126,sturdy,2022/05,bug;G (Gas Optimization)
125,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,124,https://github.com/code-423n4/2022-05-sturdy-findings/issues/124,sturdy,2022/05,bug;G (Gas Optimization)
125,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,Q,QA Report,150,https://github.com/code-423n4/2022-05-sturdy-findings/issues/150,sturdy,2022/05,bug;QA (Quality Assurance)
125,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,2,unsual token.decimals() would be trigger unsual behavior,164,https://github.com/code-423n4/2022-05-sturdy-findings/issues/164,sturdy,2022/05,bug;invalid;sponsor disputed
125,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,3,Wrong order of `return` and `require`,91,https://github.com/code-423n4/2022-05-sturdy-findings/issues/91,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,92,https://github.com/code-423n4/2022-05-sturdy-findings/issues/92,sturdy,2022/05,bug;QA (Quality Assurance)
125,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,G,Gas Optimizations,94,https://github.com/code-423n4/2022-05-sturdy-findings/issues/94,sturdy,2022/05,bug;G (Gas Optimization)
125,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,Q,QA Report,130,https://github.com/code-423n4/2022-05-sturdy-findings/issues/130,sturdy,2022/05,bug;QA (Quality Assurance)
125,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,G,Gas Optimizations,131,https://github.com/code-423n4/2022-05-sturdy-findings/issues/131,sturdy,2022/05,bug;G (Gas Optimization)
125,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,3,User can lose collateral do to unsafe ETH transfer,32,https://github.com/code-423n4/2022-05-sturdy-findings/issues/32,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,hansfriese,0xf2dCB1d3B7091Dcf2cE87aD115377C108ebE6DD4,G,Gas Optimizations,107,https://github.com/code-423n4/2022-05-sturdy-findings/issues/107,sturdy,2022/05,bug;G (Gas Optimization)
125,Hawkeye, 0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,G,Gas Optimizations,159,https://github.com/code-423n4/2022-05-sturdy-findings/issues/159,sturdy,2022/05,bug;G (Gas Optimization)
125,Hawkeye, 0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,166,https://github.com/code-423n4/2022-05-sturdy-findings/issues/166,sturdy,2022/05,bug;QA (Quality Assurance)
125,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,YieldManager: Uniswap token swaps through fixed path may break yield distribution,100,https://github.com/code-423n4/2022-05-sturdy-findings/issues/100,sturdy,2022/05,bug;duplicate;2 (Med Risk)
125,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,3,LidoVault: Premature return after sending ETH,101,https://github.com/code-423n4/2022-05-sturdy-findings/issues/101,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,G,Gas Optimizations,102,https://github.com/code-423n4/2022-05-sturdy-findings/issues/102,sturdy,2022/05,bug;G (Gas Optimization)
125,hickuphh3,0xD5388291EAbe96b56069440C97046791E2F72573,Q,QA Report,146,https://github.com/code-423n4/2022-05-sturdy-findings/issues/146,sturdy,2022/05,bug;QA (Quality Assurance)
125,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,YieldManager's _depositYield use one step approval for an arbitrary yield token,60,https://github.com/code-423n4/2022-05-sturdy-findings/issues/60,sturdy,2022/05,bug;duplicate;QA (Quality Assurance)
125,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,3,LidoVault's _withdrawFromYieldPool doesn't check ETH transfer call success,74,https://github.com/code-423n4/2022-05-sturdy-findings/issues/74,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,ConvexCurveLPVault's _transferYield can become stuck with zero reward transfer,79,https://github.com/code-423n4/2022-05-sturdy-findings/issues/79,sturdy,2022/05,bug;2 (Med Risk);sponsor confirmed
125,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,YieldManager's distributeYield can be subject to sandwich attacks,87,https://github.com/code-423n4/2022-05-sturdy-findings/issues/87,sturdy,2022/05,bug;duplicate;2 (Med Risk);disagree with severity
125,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,Q,QA Report,89,https://github.com/code-423n4/2022-05-sturdy-findings/issues/89,sturdy,2022/05,bug;QA (Quality Assurance)
125,ignacio,0xa166faFf77A6b23Afb23AAAf5f685F9C27896BD2,G,Gas Optimizations,33,https://github.com/code-423n4/2022-05-sturdy-findings/issues/33,sturdy,2022/05,bug;G (Gas Optimization)
125,ignacio,0xa166faFf77A6b23Afb23AAAf5f685F9C27896BD2,G,Gas Optimizations,34,https://github.com/code-423n4/2022-05-sturdy-findings/issues/34,sturdy,2022/05,bug;duplicate;G (Gas Optimization)
125,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,Upgraded Q -> H from 69 [1654495749150],169,https://github.com/code-423n4/2022-05-sturdy-findings/issues/169,sturdy,2022/05,bug;duplicate;3 (High Risk);upgraded by judge
125,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,68,https://github.com/code-423n4/2022-05-sturdy-findings/issues/68,sturdy,2022/05,bug;G (Gas Optimization)
125,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,69,https://github.com/code-423n4/2022-05-sturdy-findings/issues/69,sturdy,2022/05,bug;QA (Quality Assurance)
125,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,`processYield()` and `distributeYield()` may run out of gas and revert due to long list of extra rewards/yields,70,https://github.com/code-423n4/2022-05-sturdy-findings/issues/70,sturdy,2022/05,bug;2 (Med Risk);sponsor confirmed
125,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Destructed Curve LP tokens will cause the loss of funds,71,https://github.com/code-423n4/2022-05-sturdy-findings/issues/71,sturdy,2022/05,bug;invalid;sponsor confirmed
125,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,2,Admin can rug users and or extract excessive fees,72,https://github.com/code-423n4/2022-05-sturdy-findings/issues/72,sturdy,2022/05,bug;duplicate;disagree with severity;QA (Quality Assurance)
125,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,3,`LidoVault` Ether withdrawals may be lost due to `require()` in dead code,73,https://github.com/code-423n4/2022-05-sturdy-findings/issues/73,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,isamjay,0x4b0280dEE95aF1c9674F4a37e287fc2D1fa3B7D9,3,ETH sent to receiver as collateral is not guaranteed in Lido Vault,37,https://github.com/code-423n4/2022-05-sturdy-findings/issues/37,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,JC,0xFc06B4C7b226C0bE3766656Fe4165592d9E7749f,G,Gas Optimizations,132,https://github.com/code-423n4/2022-05-sturdy-findings/issues/132,sturdy,2022/05,bug;G (Gas Optimization)
125,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,G,Gas Optimizations,110,https://github.com/code-423n4/2022-05-sturdy-findings/issues/110,sturdy,2022/05,bug;G (Gas Optimization)
125,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,Q,QA Report,111,https://github.com/code-423n4/2022-05-sturdy-findings/issues/111,sturdy,2022/05,bug;QA (Quality Assurance)
125,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,2,SAFEAPPROVE() MAY REVERT FUNCTIONS,112,https://github.com/code-423n4/2022-05-sturdy-findings/issues/112,sturdy,2022/05,bug;duplicate;QA (Quality Assurance);sponsor confirmed
125,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,2,INITIALIZE() IN VAULTS CAN BE FRONT RUN ,113,https://github.com/code-423n4/2022-05-sturdy-findings/issues/113,sturdy,2022/05,bug;duplicate;invalid;disagree with severity
125,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,hard-coded slippage may freeze user funds during market turbulence,133,https://github.com/code-423n4/2022-05-sturdy-findings/issues/133,sturdy,2022/05,bug;3 (High Risk);sponsor confirmed
125,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,procee yield can be sandwiched by whales,151,https://github.com/code-423n4/2022-05-sturdy-findings/issues/151,sturdy,2022/05,bug;duplicate;2 (Med Risk);disagree with severity
125,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,hard-coded slippage may freeze user funds during market turbulence (resubmit to downgrade severity),153,https://github.com/code-423n4/2022-05-sturdy-findings/issues/153,sturdy,2022/05,bug;duplicate;invalid;2 (Med Risk);disagree with severity
125,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,pump st-eth virtual_price through re-entrancy attacks,30,https://github.com/code-423n4/2022-05-sturdy-findings/issues/30,sturdy,2022/05,bug;invalid;3 (High Risk);sponsor disputed
125,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,G,Gas Optimizations,144,https://github.com/code-423n4/2022-05-sturdy-findings/issues/144,sturdy,2022/05,bug;G (Gas Optimization)
125,kebabsec,0xB2fbcF2Fb1Eb86464d60F04bEd4065404cD67e18,Q,QA Report,145,https://github.com/code-423n4/2022-05-sturdy-findings/issues/145,sturdy,2022/05,bug;QA (Quality Assurance)
125,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,Users Can Game Yield Distributions,139,https://github.com/code-423n4/2022-05-sturdy-findings/issues/139,sturdy,2022/05,bug;duplicate;2 (Med Risk);disagree with severity
125,leastwood,0x28235de0121700a462b5098cff7d3615b050551f,2,Reward Manager of the Convex Base Reward Pool Can DoS `processYield()`,140,https://github.com/code-423n4/2022-05-sturdy-findings/issues/140,sturdy,2022/05,bug;duplicate;2 (Med Risk)
125,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,G,Gas Optimizations,1,https://github.com/code-423n4/2022-05-sturdy-findings/issues/1,sturdy,2022/05,bug;G (Gas Optimization)
125,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,Q,QA Report,2,https://github.com/code-423n4/2022-05-sturdy-findings/issues/2,sturdy,2022/05,bug;QA (Quality Assurance)
125,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,SafeApprove is must be used instead of approve,3,https://github.com/code-423n4/2022-05-sturdy-findings/issues/3,sturdy,2022/05,bug;duplicate;disagree with severity;QA (Quality Assurance)
125,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,Non-existing recipient will return true on call,4,https://github.com/code-423n4/2022-05-sturdy-findings/issues/4,sturdy,2022/05,bug;duplicate;QA (Quality Assurance);sponsor confirmed
125,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,Approval must be set to zero and after that increased to the amount you need.,5,https://github.com/code-423n4/2022-05-sturdy-findings/issues/5,sturdy,2022/05,bug;duplicate;QA (Quality Assurance)
125,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,2,Return is executed before require check,6,https://github.com/code-423n4/2022-05-sturdy-findings/issues/6,sturdy,2022/05,bug;duplicate;3 (High Risk);disagree with severity
125,MaratCerby,0x40385F27D90eb7A7FCa6F521176C6eBADBE57632,3,Fee-on-transfer tokens support must be forbidden or allowed with amount update,7,https://github.com/code-423n4/2022-05-sturdy-findings/issues/7,sturdy,2022/05,bug;invalid;sponsor disputed
125,mics,0xAA69a63F3E6150df1880Fdbf46A422b45beb4113,G,Gas Optimization,38,https://github.com/code-423n4/2022-05-sturdy-findings/issues/38,sturdy,2022/05,bug;G (Gas Optimization)
125,mics,0xAA69a63F3E6150df1880Fdbf46A422b45beb4113,Q,QA Report,39,https://github.com/code-423n4/2022-05-sturdy-findings/issues/39,sturdy,2022/05,bug;QA (Quality Assurance)
125,mtz,0x602411A87ff854A9565e72A88a53c8b17dA3509d,3,Upgraded Q -> H from 63 [1654488227536],168,https://github.com/code-423n4/2022-05-sturdy-findings/issues/168,sturdy,2022/05,bug;duplicate;3 (High Risk);upgraded by judge
125,mtz,0x602411A87ff854A9565e72A88a53c8b17dA3509d,3,Title: Yield can be unfairly divided because of MEV/Just-in-time stablecoin deposits,61,https://github.com/code-423n4/2022-05-sturdy-findings/issues/61,sturdy,2022/05,bug;2 (Med Risk);sponsor acknowledged
125,mtz,0x602411A87ff854A9565e72A88a53c8b17dA3509d,Q,QA Report,63,https://github.com/code-423n4/2022-05-sturdy-findings/issues/63,sturdy,2022/05,bug;QA (Quality Assurance)
125,mtz,0x602411A87ff854A9565e72A88a53c8b17dA3509d,G,Gas Optimizations,64,https://github.com/code-423n4/2022-05-sturdy-findings/issues/64,sturdy,2022/05,bug;G (Gas Optimization)
125,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,2,reentrancy in _withdrawFromYieldPool,10,https://github.com/code-423n4/2022-05-sturdy-findings/issues/10,sturdy,2022/05,bug;duplicate;invalid;2 (Med Risk);disagree with severity
125,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,3,require statement should be checked first,11,https://github.com/code-423n4/2022-05-sturdy-findings/issues/11,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,G,Gas Optimizations,8,https://github.com/code-423n4/2022-05-sturdy-findings/issues/8,sturdy,2022/05,bug;G (Gas Optimization)
125,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,Q,QA Report,9,https://github.com/code-423n4/2022-05-sturdy-findings/issues/9,sturdy,2022/05,bug;QA (Quality Assurance)
125,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,3,withdrawCollateral() seems to be vulnerable to reentrancy attacks,75,https://github.com/code-423n4/2022-05-sturdy-findings/issues/75,sturdy,2022/05,bug;invalid;3 (High Risk);sponsor disputed
125,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,3,Withdraws in LIDO vault can fail silently and result in loss of collateral,76,https://github.com/code-423n4/2022-05-sturdy-findings/issues/76,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,p4st13r4,0xEFAD0017ee6bcD0F38a8e559761493aA5C433FEA,Q,QA Report,77,https://github.com/code-423n4/2022-05-sturdy-findings/issues/77,sturdy,2022/05,bug;QA (Quality Assurance)
125,pedroais,0x7b13eB3F49525DcF09c01DbBbd34Af8a4C8C83B5,3,The check for value transfer success is made after the return statement in  _withdrawFromYieldPool of LidoVault,157,https://github.com/code-423n4/2022-05-sturdy-findings/issues/157,sturdy,2022/05,bug;3 (High Risk);sponsor confirmed
125,peritoflores,0xca14410735e29650dc240245d96bb376c51477c1,3,Return before require,152,https://github.com/code-423n4/2022-05-sturdy-findings/issues/152,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,2,User should be able to select slippage in GeneralVault,47,https://github.com/code-423n4/2022-05-sturdy-findings/issues/47,sturdy,2022/05,bug;duplicate;3 (High Risk);disagree with severity
125,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,2,`UNISWAP_FEE` is hardcoded which will lead to significant losses compared to optimal routing,48,https://github.com/code-423n4/2022-05-sturdy-findings/issues/48,sturdy,2022/05,bug;duplicate;2 (Med Risk);sponsor confirmed
125,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,Q,QA Report,49,https://github.com/code-423n4/2022-05-sturdy-findings/issues/49,sturdy,2022/05,bug;QA (Quality Assurance)
125,p_crypt0,0x1928785E5582D2866b293c96Ca8BF0f7a19a1178,Q,QA Report,114,https://github.com/code-423n4/2022-05-sturdy-findings/issues/114,sturdy,2022/05,bug;QA (Quality Assurance)
125,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,G,Gas Optimizations,57,https://github.com/code-423n4/2022-05-sturdy-findings/issues/57,sturdy,2022/05,bug;G (Gas Optimization)
125,robee,0x8b8f9A972B19A26287b28162e49787a1f3ec5A32,Q,QA Report,58,https://github.com/code-423n4/2022-05-sturdy-findings/issues/58,sturdy,2022/05,bug;QA (Quality Assurance)
125,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,G,Gas Optimizations,127,https://github.com/code-423n4/2022-05-sturdy-findings/issues/127,sturdy,2022/05,bug;G (Gas Optimization)
125,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,Q,QA Report,128,https://github.com/code-423n4/2022-05-sturdy-findings/issues/128,sturdy,2022/05,bug;QA (Quality Assurance)
125,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,2,Low-level call return value not checked,59,https://github.com/code-423n4/2022-05-sturdy-findings/issues/59,sturdy,2022/05,bug;duplicate;3 (High Risk);disagree with severity
125,rotcivegaf,0xBa910716Fd4b6b4447AeA613993898eeB63844Ad,2,Possible lost msg.value,62,https://github.com/code-423n4/2022-05-sturdy-findings/issues/62,sturdy,2022/05,bug;2 (Med Risk);sponsor confirmed
125,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,2,return before require statement,108,https://github.com/code-423n4/2022-05-sturdy-findings/issues/108,sturdy,2022/05,bug;duplicate;3 (High Risk);disagree with severity
125,samruna,0x071158363a80220cC3Cd2168e0b3ecFa7cDe6107,G,Gas Optimizations,31,https://github.com/code-423n4/2022-05-sturdy-findings/issues/31,sturdy,2022/05,bug;G (Gas Optimization)
125,sikorico,0x0E8ea7AD139C5EB10C6D1076962617D458D0Aed6,G,Gas Optimization,40,https://github.com/code-423n4/2022-05-sturdy-findings/issues/40,sturdy,2022/05,bug;G (Gas Optimization)
125,sikorico,0x0E8ea7AD139C5EB10C6D1076962617D458D0Aed6,Q,QA Report,41,https://github.com/code-423n4/2022-05-sturdy-findings/issues/41,sturdy,2022/05,bug;QA (Quality Assurance)
125,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,Q,QA Report,142,https://github.com/code-423n4/2022-05-sturdy-findings/issues/142,sturdy,2022/05,bug;QA (Quality Assurance)
125,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,G,Gas Optimizations,143,https://github.com/code-423n4/2022-05-sturdy-findings/issues/143,sturdy,2022/05,bug;G (Gas Optimization)
125,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,2,"require statment to very importent call to a contract,never gets called ",147,https://github.com/code-423n4/2022-05-sturdy-findings/issues/147,sturdy,2022/05,bug;duplicate;3 (High Risk);disagree with severity
125,SooYa,0xD9C055EBB562056FC195A254Da53ce92ef60c359,G,Gas Optimizations,44,https://github.com/code-423n4/2022-05-sturdy-findings/issues/44,sturdy,2022/05,bug;G (Gas Optimization)
125,SooYa,0xD9C055EBB562056FC195A254Da53ce92ef60c359,G,Gas Optimizations,45,https://github.com/code-423n4/2022-05-sturdy-findings/issues/45,sturdy,2022/05,bug;duplicate;G (Gas Optimization)
125,SooYa,0xD9C055EBB562056FC195A254Da53ce92ef60c359,G,Gas Optimizations,46,https://github.com/code-423n4/2022-05-sturdy-findings/issues/46,sturdy,2022/05,bug;duplicate;G (Gas Optimization)
125,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,Q,QA Report,135,https://github.com/code-423n4/2022-05-sturdy-findings/issues/135,sturdy,2022/05,bug;QA (Quality Assurance)
125,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,2,External contract calls inside loops may result in DoS.,136,https://github.com/code-423n4/2022-05-sturdy-findings/issues/136,sturdy,2022/05,bug;invalid;sponsor disputed
125,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,3,"At LidoVault.sol, `_withdrawFromYieldPool()`function,  ETH transfer return value is not checked",137,https://github.com/code-423n4/2022-05-sturdy-findings/issues/137,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,2,Upgraded Q -> M from 135 [1654503715861],172,https://github.com/code-423n4/2022-05-sturdy-findings/issues/172,sturdy,2022/05,bug;invalid;2 (Med Risk);upgraded by judge
125,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,2,Upgraded Q -> M from 135 [1654503723748],173,https://github.com/code-423n4/2022-05-sturdy-findings/issues/173,sturdy,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
125,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,3,Upgraded Q -> H from 135 [1654503748167],174,https://github.com/code-423n4/2022-05-sturdy-findings/issues/174,sturdy,2022/05,bug;duplicate;3 (High Risk);upgraded by judge
125,sseefried,0x033e21B02373489ff2f7a2c2f1B109a1bC6158aD,2,Return value of send of ether not checked in `_withdrawFromYieldPool`,156,https://github.com/code-423n4/2022-05-sturdy-findings/issues/156,sturdy,2022/05,bug;duplicate;3 (High Risk);disagree with severity
125,StErMi,0x2272a321f0151189d66881f5C0971899897eF71B,Q,QA Report,103,https://github.com/code-423n4/2022-05-sturdy-findings/issues/103,sturdy,2022/05,bug;QA (Quality Assurance)
125,StErMi,0x2272a321f0151189d66881f5C0971899897eF71B,G,Gas Optimizations,104,https://github.com/code-423n4/2022-05-sturdy-findings/issues/104,sturdy,2022/05,bug;G (Gas Optimization)
125,StErMi,0x2272a321f0151189d66881f5C0971899897eF71B,3,Upgraded Q -> H from 103 [1654497033247],170,https://github.com/code-423n4/2022-05-sturdy-findings/issues/170,sturdy,2022/05,bug;duplicate;3 (High Risk);upgraded by judge
125,StErMi,0x2272a321f0151189d66881f5C0971899897eF71B,2,Upgraded Q -> M from 103 [1654497041670],171,https://github.com/code-423n4/2022-05-sturdy-findings/issues/171,sturdy,2022/05,bug;duplicate;2 (Med Risk);upgraded by judge
125,StErMi,0x2272a321f0151189d66881f5C0971899897eF71B,2,`depositCollateral` allows user's ETH sent along with the tx to be stuck forever,90,https://github.com/code-423n4/2022-05-sturdy-findings/issues/90,sturdy,2022/05,bug;duplicate;2 (Med Risk)
125,tabish,0xD6FCD2F85fE975bB9b0f3C1B1c6802bB09d33E43,3,"User does not get funds if sending ETH in LidoVault.sol fails, funds stay suck in the contract",109,https://github.com/code-423n4/2022-05-sturdy-findings/issues/109,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,2,[LidoVault.sol][_withdrawFromYieldPool] Should not call ``return receivedETHAmount`` before the require check,129,https://github.com/code-423n4/2022-05-sturdy-findings/issues/129,sturdy,2022/05,bug;duplicate;3 (High Risk);disagree with severity
125,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,Q,QA Report,134,https://github.com/code-423n4/2022-05-sturdy-findings/issues/134,sturdy,2022/05,bug;QA (Quality Assurance)
125,tintin,0xAA371e26742290063d92F0Bd7197aC2D8d3aC4f1,3,Subsequent calls to ConvexCurveLPVault's setConfiguration function by admin erases existing Sturdy tokens,161,https://github.com/code-423n4/2022-05-sturdy-findings/issues/161,sturdy,2022/05,bug;invalid;sponsor disputed
125,tintin,0xAA371e26742290063d92F0Bd7197aC2D8d3aC4f1,Q,QA Report,163,https://github.com/code-423n4/2022-05-sturdy-findings/issues/163,sturdy,2022/05,bug;QA (Quality Assurance)
125,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,138,https://github.com/code-423n4/2022-05-sturdy-findings/issues/138,sturdy,2022/05,bug;G (Gas Optimization)
125,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H5] `LidoVault.sol` Wrong implementation can cause the users to lose their funds when withdrawing ETH,88,https://github.com/code-423n4/2022-05-sturdy-findings/issues/88,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,3,[WP-H12] Wrong implementation of `ConvexCurveLPVault#withdrawOnLiquidation()` may cause the positions collateralized with `ConvexCurveLP` unbale to be liquidated as `withdrawOnLiquidation()` will always fail,93,https://github.com/code-423n4/2022-05-sturdy-findings/issues/93,sturdy,2022/05,bug;invalid;3 (High Risk);sponsor disputed
125,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Overexert on-chain slippage/loss control may cause users' funds to be frozen in the contract,95,https://github.com/code-423n4/2022-05-sturdy-findings/issues/95,sturdy,2022/05,bug;duplicate;3 (High Risk);disagree with severity
125,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Withdraw all with `amount: type(uint256).max` in native token (ETH) will always revert,97,https://github.com/code-423n4/2022-05-sturdy-findings/issues/97,sturdy,2022/05,bug;duplicate;2 (Med Risk)
125,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,Q,QA Report,98,https://github.com/code-423n4/2022-05-sturdy-findings/issues/98,sturdy,2022/05,bug;QA (Quality Assurance)
125,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,G,Gas Optimizations,99,https://github.com/code-423n4/2022-05-sturdy-findings/issues/99,sturdy,2022/05,bug;G (Gas Optimization)
125,Waze,0xB649642DEe8E9E25b21cfc67DA7DCf86828dd60D,G,Gas Optimizations,121,https://github.com/code-423n4/2022-05-sturdy-findings/issues/121,sturdy,2022/05,bug;G (Gas Optimization)
125,Waze,0xB649642DEe8E9E25b21cfc67DA7DCf86828dd60D,Q,QA Report,122,https://github.com/code-423n4/2022-05-sturdy-findings/issues/122,sturdy,2022/05,bug;QA (Quality Assurance)
125,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,3,Unreachable `require` check in `LidoVault.sol::_withdrawFromYieldPool()`,123,https://github.com/code-423n4/2022-05-sturdy-findings/issues/123,sturdy,2022/05,bug;duplicate;3 (High Risk)
125,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,Q,QA Report,125,https://github.com/code-423n4/2022-05-sturdy-findings/issues/125,sturdy,2022/05,bug;G (Gas Optimization)
124,0v3rf10w,0x4Dd980Ae601dB0a0856F3B7ABd6DD155Efa67b9D,G,Gas Optimizations,201,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/201,notional coop,2022/06,bug;G (Gas Optimization)
124,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,3,Sandwitch attack in NotionalTradeModule,37,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/37,notional coop,2022/06,bug;invalid;3 (High Risk);sponsor disputed;Index
124,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,2,Denial of service with certains tokens,38,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/38,notional coop,2022/06,bug;duplicate;QA (Quality Assurance);Index
124,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,G,Gas Optimizations,39,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/39,notional coop,2022/06,bug;G (Gas Optimization)
124,0x1f8b,0x8DB32d6ECCe6b7a3DBEbFAEbE9B329022EC86aCF,Q,QA Report,40,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/40,notional coop,2022/06,bug;QA (Quality Assurance)
124,0x29A,0x0Ea7d69Be83460913E8b6428302d468BDa585D1b,G,Gas Optimizations,113,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/113,notional coop,2022/06,bug;G (Gas Optimization)
124,0x29A,0x0Ea7d69Be83460913E8b6428302d468BDa585D1b,Q,QA Report,114,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/114,notional coop,2022/06,bug;QA (Quality Assurance)
124,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,3,fCash of the wrong maturity and asset can be sent to wrapper address before wrapper is deployed ,115,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/115,notional coop,2022/06,bug;2 (Med Risk);disagree with severity;sponsor confirmed;Notional
124,0x52,0x522DFfc539c264A8f7E0B91102E899b33f4DAbc3,2,Idiosyncratic wfCash severely limits set functionality,116,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/116,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed;Index
124,0xDjango,0x886241e011A6C148bdD96B097EB27962f8A1c5F0,Q,QA Report,234,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/234,notional coop,2022/06,bug;QA (Quality Assurance)
124,0xDjango,0x886241e011A6C148bdD96B097EB27962f8A1c5F0,2,User can alter amount returned by redeem function due to control transfer,235,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/235,notional coop,2022/06,bug;2 (Med Risk);sponsor confirmed
124,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,Q,QA Report,183,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/183,notional coop,2022/06,bug;invalid;QA (Quality Assurance)
124,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,G,Gas Optimizations,185,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/185,notional coop,2022/06,bug;G (Gas Optimization)
124,0xf15ers,0x1434b95234155DA830c20d02548aF22f14A38FbE,Q,QA Report,186,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/186,notional coop,2022/06,bug;QA (Quality Assurance)
124,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,Q,QA Report,49,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/49,notional coop,2022/06,bug;QA (Quality Assurance)
124,0xkatana,0x195d5C9A18348765F2BD62a7dc8D389554a28d82,G,Gas Optimizations,50,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/50,notional coop,2022/06,bug;G (Gas Optimization)
124,0xKitsune,0xbebA107B5f93c6AF3186b0c61d6b7492f588f67B,G,Gas Optimizations,187,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/187,notional coop,2022/06,bug;G (Gas Optimization)
124,0xmint,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,Q,QA Report,210,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/210,notional coop,2022/06,bug;QA (Quality Assurance)
124,0xmint,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,G,Gas Optimizations,211,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/211,notional coop,2022/06,bug;G (Gas Optimization)
124,0xmint,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,2,Set tokens will be updated incorrectly,214,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/214,notional coop,2022/06,bug;duplicate;QA (Quality Assurance);sponsor disputed;Index
124,0xmint,0x426DC9dCB3C0d6A283268B4bb51AeC48CEB18854,2,Deposit and mint function will be rendered useless for users who are depositing using eth since balances will never be finalised ,216,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/216,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,G,Gas Optimizations,26,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/26,notional coop,2022/06,bug;G (Gas Optimization)
124,0xNazgul,0x714Af4c78135Ec866a3cd34755BDB59cdb9b7246,Q,QA Report,27,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/27,notional coop,2022/06,bug;QA (Quality Assurance)
124,0xNineDec,0x764312Ef291900eF32be90dd3Eb5a1bfa6788E84,2,DoS while Redeeming via ERC-4626 redeem,36,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/36,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,0xNineDec,0x764312Ef291900eF32be90dd3Eb5a1bfa6788E84,Q,QA Report,48,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/48,notional coop,2022/06,bug;QA (Quality Assurance)
124,0xSolus,0x6308F1c6f283583C8bf8E31Da793B87718b051eD,Q,QA Report,64,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/64,notional coop,2022/06,bug;G (Gas Optimization);Index
124,8olidity,0xB743291D7aBA8aa3279c93526143bb210b6CbB16,G,Gas Optimizations,71,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/71,notional coop,2022/06,bug;G (Gas Optimization)
124,antonttc,0x5599b4EAdDd319e2F462b27fC8378B0BFaD309CA,G,Gas Optimizations,184,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/184,notional coop,2022/06,bug;G (Gas Optimization);Notional
124,antonttc,0x5599b4EAdDd319e2F462b27fC8378B0BFaD309CA,Q,QA Report,194,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/194,notional coop,2022/06,bug;QA (Quality Assurance);Notional
124,antonttc,0x5599b4EAdDd319e2F462b27fC8378B0BFaD309CA,3,"deposit through `onERC1155Received` can be locked by attackers, making the function useless",51,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/51,notional coop,2022/06,bug;invalid;3 (High Risk);sponsor disputed
124,asutorufos,0xB4EBA2c82c248584a2DA0c75e1168D3b931D18af,G,Gas Optimizations,41,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/41,notional coop,2022/06,bug;G (Gas Optimization)
124,asutorufos,0xB4EBA2c82c248584a2DA0c75e1168D3b931D18af,Q,QA Report,56,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/56,notional coop,2022/06,bug;invalid;QA (Quality Assurance)
124,asutorufos,0xB4EBA2c82c248584a2DA0c75e1168D3b931D18af,2,Lack of SAFEAPPROVE(o) in the INITIALIZER which can only be can only be called once,6,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/6,notional coop,2022/06,bug;invalid;2 (Med Risk);disagree with severity
124,ayeslick,0x7cCdb6979cB9dFA867b842fAe8243b3B3fda444D,3,INITIALIZER MODIFIER IS SUSCEPTIBLE TO REENTRANCY DURING INITIALIZATION,106,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/106,notional coop,2022/06,bug;QA (Quality Assurance);sponsor disputed
124,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,G,Gas Optimizations,213,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/213,notional coop,2022/06,bug;G (Gas Optimization);Notional
124,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,Q,QA Report,215,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/215,notional coop,2022/06,bug;QA (Quality Assurance)
124,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,`wfCash` tokens can be locked in Set,226,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/226,notional coop,2022/06,bug;duplicate;2 (Med Risk);Index
124,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,2,Wrapped idiosyncratic (non-tradable) fCash can possibly not be unwrapped prior to maturity,229,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/229,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,berndartmueller,0x6A897b32996D342535791a74B8a40E75DDf2486e,3,Upgraded Q -> H from 215 [1656255310294],237,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/237,notional coop,2022/06,bug;duplicate;3 (High Risk);upgraded by judge
124,Bronicle,0x64defa36cd321a44adddad64414a9060d1d98599,Q,QA Report,220,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/220,notional coop,2022/06,bug;QA (Quality Assurance)
124,c3phas,0x440eeef2cea79bc4af1ab533d4b381d453dfc900,2,safeMath function being used without importing the safeMath library preventing contract compilation ,198,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/198,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,c3phas,0x440eeef2cea79bc4af1ab533d4b381d453dfc900,Q,QA Report,205,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/205,notional coop,2022/06,bug;QA (Quality Assurance)
124,c3phas,0x440eeef2cea79bc4af1ab533d4b381d453dfc900,G,Gas Optimizations,212,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/212,notional coop,2022/06,bug;G (Gas Optimization)
124,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,2,wfCashLogic.sol fee on transfer tokens are not supported,139,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/139,notional coop,2022/06,bug;duplicate;QA (Quality Assurance);sponsor confirmed;Notional
124,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,Q,QA Report,140,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/140,notional coop,2022/06,bug;QA (Quality Assurance)
124,catchup,0xB159bEEb1DeA94440820F9A06A2f613974467e0E,G,Gas Optimizations,141,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/141,notional coop,2022/06,bug;G (Gas Optimization)
124,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Some ERC20 do not allow to transfer 0 amount,137,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/137,notional coop,2022/06,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor confirmed;Notional
124,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,Must approve 0 first,44,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/44,notional coop,2022/06,bug;QA (Quality Assurance);Index
124,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"minImpliedRate defaults to 0 in some functions, resulting in lack of slippage control",47,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/47,notional coop,2022/06,bug;duplicate;invalid;2 (Med Risk)
124,cccz,0x74d754378a59Ab45d3E6CaC83f0b87E8E8719270,2,"maxImpliedRate defaults to 0 or type(uint32).max in some functions, resulting in lack of slippage control",61,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/61,notional coop,2022/06,bug;duplicate;invalid;2 (Med Risk);Index
124,Chom,0xc4c459668fb29833D7Dee997d7D347e2634C9CEF,3,Single point of failure in NotionalV2 as it aren't audited with code4rena yet. It may expose some vulnerability to Flash loan attack.,126,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/126,notional coop,2022/06,bug;invalid;sponsor disputed
124,Chom,0xc4c459668fb29833D7Dee997d7D347e2634C9CEF,2,Too many setToken modules may cause gas limit error,129,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/129,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,Chom,0xc4c459668fb29833D7Dee997d7D347e2634C9CEF,2,Divide by zero error on convertToShares due to totalAssets() is zero,135,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/135,notional coop,2022/06,bug;duplicate;disagree with severity;QA (Quality Assurance)
124,Chom,0xc4c459668fb29833D7Dee997d7D347e2634C9CEF,Q,QA Report,138,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/138,notional coop,2022/06,bug;QA (Quality Assurance)
124,Chom,0xc4c459668fb29833D7Dee997d7D347e2634C9CEF,G,Gas Optimizations,204,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/204,notional coop,2022/06,bug;G (Gas Optimization);Notional
124,Cityscape,0x46686E5420B34d5950d37855291d970fBa5527b6,G,Gas Optimizations,166,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/166,notional coop,2022/06,bug;G (Gas Optimization)
124,Cityscape,0x46686E5420B34d5950d37855291d970fBa5527b6,Q,QA Report,170,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/170,notional coop,2022/06,bug;QA (Quality Assurance)
124,cloudjunky,0x429882f4Ee6eFeF049ac273BF2abF89E6cB906b6,Q,QA Report,94,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/94,notional coop,2022/06,bug;QA (Quality Assurance)
124,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,3,Loss of underlying tokens due to ERC4626 non-compliance in withdraw function in wfCashERC4626.sol,42,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/42,notional coop,2022/06,bug;invalid;3 (High Risk);sponsor disputed
124,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,3,Loss of underlying tokens due to ERC4626 non-compliance in redeem function in wfCashERC4626.sol,43,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/43,notional coop,2022/06,bug;invalid;3 (High Risk);sponsor disputed
124,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,3,Loss of tokens due to wrong burn function,45,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/45,notional coop,2022/06,bug;duplicate;invalid;3 (High Risk);sponsor disputed
124,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,3,Loss of tokens due to wrong burn function,46,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/46,notional coop,2022/06,bug;invalid;3 (High Risk);sponsor disputed
124,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,2,Maturity is potentially subject to timestamp manipulation,62,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/62,notional coop,2022/06,bug;invalid;sponsor disputed
124,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,3,Re-entrancy in wfCashERC4626.redeem() can lead to more gains in assets and/or shares,65,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/65,notional coop,2022/06,bug;invalid;3 (High Risk)
124,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,3,wfCashERC4626.withdraw() missing some asset balance checks and calculations can drain contract,67,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/67,notional coop,2022/06,bug;invalid;3 (High Risk);sponsor disputed
124,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,3,Re-entrancy in wfCashERC4626.withdraw() can lead to more gains in assets,68,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/68,notional coop,2022/06,bug;invalid;3 (High Risk);sponsor disputed
124,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,3,Vulnerable and Inconsistency in @openzeppelin/contracts versions,90,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/90,notional coop,2022/06,bug;duplicate;QA (Quality Assurance);sponsor disputed
124,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,2,Use of SafeApprove() may cause withdraw or redeem to revert,91,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/91,notional coop,2022/06,bug;invalid;sponsor disputed
124,cryptphi,0x876133657F5356e376B7ae27d251444727cE9488,Q,QA Report,92,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/92,notional coop,2022/06,bug;QA (Quality Assurance)
124,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Uninitialized Wrapped fCash contract,108,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/108,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed;Index
124,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,G,Gas Optimizations,95,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/95,notional coop,2022/06,bug;G (Gas Optimization)
124,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,Q,QA Report,96,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/96,notional coop,2022/06,bug;QA (Quality Assurance)
124,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,Funds can stuck in Contract,97,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/97,notional coop,2022/06,bug;duplicate;QA (Quality Assurance);sponsor confirmed
124,csanuragjain,0xd295584135829D89427674B72560222B06E08a15,2,transferfCash does not work as expected,98,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/98,notional coop,2022/06,bug;2 (Med Risk);sponsor confirmed;Notional
124,DavidGialdi,0x3215E92c52F83f75E7Df1886aA29C11e25f4F2aF,G,Gas Optimizations,81,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/81,notional coop,2022/06,bug;G (Gas Optimization)
124,Deivitto,0xA3fF40954b07Bf89225363e8677bf71c8D6CFd73,G,Gas Optimizations,130,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/130,notional coop,2022/06,bug;G (Gas Optimization)
124,Deivitto,0xA3fF40954b07Bf89225363e8677bf71c8D6CFd73,Q,QA Report,131,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/131,notional coop,2022/06,bug;QA (Quality Assurance)
124,Deivitto,0xA3fF40954b07Bf89225363e8677bf71c8D6CFd73,2,block.timestamp as time proxy,132,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/132,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,Deivitto,0xA3fF40954b07Bf89225363e8677bf71c8D6CFd73,3,Posible UUPSUpgradeable attack,133,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/133,notional coop,2022/06,bug;invalid;3 (High Risk);sponsor disputed
124,Deivitto,0xA3fF40954b07Bf89225363e8677bf71c8D6CFd73,Q,QA Report,199,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/199,notional coop,2022/06,bug;duplicate;QA (Quality Assurance)
124,Deivitto,0xA3fF40954b07Bf89225363e8677bf71c8D6CFd73,G,Gas Optimizations,200,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/200,notional coop,2022/06,bug;duplicate;G (Gas Optimization)
124,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,G,Gas Optimizations,117,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/117,notional coop,2022/06,bug;G (Gas Optimization)
124,delfin454000,0xa6E381D8204d9F407C1a9e5EA4dFa433a75188C3,Q,QA Report,120,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/120,notional coop,2022/06,bug;QA (Quality Assurance)
124,dipp,0x675454Ae78d25632fC26763Fa9CB72a99Cb0A36e,Q,QA Report,208,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/208,notional coop,2022/06,bug;QA (Quality Assurance)
124,djxploit,0x2635bbab233b9a1cd7703e6c4b80fe39055971d6,G,Gas Optimizations,25,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/25,notional coop,2022/06,bug;G (Gas Optimization);Index
124,ElKu,0x819681641e07e80F817a34f82400DeBcc2579b98,G,Gas Optimizations,134,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/134,notional coop,2022/06,bug;G (Gas Optimization)
124,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,G,Gas Optimizations,217,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/217,notional coop,2022/06,bug;G (Gas Optimization)
124,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,Q,QA Report,218,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/218,notional coop,2022/06,bug;QA (Quality Assurance)
124,ellahi,0x154DB26C46B35002f5EbD7b4A5D18B3290411B70,3,Update initializer modifier to prevent reentrancy during initialization. ,219,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/219,notional coop,2022/06,bug;duplicate;QA (Quality Assurance);sponsor disputed;Notional
124,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,G,Gas Optimizations,121,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/121,notional coop,2022/06,bug;G (Gas Optimization)
124,fatherOfBlocks,0xd5a2686B02A15b5269848DEe6e913F07F459782E,Q,QA Report,122,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/122,notional coop,2022/06,bug;QA (Quality Assurance);Notional
124,Fitraldys,0xf533f2AB9460DB8d665DDe79773F20eCfB35f860,G,Gas Optimizations,230,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/230,notional coop,2022/06,bug;G (Gas Optimization);Notional
124,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,Q,QA Report,202,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/202,notional coop,2022/06,bug;QA (Quality Assurance)
124,Funen,0x1b4Cad2Cb2AD1B4dF797AaCf046576A8d75AcD45,G,Gas Optimizations,203,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/203,notional coop,2022/06,bug;G (Gas Optimization)
124,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,2,Doesn't check whether maturity is not in the past,151,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/151,notional coop,2022/06,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor confirmed;Notional
124,GimelSec,0x8595B7e8F4d3287248DB45AcA4Ba4EaCFe4Ab78e,Q,QA Report,152,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/152,notional coop,2022/06,bug;QA (Quality Assurance);Notional
124,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,2,Prevent users from transferring wfCash to the wfCash wrapper,102,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/102,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,Q,QA Report,104,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/104,notional coop,2022/06,bug;QA (Quality Assurance)
124,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,G,Gas Optimizations,105,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/105,notional coop,2022/06,bug;G (Gas Optimization);Notional
124,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,3,Upgraded Q -> H from 104 [1656255316696],238,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/238,notional coop,2022/06,bug;duplicate;3 (High Risk);upgraded by judge
124,GreyArt,0x07f0571566E4b07eA825798A70Fd67fE79077f4E,2,Upgraded Q -> M from 104 [1656258768065],239,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/239,notional coop,2022/06,bug;2 (Med Risk);sponsor confirmed;upgraded by judge
124,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,Q,QA Report,190,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/190,notional coop,2022/06,bug;QA (Quality Assurance)
124,hake,0x14Ca9669A2D8E353560b85474575c5FfDe245220,G,Gas Optimizations,191,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/191,notional coop,2022/06,bug;G (Gas Optimization);Index
124,hansfriese,0xf2dCB1d3B7091Dcf2cE87aD115377C108ebE6DD4,2,NotionalTradeModule._approve() function is missing return value check.,123,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/123,notional coop,2022/06,bug;duplicate;invalid;2 (Med Risk);Index
124,hansfriese,0xf2dCB1d3B7091Dcf2cE87aD115377C108ebE6DD4,G,Gas Optimizations,124,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/124,notional coop,2022/06,bug;G (Gas Optimization)
124,hansfriese,0xf2dCB1d3B7091Dcf2cE87aD115377C108ebE6DD4,Q,QA Report,125,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/125,notional coop,2022/06,bug;QA (Quality Assurance)
124,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,2,NotionalTradeModule's mintFCashPosition can become stuck on positive amount approval when allowance is already positive,221,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/221,notional coop,2022/06,bug;duplicate;QA (Quality Assurance);Index
124,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,G,Gas Optimizations,223,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/223,notional coop,2022/06,bug;G (Gas Optimization);Index
124,hyh,0x859e1Dfb430A7156fAEF11947F2FC2a3C34B733A,Q,QA Report,228,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/228,notional coop,2022/06,bug;QA (Quality Assurance)
124,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,G,Gas Optimizations,111,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/111,notional coop,2022/06,bug;G (Gas Optimization);Notional
124,IllIllI,0xCC6B0a35481EA40b60780B7c0294c6c29061038f,Q,QA Report,112,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/112,notional coop,2022/06,bug;QA (Quality Assurance)
124,JC,0xFc06B4C7b226C0bE3766656Fe4165592d9E7749f,Q,QA Report,232,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/232,notional coop,2022/06,bug;QA (Quality Assurance)
124,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,G,Gas Optimizations,83,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/83,notional coop,2022/06,bug;G (Gas Optimization)
124,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,Q,QA Report,84,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/84,notional coop,2022/06,bug;QA (Quality Assurance)
124,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,2,DEPOSIT() IS NOT WORKING WITH FEE-ON-TRANSFER TOKENS,85,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/85,notional coop,2022/06,bug;duplicate;QA (Quality Assurance)
124,joestakey,0xA9c2ce9dcc090af921FB0a1F874962F65A4b6D9b,3,VULNERABLE VERSION OF OPEN-ZEPPELIN CAN LEAD TO INITIALIZER() MALFUNCTION,86,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/86,notional coop,2022/06,bug;duplicate;QA (Quality Assurance);sponsor disputed
124,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,DOS set token through erc777 hook,168,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/168,notional coop,2022/06,bug;2 (Med Risk);sponsor confirmed;Notional
124,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,`IsWrappedFcash` check is a gas bomb,188,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/188,notional coop,2022/06,bug;2 (Med Risk);sponsor confirmed;Index
124,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,Q,QA Report,222,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/222,notional coop,2022/06,bug;QA (Quality Assurance);Notional
124,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,3,Upgraded Q -> H from 222 [1656255302682],236,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/236,notional coop,2022/06,bug;duplicate;invalid;3 (High Risk);upgraded by judge
124,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Deposit of wrappedFCash does not follow EIP 4626,76,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/76,notional coop,2022/06,bug;duplicate;invalid;3 (High Risk)
124,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Malicious users can DOS `onERC1155Received` through donating fcash before the contract is deployed.,78,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/78,notional coop,2022/06,bug;duplicate;2 (Med Risk)
124,jonah1005,0xd7f69D59B6E8E6f3031B12f692d468bC88Ebdd97,2,Withdraw function does not conform to EIP4626,88,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/88,notional coop,2022/06,bug;duplicate;3 (High Risk)
124,kaden,0x942773b96e21E80f9AE5f1eaE8c414B03E73cdb7,G,Gas Optimizations,55,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/55,notional coop,2022/06,bug;G (Gas Optimization)
124,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,"wfCashERC4626 maxWithdraw, previewWithdraw, previewRedeem, convertToAssets, convertToShares doesn't conform to EIP4626",167,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/167,notional coop,2022/06,bug;duplicate;3 (High Risk);disagree with severity
124,kenzo,0x611DaBF15f0077c64fDB5067376Ad593191e65F3,2,wfCash4626 withdraw method can settle the account,169,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/169,notional coop,2022/06,bug;disagree with severity;QA (Quality Assurance);sponsor confirmed;Notional
124,Lambda,0xEfC711B22F4fDbCBC221aC7c116e90c699D0b708,G,Gas Optimizations,72,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/72,notional coop,2022/06,bug;G (Gas Optimization)
124,Lambda,0xEfC711B22F4fDbCBC221aC7c116e90c699D0b708,Q,QA Report,73,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/73,notional coop,2022/06,bug;QA (Quality Assurance)
124,Lambda,0xEfC711B22F4fDbCBC221aC7c116e90c699D0b708,2,Non matured positions are lost when the module is removed,74,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/74,notional coop,2022/06,bug;duplicate;invalid;2 (Med Risk)
124,Meera,0x9399b6934A797f133E452CF1523a4254629Ebf81,G,Gas Optimizations,148,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/148,notional coop,2022/06,bug;G (Gas Optimization)
124,Meera,0x9399b6934A797f133E452CF1523a4254629Ebf81,Q,QA Report,150,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/150,notional coop,2022/06,bug;QA (Quality Assurance)
124,Meera,0x9399b6934A797f133E452CF1523a4254629Ebf81,2,Consistently check account balance before and after transfers for Fee-On-Transfer discrepancies,153,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/153,notional coop,2022/06,bug;duplicate;QA (Quality Assurance);Notional
124,Meera,0x9399b6934A797f133E452CF1523a4254629Ebf81,2,Upgraded Q -> M from 150 [1656258796240],240,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/240,notional coop,2022/06,bug;duplicate;2 (Med Risk);upgraded by judge
124,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,3,Division round down 2 times may cause `convertToShares` calculation incorrect if underlying token with decimals less than 8.,143,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/143,notional coop,2022/06,bug;duplicate;3 (High Risk);disagree with severity;Notional
124,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,3,Round down in `previewWithdraw()` may result in withdrawing asset using zero share.,144,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/144,notional coop,2022/06,bug;duplicate;invalid;3 (High Risk)
124,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,2,Incorrect openzeppelin version,145,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/145,notional coop,2022/06,bug;duplicate;QA (Quality Assurance);sponsor disputed
124,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,Q,QA Report,146,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/146,notional coop,2022/06,bug;QA (Quality Assurance)
124,minhquanym,0x616e6EC41bE589C7Cd08ee9E2fE8dD0Eaddd8941,G,Gas Optimizations,147,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/147,notional coop,2022/06,bug;G (Gas Optimization);Notional
124,Nethermind,0xbc11295936aa79d594139de1b2e12629414f3bdb,Q,QA Report,189,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/189,notional coop,2022/06,bug;QA (Quality Assurance)
124,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,Q,QA Report,10,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/10,notional coop,2022/06,bug;QA (Quality Assurance)
124,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,2,minImpliedRate default to 0,11,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/11,notional coop,2022/06,bug;duplicate;invalid;2 (Med Risk);sponsor disputed
124,oyc_109,0x18c18803a9eb6E032F50E97e6637cA8f811Cc118,G,Gas Optimizations,9,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/9,notional coop,2022/06,bug;G (Gas Optimization)
124,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,G,Gas Optimizations,224,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/224,notional coop,2022/06,bug;G (Gas Optimization);Notional
124,Picodes,0x9843C8a8263308A309BfC3C2d1c308126D8E754D,Q,QA Report,227,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/227,notional coop,2022/06,bug;QA (Quality Assurance);Notional
124,PierrickGT,0x2C868EC7Af4DEb002f4622C4141321ffa559bdA1,G,Gas Optimizations,100,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/100,notional coop,2022/06,bug;G (Gas Optimization)
124,PierrickGT,0x2C868EC7Af4DEb002f4622C4141321ffa559bdA1,Q,QA Report,101,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/101,notional coop,2022/06,bug;QA (Quality Assurance)
124,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,G,Gas Optimizations,175,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/175,notional coop,2022/06,bug;G (Gas Optimization)
124,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,Q,QA Report,176,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/176,notional coop,2022/06,bug;invalid;QA (Quality Assurance);sponsor disputed;Index;out-of-scope
124,rfa,0x95687C27DcE4D413a91A0E1fd0478F4751da8730,2,`NotionalV2` is not initialized,52,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/52,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,`wfCashERC4626` mints and burns without slippage protection which can result in lost funds,35,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/35,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,NotionalTradeModule initiates Notional trades without checking for slippage,53,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/53,notional coop,2022/06,bug;duplicate;invalid;2 (Med Risk);sponsor disputed;Index
124,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,NotionalTradeModule doesn't follow the IWrappedFCash interface properly,54,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/54,notional coop,2022/06,bug;duplicate;disagree with severity;QA (Quality Assurance);sponsor confirmed;Index
124,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,ERC20.approve to 0 before approving a new value,59,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/59,notional coop,2022/06,bug;duplicate;QA (Quality Assurance)
124,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,2,NotionalTradeModule allows anybody to remove the module from the SetToken allowing an attacker to DOS the protocol,60,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/60,notional coop,2022/06,bug;invalid;sponsor disputed
124,Ruhum,0x1708bdfa333F81993A1eDcFEc6821a3Ec563eA06,Q,QA Report,63,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/63,notional coop,2022/06,bug;QA (Quality Assurance)
124,sach1r0,0x0e815C6156E2BE737bd8e81D145D816A517CEBa1,G,Gas Optimizations,28,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/28,notional coop,2022/06,bug;G (Gas Optimization)
124,sach1r0,0x0e815C6156E2BE737bd8e81D145D816A517CEBa1,Q,QA Report,29,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/29,notional coop,2022/06,bug;QA (Quality Assurance)
124,sach1r0,0x0e815C6156E2BE737bd8e81D145D816A517CEBa1,2,Unsafe casting in the `_safeNegInt88` function,30,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/30,notional coop,2022/06,bug;duplicate;disagree with severity;QA (Quality Assurance)
124,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,G,Gas Optimizations,178,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/178,notional coop,2022/06,bug;G (Gas Optimization)
124,saian,0x41866fbD59371800a7A6A2e314641CD69Cd7247D,Q,QA Report,180,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/180,notional coop,2022/06,bug;QA (Quality Assurance)
124,samruna,0x72E772A305cA37321e2461770896F607F6B41844,G,Gas Optimizations,19,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/19,notional coop,2022/06,bug;duplicate;G (Gas Optimization)
124,samruna,0x72E772A305cA37321e2461770896F607F6B41844,G,Gas Optimizations,2,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/2,notional coop,2022/06,bug;G (Gas Optimization);Notional
124,samruna,0x72E772A305cA37321e2461770896F607F6B41844,G,Gas Optimizations,20,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/20,notional coop,2022/06,bug;duplicate;G (Gas Optimization)
124,samruna,0x72E772A305cA37321e2461770896F607F6B41844,G,Gas Optimizations,3,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/3,notional coop,2022/06,bug;duplicate;G (Gas Optimization);Notional
124,samruna,0x72E772A305cA37321e2461770896F607F6B41844,2,Return value not checked,31,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/31,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed;Index;out-of-scope
124,samruna,0x72E772A305cA37321e2461770896F607F6B41844,G,Gas Optimizations,32,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/32,notional coop,2022/06,bug;duplicate;G (Gas Optimization)
124,samruna,0x72E772A305cA37321e2461770896F607F6B41844,2,Deletion on mapping containing a structure,33,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/33,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed;Index;out-of-scope
124,samruna,0x72E772A305cA37321e2461770896F607F6B41844,Q,QA Report,34,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/34,notional coop,2022/06,bug;invalid;QA (Quality Assurance);sponsor disputed;Index;out-of-scope
124,samruna,0x72E772A305cA37321e2461770896F607F6B41844,G,Gas Optimizations,4,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/4,notional coop,2022/06,bug;duplicate;G (Gas Optimization)
124,samruna,0x72E772A305cA37321e2461770896F607F6B41844,G,Gas Optimizations,5,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/5,notional coop,2022/06,bug;duplicate;G (Gas Optimization);Notional
124,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,G,Gas Optimizations,158,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/158,notional coop,2022/06,bug;G (Gas Optimization)
124,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,2,cause an attacker to get a  better deal on intrest rate on  borrwoing and lending or cause txs' to revert ,196,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/196,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,2,cause users to revet right after deployment so they cant lend or borrow ,197,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/197,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,3,you can mint any amount  of tokens and steal eth from the contract ,206,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/206,notional coop,2022/06,bug;invalid;3 (High Risk);sponsor disputed
124,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,3,attacker can burn anyones tokens and steal everyones money,207,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/207,notional coop,2022/06,bug;invalid;3 (High Risk);sponsor disputed
124,simon135,0x7bFbaBDa21BEEBB17E284901BfC41E942F8128C8,Q,QA Report,209,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/209,notional coop,2022/06,bug;QA (Quality Assurance)
124,slywaters,0xcdc82d78cb49d4baa06d0988afdd27261b0667b2,G,Gas Optimizations,118,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/118,notional coop,2022/06,bug;G (Gas Optimization)
124,slywaters,0xcdc82d78cb49d4baa06d0988afdd27261b0667b2,Q,QA Report,119,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/119,notional coop,2022/06,bug;QA (Quality Assurance)
124,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,G,Gas Optimizations,12,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/12,notional coop,2022/06,bug;duplicate;G (Gas Optimization)
124,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,G,Gas Optimizations,13,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/13,notional coop,2022/06,bug;duplicate;G (Gas Optimization)
124,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,G,Gas Optimizations,14,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/14,notional coop,2022/06,bug;duplicate;G (Gas Optimization);sponsor disputed;Index;out-of-scope
124,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,G,Gas Optimizations,15,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/15,notional coop,2022/06,bug;duplicate;G (Gas Optimization)
124,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,Q,QA Report,16,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/16,notional coop,2022/06,bug;QA (Quality Assurance);sponsor disputed
124,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,Q,QA Report,17,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/17,notional coop,2022/06,bug;invalid;QA (Quality Assurance);sponsor disputed;Index;out-of-scope
124,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,Q,QA Report,18,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/18,notional coop,2022/06,bug;duplicate;QA (Quality Assurance)
124,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,Q,QA Report,21,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/21,notional coop,2022/06,bug;duplicate;QA (Quality Assurance)
124,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,Q,QA Report,22,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/22,notional coop,2022/06,bug;duplicate;QA (Quality Assurance)
124,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,G,Gas Optimizations,23,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/23,notional coop,2022/06,bug;duplicate;G (Gas Optimization)
124,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,G,Gas Optimizations,24,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/24,notional coop,2022/06,bug;duplicate;G (Gas Optimization);Index
124,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,G,Gas Optimizations,7,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/7,notional coop,2022/06,bug;G (Gas Optimization)
124,Sm4rty,0xfb2a9c3afb1f0d71c8fcd548da12c22ca36409b4,G,Gas Optimizations,8,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/8,notional coop,2022/06,bug;duplicate;G (Gas Optimization)
124,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,Q,QA Report,192,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/192,notional coop,2022/06,bug;QA (Quality Assurance)
124,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,2,Deprecated safeApprove() function,193,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/193,notional coop,2022/06,bug;duplicate;disagree with severity;QA (Quality Assurance)
124,sorrynotsorry,0x6262f720679C04cc7f2a14c0c03486D0287c4853,2,Unchecked return value for ERC20.approve call,195,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/195,notional coop,2022/06,bug;duplicate;invalid;2 (Med Risk);Index
124,sseefried,0xA68DD08dc36d93592606BB9b2D335C5A29b0DAb9,Q,QA Report,93,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/93,notional coop,2022/06,bug;QA (Quality Assurance)
124,Tadashi,0x8638c0a8C936DeFaCB575a2AD5B103F2a3876cE7,G,Gas Optimizations,231,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/231,notional coop,2022/06,bug;G (Gas Optimization)
124,Tadashi,0x8638c0a8C936DeFaCB575a2AD5B103F2a3876cE7,Q,QA Report,233,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/233,notional coop,2022/06,bug;QA (Quality Assurance)
124,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,Q,QA Report,69,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/69,notional coop,2022/06,bug;QA (Quality Assurance)
124,TerrierLover,0xc9535b697E0B430798443c6CA5A8Be257aD368b0,G,Gas Optimizations,70,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/70,notional coop,2022/06,bug;G (Gas Optimization);Notional
124,Tomio,0xa9F3B26C5Fe081669f88B48a59B370edFDf3e4a1,G,Gas Optimizations,107,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/107,notional coop,2022/06,bug;G (Gas Optimization)
124,TomJ,0x20Eb6C4F1221C3D3029761C396eceDA6114e1A05,G,Gas Optimizations,149,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/149,notional coop,2022/06,bug;G (Gas Optimization)
124,TomJ,0x20Eb6C4F1221C3D3029761C396eceDA6114e1A05,Q,QA Report,177,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/177,notional coop,2022/06,bug;QA (Quality Assurance)
124,Trumpero,0x1A4f547AeACB962B67Ec2fa35b803DA4F5f9b9D0,Q,QA Report,165,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/165,notional coop,2022/06,bug;QA (Quality Assurance)
124,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,It's possible to perform DOS and make onERC1155Received() of wfCashLogic to always revert by transferring other fcashs to contract address before its deployment,77,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/77,notional coop,2022/06,bug;duplicate;2 (Med Risk);Notional
124,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,2,"function onERC1155Received() in wfCashLogic won't check that fcash is not matured and if NotionalV2 allow transfers for mature fcash, then it will be possible to mint wfcash after maturity time",79,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/79,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,2,Functions convertToShares() and convertToAssets() don't consider hasMatured() state when totalSupply()==0,80,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/80,notional coop,2022/06,bug;QA (Quality Assurance)
124,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,deposit() and mint() and _redeemInternal() in wfCashERC4626() will revert for all fcash that asset token is underlying token because they always call _mintInternal() with useUnderlying==True,82,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/82,notional coop,2022/06,bug;2 (Med Risk);sponsor confirmed;Notional
124,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,The logic of _isUnderlying() in NotionalTradeModule is wrong which will cause mintFCashPosition() and redeemFCashPosition() revert on `fcash` tokens which asset token is underlying token (asset.tokenType == TokenType.NonMintable),87,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/87,notional coop,2022/06,bug;help wanted;2 (Med Risk);disagree with severity;sponsor confirmed;Index
124,unforgiven,0x6e6c53f81e310d53387dc2166ee9a632cf768fa1,3,mintFCashPosition() in NotionalTradeModule may revert because of wrong logic in _approve() function which don't consider remaining dust in allowance and tries to set allowance without setting to 0 first,89,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/89,notional coop,2022/06,bug;duplicate;QA (Quality Assurance)
124,UnusualTurtle,0xb8E3a52F9871Bd68cCefb4558F00e7135b1A92FB,G,Gas Optimizations,173,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/173,notional coop,2022/06,bug;G (Gas Optimization)
124,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2, Immature fCash positions should not be left behind when removing the `NotionalTradeModule`,179,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/179,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,`wfCashERC4626.sol#redeem()` Lack of slippage control for market sell,181,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/181,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,WatchPug,0x192bDD30D272AabC2B1c3c719c518F0f2d10cc60,2,Missing `receive()` or `fallback() payable` function as native token is expected from WETH,182,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/182,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,Wayne,0xfB767Bcde95F4a30231c31E9aC53cCAe62fe2b98,2,"The Oracle address settings for the PriceOracle.sol contract are not checked for ZERO Address, and will not do the expected work if the prophecy machine address is set to Zero address (which will be populated with 0 by default if not passed to the constructor).",174,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/174,notional coop,2022/06,bug;invalid;2 (Med Risk);out-of-scope
124,Wayne,0xfB767Bcde95F4a30231c31E9aC53cCAe62fe2b98,3,The payable function is not implemented and Ether is not received properly.,99,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/99,notional coop,2022/06,bug;invalid;sponsor disputed
124,Waze,0xB649642DEe8E9E25b21cfc67DA7DCf86828dd60D,Q,QA Report,171,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/171,notional coop,2022/06,bug;QA (Quality Assurance);Index
124,Waze,0xB649642DEe8E9E25b21cfc67DA7DCf86828dd60D,G,Gas Optimizations,172,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/172,notional coop,2022/06,bug;G (Gas Optimization)
124,xiaoming90,0x536fbBaE179fd77FAe3E29b510f7B605bf45BC8f,2,Users Might Not Be Able To Purchase Or Redeem SetToken,154,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/154,notional coop,2022/06,bug;help wanted;2 (Med Risk);disagree with severity;sponsor confirmed;Index
124,xiaoming90,0x536fbBaE179fd77FAe3E29b510f7B605bf45BC8f,2,Rounding Issues In Certain Functions,155,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/155,notional coop,2022/06,bug;3 (High Risk);sponsor confirmed;Notional
124,xiaoming90,0x536fbBaE179fd77FAe3E29b510f7B605bf45BC8f,2,Matured Position Can Be Redeemed For Underlying Token,156,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/156,notional coop,2022/06,bug;duplicate;disagree with severity;QA (Quality Assurance)
124,xiaoming90,0x536fbBaE179fd77FAe3E29b510f7B605bf45BC8f,2,No Slippage Protection During Redeeming Matured Positions,157,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/157,notional coop,2022/06,bug;duplicate;invalid;2 (Med Risk)
124,xiaoming90,0x536fbBaE179fd77FAe3E29b510f7B605bf45BC8f,2,Unbounded Number Of Positions Can Cause Redemption Failure,159,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/159,notional coop,2022/06,bug;duplicate;QA (Quality Assurance);sponsor acknowledged
124,xiaoming90,0x536fbBaE179fd77FAe3E29b510f7B605bf45BC8f,2,Residual Allowance Might Allow Tokens In SetToken To Be Stolen,160,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/160,notional coop,2022/06,bug;2 (Med Risk);sponsor confirmed;Index
124,xiaoming90,0x536fbBaE179fd77FAe3E29b510f7B605bf45BC8f,2,Approve Returned Value Not Validated,161,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/161,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed;Index
124,xiaoming90,0x536fbBaE179fd77FAe3E29b510f7B605bf45BC8f,2,Did Not Enforce fCash To Be A Component Of SetToken Before Minting,162,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/162,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,xiaoming90,0x536fbBaE179fd77FAe3E29b510f7B605bf45BC8f,2,Did Not Enforce Underlying To Be A Component Of SetToken Before Calling `setRedeemToUnderlying`,163,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/163,notional coop,2022/06,bug;invalid;2 (Med Risk);sponsor disputed
124,xiaoming90,0x536fbBaE179fd77FAe3E29b510f7B605bf45BC8f,Q,QA Report,164,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/164,notional coop,2022/06,bug;QA (Quality Assurance)
124,ych18,0x02435fb305D2BBA609E044279C50498Abe279380,3,Users cannot `initialize()` a proxy with a `currencyId` with a different maturity ,75,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/75,notional coop,2022/06,bug;invalid;3 (High Risk);sponsor disputed
124,ynnad,0xe22c36dEBEcE668fd1Cb6CfA99fCC1c61Ce31D53,G,Gas Optimizations,109,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/109,notional coop,2022/06,bug;G (Gas Optimization)
124,z3s,0x99c5E30533E8677FF4789bAB9Dae4a97FA30bC47,Q,QA Report,136,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/136,notional coop,2022/06,bug;QA (Quality Assurance)
124,zzzitron,0x50B6d717429F56527676d2431aAA5b3f0FA26a93,Q,QA Report,142,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/142,notional coop,2022/06,bug;QA (Quality Assurance)
124,_Adam,0xa1a0cb3ce40dc9ef78f05563047f286640dce552,G,Gas Optimizations,127,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/127,notional coop,2022/06,bug;G (Gas Optimization)
124,_Adam,0xa1a0cb3ce40dc9ef78f05563047f286640dce552,Q,QA Report,128,https://github.com/code-423n4/2022-06-notional-coop-findings/issues/128,notional coop,2022/06,bug;QA (Quality Assurance)
